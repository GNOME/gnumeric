AC_INIT(src/gnumeric.h)

AM_CONFIG_HEADER(gnumeric-config.h)
AM_INIT_AUTOMAKE(gnumeric,1.0.4)
AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)
AM_PROG_XML_I18N_TOOLS

# Make --disable-static the default
AC_DISABLE_STATIC

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_YACC
AM_PROG_LEX
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

GNOME_INIT
AM_PATH_GTK(1.2.7)

## this should come after `AC_PROG_CC'
GNOME_COMPILE_WARNINGS
set_mode_warnings=yes
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	for option in -Wsign-promo -Wsign-compare -Wpointer-arith -Wnested-externs -Wchar-subscripts ; do
		SAVE_CFLAGS="$CFLAGS"
		CFLAGS="$CFLAGS $option"
		AC_MSG_CHECKING([whether gcc understands $option])
		AC_TRY_COMPILE([], [],
			has_option=yes,
			has_option=no,)
		if test $has_option = no; then
		  CFLAGS="$SAVE_CFLAGS"
		fi
		AC_MSG_RESULT($has_option)
		unset has_option
		unset SAVE_CFLAGS
	done
	unset option
fi

dnl
dnl Check whether we need to pass defines to get compliance with a standard
dnl we expect.
dnl

dnl src/functions/fn-math.c uses M_PI
dnl src/plugin-util.c uses caddr_t
AC_MSG_CHECKING([whether -D_BSD_SOURCE is needed for M_PI])
AC_TRY_COMPILE([#include <math.h>], [double f = M_PI], need_bsd=no, need_bsd=yes)
AC_MSG_RESULT($need_bsd)
if test $need_bsd = yes ; then
	CFLAGS="$CFLAGS -D_BSD_SOURCE"
else
	AC_MSG_CHECKING([whether -D_BSD_SOURCE is needed for caddr_t])
	AC_TRY_COMPILE([#include <sys/types.h>], [caddr_t ca], need_bsd=no, need_bsd=yes)
	if test $need_bsd = yes ; then
		CFLAGS="$CFLAGS -D_BSD_SOURCE"
	fi
	AC_MSG_RESULT($need_bsd)
fi

GNOME_X_CHECKS
GNOME_XML_CHECK

dnl
dnl alloca tests
dnl
dnl with autoconf 2.50 and later, the cache value changed,
dnl so we test against both possible cache values -- if either of them
dnl are yes, then we know we have a usable alloca.h
dnl
AC_FUNC_ALLOCA
if test X"$ac_cv_header_alloca_h" = X"yes" \
	|| test X"$ac_cv_working_alloca_h" = X"yes" ; then
        GNUMERIC_HAVE_ALLOCA_H=1
else
        GNUMERIC_HAVE_ALLOCA_H=0
fi
AC_SUBST(GNUMERIC_HAVE_ALLOCA_H)

AC_SUBST(QTTHREADS_LIB)
AC_SUBST(TERMCAP_LIB)
AC_SUBST(READLINE_LIB)
AC_SUBST(GUILE_LIBS)
AC_SUBST(GUILE_INCS)
guile_msg='not requested'

#check for guile 1.5
try_guile=true
guile_msg="no"
build_guile=false
AC_ARG_WITH(guile,
	[--{with,without}-guile   Compile with Guile support or without it],
	if test x$withval = xno; then
		try_guile=false
	fi
)

if $try_guile; then
	AC_MSG_CHECKING(for guile >= 1.5)
	if test "`guile -c '(display (string>=? (version) "1.4.1"))'`" != "#t"; then
  		AC_MSG_RESULT([Your Guile is too old.  You need Guile 1.5 or later.])
	else
	        AC_MSG_RESULT(found)
		guile_msg="yes"
		build_guile=true
	fi
	
fi

AM_CONDITIONAL(HAVE_GUILE, $build_guile)

if $build_guile; then
	GNOME_CHECK_GUILE
fi

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl **************************************************
dnl * psiconv support
dnl **************************************************
PSICONV_INIT()
if test "$want_psiconv" = "yes"; then
	ac_save_CFLAGS="$CFLAGS"
	ac_save_LIBS="$LIBS"
	CFLAGS="$CFLAGS $psiconv_cflags"
	LIBS="$LIBS $psiconv_libs"
	AC_CHECK_LIB(psiconv,psiconv_parse_sheet_file,want_psiconv=yes,want_psiconv=no)
	CFLAGS="$ac_save_CFLAGS"
	LIBS="$ac_save_LIBS"

	if test "$want_psiconv" = "no"; then
		PSICONV_LIBS=""
		PSICONV_CFLAGS=""
		with_psiconv=false
	fi

	AM_CONDITIONAL(WITH_PSICONV,$with_psiconv)
fi


dnl **************************************************
dnl * internationalization support
dnl **************************************************
dnl 
dnl
dnl Check doc/translating.sgml for a description of how to translate
dnl and why we have so many translations.
dnl
ALL_LINGUAS="ca cs da de en_AU en_CA en_GB el es et fi fr ga gl hr hu it ja ko nl nn no pl pt pt_BR ro ru sk sv tr uk zh_CN zh_TW"
AM_GNOME_GETTEXT
# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

#AC_PATH_PROG(TPUT_CMD,tput,no)
TPUT_CMD=no
marker_ok="<yes >"
marker_fail="<FAIL>"
marker_no="<NO  >"
if test "$TPUT_CMD" '!=' no  -a  -t 1  -a  -t 2; then
  # We have tput and output goes to a terminal.
  marker_ok="<`$TPUT_CMD bold`yes`$TPUT_CMD sgr0` >"
  marker_fail="<`$TPUT_CMD bold`fail`$TPUT_CMD sgr0`>"
  marker_no="<`$TPUT_CMD bold`no`$TPUT_CMD sgr0`  >"
fi

dnl
dnl On Solaris finite() needs ieeefp.h
dnl Either of these seem to signal IEEE754 math, see mathfunc.c
dnl
AC_CHECK_HEADERS(ieeefp.h ieee754.h)

dnl Check for some functions
AC_CHECK_FUNCS(random drand48 finite isfinite)

dnl
dnl On BSD, we seem to need -lm for finite
dnl
if test $ac_cv_func_finite = no; then
  AC_CHECK_LIB(m, finite,
        [AC_DEFINE(HAVE_FINITE)
         LIBS="$LIBS -lm"])
fi

dnl check for complete locale implementation
AC_CHECK_HEADERS(langinfo.h)

dnl we need iconv for translating to/from locale's charset when
dnl reading/writing Excel files
AC_CHECK_HEADERS(iconv.h)

dnl **************************************************
dnl * ORBit support
dnl **************************************************
GNOMEGNORBA_LIBS="$GNOMEGNORBA_LIBS"
AC_SUBST(GNOMEGNORBA_LIBS)

dnl ******************************
dnl gnome-xml checking
dnl ******************************
AC_MSG_CHECKING(for libxml (aka gnome-xml) libraries 1.8.14 <= version < 2.0.0	)
if xml-config --libs > /dev/null 2>&1; then 
    verstxt=`xml-config --version`
    vers=`echo "$verstxt" | sed -e "s/libxml //" | \
	awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 1008014; then
	if test "$vers" -lt 2000000; then
	    AC_MSG_RESULT($marker_ok found $verstxt)
	else
	    AC_MSG_RESULT($marker_fail found unsupported $verstxt)
	    AC_MSG_ERROR(This version of Gnumeric does not support libxml (aka gnome-xml) 2.x.x yet.)
	fi
    else
        AC_MSG_RESULT($marker_fail found only $verstxt)
	AC_MSG_ERROR(You need at least libxml (aka gnome-xml) 1.8.14)
    fi
else
    AC_MSG_RESULT($marker_fail not found)
fi

dnl **************************************************
dnl * Check for Perl
dnl **************************************************
dnl
AC_CHECK_PROG(perl_val, perl, true, false)
if $perl_val; then
  AC_MSG_CHECKING(for perl ExtUtils::Embed module				)
  perl -e 'eval { require ExtUtils::Embed }; if ($@) { exit(1); } else { exit(0); }'
  if test "x$?" = "x0"; then
    AC_MSG_RESULT($marker_ok)

    dnl Use ExtUtils::Embed to figure out the other options.
    PERL_CCCDLFLAGS=`perl -MConfig -e 'print $Config{cccdlflags},"\n";'`
    PERL_LDDLFLAGS=`perl -MConfig -e 'print $Config{lddlflags},"\n";'`
    PERL_CC=`perl -MConfig -e 'print $Config{cc},"\n";'`
    PERL_LD=`perl -MConfig -e 'print $Config{ld},"\n";'`
    PERL_CCOPTS=`perl -MExtUtils::Embed -e ccopts`
    PERL_LDOPTS=`perl -MExtUtils::Embed -e ldopts`
    AC_SUBST(PERL_CCCDLFLAGS)
    AC_SUBST(PERL_LDDLFLAGS)
    AC_SUBST(PERL_CC)
    AC_SUBST(PERL_LD)
    AC_SUBST(PERL_CCOPTS)
    AC_SUBST(PERL_LDOPTS)
  else
    AC_MSG_RESULT($marker_no)
    perl_val=false
  fi
fi

dnl Disable perl until we have an active maintainer
AM_CONDITIONAL(WITH_PERL, false)

dnl **************************************************
dnl * Check for Python
dnl **************************************************
try_python=true
AC_ARG_WITH(python,
	[--{with,without}-python   Compile the Python plugin loader],
	if test "x$withval" = xno; then
		try_python=false
	else
		python_prog="$withval"
	fi
)

if $try_python; then
	if test "x$python_prog" = xyes -o "x$python_prog" = x ; then
	    python_prog=python
	fi

	python_val=
	AC_CHECK_PROG(python_val, "$python_prog", true, false)
	if $python_val; then
		  PY_PREFIX=`python -c 'import sys ; print sys.prefix'`
		  PY_EXEC_PREFIX=`python -c 'import sys ; print sys.exec_prefix'`
		  changequote(<<, >>)dnl
		  PY_VERSION=`python -c 'import sys ; print sys.version[0:3]'`
		  changequote([, ])dnl
		  if test -f $PY_PREFIX/include/python$PY_VERSION/Python.h; then
			  PY_LIBS="python$PY_VERSION"
			  PY_LIB_LOC="-L$PY_EXEC_PREFIX/lib/python$PY_VERSION/config"
			  PY_CFLAGS="-I$PY_PREFIX/include/python$PY_VERSION"
			  PY_MAKEFILE="$PY_EXEC_PREFIX/lib/python$PY_VERSION/config/Makefile"
			  PY_LOCALMODLIBS=`sed -n -e 's/^LOCALMODLIBS=\(.*\)/\1/p' $PY_MAKEFILE`
			  PY_BASEMODLIBS=`sed -n -e 's/^BASEMODLIBS=\(.*\)/\1/p' $PY_MAKEFILE`
			  PY_OTHER_LIBS=`sed -n -e 's/^LIBS=\(.*\)/\1/p' $PY_MAKEFILE`
			  PY_EXTRA_LIBS="$PY_LOCALMODLIBS $PY_BASEMODLIBS $PY_OTHER_LIBS"
			  AC_SUBST(PY_LIBS)
			  AC_SUBST(PY_LIB_LOC)
			  AC_SUBST(PY_CFLAGS)
			  AC_SUBST(PY_EXTRA_LIBS)
		  else
			  python_val=false
		  fi
	fi
	if $python_val; then
		AC_MSG_CHECKING(if we can build a shared library depending on libpython)
		rm -rf testpython
		mkdir testpython
		cd testpython
		cat > testpython.c <<EOF
#include <Python.h>
int testpython (void)
{
Py_Exit (0);
}
EOF
		if /bin/sh ../libtool --mode=compile ${CC} $PY_CFLAGS -c testpython.c >/dev/null 2>&1 && \
		   /bin/sh ../libtool --mode=link ${CC} -o testpython.la -rpath `pwd` -module -avoid-version $PY_LIB_LOC testpython.lo -l$PY_LIBS $PY_EXTRA_LIBS >/dev/null 2>&1 && \
		   grep 'dlname.*testpython' testpython.la >/dev/null 2>&1; then
			AC_MSG_RESULT(yes)
		else
			AC_MSG_RESULT(no)
			python_val=false
		fi
		cd ..
		rm -rf testpython
	fi
	AM_CONDITIONAL(WITH_PYTHON, $python_val)
else
	AM_CONDITIONAL(WITH_PYTHON, false)
fi

dnl Check for libole2
AC_MSG_CHECKING(for libole2 >= 0.2.4						)
libole2_ok=no
if gnome-config --libs libole2 > /dev/null 2>&1; then
	verstxt=`gnome-config --modversion libole2`
	vers=`echo "$verstxt" | sed -e "s/^libole2-//" | \
		awk -F. '{ printf "%d", $1 * 10000 + $2 * 100 + $3; }'`
	if test "$vers" -ge 204; then
		AC_MSG_RESULT($marker_ok found $verstxt)
		libole2_ok=yes
	else
		AC_MSG_RESULT($marker_fail found only $verstxt)
	fi
else
	AC_MSG_RESULT($marker_fail not found)
fi
if test "$libole2_ok" = no; then
	AC_MSG_ERROR(This version of gnumeric requires an external
libole2 library the latest version can be obtained from
ftp://ftp.gnome.org/pub/GNOME/unstable/sources/libole2/

)
fi
unset libole2_ok


dnl ******************************
dnl Check for Bonobo
dnl ******************************
try_bonobo=true
bonobo=
bonobo_msg=no
bonobo_suffix=
have_bonobo=false
AC_ARG_WITH(bonobo,
	[--{with,without}-bonobo   Compile with Bonobo support or without it],
	if test x$withval = xno; then
		try_bonobo=false
	fi
)

if $try_bonobo; then
	AC_MSG_CHECKING(for Bonobo >= 1.0.9						)
	if gnome-config --libs bonobo > /dev/null 2>&1; then
		verstxt=`gnome-config --modversion bonobo`
		vers=`echo "$verstxt" | sed -e "s/^bonobo-//" | \
			awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
	else
		verstxt="-"
		vers=0
	fi

	if test "$vers" -ge 1000009; then
		AC_MSG_RESULT($marker_ok found $verstxt)
		AM_PATH_OAF(0.6.2,,AC_MSG_ERROR([OAF not found or too old]))
		if test x"$OAF_CFLAGS" != "x" ; then
			AC_DEFINE(ENABLE_BONOBO)
			have_bonobo=true
			bonobo=bonobox_print
			bonobo_msg=yes
			bonobo_suffix=-bonobo
		fi
	else
		if test "$vers" -eq 0; then
			AC_MSG_RESULT($marker_no not found)
		else
			AC_MSG_RESULT($marker_no found only $verstxt)
		fi
	fi
fi
gnumeric_bonobo_enabled=$bonobo_msg
AM_CONDITIONAL(BONOBO, $have_bonobo)


dnl **************************************************
dnl * Config defaults (Must be after bonobo)
dnl **************************************************
gnumeric_prefix="${prefix}"
gnumeric_exec_prefix="${exec_prefix}"
gnumeric_version="${VERSION}${bonobo_suffix}"
gnumeric_datadir="${datadir}/gnumeric/${gnumeric_version}"
gnumeric_libdir="${libdir}/gnumeric/${gnumeric_version}"
gnumeric_plugindir="${gnumeric_libdir}/plugins"
gnumeric_gladedir="${gnumeric_datadir}/glade"
gnumeric_autoformatdir="${gnumeric_datadir}/autoformat-templates"

dnl Export to gnumeric-config.h
AC_DEFINE_UNQUOTED(GNUMERIC_VERSION, "$gnumeric_version")

AC_SUBST(gnumeric_prefix)
AC_SUBST(gnumeric_exec_prefix)
AC_SUBST(gnumeric_datadir)
AC_SUBST(gnumeric_version)
AC_SUBST(gnumeric_libdir)
AC_SUBST(gnumeric_plugindir)
AC_SUBST(gnumeric_gladedir)
AC_SUBST(gnumeric_autoformatdir)
AC_SUBST(gnumeric_bonobo_enabled)

dnl ******************************
dnl Check for GB
dnl ******************************
try_gb=true
gb=
gb_msg=no
have_gb=false
GB_CFLAGS=
GB_LIBS=
AC_ARG_WITH(gb,
	[--{with,without}-gb       Compile with Gb support or without it],
	if test x$withval = xno; then
		try_gb=false
	fi
)

if $try_gb; then
	AC_MSG_CHECKING(for Gb == 0.0.17						)
	if gnome-config --libs gb > /dev/null 2>&1; then
		verstxt=`gnome-config --modversion gb 2>/dev/null`
		vers=`echo "$verstxt" | awk -F. '{ printf "%d", $1 * 10000 + $2 * 100 + $3; }'`
		if test "$vers" -eq 000017; then
			AC_MSG_RESULT($marker_ok found $verstxt)
			AC_DEFINE(ENABLE_GB)
			GB_LIBS=`gnome-config --libs gb`
			GB_CFLAGS=`gnome-config --cflags gb`
			have_gb=true
			gb=gb
			gb_msg=yes
		else
			AC_MSG_RESULT($marker_no found only $verstxt)
		fi
	else
		AC_MSG_RESULT($marker_no not found)
	fi
fi
AM_CONDITIONAL(WITH_GB, $have_gb)
AC_SUBST(GB_CFLAGS)
AC_SUBST(GB_LIBS)


dnl ******************************
dnl GnomePrint checking
dnl ******************************
AC_MSG_CHECKING(for GnomePrint libraries >= 0.29				)
gnomeprint_ok=no
if gnome-config --libs print > /dev/null 2>&1; then 
    verstxt=`gnome-config --modversion print`
    vers=`echo "$verstxt" | sed -e "s/gnome-print-//" -e 's/cvs$//' -e 's/pre$//' | \
        awk -F. '{ printf "%d", $1 * 1000 + $2;}'`
    if test "$vers" -ge 29; then
	AC_MSG_RESULT($marker_ok found $verstxt)
	gnomeprint_ok=yes
    else
        AC_MSG_RESULT($marker_fail found only $verstxt)
    fi
else
    AC_MSG_RESULT($marker_fail not found)
fi
if test "$gnomeprint_ok" = no; then
    AC_MSG_ERROR(You need at least gnome-print-0.29 for this version of Gnumeric)
fi
unset gnomeprint_ok


dnl ******************************
dnl LibGlade checking
dnl ******************************
AC_MSG_CHECKING(for Glade libraries >= 0.16					)
libglade_ok=no
if gnome-config --libs libglade > /dev/null 2>&1; then 
    verstxt=`gnome-config --modversion libglade`
    vers=`echo "$verstxt" | awk -F. '{ printf "%d", $1 * 1000 + $2;}'`
    if test "$vers" -ge 16; then
	AC_MSG_RESULT($marker_ok found $verstxt)
	libglade_ok=yes
    else
        AC_MSG_RESULT($marker_fail found only $verstxt)
    fi
else
    AC_MSG_RESULT($marker_fail not found)
fi
if test "$libglade_ok" = no; then
    AC_MSG_ERROR(You need at least libglade 0.16 for this version of Gnumeric)
fi
unset libglade_ok


dnl ******************************
dnl Gnome App Lib checking
dnl ******************************
AC_MSG_CHECKING(for Gnome App libraries (GAL) >= 0.16				)
gal_ok=no
if gnome-config --libs gal > /dev/null 2>&1; then 
    verstxt=`gnome-config --modversion gal`
    vers=`echo "$verstxt" | sed -e "s/gal-//" -e 's/cvs$//' -e 's/pre$//' | \
	awk -F. '{ printf "%d", $1*1000000 + $2*10000 + $3*100 + $4; }'`
    if test "$vers" -ge 160000; then
	AC_MSG_RESULT($marker_ok found $verstxt)
	gal_ok=yes
    else
        AC_MSG_RESULT($marker_fail found only $verstxt)
    fi
else
    AC_MSG_RESULT($marker_fail not found)
fi
if test "$gal_ok" = no; then
    AC_MSG_ERROR(You need at least GNOME Application libs 0.16 for this version of Gnumeric)
fi
unset gal_ok


dnl ****************
dnl Check for pspell
dnl ****************
dnl
dnl try_pspell=true
dnl have_pspell=false
dnl pspell_msg=no
PSPELL_LIBS=""
dnl 
dnl AC_ARG_WITH(pspell,
dnl 	[--{with,without}-pspell    Compile with Pspell support or without it],
dnl 	if test x$withval = xno; then
dnl 		try_pspell=false
dnl 	fi
dnl 	if test x$withval = xyes; then
dnl 		try_pspell=true
dnl 	fi
dnl )
dnl 
dnl if $try_pspell; then
dnl 	AC_PATH_PROG(PSPELL_CONFIG,pspell-config,no)
dnl 	AC_MSG_CHECKING([for pspell])
dnl 	if test "$PSPELL_CONFIG" = no; then
dnl 		AC_MSG_RESULT(not found)
dnl 	else
dnl 		pspell_ver=`$PSPELL_CONFIG version 2>/dev/null`
dnl 		AC_MSG_RESULT([found ($pspell_ver)])
dnl 
dnl 		AC_CHECK_LIB(pspell, new_pspell_config, have_pspell=true)
dnl 		if test x$have_pspell = xtrue; then
dnl 			AC_DEFINE(HAVE_PSPELL)
dnl 			PSPELL_LIBS="-lpspell"
dnl 			pspell_msg=yes
dnl 		fi
dnl 	fi
dnl fi
AC_SUBST(PSPELL_LIBS)
dnl AM_CONDITIONAL(HAVE_PSPELL, $have_pspell)

dnl ******************************
dnl Check for Evolution
dnl ******************************
try_evolution=false
evolution=no
AC_ARG_WITH(evolution,
	[--{with,without}-evolution Use evolution to send spreadsheets (bonobo needed).],
	if test x$withval = xyes; then
		try_evolution=true
	fi
)
if test x"$have_bonobo" = "xtrue" -a x"$try_evolution" = "xtrue" ; then
	path_to_composer_idl=`gnome-config --datadir`/idl/Evolution-Composer.idl
	AC_CHECK_FILE($path_to_composer_idl, evolution=yes, evolution=no)
fi
AM_CONDITIONAL(ENABLE_EVOLUTION, test x"$evolution" = "xyes")
if test x"$evolution" = "xyes" ; then
    AC_DEFINE(ENABLE_EVOLUTION)
fi

dnl ******************************
dnl Check for Applix SHELF
dnl ******************************
dnl try_applix_shelf=false
dnl applix_shelf=
dnl applix_shelf_msg=no
dnl have_applix_shelf=false
dnl AC_ARG_WITH(applix_shelf,
dnl	[--{with,without}-shelf   Compile with Applix SHELF support or without it],
dnl	if test x$withval = xyes; then
dnl		try_applix_shelf=true
dnl	fi
dnl)
dnl ***************************************
dnl Check for gnome-libs which supports wm icons
dnl ***************************************
CFLAGS_save=$CFLAGS
LIBS_save=$LIBS
CFLAGS=`gnome-config --cflags gnomeui`
LIBS=`gnome-config --libs gnomeui`
use_wm_icons=false
AC_CHECK_LIB(gnomeui, gnome_window_icon_set_default_from_file, use_wm_icons=true)
if test x$use_wm_icons = xtrue; then
	AC_DEFINE(USE_WM_ICONS)
fi
CFLAGS=$CFLAGS_save
LIBS=$LIBS_save

dnl ***************************************

dnl IDL flags for non-standard prefixes
if $have_bonobo; then
	IDL_FLAGS="`gnome-config --cflags idl`"
	for path in `echo $GNOME_PATH | awk 'BEGIN { RS = ":"; } { print;}'`; do
		IDL_FLAGS="$IDL_FLAGS -I$path/share/idl"
	done
fi
AC_SUBST(IDL_FLAGS)

dnl ****************************
dnl Check for libgda
dnl ****************************
try_gda=true
AC_ARG_WITH(gda,
	[--{with,without}-gda      Compile the Gnome Database Access plugin],
	if test x$withval = xno; then
		try_gda=false
	fi
)

have_gda=false
if $try_gda; then
    AC_PATH_PROG(GDA_CONFIG,gda-config,no)
    if test "$GDA_CONFIG" = no; then
        AC_MSG_WARN(GDA plugin will not be built)
        have_gda=false
    else
	AC_MSG_CHECKING(for libgda >= 0.2.92						)
        verstxt=`$GDA_CONFIG --version`
        vers=`echo "$verstxt" | sed -e "s/libgda //" | \
	    awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
        if test "$vers" -ge 2092; then
	    AC_MSG_RESULT($marker_ok found $verstxt)
	    GDA_CFLAGS=`$GDA_CONFIG --cflags client`
            GDA_LIBS=`$GDA_CONFIG --libs client`
	    have_gda=true
        else
            AC_MSG_RESULT($marker_fail found only $verstxt)
	    have_gda=false
        fi
    fi
fi

AM_CONDITIONAL(WITH_GDA, $have_gda)
AC_SUBST(GDA_CFLAGS)
AC_SUBST(GDA_LIBS)

GNUMERIC_LIBS=`gnome-config --libs gnomeui print libglade $bonobo libole2 gal gdk_pixbuf`
GNUMERIC_CFLAGS=`gnome-config --cflags gnomeui print libglade $bonobo libole2 gal gdk_pixbuf`
AC_SUBST(GNUMERIC_LIBS)
AC_SUBST(GNUMERIC_CFLAGS)

AM_CONDITIONAL(LIBOLE2_PUBLIC_LIBRARY, false)

AM_CONDITIONAL(WITH_PLAN_PERFECT, false)

dnl ====================================
dnl = Test whether jw is installed
dnl ====================================
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)
dnl ====================================
dnl = End tests for jw
dnl ====================================


AC_OUTPUT([
gnumeric.spec
Makefile
src/Makefile
src/portability.h
icons/Makefile
idl/Makefile
src/Makefile
src/dialogs/Makefile
src/widgets/Makefile
src/functions/Makefile
doc/Makefile
doc/C/Makefile
plugins/Makefile
plugins/numtheory/Makefile
plugins/derivatives/Makefile
plugins/sc/Makefile
plugins/sylk/Makefile
plugins/excel/Makefile
plugins/gb/Makefile
plugins/lotus-123/Makefile
plugins/oleo/Makefile
plugins/python/Makefile
plugins/python-loader/Makefile
plugins/gnome-glossary/Makefile
plugins/py-func/Makefile
plugins/perl/Makefile
plugins/perl/ext/Makefile.PL
plugins/guile/Makefile
plugins/xbase/Makefile
plugins/html/Makefile
plugins/dif/Makefile
plugins/xml_sax/Makefile
plugins/applix/Makefile
plugins/plan-perfect/Makefile
plugins/gda/Makefile
plugins/psiconv/Makefile
plugins/mps/Makefile
intl/Makefile
po/Makefile.in
templates/Makefile
templates/english/Makefile
templates/autoformat/Makefile
tools/Makefile
macros/Makefile
stamp.h
])


echo "

Configuration:

	Source code location:	${srcdir}
	Compiler:		${CC} 

	Bonobo Support:		${bonobo_msg}
	Guile Support:		${guile_msg}
	Evolution Support:      $evolution
	GB Support:		${gb_msg}
"

if $have_gb; then
	echo "
	Gnome Basic is extremely API unstable; it is likely
that gnumeric will only build with the single version
mentioned in configure.in, if at all. It is possible, but
unlikely, that Gnome Basic contains security vulnerabilities.
"
fi
