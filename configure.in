-*- mode: m4 -*-
AC_PREREQ(2.52)
AC_INIT(gnumeric, 1.2.10,
	http://bugzilla.gnome.org/enter_bug.cgi?product=gnumeric)

AC_CONFIG_SRCDIR(src/sheet.h)

AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(gnumeric-config.h)

AM_MAINTAINER_MODE

# Make --disable-static the default
AC_DISABLE_STATIC

# We need intltool >= 0.27.2 to extract the UTF-8 chars from source code
AC_PROG_INTLTOOL([0.27.2])

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_YACC
AM_PROG_LIBTOOL
AC_STDC_HEADERS

if test "$GCC" = "yes"; then
  gcc_check=`$CC -v 2>&1 | grep '^gcc version 2\.96'`
  if test "$gcc_check" != ""; then
    # I know a dead parrot when I see one, and I am looking at
    # one now.
    AC_MSG_ERROR([You cannot compile Gnumeric with RedHat gcc 2.96.
We have seen too many subtle compiler errors.
Please use another compiler, for example a gcc 2.95 series compiler.])
    # Mate, this parrot wouldn't "vooom!" if you put four million
    # Volts through it!
    #
    # Actually, the real problem here is that there are so many
    # different compilers calling themselves 2.96.  RedHat, listen
    # up!  That's a MAJOR BLUNDER!  If the user just thinks of it
    # as "gcc 2.96" then how the H*** are we going to get bug
    # reports we can use?  Chances are the newer 2.96 compilers
    # are just fine, but how can we know?
  fi
fi

gnumeric_reqs="
glib-2.0		>= 2.0.0
gobject-2.0		>= 2.0.0
gmodule-2.0		>= 2.0.0
libgsf-1		>= 1.8.2
gtk+-2.0		>= 2.0.0
libxml-2.0		>= 2.4.12
libglade-2.0		>= 2.0.0
libgnomecanvas-2.0	>= 2.0.0
libgnome-2.0		>= 2.0.0
libgnomeui-2.0		>= 2.0.0
libgnomeprint-2.2	>= 2.4.2
libgnomeprintui-2.2	>= 2.4.2
libart-2.0		>= 2.3.11
"
dnl **************
dnl Bonobo support
dnl **************
bonobo_msg="yes"
AC_ARG_WITH(bonobo,
	[--{with,without}-bonobo   Use the bonobo UI routines],
	if test "x$withval" = xno; then
		bonobo_msg="disabled by user"
	fi
)
if test "x$bonobo_msg" = "xyes"; then
	PKG_CHECK_MODULES(LIBBONOBO, [
		libbonobo-2.0 >= 2.2.0
		libbonoboui-2.0 >= 2.2.0
		libgsf-gnome-1 >= 1.8.2
		],	
		[bonobo_msg="yes"],
		[bonobo_msg="missing dependencies"])
fi

if test "x$bonobo_msg" = "xyes"; then
	bonobo_suffix=-bonobo
        gnumeric_bonobo_enabled=true
	AC_DEFINE(WITH_BONOBO, 1, [Define if Bonobo is to be used])
	gnumeric_reqs="$gnumeric_reqs
libbonobo-2.0 >= 2.2.0
libbonoboui-2.0 >= 2.2.0
libgsf-gnome-1 >= 1.8.2"
else
        gnumeric_bonobo_enabled=false
fi
AM_CONDITIONAL(WITH_BONOBO, $gnumeric_bonobo_enabled)

dnl ****************************
dnl now that we have selected out libraries the whole collection in one
dnl shot so that we can have a nice neat compile/link line
dnl ****************************

PKG_CHECK_MODULES(GNUMERIC, $gnumeric_reqs)
AC_SUBST(GNUMERIC_LIBS)
AC_SUBST(GNUMERIC_CFLAGS)

# disable for in stable release, re-enable for development series
#CFLAGS="$CFLAGS -DG_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGDK_PIXBUF_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGDK_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGDK_MULTIHEAD_SAFE"
#CFLAGS="$CFLAGS -DGTK_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DGNOME_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DPANGO_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DBONOBO_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DBONOBO_UI_DISABLE_DEPRECATED"
#CFLAGS="$CFLAGS -DLIBGLADE_DISABLE_DEPRECATED"

dnl ****************************
dnl prep the pixmap generator
dnl ****************************

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PATH_PROG(GDK_PIXBUF_CSOURCE, gdk-pixbuf-csource)

## this should come after `AC_PROG_CC'
ifdef([GNOME_COMPILE_WARNINGS],
	[GNOME_COMPILE_WARNINGS] CFLAGS="$CFLAGS $WARN_CFLAGS",
	[]
)
set_more_warnings=yes
if test "$GCC" = "yes" -a "x$set_more_warnings" != "xno"; then
	for option in -Wsign-compare -Wpointer-arith -Wnested-externs -Wchar-subscripts -Wwrite-strings; do
		SAVE_CFLAGS="$CFLAGS"
		CFLAGS="$CFLAGS $option"
		AC_MSG_CHECKING([whether gcc understands $option])
		AC_TRY_COMPILE([], [],
			has_option=yes,
			has_option=no,)
		if test $has_option = no; then
		  CFLAGS="$SAVE_CFLAGS"
		fi
		AC_MSG_RESULT($has_option)
		unset has_option
		unset SAVE_CFLAGS
	done
	unset option
fi
AC_SUBST(WARN_CFLAGS)

dnl ****************************
dnl GDA Plugin
dnl ****************************
try_gda=true
gda_msg=yes
gnomedb_msg=no
AC_ARG_WITH(gda,
	[--{with,without}-gda      Compile the Gnome Database Access plugin],
	if test "x$withval" != xyes; then
		try_gda=false
		gda_msg="Disabled by request"
	fi
)
if test "$try_gda" = "true"; then
	PKG_CHECK_MODULES(GDA, [libgda >= 1.0.1 ],
		[gda_msg=yes],
		[gda_msg="NO.  libgda problem"])
	if test "$gda_msg" = "yes"; then
		PKG_CHECK_MODULES(GNOMEDB, [libgnomedb >= 1.0.1 ],
			[gnomedb_msg="yes"],
			[gnomedb_msg="NO. libgnomedb problem"])
		if test "$gnomedb_msg" = "yes"; then
			AC_DEFINE(HAVE_LIBGNOMEDB, 1, [ Define if libgnomedb support is compiled in])
		fi
	fi
fi
AM_CONDITIONAL(WITH_GDA, test x"$gda_msg" = "xyes")
AC_SUBST(GDA_CFLAGS)
AC_SUBST(GDA_LIBS)

AM_CONDITIONAL(WITH_GNOMEDB, test x"$gnomedb_msg" = "xyes")
AC_SUBST(GNOMEDB_CFLAGS)
AC_SUBST(GNOMEDB_LIBS)

dnl ****************************
dnl GB Plugin
dnl ****************************
#try_gda=true
#gb_msg=yes
try_gb=no
gb_msg="disabled due to lack of gb maintenance"
AC_ARG_WITH(gb,
	[--{with,without}-gb      Compile the Gnome Basic plugin],
	if test "x$withval" = xyes; then
		#try_gb=true
		gb_msg="We are not joking.  There is no upstream maintainer for GB"
		#gb_msg="Disabled by request"
	fi
)
if test "$try_gb" = "true"; then
	PKG_CHECK_MODULES(GB, [libgb == 1.17 ],
		[gb_msg=yes],
		[gb_msg="NO.  gb problem"])
fi
AM_CONDITIONAL(WITH_GB, test x"$gb_msg" = "xyes")
AC_SUBST(GB_CFLAGS)
AC_SUBST(GB_LIBS)

dnl ****************************

AC_CHECK_DECL(fdopen, fdopen_works=yes, fdopen_works=no)

if test $fdopen_works = no ; then
	unset ac_cv_have_decl_fdopen
	CFLAGS="$CFLAGS -D_POSIX_SOURCE"
	AC_MSG_NOTICE([adding -D_POSIX_SOURCE to CFLAGS])
	AC_CHECK_DECL(fdopen, fdopen_works=yes, fdopen_works=no)
	if test $fdopen_works = no ; then
		AC_MSG_ERROR([fdopen is not available])
	fi
fi

# Unfortunately, -D_POSIX_SOURCE turns off struct timeval on Solaris
AC_MSG_CHECKING([whether struct timeval is available])
AC_TRY_COMPILE([#include <sys/time.h>], [struct timeval tv;], struct_timeval_works=yes, struct_timeval_works=no)
AC_MSG_RESULT($struct_timeval_works)

if test $struct_timeval_works = no ; then
	CFLAGS="$CFLAGS -D__EXTENSIONS__"
	AC_MSG_CHECKING([whether struct timeval is available with -D__EXTENSIONS__])
	AC_TRY_COMPILE([#include <sys/time.h>], [struct timeval tv;], struct_timeval_works=yes, struct_timeval_works=no)
	AC_MSG_RESULT($struct_timeval_works)
	if test $struct_timeval_works = no ; then
		AC_MSG_ERROR([struct timeval is not available])
	fi
fi

dnl src/functions/fn-math.c uses M_PI
dnl src/plugin-util.c uses caddr_t

AC_MSG_CHECKING([whether M_PI is available])
AC_TRY_COMPILE([#include <math.h>], [double f = M_PI], works_without_bsd_source=yes, works_without_bsd_source=no)
AC_MSG_RESULT($works_without_bsd_source)

if test $works_without_bsd_source = yes ; then
	AC_MSG_CHECKING([whether caddr_t is available])
	AC_TRY_COMPILE([#include <sys/types.h>], [caddr_t ca], works_without_bsd_source=yes, works_without_bsd_source=no)
	AC_MSG_RESULT($works_without_bsd_source)
fi

if test $works_without_bsd_source = no ; then
	CFLAGS="$CFLAGS -D_BSD_SOURCE"
	AC_MSG_CHECKING([whether M_PI is available with -D_BSD_SOURCE])
	AC_TRY_COMPILE([#include <math.h>], [double f = M_PI], m_pi_works=yes, m_pi_works=no)
	AC_MSG_RESULT($m_pi_works)
	if test $m_pi_works = no ; then
		AC_MSG_ERROR([M_PI is not available])
	fi
	AC_MSG_CHECKING([whether caddr_t is available with -D_BSD_SOURCE])
	AC_TRY_COMPILE([#include <sys/types.h>], [caddr_t ca], caddr_t_works=yes, caddr_t_works=no)
	AC_MSG_RESULT($caddr_t_works)
	if test $caddr_t_works = no ; then
		AC_MSG_ERROR([caddr_t is not available])
	fi
fi

AC_SUBST(GUILE_LIBS)
AC_SUBST(GUILE_INCS)

#check for guile 1.5
try_guile=false
guile_msg="disabled pending some guile developer interest"
enable_guile=false
AC_ARG_WITH(guile,
	[--{with,without}-guile   Compile with Guile support or without it],
	if test "x$withval" = xyes; then
		try_guile=true
	fi
)

dnl if $try_guile; then
dnl 	AC_MSG_CHECKING(for guile >= 1.5)
dnl 	if test "`guile -c '(display (string>=? (version) "1.4.1"))'`" != "#t"; then
dnl   		AC_MSG_RESULT([Your Guile is too old.  You need Guile 1.5 or later.])
dnl 	else
dnl 	        AC_MSG_RESULT(found)
dnl 		guile_msg="yes"
dnl 		enable_guile=true
dnl 	fi
dnl 	
dnl fi
dnl if $enable_guile; then
dnl 	GNOME_CHECK_GUILE
dnl fi
AM_CONDITIONAL(WITH_GUILE, $enable_guile)

dnl **************************************************
dnl * psiconv support
dnl **************************************************
dnl PSICONV_INIT()
dnl if test "$want_psiconv" = "yes"; then
dnl 	ac_save_CFLAGS="$CFLAGS"
dnl 	ac_save_LIBS="$LIBS"
dnl 	CFLAGS="$CFLAGS $psiconv_cflags"
dnl 	LIBS="$LIBS $psiconv_libs"
dnl 	AC_CHECK_LIB(psiconv,psiconv_parse_sheet_file,want_psiconv=yes,want_psiconv=no)
dnl 	CFLAGS="$ac_save_CFLAGS"
dnl 	LIBS="$ac_save_LIBS"
dnl 
dnl 	if test "$want_psiconv" = "no"; then
dnl 		PSICONV_LIBS=""
dnl 		PSICONV_CFLAGS=""
dnl 		enable_psiconv=false
dnl 	fi
dnl fi
enable_psiconv=false
AM_CONDITIONAL(WITH_PSICONV,$enable_psiconv)

dnl **************************************************
dnl stolen from gtk+
AC_MSG_CHECKING(whether make is GNU Make)
STRIP_BEGIN=
STRIP_END=
if $ac_make --version 2>/dev/null | grep '^GNU Make ' >/dev/null ; then
	STRIP_BEGIN='$(strip $(STRIP_DUMMY)'
	STRIP_END=')'
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
STRIP_DUMMY=
AC_SUBST(STRIP_DUMMY)
AC_SUBST(STRIP_BEGIN)
AC_SUBST(STRIP_END)

dnl **************************************************
dnl * internationalization support
dnl **************************************************
dnl
dnl Check doc/developer/translating.sgml for a description of how to translate
dnl and why we have so many translations.
dnl
ALL_LINGUAS="am az bg ca cs da de en_GB en_CA el es et fi fr ga gl he hr hu it ja ko lv ml ms nl nn no pl pt pt_BR ro ru sk sr sr@Latn sv tr uk vi zh_CN zh_TW"
AC_SUBST(ALL_LINGUAS)

GETTEXT_PACKAGE=gnumeric
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
	[The package name, for gettext]
)
AM_GLIB_GNU_GETTEXT

#AC_PATH_PROG(TPUT_CMD,tput,no)
TPUT_CMD=no
marker_ok="<yes >"
marker_fail="<FAIL>"
marker_no="<NO  >"
if test "$TPUT_CMD" '!=' no  -a  -t 1  -a  -t 2; then
  # We have tput and output goes to a terminal.
  marker_ok="<`$TPUT_CMD bold`yes`$TPUT_CMD sgr0` >"
  marker_fail="<`$TPUT_CMD bold`fail`$TPUT_CMD sgr0`>"
  marker_no="<`$TPUT_CMD bold`no`$TPUT_CMD sgr0`  >"
fi

dnl
dnl On Solaris finite() needs ieeefp.h
dnl Either of these seem to signal IEEE754 math, see mathfunc.c
dnl
AC_CHECK_HEADERS(ieeefp.h ieee754.h)

dnl Check for some functions
AC_CHECK_FUNCS(random drand48 finite memmove mkdtemp)

dnl FIXME: Does this really belong here?
AC_CHECK_FUNC(bind_textdomain_codeset,,[AC_CHECK_LIB(intl,bind_textdomain_codeset)])

dnl isfinite is a macro on HPUX
AC_TRY_COMPILE([#include <math.h>], [int a = isfinite(0.0)],
	[AC_DEFINE(HAVE_ISFINITE, 1,
		[Define if the isfinite() macro is available]
	 )
	], [])

dnl
dnl On BSD, we seem to need -lm for finite
dnl
if test $ac_cv_func_finite = no; then
  AC_CHECK_LIB(m, finite,
        [AC_DEFINE(HAVE_FINITE, 1,
		[Define if the finite() function is available]
	 )
         LIBS="$LIBS -lm"])
fi

dnl check for complete locale implementation
AC_CHECK_HEADERS(langinfo.h)
dnl iswprint/iswspace are sometimes in wctype.h
AC_CHECK_HEADERS(wctype.h)

float_msg=double
have_ld=no
AC_ARG_WITH(long_double,
	[--{with,without}-long-double		Use long double for floating point],
	[if test "x$withval" = xyes; then
		AC_C_LONG_DOUBLE
		if test "x$ac_cv_c_long_double" != "xyes"; then
			AC_MSG_ERROR([Long double type is not available.])
		fi

		need_sunmath=no
		for ldfunc in fabsl sqrtl expl expm1l logl log10l log1pl ceill floorl powl hypotl \
				sinl cosl tanl asinl acosl atanl atan2l fmodl lgammal \
				sinhl coshl tanhl asinhl acoshl atanhl \
				isnanl finitel; do
			AC_CHECK_FUNC($ldfunc,
			      ,
			      AC_CHECK_LIB(m,
				  $ldfunc,
				  ,
				  AC_CHECK_LIB(sunmath,
				      $ldfunc,
				      [ if test "x$need_sunmath" = "xno"; then
					    # FIXME: better idea?
					    LDFLAGS="$LDFLAGS -L/opt/SUNWspro/lib -R/opt/SUNWspro/lib -lsunmath"
					    sunmathinclude=`ls -d /opt/SUNWspro/*/include/cc | tail -1`
					    CPPFLAGS="$CPPFLAGS -I$sunmathinclude"
				        fi
					need_sunmath=yes ],
				      AC_MSG_ERROR([Long doubles require the $ldfunc function.]),
				      -L/opt/SUNWspro/lib $GNUMERIC_LIBS)))
		done
		if test "x$need_sunmath" = "xyes"; then
			AC_CHECK_HEADERS([sunmath.h floatingpoint.h],
					 ,
					 AC_MSG_ERROR([Long doubles require the sunmath.h header.]))
		fi

		AC_CHECK_FUNCS(modfl frexpl ldexpl strtold string_to_decimal decimal_to_quadruple)
		if test "x$ac_cv_func_strtold" = "xyes"; then
			AC_MSG_CHECKING([if we must prototype strtold ourselves])
			AC_TRY_RUN([
				#include <stdlib.h>
				int main ()
				{
					const char *s = "+3.1415e+0";
					char *theend;
					long double res = strtold (s, &theend);
					return !(*theend == 0 && finitel (res) &&
						 res >= 3.14 && res <= 3.15);
				}],
				AC_MSG_RESULT(no),
				[AC_MSG_RESULT(yes)
				 AC_DEFINE(MUST_PROTOTYPE_STRTOLD, 1,
					[Define if we need to provide a prototype for strtold()]
				 )],
				AC_MSG_RESULT(assuming not));
			true
		elif test "x$ac_cv_func_string_to_decimal" = "xyes" -a \
			  "x$ac_cv_func_decimal_to_quadruple" = "xyes" -a \
			  "x$ac_cv_header_floatingpoint_h" = "xyes"; then
			true
		else
			AC_MSG_WARN([You lack the strtold function -- precision will be impaired])
		fi

		    if test "x$ac_cv_func_modfl" != "xyes"; then
			AC_MSG_WARN([You lack the modfl function -- precision will be impaired])
		fi

		AC_MSG_CHECKING([checking for working ynl])
		AC_TRY_RUN([
			#include <math.h>
			#ifdef HAVE_SUNMATH_H
			#include <sunmath.h>
			#endif
			int main ()
			{
				long double l = ynl (2, 4.0L);
				return !(l >= 0.21 && l <= 0.22);
			}],
			[AC_DEFINE(HAVE_YNL)
			AC_MSG_RESULT(yes)],
			AC_MSG_RESULT(no),
			[AC_CHECK_FUNCS(ynl)])

		AC_MSG_CHECKING([checking for working erfl and erfcl])
		AC_TRY_RUN([
			#include <math.h>
			#ifdef HAVE_SUNMATH_H
			#include <sunmath.h>
			#endif
			int main ()
			{
				long double l1 = erfl (1.2L);
				long double l2 = erfcl (1.2L);
				return !(l1 >= 0.91 && l1 <= 0.92 &&
					 l2 >= 0.08 && l2 <= 0.09);
			}],
			[AC_DEFINE(HAVE_ERFL)
			 AC_DEFINE(HAVE_ERFCL)
			AC_MSG_RESULT(yes)],
			AC_MSG_RESULT(no),
			[AC_CHECK_FUNCS(erfl erfcl)])

		float_msg="long double (EXPERIMENTAL)"
		AC_MSG_WARN([Long double support is experimental -- expect problems])
		AC_DEFINE(WITH_LONG_DOUBLE, 1,
			[Define if the long double type is to be used]
		)
	fi]
)

dnl Check for gtk-2.1 things
SAVE_LIBS=$LIBS
LIBS="$LIBS $GNUMERIC_LIBS"
AC_CHECK_FUNCS(gdk_screen_get_monitor_geometry gtk_settings_get_for_screen)
# This one isn't in GTK+ yet.
AC_CHECK_FUNCS(gdk_cursor_new_from_pixbuf)
LIBS=$SAVE_LIBS

dnl **************************************************
dnl * Check for Perl
dnl **************************************************
dnl
AC_CHECK_PROG(perl_val, perl, true, false)
if $perl_val; then
  AC_MSG_CHECKING(for perl ExtUtils::Embed module				)
  perl -e 'eval { require ExtUtils::Embed }; if ($@) { exit(1); } else { exit(0); }'
  if test "x$?" = "x0"; then
    AC_MSG_RESULT($marker_ok)

    dnl Use ExtUtils::Embed to figure out the other options.
    PERL_CCCDLFLAGS=`perl -MConfig -e 'print $Config{cccdlflags},"\n";'`
    PERL_LDDLFLAGS=`perl -MConfig -e 'print $Config{lddlflags},"\n";'`
    PERL_CC=`perl -MConfig -e 'print $Config{cc},"\n";'`
    PERL_LD=`perl -MConfig -e 'print $Config{ld},"\n";'`
    PERL_CCOPTS=`perl -MExtUtils::Embed -e ccopts`
    PERL_LDOPTS=`perl -MExtUtils::Embed -e ldopts`
    AC_SUBST(PERL_CCCDLFLAGS)
    AC_SUBST(PERL_LDDLFLAGS)
    AC_SUBST(PERL_CC)
    AC_SUBST(PERL_LD)
    AC_SUBST(PERL_CCOPTS)
    AC_SUBST(PERL_LDOPTS)
  else
    AC_MSG_RESULT($marker_no)
    perl_val=false
  fi
fi

dnl Disable perl until we have an active maintainer
AM_CONDITIONAL(WITH_PERL, false)

dnl **************************************************
dnl * Check for Python
dnl **************************************************
try_python=true
try_pygtk=false
python_msg=no
AC_ARG_WITH(python,
	[--{with,without}-python   Compile the Python plugin loader],
	if test "x$withval" = xno; then
		python_msg="Disabled by request"
		try_python=false
	else
		python_prog="$withval"
	fi
)

if $try_python; then
	if test "x$python_prog" = xyes -o "x$python_prog" = x ; then
	    python_prog=python
	fi

	python_val=
	python_msg="unable to find python"
	AC_CHECK_PROG(python_val, "$python_prog", true, false)
	if $python_val; then
		  AC_MSG_CHECKING(for python >= 2.0)
		  PY_PREFIX=`$python_prog -c 'import sys ; print sys.prefix'`
		  PY_EXEC_PREFIX=`$python_prog -c 'import sys ; print sys.exec_prefix'`
		  changequote(<<, >>)dnl
		  PY_VERSION=`$python_prog -c 'import sys ; print sys.version[0:3]'`
		  broken_py_initialize=`$python_prog -c \
'import sys
if int(sys.version[0]) < 2:
    print "yes"
else:
    print "no"'`
		  changequote([, ])dnl
	  	  if test "x$broken_py_initialize" = "xyes"; then
			  AC_MSG_RESULT(no)
			  python_val=false
			  python_msg="NO.  Python version is too old."
		  else	
			  AC_MSG_RESULT(yes)
		  fi
	fi
	if $python_val; then
		  AC_MSG_CHECKING(Look for $PY_PREFIX/include/python$PY_VERSION/Python.h)
		  if test -f $PY_PREFIX/include/python$PY_VERSION/Python.h; then
			  AC_MSG_RESULT(yes)
			  PY_LIBS="python$PY_VERSION"
			  PY_LIB_LOC="-L$PY_EXEC_PREFIX/lib/python$PY_VERSION/config"
			  PY_CFLAGS="-I$PY_PREFIX/include/python$PY_VERSION"
			  PY_MAKEFILE="$PY_EXEC_PREFIX/lib/python$PY_VERSION/config/Makefile"
			  PY_LOCALMODLIBS=`sed -n -e 's/^LOCALMODLIBS=\(.*\)/\1/p' $PY_MAKEFILE`
			  PY_BASEMODLIBS=`sed -n -e 's/^BASEMODLIBS=\(.*\)/\1/p' $PY_MAKEFILE`
			  PY_OTHER_LIBS=`sed -n -e 's/^LIBS=\(.*\)/\1/p' $PY_MAKEFILE`
			  PY_EXTRA_LIBS="$PY_LOCALMODLIBS $PY_BASEMODLIBS $PY_OTHER_LIBS"
			  AC_SUBST(PY_LIBS)
			  AC_SUBST(PY_LIB_LOC)
			  AC_SUBST(PY_CFLAGS)
			  AC_SUBST(PY_EXTRA_LIBS)
		  else
			  AC_MSG_RESULT(no)
			  python_val=false
		  fi
	fi
	if $python_val; then
		AC_MSG_CHECKING(if we can build a shared library depending on libpython)
		rm -rf testpython
		mkdir testpython
		cd testpython
		cat > testpython.c <<EOF
#include <Python.h>
int testpython (void)
{
Py_Exit (0);
}
EOF
		if /bin/sh ../libtool --mode=compile ${CC} $PY_CFLAGS -c testpython.c >/dev/null 2>&1 && \
		   /bin/sh ../libtool --mode=link ${CC} -o testpython.la -rpath `pwd` -module -avoid-version $PY_LIB_LOC testpython.lo -l$PY_LIBS $PY_EXTRA_LIBS >/dev/null 2>&1 && \
		   grep 'dlname.*testpython' testpython.la >/dev/null 2>&1; then
			AC_MSG_RESULT(yes)
			python_msg="yes"
		else
			AC_MSG_RESULT(no)
			python_val=false
			python_msg="unable to link to python"
		fi
		cd ..
		rm -rf testpython
	fi
	if $python_val; then
		PKG_CHECK_MODULES(PYGTK, pygtk-2.0 >= 1.99.10,
				  [python_msg="yes"],
		        	  [python_msg="NO.  pygtk problem"])
		AC_SUBST(PYGTK_CFLAGS)
		if test "x$python_msg" != "xyes"; then
			python_val=false
		fi
	fi
	AM_CONDITIONAL(WITH_PYTHON, $python_val)
else
	AM_CONDITIONAL(WITH_PYTHON, false)
fi

dnl **************************************************
dnl * Config defaults (Must be after bonobo)
dnl **************************************************
gnumeric_prefix='${prefix}'
gnumeric_exec_prefix='${exec_prefix}'
gnumeric_version="${VERSION}${bonobo_suffix}"
gnumeric_sysconfdir='${sysconfdir}'
gnumeric_datadir='${datadir}/gnumeric/${gnumeric_version}'
gnumeric_libdir='${libdir}/gnumeric/${gnumeric_version}'
gnumeric_plugindir='${gnumeric_libdir}/plugins'
gnumeric_gladedir='${gnumeric_datadir}/glade'
gnumeric_icondir='${datadir}/pixmaps/gnumeric'
gnumeric_localedir='${prefix}/${DATADIRNAME}/locale'

gnumeric_autoformatdir='${gnumeric_datadir}/autoformat-templates'

dnl Export to gnumeric-config.h
AC_DEFINE_UNQUOTED(GNUMERIC_VERSION, "$gnumeric_version",
	[The version number of this Gnumeric release, possibly suffixed for bonobo]
)
AC_SUBST(gnumeric_prefix)
AC_SUBST(gnumeric_exec_prefix)
AC_SUBST(gnumeric_sysconfdir)
AC_SUBST(gnumeric_datadir)
AC_SUBST(gnumeric_version)
AC_SUBST(gnumeric_libdir)
AC_SUBST(gnumeric_plugindir)
AC_SUBST(gnumeric_gladedir)
AC_SUBST(gnumeric_icondir)
AC_SUBST(gnumeric_localedir)
AC_SUBST(gnumeric_autoformatdir)
AC_SUBST(gnumeric_bonobo_enabled)

dnl ==============================================
dnl Special GConf section  (stolen from libgnome)
dnl ==============================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

AM_GCONF_SOURCE_2

dnl *************
dnl Corba support
dnl *************
with_corba=false
PKG_CHECK_MODULES(CORBA_LIBS,  [ORBit-2.0 >= 2.4.2
				libbonobo-2.0 >= 2.0.0
				bonobo-activation-2.0 >= 1.0.2
				],[with_corba=true])

AM_CONDITIONAL(WITH_CORBA, $with_corba)
if test "x$with_corba" = "xtrue" ; then
	ORBIT="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
	BONOBO_IDL_DIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
	BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
	ORBIT_IDL="${ORBIT} -I${BONOBO_IDL_DIR} -I${BONOBO_ACTIVATION_IDL_DIR}"
	AC_SUBST(ORBIT_IDL)
fi

dnl ====================================
dnl = Test whether jw is installed
dnl ====================================
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)
dnl ====================================
dnl = End tests for jw
dnl ====================================

AC_OUTPUT([
gnumeric.spec
Makefile
icons/Makefile
src/Makefile
src/dialogs/Makefile
src/gnumeric-paths.sh
src/pixmaps/Makefile
src/widgets/Makefile
src/tools/Makefile
src/tools/solver/Makefile
src/tools/solver/glpk/Makefile
src/tools/solver/glpk/source/Makefile
src/tools/solver/glpk/include/Makefile
src/tools/solver/lp_solve/Makefile
src/cut-n-paste-code/Makefile
src/cut-n-paste-code/foocanvas/Makefile
src/cut-n-paste-code/foocanvas/libfoocanvas/Makefile
src/cut-n-paste-code/pcre/Makefile
src/cut-n-paste-code/goffice/Makefile
src/cut-n-paste-code/goffice/utils/Makefile
src/cut-n-paste-code/goffice/graph/Makefile
src/cut-n-paste-code/goffice/graph/plugins/Makefile
src/cut-n-paste-code/goffice/graph/plugins/plot_barcol/Makefile
src/cut-n-paste-code/goffice/graph/plugins/plot_pie/Makefile
src/cut-n-paste-code/goffice/graph/plugins/plot_xy/Makefile
doc/Makefile
doc/C/Makefile
doc/C/figures/Makefile
doc/developer/Makefile
omf-install/Makefile
plugins/Makefile
plugins/numtheory/Makefile
plugins/fn-complex/Makefile
plugins/fn-database/Makefile
plugins/fn-date/Makefile
plugins/fn-eng/Makefile
plugins/fn-financial/Makefile
plugins/fn-info/Makefile
plugins/fn-logical/Makefile
plugins/fn-lookup/Makefile
plugins/fn-math/Makefile
plugins/fn-stat/Makefile
plugins/fn-string/Makefile
plugins/fn-random/Makefile
plugins/derivatives/Makefile
plugins/sc/Makefile
plugins/sylk/Makefile
plugins/excel/Makefile
plugins/gda/Makefile
plugins/gb/Makefile
plugins/gnome-db/Makefile
plugins/lotus-123/Makefile
plugins/oleo/Makefile
plugins/python-loader/Makefile
plugins/gnome-glossary/Makefile
plugins/py-func/Makefile
plugins/corba/Makefile
plugins/perl/Makefile
plugins/perl/ext/Makefile.PL
plugins/guile/Makefile
plugins/xbase/Makefile
plugins/html/Makefile
plugins/dif/Makefile
plugins/qpro/Makefile
plugins/plan-perfect/Makefile
plugins/xml_sax/Makefile
plugins/applix/Makefile
plugins/openoffice/Makefile
plugins/psiconv/Makefile
plugins/mps/Makefile
plugins/sample_datasource/Makefile
plugins/uihello/Makefile
po/Makefile.in
schemas/Makefile
templates/Makefile
templates/english/Makefile
templates/autoformat/Makefile
stamp.h
])

echo "

Configuration:

	Source code location:	${srcdir}
	Compiler:		${CC}
	Compiler flags:		${CFLAGS}
	Floating point type:	${float_msg}

	Python Support:		${python_msg}
	Guile Support:		${guile_msg}
	Bonobo Support:		${bonobo_msg}
	GDA support:		${gda_msg}
	GNOME-DB support:	${gnomedb_msg}
"
	#Evolution Support:      ${evolution}
