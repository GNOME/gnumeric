# Copyright (C) 2003 Free Software Foundation, Inc.
# Nilgün Belma Bugüner <nilgun@superonline.com>, 2001,..,2003
# Finans Makrolarının çevirisi:
# Deniz Akkuş Kanca <deniz@arayan.com>, 2001
# İlk çeviri:
# Görkem Çetin <gorkem@gelecek.com.tr>, 2000.
#
msgid ""
msgstr ""
"Project-Id-Version: gnumeric\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2007-12-29 14:31-0500\n"
"PO-Revision-Date: 2003-02-17 15:28+0200\n"
"Last-Translator: Nilgün Belma Bugüner <nilgun@superonline.com>\n"
"Language-Team: Turkish <gnome-turk@gnome.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../plugins/derivatives/options.c:174
#, no-c-format
msgid ""
"@FUNCTION=CUM_BIV_NORM_DIST\n"
"@SYNTAX=CUM_BIV_NORM_DIST(a,b,rho)\n"
"@DESCRIPTION=CUM_BIV_NORM_DIST calculates the cumulative bivariate normal "
"distribution from parameters a, b & rho.\n"
"The return value is the probability that two random variables with "
"correlation @rho are respectively each less than @a and @b.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV"
msgstr ""
"@FUNCTION=CUM_BIV_NORM_DIST\n"
"@SYNTAX=CUM_BIV_NORM_DIST(a,b,rho)\n"
"@DESCRIPTION=CUM_BIV_NORM_DIST, a, b ve rho değişkenlerine göre kümülatif "
"bivariatenormal dağılımını hesaplar"

#: ../plugins/derivatives/options.c:234
msgid ""
"@FUNCTION=OPT_BS\n"
"@SYNTAX=OPT_BS(call_put_flag,spot,strike,time,rate,volatility [,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS uses the Black-Scholes model to calculate the price of a "
"European option using call_put_flag, @call_put_flag, 'c' or 'p' struck at "
"@strike on an asset with spot price @spot.\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date. \n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed in the same units as @strike and "
"@spot.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:304
msgid ""
"@FUNCTION=OPT_BS_DELTA\n"
"@SYNTAX=OPT_BS_DELTA(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_DELTA uses the Black-Scholes model to calculate the "
"'delta' of a European option with call_put_flag, @call_put_flag, 'c' or 'p' "
"struck at @strike on an asset with spot price @spot.\n"
"Where @time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date. \n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed in the same units as @strike and "
"@spot.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:359
msgid ""
"@FUNCTION=OPT_BS_GAMMA\n"
"@SYNTAX=OPT_BS_GAMMA(spot,strike,time,rate,volatility[,cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_GAMMA uses the Black-Scholes model to calculate the "
"'gamma' of a European option struck at @strike on an asset with spot price "
"@spot.\n"
"\n"
"(The gamma of an option is the second derivative of its price with respect "
"to the price of the underlying asset, and is the same for calls and puts.)\n"
"\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as the rate of change of delta per "
"unit change in @spot.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA"
msgstr ""

#: ../plugins/derivatives/options.c:429
msgid ""
"@FUNCTION=OPT_BS_THETA\n"
"@SYNTAX=OPT_BS_THETA(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_THETA uses the Black-Scholes model to calculate the "
"'theta' of a European option with call_put_flag, @call_put_flag struck at "
"@strike on an asset with spot price @spot.\n"
"\n"
"(The theta of an option is the rate of change of its price with respect to "
"time to expiry.)\n"
"\n"
"@time is the time to maturity of the option expressed in years\n"
"and @rate is the risk-free interest rate to the exercise date, in percent.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as minus the rate of change of option "
"value, per 365.25 days.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:486
#, no-c-format
msgid ""
"@FUNCTION=OPT_BS_VEGA\n"
"@SYNTAX=OPT_BS_VEGA(spot,strike,time,rate,volatility[,cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_VEGA uses the Black-Scholes model to calculate the "
"'vega' of a European option struck at @strike on an asset with spot price "
"@spot.\n"
"(The vega of an option is the rate of change of its price with respect to "
"volatility, and is the same for calls and puts.)\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
" @time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% volatility.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:561
#, no-c-format
msgid ""
"@FUNCTION=OPT_BS_RHO\n"
"@SYNTAX=OPT_BS_RHO(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_RHO uses the Black-Scholes model to calculate the 'rho' "
"of a European option with call_put_flag, @call_put_flag struck at @strike on "
"an asset with spot price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"\n"
"(The rho of an option is the rate of change of its price with respect to the "
"risk free interest rate.)\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% change in @rate.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:629
#, no-c-format
msgid ""
"@FUNCTION=OPT_BS_CARRYCOST\n"
"@SYNTAX=OPT_BS_CARRYCOST(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_CARRYCOST uses the Black-Scholes model to calculate the "
"'elasticity' of a European option struck at @strike on an asset with spot "
"price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"\n"
"(The elasticity of an option is the rate of change of its price with respect "
"to its cost of carry.)\n"
"\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.  @time is the time to maturity of the "
"option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% volatility.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:701
#, no-c-format
msgid ""
"@FUNCTION=OPT_GARMAN_KOHLHAGEN\n"
"@SYNTAX=OPT_GARMAN_KOHLHAGEN(call_put_flag,spot,strike,time,domestic_rate,"
"foreign_rate,volatility[,cost_of_carry])\n"
"@DESCRIPTION=OPT_GARMAN_KOHLHAGEN values the theoretical price of a European "
"currency option struck at @strike on an asset with spot price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date. \n"
"@time the number of days to exercise.\n"
"@domestic_rate is the domestic risk-free interest rate to the exercise "
"date.\n"
"@foreign_rate is the foreign risk-free interest rate to the exercise date, "
"in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% volatility.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:772
#, no-c-format
msgid ""
"@FUNCTION=OPT_FRENCH\n"
"@SYNTAX=OPT_FRENCH(call_put_flag,spot,strike,time,t2,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_FRENCH values the theoretical price of a European option "
"adjusted for trading day volatility, struck at @strike on an asset with spot "
"price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
" @time the number of calendar days to exercise divided by calendar days in "
"the year.\n"
"@t2 is the number of trading days to exercise divided by trading days in the "
"year.\n"
"@rate is the risk-free interest rate.\n"
"@cost_of_carry is the leakage in value of the underlying asset, to the "
"exercise date, in percent.\n"
"For common stocks, this would be the dividend yield.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:836
#, no-c-format
msgid ""
"@FUNCTION=OPT_JUMP_DIFF\n"
"@SYNTAX=OPT_JUMP_DIFF(call_put_flag,spot,strike,time,rate,volatility,lambda,"
"gamma)\n"
"@DESCRIPTION=OPT_JUMP_DIFF models the theoretical price of an option "
"according to the Jump Diffusion process (Merton).\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price of the option.\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the annualized rate of interest.\n"
"@volatility is the annualized volatility of the underlying asset.\n"
"@lambda is expected number of 'jumps' per year.\n"
"@gamma is proportion of volatility explained by the 'jumps.'\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:935
#, no-c-format
msgid ""
"@FUNCTION=OPT_MILTERSEN_SCHWARTZ\n"
"@SYNTAX=OPT_MILTERSEN_SCHWARTZ(call_put_flag,p_t,f_t,x,t1,t2,v_s,v_e,v_f,"
"rho_se,rho_sf,rho_ef,kappa_e,kappa_f)\n"
"@DESCRIPTION=OPT_MILTERSEN_SCHWARTZ models the theoretical price of options "
"on commodities futures according to Miltersen & Schwartz. \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@p_t is a zero coupon bond with expiry at option maturity.\n"
"@f_t is the futures price.\n"
"@x is the strike price.\n"
"@t1 is the time to maturity of the option.\n"
"@t2 is the time to maturity of the underlying commodity futures contract.\n"
"@v_s is the volatility of the spot commodity price.\n"
"@v_e is the volatility of the future convenience yield.\n"
"@v_f is the volatility of the forward rate of interest.\n"
"@rho_se is correlation between the spot commodity price and the convenience "
"yield.\n"
"@rho_sf is correlation between the spot commodity price and the forward "
"interest rate.\n"
"@rho_ef is correlation between the forward interest rate and the convenience "
"yield.\n"
"@kappa_e is the speed of mean reversion of the convenience yield.\n"
"@kappa_f is the speed of mean reversion of the forward interest rate.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1048
#, no-c-format
msgid ""
"@FUNCTION=OPT_RGW\n"
"@SYNTAX=OPT_RGW(call_put_flag,spot,strike,t1,t2,rate,d,volatility)\n"
"@DESCRIPTION=OPT_RGW models the theoretical price of an american option "
"according to the Roll-Geske-Whaley approximation where: \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@t1 is the time to the dividend payout.\n"
"@t2 is the time to option expiration.\n"
"@rate is the annualized rate of interest.\n"
"@d is the amount of the dividend to be paid.\n"
"@volatility is the annualized rate of volatility of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1105
#, no-c-format
msgid ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_put_flag,spot,strike,time,rate,cost_of_carry,"
"volatility)\n"
"@DESCRIPTION=OPT_BAW_AMER models the theoretical price of an option "
"according to the Barone Adesie & Whaley approximation. \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1291
#, no-c-format
msgid ""
"@FUNCTION=OPT_BJER_STENS\n"
"@SYNTAX=OPT_BJER_STENS(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BJER_STENS models the theoretical price of american options "
"according to the Bjerksund & Stensland approximation technique.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1378
#, no-c-format
msgid ""
"@FUNCTION=OPT_EXEC\n"
"@SYNTAX=OPT_EXEC(call_put_flag,spot,strike,time,rate,volatility,"
"cost_of_carry,lambda)\n"
"@DESCRIPTION=OPT_EXEC models the theoretical price of executive stock "
"options @call_put_flag is 'c' or 'p' to indicate whether the option is a "
"call or a put.\n"
"One would expect this to always be a call option.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@lambda is the jump rate for executives. The model assumes executives "
"forfeit their options if they leave the company.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1429
#, no-c-format
msgid ""
"@FUNCTION=OPT_FORWARD_START\n"
"@SYNTAX=OPT_FORWARD_START(call_put_flag,spot,alpha,time1,time,rate,"
"volatility,cost_of_carry)\n"
"@DESCRIPTION=OPT_FORWARD_START models the theoretical price of forward start "
"options\n"
" @call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@alpha is a fraction that set the strike price the future date @time1.\n"
"@time1 is the number of days until the option starts.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1495
#, no-c-format
msgid ""
"@FUNCTION=OPT_TIME_SWITCH\n"
"@SYNTAX=OPT_TIME_SWITCH(call_put_flag,spot,strike,a,time,m,dt,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_TIME_SWITCH models the theoretical price of time switch "
"options. (Pechtl 1995)\n"
"The holder receives @a * @dt for each period dt that the asset price was "
"greater than the strike price (for a call) or below it (for a put). \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@a is the amount received for each time period as discussed above.\n"
"@time is the maturity of the option in years.\n"
"@m is the number of time units the option has already met the condition.\n"
"@dt is the agreed upon discrete time period (often a day) expressed as a "
"fraction of a year.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1549
#, no-c-format
msgid ""
"@FUNCTION=OPT_SIMPLE_CHOOSER\n"
"@SYNTAX=OPT_SIMPLE_CHOOSER(call_put_flag,spot,strike,time1,time2,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_SIMPLE_CHOOSER models the theoretical price of simple "
"chooser options.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time1 is the time in years until the holder chooses a put or a call "
"option.\n"
"@time2 is the time in years until the chosen option expires.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1612
#, no-c-format
msgid ""
"@FUNCTION=OPT_COMPLEX_CHOOSER\n"
"@SYNTAX=OPT_COMPLEX_CHOOSER(call_put_flag,spot,strike_call,strike_put,time,"
"time_call,time_put,rate,cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_COMPLEX_CHOOSER models the theoretical price of complex "
"chooser options.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike_call is the strike price at which the option is struck, applicable "
"if exercised as a call option.\n"
"@strike_put is the strike price at which the option is struck, applicable if "
"exercised as a put option.\n"
"@time is the time in years until the holder chooses a put or a call "
"option. \n"
"@time_call is the time in years to maturity of the call option if chosen.\n"
"@time_put is the time in years  to maturity of the put option if chosen.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1729
#, no-c-format
msgid ""
"@FUNCTION=OPT_ON_OPTIONS\n"
"@SYNTAX=OPT_ON_OPTIONS(type_flag,spot,strike1,strike2,time1,time2,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_ON_OPTIONS models the theoretical price of options on "
"options.\n"
"@type_flag is 'cc' for calls on calls, 'cp' for calls on puts, and so on for "
"'pc', and 'pp'.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike1 is the strike price at which the option being valued is struck.\n"
"@strike2 is the strike price at which the underlying option is struck.\n"
"@time1 is the time in years to maturity of the option.\n"
"@time2 is the time in years to the maturity of the underlying option.\n"
"(@time2 >= @time1).\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset of the "
"underlying option.for common stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset of "
"the underlying option.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1817
#, no-c-format
msgid ""
"@FUNCTION=OPT_EXTENDIBLE_WRITER\n"
"@SYNTAX=OPT_EXTENDIBLE_WRITER(call_put_flag,spot,strike1,strike2,time1,time2,"
"rate,cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_EXTENDIBLE_WRITER models the theoretical price of "
"extendible writer options. These are options that can be exercised at an "
"initial period, @time1, or their maturity extended to @time2 if the option "
"is out of the money at @time1.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike1 is the strike price at which the option is struck.\n"
"@strike2 is the strike price at which the option is re-struck if out of the "
"money at @time1.\n"
"@time1 is the initial maturity of the option in years.\n"
"@time2 is the is the extended maturity in years if chosen.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1881
#, no-c-format
msgid ""
"@FUNCTION=OPT_2_ASSET_CORRELATION\n"
"@SYNTAX=OPT_2_ASSET_CORRELATION(call_put_flag,spot1,spot2,strike1,strike2,"
"time,cost_of_carry1,cost_of_carry2,rate,volatility1,volatility2,rho)\n"
"@DESCRIPTION=OPT_2_ASSET_CORRELATION models the theoretical price of  "
"options on 2 assets with correlation @rho.\n"
"The payoff for a call is max(@spot2 - @strike2,0) if @spot1 > @strike1 or 0 "
"otherwise.\n"
"The payoff for a put is max (@strike2 - @spot2, 0) if @spot1 < @strike1 or 0 "
"otherwise.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot1 & @spot2 are the spot prices of the underlying assets.\n"
"@strike1 & @strike2 are the strike prices at which the option is struck.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry1 & @cost_of_carry2 are the leakage in value of the underlying "
"assets, for common stocks, this would be the dividend yield.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying assets.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1938
#, no-c-format
msgid ""
"@FUNCTION=OPT_EURO_EXCHANGE\n"
"@SYNTAX=OPT_EURO_EXCHANGE(spot1,spot2,qty1,qty2,time,rate,cost_of_carry1,"
"cost_of_carry2,volatility1,volatility2,rho)\n"
"@DESCRIPTION=OPT_EURO_EXCHANGE models the theoretical price of a European "
"option to exchange one asset with quantity @qty2 and spot price @spot2 for "
"another, with quantity @qty1 and spot price @spot1.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry1 & @cost_of_carry2 are the leakage in value of the underlying "
"assets, for common stocks, this would be the dividend yield.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying assets.\n"
"@rho is the correlation between the two assets.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_AMER_EXCHANGE, OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, "
"OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1985
#, no-c-format
msgid ""
"@FUNCTION=OPT_AMER_EXCHANGE\n"
"@SYNTAX=OPT_AMER_EXCHANGE(spot1,spot2,qty1,qty2,time,rate,cost_of_carry1,"
"cost_of_carry2,volatility1, volatility2, rho)\n"
"@DESCRIPTION=OPT_AMER_EXCHANGE models the theoretical price of an American "
"option to exchange one asset with quantity @qty2 and spot price @spot2 for "
"another, with quantity @qty1 and spot price @spot1.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry1 & @cost_of_carry2 are the leakage in value of the underlying "
"assets, for common stocks, this would be the dividend yield.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying assets.\n"
"@rho is the correlation between the two assets.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_EURO_EXCHANGE, OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, "
"OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:2030
#, no-c-format
msgid ""
"@FUNCTION=OPT_SPREAD_APPROX\n"
"@SYNTAX=OPT_SPREAD_APPROX(call_put_flag,fut_price1,fut_price2,strike,time, "
"rate,volatility1,volatility2,rho)\n"
"@DESCRIPTION=OPT_SPREAD_APPROX models the theoretical price of a European "
"option on the spread between two futures contracts.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@fut_price1 & @fut_price2 are the prices of the two futures contracts.\n"
"@strike is the strike price at which the option is struck \n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying futures contracts.\n"
"@rho is the correlation between the two futures contracts.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:2092
#, no-c-format
msgid ""
"@FUNCTION=OPT_FLOAT_STRK_LKBK\n"
"@SYNTAX=OPT_FLOAT_STRK_LKBK(call_put_flag,spot,spot_min,spot_max,time,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_FLOAT_STRK_LKBK models the theoretical price of an option "
"where the holder of the option may exercise on expiry at the most favourable "
"price observed during the options life of the underlying asset.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@spot_min is the minimum spot price of the underlying asset so far "
"observed.\n"
"@spot_max is the maximum spot price of the underlying asset so far "
"observed.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:2162
#, no-c-format
msgid ""
"@FUNCTION=OPT_FIXED_STRK_LKBK\n"
"@SYNTAX=OPT_FIXED_STRK_LKBK(call_put_flag,spot,spot_min,spot_max,strike,time,"
"rate,cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_FIXED_STRK_LKBK models the theoretical price of an option "
"where the holder of the option may exercise on expiry at the most favourable "
"price observed during the options life of the underlying asset.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@spot_min is the minimum spot price of the underlying asset so far "
"observed.\n"
"@spot_max is the maximum spot price of the underlying asset so far "
"observed.\n"
"@strike is the strike prices at which the option is struck.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:2252
#, no-c-format
msgid ""
"@FUNCTION=OPT_BINOMIAL\n"
"@SYNTAX=OPT_BINOMIAL(amer_euro_flag,call_put_flag,num_time_steps, spot, "
"strike, time, rate, volatility, cost_of_carry)\n"
"@DESCRIPTION=OPT_ models the theoretical price of either an American or "
"European style option using a binomial tree.\n"
"@amer_euro_flag is either 'a' or 'e' to indicate whether the option being "
"valued is an American or European style option respectively.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@num_time_steps is the number of time steps used in the valuation, a greater "
"number of time steps yields greater accuracy however is slower to "
"calculate.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/fn-complex/functions.c:80
msgid ""
"@FUNCTION=COMPLEX\n"
"@SYNTAX=COMPLEX(real,im[,suffix])\n"
"@DESCRIPTION=COMPLEX returns a complex number of the form x + yi.\n"
"\n"
"@real is the real and @im is the imaginary part of the complex number.  "
"@suffix is the suffix for the imaginary part.  If it is omitted, COMPLEX "
"uses 'i' by default.\n"
"\n"
"* If @suffix is neither 'i' nor 'j', COMPLEX returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COMPLEX(1,-1) equals 1-i.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COMPLEX\n"
"@SYNTAX=COMPLEX(gerçel,sanal[,sonek])\n"
"@DESCRIPTION=COMPLEX işlevi x + yi biçiminde bir karmaşık sayı ile "
"sonuçlanır.\n"
"\n"
"  @gerçel ve @sanal karmaşık sayının gerçel ve sanal katsayılarıdır.  @sonek "
"i veya j olabilir, verilmezse öntanımlı olarak i kullanılır.\n"
" * @sonek verilmiş ancak i veya j değilse, #DEĞER! hatası verilir.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"COMPLEX(1,-1) eşittir 1-i.\n"
"@EXAMPLES=\n"
"COMPLEX(1,-1) eşittir 1-i.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:122
msgid ""
"@FUNCTION=IMAGINARY\n"
"@SYNTAX=IMAGINARY(inumber)\n"
"@DESCRIPTION=IMAGINARY returns the imaginary part of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMAGINARY returns #VALUE! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMAGINARY(\"132-j\") equals -1.\n"
"\n"
"@SEEALSO=IMREAL"
msgstr ""
"@FUNCTION=IMAGINARY\n"
"@SYNTAX=IMAGINARY(karmaşık_sayı)\n"
"@DESCRIPTION=IMAGINARY işlevi verilen @karmaşık_sayının sanal kısmının "
"katsayısını verir.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* u işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMAGINARY(\"132-j\") eşittir -1\n"
"\n"
"Benzerleri: IMABS, IMREAL\n"
"@EXAMPLES=\n"
"IMAGINARY(\"132-j\") eşittir -1\n"
"\n"
"@SEEALSO=IIMABS, MREAL"

#: ../plugins/fn-complex/functions.c:158
msgid ""
"@FUNCTION=IMABS\n"
"@SYNTAX=IMABS(inumber)\n"
"@DESCRIPTION=IMABS returns the absolute value of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMABS returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMABS(\"2-j\") equals 2.23606798.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"
msgstr ""
"@FUNCTION=IMABS\n"
"@SYNTAX=IMABS(karmaşık_sayı)\n"
"@DESCRIPTION=IMABS işlevi verilen @karmaşık_sayı'nın mutlak değerini "
"hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMABS(\"2-j\") eşittir 2.23606798\n"
"\n"
"Benzerleri: IMAGINARY, IMREAL\n"
"@EXAMPLES=\n"
"IMABS(\"2-j\") eşittir 2.23606798\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"

#: ../plugins/fn-complex/functions.c:191
msgid ""
"@FUNCTION=IMREAL\n"
"@SYNTAX=IMREAL(inumber)\n"
"@DESCRIPTION=IMREAL returns the real part of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMREAL returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"imreal(\"132-j\") equals 132.\n"
"\n"
"@SEEALSO=IMAGINARY"
msgstr ""
"@FUNCTION=IMREAL\n"
"@SYNTAX=IMREAL(karmaşık_sayı)\n"
"@DESCRIPTION=IMREAL işlevi verilen @karmaşık_sayının gerçel kısmının "
"katsayısını verir.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"imreal(\"132-j\") eşittir 132\n"
"\n"
"Benzeri: IMAGINARY\n"
"@EXAMPLES=\n"
"imreal(\"132-j\") eşittir 132\n"
"\n"
"@SEEALSO=IMAGINARY"

#: ../plugins/fn-complex/functions.c:227
msgid ""
"@FUNCTION=IMCONJUGATE\n"
"@SYNTAX=IMCONJUGATE(inumber)\n"
"@DESCRIPTION=IMCONJUGATE returns the complex conjugate of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMCONJUGATE returns #VALUE! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMCONJUGATE(\"1-j\") equals 1+j.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"
msgstr ""
"@FUNCTION=IMCONJUGATE\n"
"@SYNTAX=IMCONJUGATE(karmaşık_sayı)\n"
"@DESCRIPTION=IMCONJUGATE işlevi verilen @karmaşık_sayı'nın eşleniğini "
"verir.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMCONJUGATE(\"1-j\") eşittir 1+j.\n"
"\n"
"Benzerleri: IMAGINARY, IMREAL\n"
"@EXAMPLES=\n"
"IMCONJUGATE(\"1-j\") eşittir 1+j.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"

#: ../plugins/fn-complex/functions.c:261
#, fuzzy
msgid ""
"@FUNCTION=IMINV\n"
"@SYNTAX=IMINV(inumber)\n"
"@DESCRIPTION=IMINV returns the inverse, or reciprocal, of the complex number "
"z (@inumber), where\n"
"\n"
"\t1/z = (x - i y)/(x^2 + y^2).\n"
"\n"
"* If @inumber is not a valid complex number, IMINV returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMINV(\"1-j\") equals 0.5+0.5j.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IMINV\n"
"@SYNTAX=IMINV(karmaşık_sayı)\n"
"@DESCRIPTION=IMINV işlevi @karmaşık_sayı'nın tersini hesaplar.\n"
"Parametre olarak z verilmişse\n"
"\n"
"\t1/z = (x - iy) / (x^2 + y^2).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMINV(\"1-j\") eşittir 0.5+0.5j\n"
"\n"
"@EXAMPLES=\n"
"IMINV(\"1+j\") eşittir 1.29846+0.63496j\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:295
msgid ""
"@FUNCTION=IMNEG\n"
"@SYNTAX=IMNEG(inumber)\n"
"@DESCRIPTION=IMNEG returns the negative of the complex number z (@inumber), "
"where\n"
"\n"
"\t-z = (-x) + i(-y).\n"
"\n"
"* If @inumber is not a valid complex number, IMNEG returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMNEG(\"1-j\") equals -1+j.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IMNEG\n"
"@SYNTAX=IMNEG(karmaşık_sayı)\n"
"@DESCRIPTION=IMNEG işlevi verilen bir @karmaşık_sayı'nın negatifini "
"hesaplar.\n"
"Parametre olarak z verilmişse\n"
"\n"
"\t-z = (-x) + i(-y).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMNEG(\"1-j\") eşittir -1+j\n"
"\n"
"@EXAMPLES=\n"
"IMNEG(\"1-j\") eşittir -1+j\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:329
msgid ""
"@FUNCTION=IMCOS\n"
"@SYNTAX=IMCOS(inumber)\n"
"@DESCRIPTION=IMCOS returns the cosine of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMCOS returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMCOS(\"1+j\") equals 0.833730-0.988898j.\n"
"\n"
"@SEEALSO=IMSIN,IMTAN"
msgstr ""
"@FUNCTION=IMCOS\n"
"@SYNTAX=IMCOS(karmaşık_sayı)\n"
"@DESCRIPTION=IMCOS verilen bir @karmaşık_sayı'nın kosinüsünü hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMCOS(\"1+j\") eşittir 0.833730-0.988898j\n"
"\n"
"Benzerleri: IMSIN, IMTAN\n"
"@EXAMPLES=\n"
"IMCOS(\"1+j\") eşittir 0.833730-0.988898j\n"
"\n"
"@SEEALSO=IMSIN,IMTAN"

#: ../plugins/fn-complex/functions.c:363
msgid ""
"@FUNCTION=IMTAN\n"
"@SYNTAX=IMTAN(inumber)\n"
"@DESCRIPTION=IMTAN returns the tangent of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMTAN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMTAN(\"2-j\") equals -0.2434582-1.1667363j.\n"
"\n"
"@SEEALSO=IMSIN,IMCOS"
msgstr ""
"@FUNCTION=IMTAN\n"
"@SYNTAX=IMTAN(karmaşık_sayı)\n"
"@DESCRIPTION=IMTAN verilen @karmaşık_sayı'nın tanjantını hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMTAN(\"2-j\") eşittir -0.2434582-1.1667363j.\n"
"\n"
"Benzerleri: IMSIN, IMCOS\n"
"\n"
"@EXAMPLES=\n"
"IMTAN(\"2-j\") eşittir -0.2434582-1.1667363j.\n"
"\n"
"@SEEALSO=IMSIN,IMCOS"

#: ../plugins/fn-complex/functions.c:397
msgid ""
"@FUNCTION=IMSEC\n"
"@SYNTAX=IMSEC(inumber)\n"
"@DESCRIPTION=IMSEC returns the complex secant of the complex number z "
"(@inumber), where\n"
"\n"
"\tsec(z) = 1/cos(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMSEC returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMSEC(\"2-j\") equals -0.413149-0.687527j.\n"
"\n"
"@SEEALSO=IMCSC,IMCOT"
msgstr ""
"@FUNCTION=IMSEC\n"
"@SYNTAX=IMSEC(karmaşık_sayı)\n"
"@DESCRIPTION=IMSEC verilen bir @karmaşık_sayı'nın sekantını hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMSEC(\"2-j\") eşittir  -0.413149-0.687527j\n"
"\n"
"Benzerleri: IMCSC,IMCOT\n"
"@EXAMPLES=\n"
"IMSEC(\"2-j\") eşittir  -0.413149-0.687527j\n"
"\n"
"@SEEALSO=IMCSC,IMCOT"

#: ../plugins/fn-complex/functions.c:433
msgid ""
"@FUNCTION=IMCSC\n"
"@SYNTAX=IMCSC(inumber)\n"
"@DESCRIPTION=IMCSC returns the complex cosecant of the complex number z "
"(@inumber), where\n"
"\n"
"\tcsc(z) = 1/sin(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCSC returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCSC(\"2-j\") equals 0.635494-0.221501j.\n"
"\n"
"@SEEALSO=IMSEC,IMCOT"
msgstr ""
"@FUNCTION=IMCSC\n"
"@SYNTAX=IMCSC(karmaşık_sayı)\n"
"@DESCRIPTION=IMCSC verilen bir @karmaşık_sayı'nın kosekantını hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tcsc(z) = 1/sin(z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMCSC(\"2-j\") eşittir 0.635494-0.221501j\n"
"\n"
"Benzerleri: IMSEC, IMCOT\n"
"@EXAMPLES=\n"
"IMCSC(\"2-j\") eşittir 0.635494-0.221501j\n"
"\n"
"@SEEALSO=IMSEC, IMCOT"

#: ../plugins/fn-complex/functions.c:469
msgid ""
"@FUNCTION=IMCOT\n"
"@SYNTAX=IMCOT(inumber)\n"
"@DESCRIPTION=IMCOT returns the complex cotangent of the complex number z "
"(@inumber), where\n"
"\n"
"\tcot(z) = 1/tan(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCOT returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCOT(\"2-j\") equals -0.171384+0.821330j.\n"
"\n"
"@SEEALSO=IMSEC,IMCSC"
msgstr ""
"@FUNCTION=IMCOT\n"
"@SYNTAX=IMCOT(karmaşık_sayı)\n"
"@DESCRIPTION=IMCOT verilen bir @karmaşık_sayı'nın kotanjantını hesaplar.\n"
"\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tcot(z) = 1/tan(z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMCOT(\"2-j\") eşittir -0.171384+0.821330j\n"
"\n"
"Benzerleri: IMSEC, IMCSC\n"
"@EXAMPLES=\n"
"IMCOT(\"2-j\") eşittir -0.171384+0.821330j\n"
"\n"
"@SEEALSO=IMSEC, IMCSC"

#: ../plugins/fn-complex/functions.c:505
msgid ""
"@FUNCTION=IMEXP\n"
"@SYNTAX=IMEXP(inumber)\n"
"@DESCRIPTION=IMEXP returns the exponential of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMEXP returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMEXP(\"2-j\") equals 3.992324-6.217676j.\n"
"\n"
"@SEEALSO=IMLN"
msgstr ""
"@FUNCTION=IMEXP\n"
"@SYNTAX=IMEXP(karmaşık_sayı)\n"
"@DESCRIPTION=IMEXP işlevi verilen bir @karmaşık_sayı'nın üstel değerini "
"hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMEXP(\"2-j\") eşittir 3.992324-6.217676j\n"
"\n"
"Benzeri: IMLN\n"
"@EXAMPLES=\n"
"IMEXP(\"2-j\") eşittir 3.992324-6.217676j\n"
"\n"
"@SEEALSO=IMLN"

#: ../plugins/fn-complex/functions.c:539
msgid ""
"@FUNCTION=IMARGUMENT\n"
"@SYNTAX=IMARGUMENT(inumber)\n"
"@DESCRIPTION=IMARGUMENT returns the argument theta of a complex number, i.e. "
"the angle in radians from the real axis to the representation of the number "
"in polar coordinates.\n"
"\n"
"* If @inumber is not a valid complex number, IMARGUMENT returns #VALUE! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMARGUMENT(\"2-j\") equals -0.463647609.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IMARGUMENT\n"
"@SYNTAX=IMARGUMENT(karmaşık_sayı)\n"
"@DESCRIPTION=IMARGUMENT işlevi verilen @karmaşık_sayı'nın tetasını hesaplar. "
"Yani, gerçel eksendeki radyan cinsinden açının kutupsal koordinatlardaki "
"değerini verir.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMARGUMENT(\"2-j\") eşittir -0.463647609\n"
"\n"
"Benzeri: IMCONJUGATE\n"
"\n"
"@EXAMPLES=\n"
"IMARGUMENT(\"2-j\") eşittir -0.463647609\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:574
msgid ""
"@FUNCTION=IMLN\n"
"@SYNTAX=IMLN(inumber)\n"
"@DESCRIPTION=IMLN returns the natural logarithm of a complex number.\n"
"\n"
"The result will have an imaginary part between -pi and +pi.  The natural "
"logarithm is not uniquely defined on complex numbers. You may need to add or "
"subtract an even multiple of pi to the imaginary part.\n"
"\n"
"* If @inumber is not a valid complex number, IMLN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMLN(\"3-j\") equals 1.15129-0.32175j.\n"
"\n"
"@SEEALSO=IMEXP,IMLOG2,IMLOG10"
msgstr ""
"@FUNCTION=IMLN\n"
"@SYNTAX=IMLN(karmaşık_sayı)\n"
"@DESCRIPTION=IMLN işlevi verilen @karmaşık_sayı'nın tabii logaritmasını "
"hesaplar.\n"
"\n"
"(Sonuç -pi ile +pi arasında bir sanal kısma sahip olmalıdır. Tabii logaritma "
"karmaşık sayılar için tam istenen değeri vermeyebilir. Bu durumda sanal "
"kısma pi'nin katlarını eklemek ya da çıkarmak zorunda kalabilirsiniz.)\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMLN(\"3-j\") eşittir 1.15129-0.32175j\n"
"\n"
"Benzerleri: IMEXP, IMLOG2, IMLOG10\n"
"@EXAMPLES=\n"
"IMLN(\"3-j\") eşittir 1.15129-0.32175j\n"
"\n"
"@SEEALSO=IMEXP,IMLOG2,IMLOG10"

#: ../plugins/fn-complex/functions.c:613
msgid ""
"@FUNCTION=IMLOG2\n"
"@SYNTAX=IMLOG2(inumber)\n"
"@DESCRIPTION=IMLOG2 returns the logarithm of a complex number in base 2.\n"
"\n"
"* If @inumber is not a valid complex number, IMLOG2 returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMLOG2(\"3-j\") equals 1.66096-0.46419j.\n"
"\n"
"@SEEALSO=IMLN,IMLOG10"
msgstr ""
"@FUNCTION=IMLOG2\n"
"@SYNTAX=IMLOG2(karmaşık_sayı)\n"
"@DESCRIPTION=IMLOG2 işlevi verilen @karmaşık_sayı'nın 2 tabanına göre "
"logaritmasını hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMLOG2(\"3-j\") eşittir 1.66096-0.46419j\n"
"\n"
"Benzerleri: IMLN, IMLOG10\n"
"@EXAMPLES=\n"
"IMLOG2(\"3-j\") eşittir 1.66096-0.46419j\n"
"\n"
"@SEEALSO=IMLN,IMLOG10"

#: ../plugins/fn-complex/functions.c:648
msgid ""
"@FUNCTION=IMLOG10\n"
"@SYNTAX=IMLOG10(inumber)\n"
"@DESCRIPTION=IMLOG10 returns the logarithm of a complex number in base 10.\n"
"\n"
"* If @inumber is not a valid complex number, IMLOG10 returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMLOG10(\"3-j\") equals 0.5-0.13973j.\n"
"\n"
"@SEEALSO=IMLN,IMLOG2"
msgstr ""
"@FUNCTION=IMLOG10\n"
"@SYNTAX=IMLOG10(karmaşık_sayı)\n"
"@DESCRIPTION=IMLOG10 işlevi verilen @karmaşık_sayı'nın 10 tabanına göre "
"logaritmasını hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMLOG10(\"3-j\") eşittir 0.5-0.13973j\n"
"\n"
"Benzerleri: IMLN, IMLOG2\n"
"@EXAMPLES=\n"
"IMLOG10(\"3-j\") eşittir 0.5-0.13973j\n"
"\n"
"@SEEALSO=IMLN,IMLOG2"

#: ../plugins/fn-complex/functions.c:683
msgid ""
"@FUNCTION=IMPOWER\n"
"@SYNTAX=IMPOWER(inumber1,inumber2)\n"
"@DESCRIPTION=IMPOWER returns a complex number raised to a power.  @inumber1 "
"is the complex number to be raised to a power and @inumber2 is the power to "
"which you want to raise it.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMPOWER returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMPOWER(\"4-j\",2) equals 15-8j.\n"
"\n"
"@SEEALSO=IMSQRT"
msgstr ""
"@FUNCTION=IMPOWER\n"
"@SYNTAX=IMPOWER(karmaşık_sayı,kuvvet)\n"
"@DESCRIPTION=IMPOWER işlevi verilen @karmaşık_sayı'nın @kuvvet'ini "
"hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMPOWER(\"4-j\",2) eşittir 15-8j\n"
"\n"
"Benzeri: IMSQRT\n"
"@EXAMPLES=\n"
"IMPOWER(\"4-j\",2) eşittir 15-8j\n"
"\n"
"@SEEALSO=IMSQRT"

#: ../plugins/fn-complex/functions.c:725
msgid ""
"@FUNCTION=IMDIV\n"
"@SYNTAX=IMDIV(inumber1,inumber2)\n"
"@DESCRIPTION=IMDIV returns the quotient of two complex numbers.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMDIV returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMDIV(\"2-j\",\"2+j\") equals 0.6-0.8j.\n"
"\n"
"@SEEALSO=IMPRODUCT"
msgstr ""
"@FUNCTION=IMDIV\n"
"@SYNTAX=IMDIV(karmaşık_sayı1,karmaşık_sayı2)\n"
"@DESCRIPTION=IMDIV işlevi iki karmaşık sayının bölümünü hesaplar.\n"
"\n"
"* Verilen karmaşık_sayılar geçerli birer karmaşık sayı değilse #DEĞER! "
"hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMDIV(\"2-j\",\"2+j\") eşittir 0.6-0.8j\n"
"\n"
"Benzeri: IMPRODUCT\n"
"@EXAMPLES=\n"
"IMDIV(\"2-j\",\"2+j\") eşittir 0.6-0.8j\n"
"\n"
"@SEEALSO=IMPRODUCT"

#: ../plugins/fn-complex/functions.c:765
msgid ""
"@FUNCTION=IMSIN\n"
"@SYNTAX=IMSIN(inumber)\n"
"@DESCRIPTION=IMSIN returns the sine of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMSIN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSIN(\"1+j\") equals 1.29846+0.63496j.\n"
"\n"
"@SEEALSO=IMCOS,IMTAN"
msgstr ""
"@FUNCTION=IMSIN\n"
"@SYNTAX=IMSIN(karmaşık_sayı)\n"
"@DESCRIPTION=IMSIN işlevi @karmaşık_sayı'nın sinüsünü hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMSIN(\"1+j\") eşittir 1.29846+0.63496j\n"
"\n"
"Benzerleri: IMCOS, IMTAN\n"
"@EXAMPLES=\n"
"IMSIN(\"1+j\") eşittir 1.29846+0.63496j\n"
"\n"
"@SEEALSO=IMCOS,IMTAN"

#: ../plugins/fn-complex/functions.c:798
msgid ""
"@FUNCTION=IMSINH\n"
"@SYNTAX=IMSINH(inumber)\n"
"@DESCRIPTION=IMSINH returns the complex hyperbolic sine of the complex "
"number z (@inumber), where\n"
"\n"
"\tsinh(z) = (exp(z) - exp(-z))/2.\n"
"\n"
"* If @inumber is not a valid complex number, IMSINH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMSINH(\"1+j\") equals 0.63496+1.29846j.\n"
"\n"
"@SEEALSO=IMCOSH,IMTANH"
msgstr ""
"@FUNCTION=IMSINH\n"
"@SYNTAX=IMSINH(karmaşık_sayı)\n"
"@DESCRIPTION=IMSINH işlevi @karmaşık_sayı'nın sinüs hiperboliğini hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tsinh(z) = (exp(z) - exp(-z))/2.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMSINH(\"1+j\") eşittir 0.63496+1.29846j\n"
"\n"
"Benzerleri: IMCOSH, IMTANH\n"
"@EXAMPLES=\n"
"IMSINH(\"1+j\") eşittir 0.63496+1.29846j\n"
"\n"
"@SEEALSO=IMCOSH, IMTANH"

#: ../plugins/fn-complex/functions.c:833
msgid ""
"@FUNCTION=IMCOSH\n"
"@SYNTAX=IMCOSH(inumber)\n"
"@DESCRIPTION=IMCOSH returns the complex hyperbolic cosine of the complex "
"number z (@inumber), where\n"
"\n"
"\tcosh(z) = (exp(z) + exp(-z))/2.\n"
"\n"
"* If @inumber is not a valid complex number, IMCOSH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCOSH(\"1+j\") equals 0.83373+0.988898j.\n"
"\n"
"@SEEALSO=IMSINH,IMTANH"
msgstr ""
"@FUNCTION=IMCOSH\n"
"@SYNTAX=IMCOSH(karmaşık_sayı)\n"
"@DESCRIPTION=IMCOSH verilen bir @karmaşık_sayı'nın kosinüs hiperboliğini "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tcosh(z) = (exp(z) + exp(-z))/2.\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMCOSH(\"1+j\") eşittir 0.83373-0.988898j\n"
"\n"
"Benzerleri: IMSINH, IMTANH\n"
"@EXAMPLES=\n"
"IMCOSH(\"1+j\") eşittir 0.83373-0.988898j\n"
"\n"
"@SEEALSO=IMSINH, IMTANH"

#: ../plugins/fn-complex/functions.c:867
msgid ""
"@FUNCTION=IMTANH\n"
"@SYNTAX=IMTANH(inumber)\n"
"@DESCRIPTION=IMTANH returns the complex hyperbolic tangent of the complex "
"number z (@inumber), where\n"
"\n"
"\ttanh(z) = sinh(z)/cosh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMTANH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMTANH(\"1+j\") equals 1.083923+0.2717526j.\n"
"\n"
"@SEEALSO=IMSINH,IMCOSH"
msgstr ""
"@FUNCTION=IMTANH\n"
"@SYNTAX=IMTANH(karmaşık_sayı)\n"
"@DESCRIPTION=IMTANH işlevi @karmaşık_sayı'nın tanjant hiperboliğini "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\ttanh(z) = sinh(z)/cosh(z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMTANH(\"1+j\") eşittir 1.083923+0.2717526j\n"
"\n"
"Benzerleri: IMSINH, IMCOSH\n"
"@EXAMPLES=\n"
"IMTANH(\"1+j\") eşittir 1.083923+0.2717526j\n"
"\n"
"@SEEALSO=IMSINH, IMCOSH"

#: ../plugins/fn-complex/functions.c:901
msgid ""
"@FUNCTION=IMSECH\n"
"@SYNTAX=IMSECH(inumber)\n"
"@DESCRIPTION=IMSECH returns the complex hyperbolic secant of the complex "
"number z (@inumber), where\n"
"\n"
"\tsech(z) = 1/cosh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMSECH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMSECH(\"1+j\") equals 0.498337-0.5910838j.\n"
"\n"
"@SEEALSO=IMCSCH,IMCOTH"
msgstr ""
"@FUNCTION=IMSECH\n"
"@SYNTAX=IMSECH(karmaşık_sayı)\n"
"@DESCRIPTION=IMSECH verilen bir @karmaşık_sayı'nın sekant hiperboliğini "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tsech(z) = 1/cosh(z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMSECH(\"1+j\") eşittir 0.498337-0.5910838j\n"
"\n"
"Benzerleri: IMCSCH, IMCOTH\n"
"@EXAMPLES=\n"
"IMSECH(\"1+j\") eşittir 0.498337-0.5910838j\n"
"\n"
"@SEEALSO=IMCSCH, IMCOTH"

#: ../plugins/fn-complex/functions.c:935
msgid ""
"@FUNCTION=IMCSCH\n"
"@SYNTAX=IMCSCH(inumber)\n"
"@DESCRIPTION=IMCSCH returns the complex hyperbolic cosecant of the complex "
"number z (@inumber), where\n"
"\n"
"\tcsch(z) = 1/sinh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCSCH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCSCH(\"1+j\") equals 0.303931-0.621518j.\n"
"\n"
"@SEEALSO=IMSECH,IMCOTH"
msgstr ""
"@FUNCTION=IMCSCH\n"
"@SYNTAX=IMCSCH(karmaşık_sayı)\n"
"@DESCRIPTION=IMCSCH verilen bir @karmaşık_sayı'nın kosekant hiperboliğini "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tcsch(z) = 1/sinh(z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMCSCH(\"1+j\") eşittir 0.303931-0.621518j\n"
"\n"
"Benzerleri: IMSECH, IMCOTH\n"
"@EXAMPLES=\n"
"IMCSCH(\"1+j\") eşittir 0.303931-0.621518j\n"
"\n"
"@SEEALSO=IMSECH,IMCOTH"

#: ../plugins/fn-complex/functions.c:969
msgid ""
"@FUNCTION=IMCOTH\n"
"@SYNTAX=IMCOTH(inumber)\n"
"@DESCRIPTION=IMCOTH returns the complex hyperbolic cotangent of the complex "
"number z (@inumber) where,\n"
"\n"
"\tcoth(z) = 1/tanh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCOTH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCOTH(\"1+j\") equals 0.868014-0.217622j.\n"
"\n"
"@SEEALSO=IMSECH,IMCSCH"
msgstr ""
"@FUNCTION=IMCOTH\n"
"@SYNTAX=IMCOTH(karmaşık_sayı)\n"
"@DESCRIPTION=IMCOTH verilen bir @karmaşık_sayı'nın kotanjant hiperboliğini "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tcoth(z) = 1/tanh(z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMCOTH(\"1+j\") eşittir 0.868014-0.217622j\n"
"\n"
"Benzerleri: IMSECH, IMCSCH\n"
"@EXAMPLES=\n"
"IMCOTH(\"1+j\") eşittir 0.868014-0.217622j\n"
"\n"
"@SEEALSO=IMSECH,IMCSCH"

#: ../plugins/fn-complex/functions.c:1003
msgid ""
"@FUNCTION=IMARCSIN\n"
"@SYNTAX=IMARCSIN(inumber)\n"
"@DESCRIPTION=IMARCSIN returns the complex arcsine of the complex number "
"@inumber. The branch cuts are on the real axis, less than -1 and greater "
"than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSIN returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSIN(\"1+j\") equals 0.6662394+1.061275j.\n"
"\n"
"@SEEALSO=IMARCCOS,IMARCTAN"
msgstr ""
"@FUNCTION=IMARCSIN\n"
"@SYNTAX=IMARCSIN(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCSIN işlevi sinüsü @karmaşık_sayı olan karmaşık değeri "
"hesaplar. Gerçel eksenle kesişme yerleri -1 den küçük ve 1 den büyüktür.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCSIN(\"1+j\") eşittir 0.6662394+1.061275j\n"
"\n"
"Benzerleri: IMARCCOS, IMARCTAN\n"
"@EXAMPLES=\n"
"IMARCSIN(\"1+j\") eşittir 0.6662394+1.061275j\n"
"\n"
"@SEEALSO=IMARCCOS,IMARCTAN"

#: ../plugins/fn-complex/functions.c:1038
msgid ""
"@FUNCTION=IMARCCOS\n"
"@SYNTAX=IMARCCOS(inumber)\n"
"@DESCRIPTION=IMARCCOS returns the complex arccosine of the complex number "
"@inumber. The branch cuts are on the real axis, less than -1 and greater "
"than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOS returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOS(\"1+j\") equals 0.9045569-1.061275j.\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCTAN"
msgstr ""
"@FUNCTION=IMARCCOS\n"
"@SYNTAX=IMARCCOS(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCCOS kosinüsü @karmaşık_sayı olan karmaşık değeri hesaplar. "
"Gerçel eksenle kesişme yerleri -1 den küçük ve 1 den büyüktür.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCCOS(\"1+j\") eşittir 0.9045569-1.061275j\n"
"\n"
"Benzerleri: IMARCSIN, IMARCTAN\n"
"@EXAMPLES=\n"
"IMARCCOS(\"1+j\") eşittir 0.9045569-1.061275j\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCTAN"

#: ../plugins/fn-complex/functions.c:1073
msgid ""
"@FUNCTION=IMARCTAN\n"
"@SYNTAX=IMARCTAN(inumber)\n"
"@DESCRIPTION=IMARCTAN returns the complex arctangent of the complex number "
"@inumber. The branch cuts are on the imaginary axis, below -i and above i.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCTAN returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCTAN(\"1+j\") equals 1.0172220+0.4023595j.\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCCOS"
msgstr ""
"@FUNCTION=IMARCTAN\n"
"@SYNTAX=IMARCTAN(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCTAN tanjantı @karmaşık_sayı olan karmaşık değeri hesaplar. "
"Sanal eksenle kesişme yerleri -i den aşağıda ve i den yukardadır.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCTAN(\"1+j\") eşittir 1.0172220+0.4023595j\n"
"\n"
"Benzerleri: IMARCSIN, IMARCCOS\n"
"@EXAMPLES=\n"
"IMARCTAN(\"1+j\") eşittir 1.0172220+0.4023595j\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCCOS"

#: ../plugins/fn-complex/functions.c:1108
msgid ""
"@FUNCTION=IMARCSEC\n"
"@SYNTAX=IMARCSEC(inumber)\n"
"@DESCRIPTION=IMARCSEC returns the complex arcsecant of the complex number z "
"(@inumber), where\n"
"\n"
"\tarcsec(z) = arccos(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSEC returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSEC(\"1+j\") equals 1.1185179+0.5306375j.\n"
"\n"
"@SEEALSO=IMARCCSC,IMARCCOT"
msgstr ""
"@FUNCTION=IMARCSEC\n"
"@SYNTAX=IMARCSEC(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCSEC sekantı @karmaşık_sayı olan karmaşık değeri hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tarcsec(z) = arccos(1/z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCSEC(\"1+j\") eşittir 1.1185179+0.5306375j\n"
"\n"
"Benzerleri: IMARCCSC, IMARCCOT\n"
"@EXAMPLES=\n"
"IMARCSEC(\"1+j\") eşittir 1.1185179+0.5306375j\n"
"\n"
"@SEEALSO=IMARCCSC,IMARCCOT"

#: ../plugins/fn-complex/functions.c:1142
msgid ""
"@FUNCTION=IMARCCSC\n"
"@SYNTAX=IMARCCSC(inumber)\n"
"@DESCRIPTION=IMARCCSC returns the complex arccosecant of the complex number "
"z (@inumber), where\n"
"\n"
"\tarccsc(z) = arcsin(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCSC returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCSC(\"1+j\") equals 0.45227845-0.5306375j.\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCOT"
msgstr ""
"@FUNCTION=IMARCCSC\n"
"@SYNTAX=IMARCCSC(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCCSC kosekantı @karmaşık_sayı olan karmaşık değeri "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tarccsc(z) = arcsin(1/z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCCSC(\"1+j\") eşittir 0.45227845-0.5306375j\n"
"\n"
"Benzerleri: IMARCSEC, IMARCCOT\n"
"@EXAMPLES=\n"
"IMARCCSC(\"1+j\") eşittir 0.45227845-0.5306375j\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCOT"

#: ../plugins/fn-complex/functions.c:1176
msgid ""
"@FUNCTION=IMARCCOT\n"
"@SYNTAX=IMARCCOT(inumber)\n"
"@DESCRIPTION=IMARCCOT returns the complex arccotangent of the complex number "
"z (@inumber), where\n"
"\n"
"\tarccot(z) = arctan(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOT returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOT(\"1+j\") equals 0.553574+0.4023595j.\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCSC"
msgstr ""
"@FUNCTION=IMARCCOT\n"
"@SYNTAX=IMARCCOT(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCCOT kotanjantı @karmaşık_sayı olan karmaşık değeri "
"hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tarccot(z) = arctan(1/z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCCOT(\"1+j\") eşittir 0.553574+0.4023595j\n"
"\n"
"Benzerleri: IMARCSEC, IMARCCSC\n"
"@EXAMPLES=\n"
"IMARCCOT(\"1+j\") eşittir 0.553574+0.4023595j\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCSC"

#: ../plugins/fn-complex/functions.c:1210
msgid ""
"@FUNCTION=IMARCSINH\n"
"@SYNTAX=IMARCSINH(inumber)\n"
"@DESCRIPTION=IMARCSINH returns the complex hyperbolic arcsine of the complex "
"number @inumber. The branch cuts are on the imaginary axis, below -i and "
"above i.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSINH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSINH(\"1+j\") equals 1.061275+0.6662394j.\n"
"\n"
"@SEEALSO=IMARCCOSH,IMARCTANH"
msgstr ""
"@FUNCTION=IMARCSINH\n"
"@SYNTAX=IMARCSINH(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCSINH sinüs hiperboliği @karmaşık_sayı olan karmaşık değeri "
"hesaplar.Sanal eksenle kesişme yerleri -i den aşağıda ve i denyukardadır.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCSINH(\"1+j\") eşittir 1.061275+0.6662394j\n"
"\n"
"Benzerleri: IMARCCOSH, IMARCTANH\n"
"@EXAMPLES=\n"
"IMARCSINH(\"1+j\") eşittir 1.061275+0.6662394j\n"
"\n"
"@SEEALSO=IMARCCOSH,IMARCTANH"

#: ../plugins/fn-complex/functions.c:1245
msgid ""
"@FUNCTION=IMARCCOSH\n"
"@SYNTAX=IMARCCOSH(inumber)\n"
"@DESCRIPTION=IMARCCOSH returns the complex hyperbolic arccosine of the "
"complex number @inumber. The branch cut is on the real axis, less than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOSH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOSH(\"1+j\") equals 1.06127506+0.904557j.\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCTANH"
msgstr ""
"@FUNCTION=IMARCCOSH\n"
"@SYNTAX=IMARCCOSH(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCCOSH kosinüs hiperboliği @karmaşık_sayı olan karmaşık "
"değeri hesaplar. Gerçel eksenle kesişme yerleri -1 den küçük ve 1 "
"denbüyüktür.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCCOSH(\"1+j\") eşittir 1.06127506+0.904557j\n"
"\n"
"Benzerleri: IMARCSINH, IMARCTANH\n"
"@EXAMPLES=\n"
"IMARCCOSH(\"1+j\") eşittir 1.06127506+0.904557j\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCTANH"

#: ../plugins/fn-complex/functions.c:1280
msgid ""
"@FUNCTION=IMARCTANH\n"
"@SYNTAX=IMARCTANH(inumber)\n"
"@DESCRIPTION=IMARCTANH returns the complex hyperbolic arctangent of the "
"complex number @inumber. The branch cuts are on the real axis, less than -1 "
"and greater than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCTANH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCTANH(\"1+j\") equals 0.4023595+1.0172220j.\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCCOSH"
msgstr ""
"@FUNCTION=IMARCTANH\n"
"@SYNTAX=IMARCTANH(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCTANH tanjant hiperboliği @karmaşık_sayı olan karmaşık "
"değeri hesaplar. Gerçel eksenle kesişme yerleri -1 den küçük ve 1 "
"denbüyüktür.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCTANH(\"1+j\") eşittir 0.4023595+1.0172220j\n"
"\n"
"Benzerleri: IMARCSINH, IMARCCOSH\n"
"@EXAMPLES=\n"
"IMARCTANH(\"1+j\") eşittir 0.4023595+1.0172220j\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCCOSH"

#: ../plugins/fn-complex/functions.c:1315
msgid ""
"@FUNCTION=IMARCSECH\n"
"@SYNTAX=IMARCSECH(inumber)\n"
"@DESCRIPTION=IMARCSECH returns the complex hyperbolic arcsecant of the "
"complex number z (@inumber), where\n"
"\n"
"\tarcsech(z) = arccosh(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSECH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSECH(\"1+j\") equals 0.5306375-1.118518j.\n"
"\n"
"@SEEALSO=IMARCCSCH,IMARCCOTH"
msgstr ""
"@FUNCTION=IMARCSECH\n"
"@SYNTAX=IMARCSECH(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCSECH sekant hiperboliği @karmaşık_sayı olan karmaşık "
"değeri hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tarcsech(z) = arccosh(1/z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCSECH(\"1+j\") eşittir 0.5306375-1.118518j\n"
"\n"
"Benzerleri: IMARCCSCH, IMARCCOTH\n"
"@EXAMPLES=\n"
"IMARCSECH(\"1+j\") eşittir 0.5306375-1.118518j\n"
"\n"
"@SEEALSO=IMARCCSCH,IMARCCOTH"

#: ../plugins/fn-complex/functions.c:1350
msgid ""
"@FUNCTION=IMARCCSCH\n"
"@SYNTAX=IMARCCSCH(inumber)\n"
"@DESCRIPTION=IMARCCSCH returns the complex hyperbolic arccosecant of the "
"complex number z (@inumber), where\n"
"\n"
"\tarccsch(z) = arcsinh(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCSCH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCSCH(\"1+j\") equals 0.5306375-0.452278j.\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCOTH"
msgstr ""
"@FUNCTION=IMARCCSCH\n"
"@SYNTAX=IMARCCSCH(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCCSCH kosekant hiperboliği @karmaşık_sayı olan karmaşık "
"değeri hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tarccsch(z) = arcsin(1/z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCCSCH(\"1+j\") eşittir 0.5306375-0.452278j\n"
"\n"
"Benzerleri: IMARCSECH, IMARCCOTH\n"
"@EXAMPLES=\n"
"IMARCCSCH(\"1+j\") eşittir 0.5306375-0.452278j\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCOTH"

#: ../plugins/fn-complex/functions.c:1384
msgid ""
"@FUNCTION=IMARCCOTH\n"
"@SYNTAX=IMARCCOTH(inumber)\n"
"@DESCRIPTION=IMARCCOTH returns the complex hyperbolic arccotangent of the "
"complex number z (@inumber), where\n"
"\n"
"\tarccoth(z) = arctanh(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOTH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOTH(\"1+j\") equals 0.40235948-0.5535744j.\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCSCH"
msgstr ""
"@FUNCTION=IMARCCOTH\n"
"@SYNTAX=IMARCCOTH(karmaşık_sayı)\n"
"@DESCRIPTION=IMARCCOTH kotanjant hiperboliği @karmaşık_sayı olan karmaşık "
"değeri hesaplar.\n"
"Parametre olarak z verilmişse:\n"
"\n"
"\tarccoth(z) = arctanh(1/z).\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"\n"
"Örnek:\n"
"IMARCCOTH(\"1+j\") eşittir 0.40235948-0.5535744j\n"
"\n"
"Benzerleri: IMARCSECH, IMARCCSCH\n"
"@EXAMPLES=\n"
"IMARCCOTH(\"1+j\") eşittir 0.40235948-0.5535744j\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCSCH"

#: ../plugins/fn-complex/functions.c:1419
msgid ""
"@FUNCTION=IMSQRT\n"
"@SYNTAX=IMSQRT(inumber)\n"
"@DESCRIPTION=IMSQRT returns the square root of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMSQRT returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSQRT(\"1+j\") equals 1.09868+0.4550899j.\n"
"\n"
"@SEEALSO=IMPOWER"
msgstr ""
"@FUNCTION=IMSQRT\n"
"@SYNTAX=IMSQRT(karmaşık_sayı)\n"
"@DESCRIPTION=IMSQRT işlevi @karmaşık_sayı'nın karekökünü hesaplar.\n"
"\n"
"* @karmaşık_sayı geçerli bir karmaşık sayı değilse #DEĞER! hatası verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMSQRT(\"1+j\") eşittir 1.09868+0.4550899j\n"
"\n"
"Benzeri: IMPOWER\n"
"@EXAMPLES=\n"
"IMSQRT(\"1+j\") eşittir 1.09868+0.4550899j\n"
"\n"
"@SEEALSO=IMPOWER"

#: ../plugins/fn-complex/functions.c:1453
msgid ""
"@FUNCTION=IMSUB\n"
"@SYNTAX=IMSUB(inumber1,inumber2)\n"
"@DESCRIPTION=IMSUB returns the difference of two complex numbers.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMSUB returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSUB(\"3-j\",\"2+j\") equals 1-2j.\n"
"\n"
"@SEEALSO=IMSUM"
msgstr ""
"@FUNCTION=IMSUB\n"
"@SYNTAX=IMSUB(karmaşık_sayı1,karmaşık_sayı2)\n"
"@DESCRIPTION=IMSUB işlevi iki karmaşık sayının farkını hesaplar.\n"
"\n"
"* Verilen sayılar geçerli birer karmaşık sayı değilse #DEĞER! hatası "
"verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMSUB(\"3-j\",\"2+j\") eşittir 1-2j\n"
"\n"
"Benzeri: IMSUM\n"
"@EXAMPLES=\n"
"IMSUB(\"3-j\",\"2+j\") eşittir 1-2j\n"
"\n"
"@SEEALSO=IMSUM"

#: ../plugins/fn-complex/functions.c:1490
msgid ""
"@FUNCTION=IMPRODUCT\n"
"@SYNTAX=IMPRODUCT(inumber1[,inumber2,...])\n"
"@DESCRIPTION=IMPRODUCT returns the product of given complex numbers.\n"
"\n"
"* If any of the @inumbers are not valid complex numbers, IMPRODUCT returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMPRODUCT(\"2-j\",\"4-2j\") equals 6-8j.\n"
"\n"
"@SEEALSO=IMDIV"
msgstr ""
"@FUNCTION=IMPRODUCT\n"
"@SYNTAX=IMPRODUCT(karmaşık_sayı1[,karmaşık_sayı2,...])\n"
"@DESCRIPTION=IMPRODUCT işlevi verilen @karmaşık_sayı'ların çarpımını "
"hesaplar.\n"
"\n"
"* Verilen sayılar geçerli birer karmaşık sayı değilse #DEĞER! hatası "
"verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMPRODUCT(\"2-j\";\"4-2j\") eşittir 6-8j\n"
"\n"
"Benzeri: IMDIV\n"
"@EXAMPLES=\n"
"IMPRODUCT(\"2-j\";\"4-2j\") eşittir 6-8j\n"
"\n"
"@SEEALSO=IMDIV"

#: ../plugins/fn-complex/functions.c:1567
msgid ""
"@FUNCTION=IMSUM\n"
"@SYNTAX=IMSUM(inumber1,inumber2)\n"
"@DESCRIPTION=IMSUM returns the sum of two complex numbers.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMSUM returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSUM(\"2-4j\",\"9-j\") equals 11-5j.\n"
"\n"
"@SEEALSO=IMSUB"
msgstr ""
"@FUNCTION=IMSUM\n"
"@SYNTAX=IMSUM(karmaşık_sayı1,karmaşık_sayı2)\n"
"@DESCRIPTION=IMSUM işlevi verilen iki karmaşık sayının toplamını hesaplar.\n"
"\n"
"* Verilen sayılar geçerli birer karmaşık sayı değilse #DEĞER! hatası "
"verilir.\n"
"* Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"IMSUM(\"2-4j\",\"9-j\") eşittir 11-5j\n"
"\n"
"Benzeri: IMSUB\n"
"@EXAMPLES=\n"
"IMSUM(\"2-4j\",\"9-j\") eşittir 11-5j\n"
"\n"
"@SEEALSO=IMSUB"

#: ../plugins/fn-database/functions.c:269
msgid ""
"@FUNCTION=DAVERAGE\n"
"@SYNTAX=DAVERAGE(database,field,criteria)\n"
"@DESCRIPTION=DAVERAGE function returns the average of the values in a list "
"or database that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DAVERAGE(A1:C7, \"Salary\", A9:A11) equals 42296.3333.\n"
"DAVERAGE(A1:C7, \"Age\", A9:A11) equals 39.\n"
"DAVERAGE(A1:C7, \"Salary\", A9:B11) equals 40782.5.\n"
"DAVERAGE(A1:C7, \"Age\", A9:B11) equals 36.\n"
"\n"
"@SEEALSO=DCOUNT"
msgstr ""
"@FUNCTION=DAVERAGE\n"
"@SYNTAX=DAVERAGE(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DAVERAGE işlevi, belirtilen @veritabanı'ndaki ya da bir "
"listedeki @koşulla eşleşen değerlerin ortalamasını hesaplar.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DAVERAGE(A1:C7, \"Ücret\", A9:A11) eşittir 42296.3333.\n"
"DAVERAGE(A1:C7, \"Yaş\", A9:A11) eşittir 39.\n"
"DAVERAGE(A1:C7, \"Ücret\", A9:B11) eşittir 40782.5.\n"
"DAVERAGE(A1:C7, \"Yaş\", A9:B11) eşittir 36.\n"
"\n"
"Benzeri: DCOUNT\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DAVERAGE(A1:C7, \"Ücret\", A9:A11) eşittir 42296.3333.\n"
"DAVERAGE(A1:C7, \"Yaş\", A9:A11) eşittir 39.\n"
"DAVERAGE(A1:C7, \"Ücret\", A9:B11) eşittir 40782.5.\n"
"DAVERAGE(A1:C7, \"Yaş\", A9:B11) eşittir 36.\n"
"\n"
"@SEEALSO=DCOUNT"

#: ../plugins/fn-database/functions.c:346
msgid ""
"@FUNCTION=DCOUNT\n"
"@SYNTAX=DCOUNT(database,field,criteria)\n"
"@DESCRIPTION=DCOUNT function counts the cells that contain numbers in a "
"database that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DCOUNT(A1:C7, \"Salary\", A9:A11) equals 3.\n"
"DCOUNT(A1:C7, \"Salary\", A9:B11) equals 2.\n"
"DCOUNT(A1:C7, \"Name\", A9:B11) equals 0.\n"
"\n"
"@SEEALSO=DAVERAGE"
msgstr ""
"@FUNCTION=DCOUNT\n"
"@SYNTAX=DCOUNT(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DCOUNT işlevi, belirtilen @veritabanı'ndaki @koşul ile eşleşen "
"\"sayıları\" içeren gözeleri sayar.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DCOUNT(A1:C7, \"Ücret\", A9:A11) eşittir 3.\n"
"DCOUNT(A1:C7, \"Ücret\", A9:B11) eşittir 2.\n"
"DCOUNT(A1:C7, \"İsim\", A9:B11) eşittir 0.\n"
"\n"
"Benzerleri: DAVERAGE, DCOUNTA\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DCOUNT(A1:C7, \"Ücret\", A9:A11) eşittir 3.\n"
"DCOUNT(A1:C7, \"Ücret\", A9:B11) eşittir 2.\n"
"DCOUNT(A1:C7, \"İsim\", A9:B11) eşittir 0.\n"
"\n"
"@SEEALSO=DAVERAGE, DCOUNTA"

#: ../plugins/fn-database/functions.c:422
msgid ""
"@FUNCTION=DCOUNTA\n"
"@SYNTAX=DCOUNTA(database,field,criteria)\n"
"@DESCRIPTION=DCOUNTA function counts the cells that contain data in a "
"database that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DCOUNTA(A1:C7, \"Salary\", A9:A11) equals 3.\n"
"DCOUNTA(A1:C7, \"Salary\", A9:B11) equals 2.\n"
"DCOUNTA(A1:C7, \"Name\", A9:B11) equals 2.\n"
"\n"
"@SEEALSO=DCOUNT"
msgstr ""
"@FUNCTION=DCOUNTA\n"
"@SYNTAX=DCOUNTA(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DCOUNTA işlevi, belirtilen @veritabanı'ndaki @koşul ile eşleşen "
"\"verileri\" içeren gözeleri sayar.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DCOUNTA(A1:C7, \"Ücret\", A9:A11) eşittir 3.\n"
"DCOUNTA(A1:C7, \"Ücret\", A9:B11) eşittir 2.\n"
"DCOUNTA(A1:C7, \"İsim\", A9:B11) eşittir 2.\n"
"\n"
"Benzerleri: DCOUNT, DAVERAGE\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DCOUNTA(A1:C7, \"Ücret\", A9:A11) eşittir 3.\n"
"DCOUNTA(A1:C7, \"Ücret\", A9:B11) eşittir 2.\n"
"DCOUNTA(A1:C7, \"İsim\", A9:B11) eşittir 2.\n"
"\n"
"@SEEALSO=DCOUNT, DAVERAGE"

#: ../plugins/fn-database/functions.c:496
msgid ""
"@FUNCTION=DGET\n"
"@SYNTAX=DGET(database,field,criteria)\n"
"@DESCRIPTION=DGET function returns a single value from a column that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"* If none of the items match the conditions, DGET returns #VALUE! error.\n"
"* If more than one items match the conditions, DGET returns #NUM! error.\n"
"\n"
"DGET(A1:C7, \"Salary\", A9:A10) equals 34323.\n"
"DGET(A1:C7, \"Name\", A9:A10) equals \"Clark\".\n"
"\n"
"@SEEALSO=DCOUNT"
msgstr ""
"@FUNCTION=DGET\n"
"@SYNTAX=DGET(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DGET işlevi, belirtilen @veritabanı'ndaki @koşul ile eşleşen "
"bir sütundaki tek bir değerle döner.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DGET(A1:C7, \"Ücret\", A9:A10) eşittir 34323.\n"
"DGET(A1:C7, \"İsim\", A9:A10) eşittir \"Clark\".\n"
"Benzerleri: DCOUNT, DCOUNTA, DAVERAGE\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DGET(A1:C7, \"Ücret\", A9:A10) eşittir 34323.\n"
"DGET(A1:C7, \"İsim\", A9:A10) eşittir \"Clark\".\n"
"\n"
"@SEEALSO=DCOUNT, DCOUNTA, DAVERAGE"

#: ../plugins/fn-database/functions.c:582
msgid ""
"@FUNCTION=DMAX\n"
"@SYNTAX=DMAX(database,field,criteria)\n"
"@DESCRIPTION=DMAX function returns the largest number in a column that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DMAX(A1:C7, \"Salary\", A9:A11) equals 47242.\n"
"DMAX(A1:C7, \"Age\", A9:A11) equals 45.\n"
"DMAX(A1:C7, \"Age\", A9:B11) equals 43.\n"
"\n"
"@SEEALSO=DMIN"
msgstr ""
"@FUNCTION=DMAX\n"
"@SYNTAX=DMAX(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DMAX işlevi, belirtilen @veritabanı'ndaki @koşul ile eşleşen "
"bir sütundaki en büyük değerle döner.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DMAX(A1:C7, \"Ücret\", A9:A11) eşittir 47242.\n"
"DMAX(A1:C7, \"Yaş\", A9:A11) eşittir 45.\n"
"DMAX(A1:C7, \"Yaş\", A9:B11) eşittir 43.\n"
"Benzerleri: DMIN\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DMAX(A1:C7, \"Ücret\", A9:A11) eşittir 47242.\n"
"DMAX(A1:C7, \"Yaş\", A9:A11) eşittir 45.\n"
"DMAX(A1:C7, \"Yaş\", A9:B11) eşittir 43.\n"
"\n"
"@SEEALSO=DMIN"

#: ../plugins/fn-database/functions.c:660
msgid ""
"@FUNCTION=DMIN\n"
"@SYNTAX=DMIN(database,field,criteria)\n"
"@DESCRIPTION=DMIN function returns the smallest number in a column that "
"match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DMIN(A1:C7, \"Salary\", A9:B11) equals 34323.\n"
"DMIN(A1:C7, \"Age\", A9:B11) equals 29.\n"
"\n"
"@SEEALSO=DMAX"
msgstr ""
"@FUNCTION=DMIN\n"
"@SYNTAX=DMIN(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DMIN işlevi, belirtilen @veritabanı'ndaki @koşul ile eşleşen "
"bir sütundaki en küçük değerle döner.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DMIN(A1:C7, \"Ücret\", A9:B11) eşittir 34323.\n"
"DMIN(A1:C7, \"Yaş\", A9:B11) eşittir 29.\n"
"Benzerleri: DMAX\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DMIN(A1:C7, \"Ücret\", A9:B11) eşittir 34323.\n"
"DMIN(A1:C7, \"Yaş\", A9:B11) eşittir 29.\n"
"\n"
"@SEEALSO=DMAX"

#: ../plugins/fn-database/functions.c:735
msgid ""
"@FUNCTION=DPRODUCT\n"
"@SYNTAX=DPRODUCT(database,field,criteria)\n"
"@DESCRIPTION=DPRODUCT function returns the product of numbers in a column "
"that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DPRODUCT(A1:C7, \"Age\", A9:B11) equals 1247.\n"
"\n"
"@SEEALSO=DSUM"
msgstr ""
"@FUNCTION=DPRODUCT\n"
"@SYNTAX=DPRODUCT(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DPRODUCT işlevi, belirtilen @veritabanı'ndaki @koşul ile "
"eşleşen bir sütundaki değerlerin çarpımını hesaplar\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DPRODUCT(A1:C7, \"Yaş\", A9:B11) eşittir 1247.\n"
"Benzerleri: DSUM\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DPRODUCT(A1:C7, \"Yaş\", A9:B11) eşittir 1247.\n"
"\n"
"@SEEALSO=DSUM"

#: ../plugins/fn-database/functions.c:810
#, fuzzy
msgid ""
"@FUNCTION=DSTDEV\n"
"@SYNTAX=DSTDEV(database,field,criteria)\n"
"@DESCRIPTION=DSTDEV function returns the estimate of the standard deviation "
"of a population based on a sample. The population consists of numbers that "
"match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DSTDEV(A1:C7, \"Age\", A9:B11) equals 9.89949.\n"
"DSTDEV(A1:C7, \"Salary\", A9:B11) equals 9135.112506.\n"
"\n"
"@SEEALSO=DSTDEVP"
msgstr ""
"@FUNCTION=DSTDEV\n"
"@SYNTAX=DSTDEV(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DSTDEV işlevi bir örnek üzerine tabanlanmış bir dağılımın "
"standart sapmasını tahmin eder. Dağılım belirtilen koşulları sağlayan "
"sayılardan oluşur.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DSTDEV(A1:C7, \"Yaş\", A9:B11) eşittir 9.89949.\n"
"DSTDEV(A1:C7, \"Ücret\", A9:B11) eşittir 9135.112506.\n"
"Benzerleri: DSTDEVP\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DSTDEV(A1:C7, \"Yaş\", A9:B11) eşittir 9.89949.\n"
"DSTDEV(A1:C7, \"Ücret\", A9:B11) eşittir 9135.112506.\n"
"\n"
"@SEEALSO=DSTDEVP"

#: ../plugins/fn-database/functions.c:886
#, fuzzy
msgid ""
"@FUNCTION=DSTDEVP\n"
"@SYNTAX=DSTDEVP(database,field,criteria)\n"
"@DESCRIPTION=DSTDEVP function returns the standard deviation of a population "
"based on the entire population. The population consists of numbers that "
"match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DSTDEVP(A1:C7, \"Age\", A9:B11) equals 7.\n"
"DSTDEVP(A1:C7, \"Salary\", A9:B11) equals 6459.5.\n"
"\n"
"@SEEALSO=DSTDEV"
msgstr ""
"@FUNCTION=DSTDEVP\n"
"@SYNTAX=DSTDEVP(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DSTDEVP işlevi bir mevcut dağılım üzerine tabanlanmış bir "
"dağılımın standart sapmasını hesaplar. Dağılım belirtilen koşulları sağlayan "
"sayılardan oluşur.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DSTDEVP(A1:C7, \"Yaş\", A9:B11) eşittir 7.\n"
"DSTDEVP(A1:C7, \"Ücret\", A9:B11) eşittir 6459.5.\n"
"Benzerleri: DSTDEV\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DSTDEVP(A1:C7, \"Yaş\", A9:B11) eşittir 7.\n"
"DSTDEVP(A1:C7, \"Ücret\", A9:B11) eşittir 6459.5.\n"
"\n"
"@SEEALSO=DSTDEV"

#: ../plugins/fn-database/functions.c:962
msgid ""
"@FUNCTION=DSUM\n"
"@SYNTAX=DSUM(database,field,criteria)\n"
"@DESCRIPTION=DSUM function returns the sum of numbers in a column that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DSUM(A1:C7, \"Age\", A9:B11) equals 72.\n"
"DSUM(A1:C7, \"Salary\", A9:B11) equals 81565.\n"
"\n"
"@SEEALSO=DPRODUCT"
msgstr ""
"@FUNCTION=DSUM\n"
"@SYNTAX=DSUM(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DSUM işlevi belirtilen koşulları sağlayan bir sütundaki "
"sayıların toplamını hesaplar.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DSUM(A1:C7, \"Yaş\", A9:B11) eşittir 72.\n"
"DSUM(A1:C7, \"Ücret\", A9:B11) eşittir 81565.\n"
"Benzerleri: DPRODUCT\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DSUM(A1:C7, \"Yaş\", A9:B11) eşittir 72.\n"
"DSUM(A1:C7, \"Ücret\", A9:B11) eşittir 81565.\n"
"\n"
"@SEEALSO=DPRODUCT"

#: ../plugins/fn-database/functions.c:1038
#, fuzzy
msgid ""
"@FUNCTION=DVAR\n"
"@SYNTAX=DVAR(database,field,criteria)\n"
"@DESCRIPTION=DVAR function returns the estimate of variance of a population "
"based on a sample. The population consists of numbers that match conditions "
"specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DVAR(A1:C7, \"Age\", A9:B11) equals 98.\n"
"DVAR(A1:C7, \"Salary\", A9:B11) equals 83450280.5.\n"
"\n"
"@SEEALSO=DVARP"
msgstr ""
"@FUNCTION=DVAR\n"
"@SYNTAX=DVAR(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DVAR işlevi bir örnek üzerine tabanlanmış bir dağılımın "
"değişimini tahmin eder. Dağılım, belirtilen koşulları sağlayan sayılardan "
"oluşur.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DVAR(A1:C7, \"Yaş\", A9:B11) eşittir 98.\n"
"DVAR(A1:C7, \"Ücret\", A9:B11) eşittir 83450280.5\n"
"Benzerleri: DVARP\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DVAR(A1:C7, \"Yaş\", A9:B11) eşittir 98.\n"
"DVAR(A1:C7, \"Ücret\", A9:B11) eşittir 83450280.5\n"
"\n"
"@SEEALSO=DVARP"

#: ../plugins/fn-database/functions.c:1114
#, fuzzy
msgid ""
"@FUNCTION=DVARP\n"
"@SYNTAX=DVARP(database,field,criteria)\n"
"@DESCRIPTION=DVARP function returns the variance of a population based on "
"the entire population. The population consists of numbers that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DVARP(A1:C7, \"Age\", A9:B11) equals 49.\n"
"DVARP(A1:C7, \"Salary\", A9:B11) equals 41725140.25.\n"
"\n"
"@SEEALSO=DVAR"
msgstr ""
"@FUNCTION=DVARP\n"
"@SYNTAX=DVARP(veritabanı,alan,koşul)\n"
"@DESCRIPTION=DVARP işlevi bir mevcut dağılım üzerine tabanlanmış bir "
"dağılımın değişimini hesaplar. Dağılım, belirtilen koşulları sağlayan "
"sayılardan oluşur.\n"
"\n"
" * @veritabanı, ilgili bilgi satırlarının kayıtlar ve veri sütunlarının "
"alanlar olduğu bir aralıktaki değerler bütünüdür. Veritabanının ilk satırı "
"her sütunun başlığını içermelidir.\n"
"\n"
" * @alan işlevde kullanılan sütunu belirtir. @alan bir tamsayı ise, örneğin, "
"2 ise 2. sütun kullanılır. @alan, bir sütunun başlığı da olabilir. Örneğin, "
"``Yaş'', @veritabanı içindeki ``Yaş'' başlıklı sütunu belirtir.\n"
"\n"
" * @koşul belirli koşulları içeren gözeleri belirten bir aralıktır. "
"@koşul'un ilk satırı koşulları içeren alanların başlıklarını içermelidir. "
"Başlıkların altındaki satırlar, örneğin, ``>3'' veya ``<9'' gibi koşulları "
"içerir. Eşitlik koşulları basitçe eşit olduğu değeri belirterek, ``3'' veya "
"``Ali'' gibi verilebilir. @koşul'daki her satır ayrı bir koşul belirtir, "
"örneğin,  @veritabanı, @koşul'daki satırlardan biri ile eşleşirse (teknik "
"olarak @koşul içindeki satırlar arasında mantıksal VEYA işlemi yapıldığından "
"bahsedilebilir), bu satır ortalamaya dahil edilir. @koşul, birden fazla "
"sütun belirtiyorsa, bu sütunlardaki koşullar, @veritabanı'ndaki eşleşen "
"satırlar için doğru olacaktır (teknik olarak, @koşul içindeki her satırın "
"sütunları arasında mantıksal VE uygulandığından bahsedilebilir).\n"
"\n"
"Örnek:\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DVARP(A1:C7, \"Yaş\", A9:B11) eşittir 49.\n"
"DVARP(A1:C7, \"Ücret\", A9:B11) eşittir 41725140.25\n"
"Benzerleri: DVARP\n"
"\n"
"@EXAMPLES=\n"
"A1:C7 aralığının aşağıdaki değerleri içerdiğini varsayalım:\n"
"İsim    Yaş     Ücret\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"Ek olarak, A9:B11 aralığı aşağıdaki değerleri içersin:\n"
"Yaş     Ücret\n"
"<30\n"
">40     >46000\n"
"\n"
"Bu durumda:\n"
"DVARP(A1:C7, \"Yaş\", A9:B11) eşittir 49.\n"
"DVARP(A1:C7, \"Ücret\", A9:B11) eşittir 41725140.25\n"
"\n"
"@SEEALSO=DVAR"

#: ../plugins/fn-database/functions.c:1190
msgid ""
"@FUNCTION=GETPIVOTDATA\n"
"@SYNTAX=GETPIVOTDATA(pivot_table,field_name)\n"
"@DESCRIPTION=GETPIVOTDATA function fetches summary data from a pivot table. "
"@pivot_table is a cell range containing the pivot table. @field_name is the "
"name of the field of which you want the summary data.\n"
"\n"
"* If the summary data is unavailable, GETPIVOTDATA returns #REF! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=GETPIVOTDATA\n"
"@SYNTAX=GETPIVOTDATA(aralık,alan_ismi)\n"
"@DESCRIPTION=GETPIVOTDATA bir mihver tablodan özet veri çıkarır. @aralık, "
"mihver tabloyu içeren aralık, @alan_ismi özet verinin alan ismidir. \n"
"Özet veri yoksa işlev #REF! hatası ile sonuçlanır.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-date/functions.c:99
msgid ""
"@FUNCTION=DATE\n"
"@SYNTAX=DATE (year,month,day)\n"
"@DESCRIPTION=DATE returns the number of days since the 1st of January of 1900"
"(the date serial number) for the given year, month and day.\n"
"\n"
"* If @month < 1 or @month > 12, the year will be corrected.  A similar "
"correction takes place for days.\n"
"* The @years should be at least 1900.  If @years < 1900, it is assumed to be "
"1900 + @years.\n"
"* If the given date is not valid, DATE returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DATE(2001, 3, 30) returns 'Mar 30, 2001'.\n"
" \n"
"@SEEALSO=TODAY, NOW"
msgstr ""
"@FUNCTION=DATE\n"
"@SYNTAX=DATE(yıl,ay,gün)\n"
"@DESCRIPTION=1 Ocak 1900 den itibaren verilen tarihe kadar gün sayısı "
"hesaplanır. \n"
"\n"
" * @ay <1 ya da @ay> 12 ise yıl düzeltilir, benzer düzeltme @gün içinde "
"yapılır.\n"
" * @yıl 1900 den küçük olursa, 1900+@yıl kabul edilir. * Verilen tarih "
"geçersizse #DEĞER! hatası döner.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"DATE(2001, 3, 30) eşittir '30/Mar/2001' dir\n"
"\n"
"Benzerleri: TODAY, NOW\n"
"@EXAMPLES=\n"
"DATE(2001, 3, 30) eşittir '30/Mar/2001'\n"
"\n"
"@SEEALSO=TODAY, NOW"

#: ../plugins/fn-date/functions.c:179
msgid ""
"@FUNCTION=UNIX2DATE\n"
"@SYNTAX=UNIX2DATE(unixtime)\n"
"@DESCRIPTION=UNIX2DATE converts a unix time into a spreadsheet date and "
"time.\n"
"\n"
"A unix time is the number of seconds since midnight January 1, 1970.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NOW, DATE, DATE2UNIX"
msgstr ""
"@FUNCTION=UNIX2DATE\n"
"@SYNTAX=UNIX2DATE(unix_zamanı)\n"
"@DESCRIPTION=UNIX2DATE verilen unix zamanını günlük zamana dönüştürür.\n"
"\n"
" * Unix zamanı 1 Ocak 1970 geceyarısından beri geçen saniye sayısıdır.\n"
" * Günlük zaman ise 1 Ocak 1900 geceyarısından beri geçen gün sayısıdır.\n"
"\n"
"Benzerleri: NOW, DATE, DATE2UNIX\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NOW, DATE, DATE2UNIX"

#: ../plugins/fn-date/functions.c:213
msgid ""
"@FUNCTION=DATE2UNIX\n"
"@SYNTAX=DATE2UNIX(serial)\n"
"@DESCRIPTION=DATE2UNIX converts a spreadsheet date and time serial number "
"into a unix time.\n"
"\n"
"A unix time is the number of seconds since midnight January 1, 1970.\n"
"\n"
"@EXAMPLES=\n"
"DATE2UNIX(\"01/01/2000\") equals 946656000.\n"
"\n"
"@SEEALSO=NOW, DATE, UNIX2DATE"
msgstr ""
"@FUNCTION=DATE2UNIX\n"
"@SYNTAX=DATE2UNIX(günlük_zaman)\n"
"@DESCRIPTION=DATE2UNIX günlük zamanı unix zamanına dönüştürür.\n"
"\n"
" * Unix zamanı 1 Ocak 1970 geceyarısından beri geçen saniye sayısıdır.\n"
" * Günlük zaman ise 1 Ocak 1900 geceyarısından beri geçen gün sayısıdır.\n"
"\n"
"Benzerleri: NOW, DATE, UNIX2DATE\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NOW, DATE, UNIX2DATE"

#: ../plugins/fn-date/functions.c:250
msgid ""
"@FUNCTION=DATEVALUE\n"
"@SYNTAX=DATEVALUE(date_str)\n"
"@DESCRIPTION=DATEVALUE returns the serial number of the date.  @date_str is "
"the string that contains the date. The value depends on the date "
"convention.  The MS Excel 1900 convention dates things from Jan 1 1900 while "
"the 1904 convention uses Jan 1 1904.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DATEVALUE(\"1/1/1999\") equals 36161 (in the 1900 convention).\n"
"@SEEALSO=DATE"
msgstr ""
"@FUNCTION=DATEVALUE\n"
"@SYNTAX=DATEVALUE(tarih_dizgesi)\n"
"@DESCRIPTION=DATEVALUE 1 Ocak 1900 tarihi ile verilen tarih arasında kaç gün "
"geçtiğini hesaplar. @tarih_dizgesi metin biçiminde verilmelidir. \n"
"\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"DATEVALUE(\"1/1/1999\") eşittir 36161\n"
"\n"
"Benzeri: DATE\n"
"@EXAMPLES=\n"
"DATEVALUE(\"1/1/1999\") eşittir 36161\n"
"@SEEALSO=DATE"

#: ../plugins/fn-date/functions.c:278
msgid ""
"@FUNCTION=DATEDIF\n"
"@SYNTAX=DATEDIF(date1,date2,interval)\n"
"@DESCRIPTION=DATEDIF returns the difference between two dates.  @interval is "
"one of six possible values:  \"y\", \"m\", \"d\", \"ym\", \"md\", and \"yd"
"\".\n"
"\n"
"The first three options will return the number of complete years, months, or "
"days, respectively, between the two dates specified.\n"
"\n"
"  \"ym\" will return the number of full months between the two dates, not "
"including the difference in years.\n"
"  \"md\" will return the number of full days between the two dates, not "
"including the difference in months.\n"
"  \"yd\" will return the number of full days between the two dates, not "
"including the difference in years.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"d\") equals 1191.\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"y\") equals 3.\n"
"\n"
"@SEEALSO=DATE"
msgstr ""
"@FUNCTION=DATEDIF\n"
"@SYNTAX=DATEDIF(tarih1,tarih2,birim)\n"
"@DESCRIPTION=DATEDIF iki tarih arasındaki farkı hesaplar.\n"
" * @birim için olası değerler:\n"
"   \"y\", \"m\", \"d\", \"ym\", \"md\", ve \"yd\".\n"
"İlk üçü sırasıyla yıl, ay, gün karşılığıdır ve fark bu birimler cinsinden "
"hesaplanır.\n"
" * \"ym\" verildiğinde yıllar arasındaki fark yok sayılarak sadece aylar "
"arasındaki fark hesaplanır.\n"
" * \"md\" verildiğinde aylar arasındaki fark yok sayılarak sadece günler "
"arasındaki fark hesaplanır.\n"
" * \"yd\" verildiğinde yıllar arasındaki fark yok sayılarak sadece günler "
"arasındaki fark hesaplanır.\n"
"\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"d\") eişttir 1191.\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"y\") eşittir 3.\n"
"\n"
"Benzeri: DATE\n"
"@EXAMPLES=\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"d\") eişttir 1191.\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"y\") eşittir 3.\n"
"\n"
"@SEEALSO=DATE"

#: ../plugins/fn-date/functions.c:430
msgid ""
"@FUNCTION=EDATE\n"
"@SYNTAX=EDATE(date,months)\n"
"@DESCRIPTION=EDATE returns the serial number of the date that is the "
"specified number of months before or after a given date.  @date is the "
"serial number of the initial date and @months is the number of months before "
"(negative number) or after (positive number) the initial date.\n"
"\n"
"* If @months is not an integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EDATE(DATE(2001,12,30),2) returns 'Feb 28, 2002'.\n"
"\n"
"@SEEALSO=DATE"
msgstr ""
"@FUNCTION=EDATE\n"
"@SYNTAX=EDATE(tarih,ay)\n"
"@DESCRIPTION=EDATE @tarih gün sayısı olarak, @ay ay sayısı olarak "
"verildiğinde tarihi cebirsel toplam olarak verir.\n"
"\n"
" * @aylar tamsayı değilse ondalık haneler atılarak tamsayı yapılır.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"EDATE(DATE(2001,12,30),2) eşittir 28/Şub/2002.\n"
"\n"
"Benzeri: DATE\n"
"@EXAMPLES=\n"
"EDATE(DATE(2001,12,30),2) eşittir 28/Şub/2002.\n"
"\n"
"@SEEALSO=DATE"

#: ../plugins/fn-date/functions.c:485
msgid ""
"@FUNCTION=TODAY\n"
"@SYNTAX=TODAY()\n"
"@DESCRIPTION=TODAY returns the serial number for today (the number of days "
"elapsed since the 1st of January of 1900).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TODAY() returns 'Nov 6, 2001' on that particular day.\n"
" \n"
"@SEEALSO=NOW"
msgstr ""
"@FUNCTION=TODAY\n"
"@SYNTAX=TODAY ()\n"
"@DESCRIPTION=Bugünün tarihini verir. (1 Ocak 1900 tarihinden itibaren bugüne "
"kadar kaç gün geçtiği hesaplanır).\n"
"\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TODAY() işlevinin sonucu 25/Kas/2001 ya da 37220 dir.\n"
"\n"
"Benzeri: NOW\n"
"@EXAMPLES=\n"
"\n"
"TODAY() işlevinin sonucu 25/Kas/2001 ya da 37220 dir.\n"
"\n"
"@SEEALSO=NOW"

#: ../plugins/fn-date/functions.c:511
#, fuzzy
msgid ""
"@FUNCTION=NOW\n"
"@SYNTAX=NOW ()\n"
"@DESCRIPTION=NOW returns the serial number for the date and time at the time "
"it is evaluated.\n"
"\n"
"Serial Numbers in Gnumeric are represented as follows: The integral part is "
"the number of days since the 1st of January of 1900.  The decimal part "
"represent the fraction of the day and is mapped into hour, minutes and "
"seconds.\n"
"\n"
"For example: .0 represents the beginning of the day, and 0.5 represents "
"noon.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NOW().\n"
"\n"
"@SEEALSO=TODAY"
msgstr ""
"@FUNCTION=NOW\n"
"@SYNTAX=NOW ()\n"
"@DESCRIPTION=Bu anın değerini gerçel sayı olarak verir.\n"
" * Bu sayı şöyle oluşur: Tamsayı kısmı 1 Ocak 1900 den itibaren gün sayısı, "
"ondalık kısım ise saniye cinsinden hesaplanan anın tam güne oranıdır.\n"
"\n"
"Örneğin .0 geceyarısı, 0.5 öğledir.\n"
"\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"NOW()\n"
"\n"
"Benzerleri: TODAY\n"
"@EXAMPLES=\n"
"NOW().\n"
"\n"
"@SEEALSO=TODAY"

#: ../plugins/fn-date/functions.c:545
msgid ""
"@FUNCTION=TIME\n"
"@SYNTAX=TIME (hours,minutes,seconds)\n"
"@DESCRIPTION=TIME returns a fraction representing the time of day.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TIME(3, 5, 23) equals 3:05AM.\n"
"\n"
"@SEEALSO=HOUR"
msgstr ""
"@FUNCTION=TIME\n"
"@SYNTAX=TIME (saat,dakika,saniye)\n"
"@DESCRIPTION= Saat, dakika ve saniye cinsinden verilen zamanı hesaplar.\n"
"\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TIME(13, 5, 23) eşittir 13:05:23\n"
"\n"
"Benzeri: HOUR\n"
"@EXAMPLES=\n"
"TIME(13, 5, 23) eşittir 13:05:23\n"
"\n"
"@SEEALSO=HOUR"

#: ../plugins/fn-date/functions.c:577
msgid ""
"@FUNCTION=TIMEVALUE\n"
"@SYNTAX=TIMEVALUE (timetext)\n"
"@DESCRIPTION=TIMEVALUE returns a fraction representing the time of day, a "
"number between 0 and 1.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TIMEVALUE(\"3:05\") equals 0.128472.\n"
"TIMEVALUE(\"2:24:53 PM\") equals 0.600613.\n"
"\n"
"@SEEALSO=HOUR,MINUTE"
msgstr ""
"@FUNCTION=TIMEVALUE\n"
"@SYNTAX=TIMEVALUE (zaman_dizgesi)\n"
"@DESCRIPTION=İşlev belirtilen zaman dizgesini 86400 saniyelik güne "
"oranlayarak 0 ile 1 arasında değişen bir sayı ile döner.\n"
"\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"TIMEVALUE(\"3:05\") eşittir 0.128472.\n"
"TIMEVALUE(\"2:24:53 PM\") eşittir 0.600613.\n"
"\n"
"Benzerleri: HOUR, MINUTE\n"
"@EXAMPLES=\n"
"TIMEVALUE(\"3:05\") eşittir 0.128472.\n"
"TIMEVALUE(\"2:24:53 PM\") eşittir 0.600613.\n"
"\n"
"@SEEALSO=HOUR,MINUTE"

#: ../plugins/fn-date/functions.c:605
msgid ""
"@FUNCTION=HOUR\n"
"@SYNTAX=HOUR (date)\n"
"@DESCRIPTION=HOUR converts a serial number to an hour.  The hour is returned "
"as an integer in the range 0 (12:00 A.M.) to 23 (11:00 P.M.).\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HOUR(0.128472) equals 3.\n"
"\n"
"@SEEALSO=MINUTE, NOW, TIME, SECOND"
msgstr ""
"@FUNCTION=HOUR\n"
"@SYNTAX=HOUR (günlük_zaman)\n"
"@DESCRIPTION=1 Ocak 1900 tarihine göre gün cinsinden verilen zamanın ondalık "
"kısmını 24 saat üzerinden hesaplar.\n"
"\n"
" * @günlük_zaman tarih dizgesi olarak da verilebilir. Gnumeric bu dönüşümü "
"yapar.\n"
" * Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"HOUR(0.128472) eşittir 3\n"
"\n"
"Benzer işlevler: MINUTE, NOW, TIME, SECOND\n"
"@EXAMPLES=\n"
"SAAT(0.128472) eşittir 3.\n"
"\n"
"@SEEALSO=MINUTE, NOW, TIME, SECOND"

#: ../plugins/fn-date/functions.c:642
msgid ""
"@FUNCTION=MINUTE\n"
"@SYNTAX=MINUTE (date)\n"
"@DESCRIPTION=MINUTE converts a serial number to a minute.  The minute is "
"returned as an integer in the range 0 to 59.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MINUTE(0.128472) equals 5.\n"
"\n"
"@SEEALSO=HOUR, NOW, TIME, SECOND"
msgstr ""
"@FUNCTION=MINUTE\n"
"@SYNTAX=MINUTE (günlük_zaman)\n"
"@DESCRIPTION=1 Ocak 1900 tarihine göre gün cinsinden verilen zamanın ondalık "
"kısmını 0..59 arasında dakika cinsinden verir.\n"
" * Bu işlevde zamanı dizge olarak da verebilirsiniz.\n"
" * Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"MINUTE(0.128472) eşittir 5\n"
"\n"
"Benzerleri: HOUR, NOW, TIME, SECOND\n"
"@EXAMPLES=\n"
"MINUTE(0.128472) eşittir 5.\n"
"\n"
"@SEEALSO=HOUR, NOW, TIME, SECOND"

#: ../plugins/fn-date/functions.c:679
msgid ""
"@FUNCTION=SECOND\n"
"@SYNTAX=SECOND (date)\n"
"@DESCRIPTION=SECOND converts a serial number to a second.  The second is "
"returned as an integer in the range 0 to 59.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SECOND(0.600613) equals 53.\n"
"\n"
"@SEEALSO=HOUR, MINUTE, NOW, TIME"
msgstr ""
"@FUNCTION=SECOND\n"
"@SYNTAX=SECOND (günlük_zaman)\n"
"@DESCRIPTION=1 Ocak 1900 tarihine göre verilen zamanın ondalık kısmını 0..59 "
"arasında saniye cinsinden verir.\n"
"\n"
" * Bu işlevde zamanı dizge olarak da verebilirsiniz.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"SECOND(0.600613) eşittir 53\n"
"\n"
"Benzer işlevler: HOUR, MINUTE, NOW, TIME\n"
"@EXAMPLES=\n"
"SECOND(0.600613) eşittir 53.\n"
"\n"
"@SEEALSO=HOUR, MINUTE, NOW, TIME"

#: ../plugins/fn-date/functions.c:716
msgid ""
"@FUNCTION=YEAR\n"
"@SYNTAX=YEAR (date)\n"
"@DESCRIPTION=YEAR converts a serial number to a year.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"YEAR(DATE(2003, 4, 30)) equals 2003.\n"
"\n"
"@SEEALSO=DAY, MONTH, TIME, NOW"
msgstr ""
"@FUNCTION=YEAR\n"
"@SYNTAX=YEAR (günlük_zaman)\n"
"@DESCRIPTION=1 Ocak 1900 tarihine göre verilen zamanın yıl sayısını "
"hesaplar.\n"
"\n"
" * Bu işlevde zamanı dizge olarak verebilirsiniz.\n"
" * Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"YEAR(DATE(2003, 4, 30)) eşittir 2003.\n"
"\n"
"Benzer işlevler: DAY, MONTH, TIME, NOW\n"
"@EXAMPLES=\n"
"YEAR(DATE(2003, 4, 30)) eşittir 2003.\n"
"\n"
"@SEEALSO=DAY, MONTH, TIME, NOW"

#: ../plugins/fn-date/functions.c:750
msgid ""
"@FUNCTION=MONTH\n"
"@SYNTAX=MONTH (date)\n"
"@DESCRIPTION=MONTH converts a serial number to a month.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MONTH(DATE(2003, 4, 30)) equals 4.\n"
"\n"
"@SEEALSO=DAY, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=MONTH\n"
"@SYNTAX=MONTH (günlük_zaman)\n"
"@DESCRIPTION=1 Ocak 1900 tarihine göre verilen zamanın ay sayısını "
"hesaplar.\n"
"\n"
" * Bu işlevde zamanı dizge olarak verebilirsiniz.\n"
" * Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"MONTH(DATE(2003, 4, 30)) eşittir 4.\n"
"\n"
"Benzer işlevler: DAY, TIME, NOW, YEAR\n"
"@EXAMPLES=\n"
"MONTH(DATE(2003, 4, 30)) eşittir 4.\n"
"\n"
"@SEEALSO=DAY, TIME, NOW, YEAR"

#: ../plugins/fn-date/functions.c:784
msgid ""
"@FUNCTION=DAY\n"
"@SYNTAX=DAY (date)\n"
"@DESCRIPTION=DAY converts a serial number to a day of month.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DAY(\"10/24/1968\") equals 24.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=DAY\n"
"@SYNTAX=DAY (günlük_zaman)\n"
"@DESCRIPTION=1 Ocak 1900 tarihine göre verilen zaman içindeki son ayın gün "
"sayısını hesaplar.\n"
"\n"
" * Bu işlevde zaman dizge olarak da verilebilir.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"day (\"10/24/1968\") eşittir 24\n"
"\n"
"Benzer işlevler: MONTH, TIME, NOW, YEAR\n"
"@EXAMPLES=\n"
"day (\"10/24/1968\") eşittir 24.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"

#: ../plugins/fn-date/functions.c:818
msgid ""
"@FUNCTION=WEEKDAY\n"
"@SYNTAX=WEEKDAY (date[, method])\n"
"@DESCRIPTION=WEEKDAY converts a serial number to a weekday.\n"
"\n"
"This function returns an integer indicating the day of week.\n"
"@METHOD indicates the numbering system.  It defaults to 1.\n"
"\n"
"  For @METHOD=1: Sunday is 1, Monday is 2, etc.\n"
"  For @METHOD=2: Monday is 1, Tuesday is 2, etc.\n"
"  For @METHOD=3: Monday is 0, Tuesday is 1, etc.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"WEEKDAY(\"10/24/1968\") equals 5 (Thursday).\n"
"\n"
"@SEEALSO=DAY, MONTH, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=WEEKDAY\n"
"@SYNTAX=WEEKDAY (günlük_zaman[,yöntem])\n"
"@DESCRIPTION=Verilen zaman içindeki son haftanın gün sayısını hesaplar.\n"
"\n"
"Günün hafta içindeki kaçıncı gün olduğunu belirten bir sayı verir.\n"
" * @yöntem ile sıralamanın nasıl yapılacağı belirtilebilir. Verilmezse 1 "
"kabul edilir.\n"
" @yöntem=1: Pazar-> 1, Pazartesi-> 2, ...\n"
" @yöntem=2: Pazartesi-> 1, Salı-> 2, ...\n"
" @yöntem=3: Pazartesi-> 0, Salı-> 1, ...\n"
"\n"
" * Ek bilgi: Günlük zaman yerine doğrudan bir tarih dizgesi girilirse "
"Gnumeric gerekli dönüşümü yaparak size doğru sonucu verecektir.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"WEEKDAY(\"10/24/1968\") eşittir 5 (Perşembe)\n"
"\n"
"Benzer işlevler: DAY, MONTH, TIME, NOW, YEAR\n"
"@EXAMPLES=\n"
"WEEKDAY(\"10/24/1968\") eşittir 5 (Perşembe).\n"
"\n"
"@SEEALSO=DAY, MONTH, TIME, NOW, YEAR"

#: ../plugins/fn-date/functions.c:872
msgid ""
"@FUNCTION=DAYS360 \n"
"@SYNTAX=DAYS360 (date1,date2,method)\n"
"@DESCRIPTION=DAYS360 returns the number of days from @date1 to @date2 "
"following a 360-day calendar in which all months are assumed to have 30 "
"days.\n"
"\n"
"* If @method is 1, the European method will be used.  In this case, if the "
"day of the month is 31 it will be considered as 30.\n"
"* If @method is 0 or omitted, the MS Excel (tm) US method will be used.  "
"This is a somewhat complicated industry standard method where the last day "
"of February is considered to be the 30th day of the month, but only for the "
"first date.\n"
"* If @method is 2, a saner version of the US method is used in which both "
"dates get the same February treatment.\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is mostly Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DAYS360(DATE(2003, 2, 3), DATE(2007, 4, 2)) equals 1499.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=DAYS360 \n"
"@SYNTAX=DAYS360 (tarih1,tarih2,yöntem)\n"
"@DESCRIPTION=İki tarih arasındaki gün sayısı bir ay 30 gün ve bir yıl 360 "
"gün sayılarak hesaplanır.\n"
" * @yöntem 1 olarak verilirse Avrupa Yöntemi kullanılır. Bu durumda 31 çeken "
"aylar 30 gün kabul edilir.\n"
" * @yöntem 0 olarak verilirse ya da hiç verilmezse Amerikan Yöntemi "
"kullanılır. Bu yöntem bir endüstri standardı yöntem olarak biraz daha "
"karmaşıktır. Şubat ayının son günü sadece @tarih1 olarak verildiğinde ayın "
"30'u kabul edilir.\n"
" * @yöntem 2 olarak verilirse, Amerikan Yönteminin daha makul bir şekli "
"kullanılır. @tarih1 ve @tarih2 için aynı yöntem uygulanır.\n"
" * Bu işlevde tarihler hem tarih dizgesi hem de göreli günlük zaman olarak "
"verilebilir.\n"
" * Bu işlev hemen hemen Excel uyumludur.\n"
"Örnek:\n"
"DAYS360(DATE(2003, 2, 3), DATE(2007, 4, 2)) eşittir 1499\n"
"\n"
"Benzer işlevler: MONTH, TIME, NOW, YEAR\n"
"@EXAMPLES=\n"
"DAYS360(DATE(2003, 2, 3), DATE(2007, 4, 2)) eşittir 1499.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"

#: ../plugins/fn-date/functions.c:929
msgid ""
"@FUNCTION=EOMONTH\n"
"@SYNTAX=EOMONTH (start_date,months)\n"
"@DESCRIPTION=EOMONTH returns the last day of the month which is @months from "
"the @start_date.\n"
"\n"
"* EOMONTH returns #NUM! if @start_date or @months are invalid.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"If A1 contains 12/21/00 then EOMONTH(A1,0)=12/31/00, EOMONTH(A1,5)=5/31/01, "
"and EOMONTH(A1,2)=2/28/01\n"
"\n"
"@SEEALSO=MONTH"
msgstr ""
"@FUNCTION=EOMONTH\n"
"@SYNTAX=EOMONTH (başlangıç_tarihi,aylar)\n"
"@DESCRIPTION=@başlangıç_tarihi'nden @aylar sonraki ayın son gününün tarihini "
"hesaplar.\n"
"\n"
" * Belirtilen değerler geçersizse #NUM! hatası verir.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1 gözesi 21/12/00 ise\n"
"EOMONTH(A1,0)=>31/12/00\n"
"EOMONTH(A1,5)=>31/05/01\n"
"EOMONTH(A1,2)=>28/02/01\n"
"\n"
"Benzer işlev: MONTH\n"
"@EXAMPLES=\n"
"A1 gözesi 21/12/00 ise EOMONTH(A1;0)=>31/12/00, EOMONTH(A1;5)=>31/05/01, ve "
"EOMONTH(A1;2)=>28/02/01\n"
"\n"
"@SEEALSO=MONTH"

#: ../plugins/fn-date/functions.c:983
msgid ""
"@FUNCTION=WORKDAY\n"
"@SYNTAX=WORKDAY (start_date,days[,holidays])\n"
"@DESCRIPTION=WORKDAY returns the date which is @days working days from the "
"@start_date.  Weekends and holidays optionally supplied in @holidays are "
"respected.\n"
"\n"
"* WORKDAY returns #NUM! if @start_date or @days are invalid.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DAY(WORKDAY(DATE(2001,1,5),30)) equals 16 and\n"
"MONTH(WORKDAY(DATE(2001,1,5),30)) equals 2.\n"
"\n"
"@SEEALSO=NETWORKDAYS"
msgstr ""
"@FUNCTION=WORKDAY\n"
"@SYNTAX=WORKDAY (başlangıç_tarihi,günler[,tatiller])\n"
"@DESCRIPTION=@başlangıç_tarihi'inden @günler sonraki iş gününün tarihini "
"hesaplar. Özel ve resmi tatil günleri isteğe bağlı olarak @tatiller ile "
"verilebilir.\n"
"\n"
" * Belirtilen değerler geçersizse #NUM! hatası verir.\n"
" * Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"DAY(WORKDAY(DATE(2001,1,5),30)) eşittir 16 ve\n"
"MONTH(WORKDAY(DATE(2001,1,5),30)) eşittir 2.\n"
"\n"
"Benzer işlev: NETWORKDAYS\n"
"@EXAMPLES=\n"
"WORKDAY(DATE(2001,1,5),DATE(2001,2,15)) eşittir 88609.\n"
"\n"
"@SEEALSO=NETWORKDAYS"

#: ../plugins/fn-date/functions.c:1156
msgid ""
"@FUNCTION=NETWORKDAYS\n"
"@SYNTAX=NETWORKDAYS (start_date,end_date[,holidays])\n"
"@DESCRIPTION=NETWORKDAYS returns the number of non-weekend non-holidays "
"between @start_date and @end_date including these dates. Holidays are "
"optionally supplied in @holidays.\n"
"\n"
"* NETWORKDAYS returns #NUM! if @start_date or @end_date are invalid.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NETWORKDAYS(DATE(2001,1,2),DATE(2001,2,15)) equals 33.\n"
"\n"
"@SEEALSO=WORKDAY"
msgstr ""
"@FUNCTION=NETWORKDAYS\n"
"@SYNTAX=NETWORKDAYS (başlangıç_tarihi,bitiş_tarihi[,tatiller])\n"
"@DESCRIPTION=@başlangıç_tarihi ile @bitiş_tarihi arasındaki hafta sonu ve "
"tatil olmayan günlerin sayısını hesaplar. Resmi ve özel tatiller isteğe "
"bağlı olarak @tatiller ile verilebilir.\n"
"\n"
" * Belirtilen değerler geçersizse işlev #NUM! hatası ile döner.\n"
" * İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"NETWORKDAYS(DATE(2001,1,2),DATE(2001,2,15)) eşittir 33\n"
"\n"
"Benzer işlev: WORKDAY\n"
"@EXAMPLES=\n"
"NETWORKDAYS(DATE(2001,1,2),DATE(2001,2,15)) eşittir 33.\n"
"\n"
"@SEEALSO=WORKDAY"

#: ../plugins/fn-date/functions.c:1279
msgid ""
"@FUNCTION=ISOWEEKNUM\n"
"@SYNTAX=ISOWEEKNUM (date)\n"
"@DESCRIPTION=ISOWEEKNUM returns the ISO 8601 week number of @date.\n"
"\n"
"An ISO 8601 week starts on Monday. Weeks are numbered from 1. A week "
"including days from two different years is assigned to the year which "
"includes the most days. This means that Dec 31 could be in week 1 of the "
"following year, and Jan 1 could be in week 52 or 53 of the previous year. "
"ISOWEEKNUM returns the week number.\n"
"\n"
"* ISOWEEKNUM returns #NUM! if date is invalid.\n"
"\n"
"@EXAMPLES=\n"
"If A1 contains 12/21/00 then ISOWEEKNUM(A1)=51\n"
"@SEEALSO=WEEKNUM, ISOYEAR"
msgstr ""
"@FUNCTION=ISOWEEKNUM\n"
"@SYNTAX=ISOWEEKNUM (tarih)\n"
"@DESCRIPTION=ISOWEEKNUM verilen tarihin ISO 8601 hafta numarasını verir.\n"
"\n"
"Bir ISO 8601 haftası Pazar gününden başlar. Haftalar 1 den başlar. Yıl "
"sonunda diğer yılla karışan haftalar bir yılın saon haftasına diğer yılın da "
"ilk haftasına dahil edilir. Yani 31 Aralık yeni yılın ilk haftasının ilk "
"günü olabildiği gibi, 1 Ocak eski yılın son haftasında olabilir.\n"
"\n"
" * Tarih geçersizse #SAYI! hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"A1 gözesi 21.12.2000 içeriyorsa ISOWEEKNUM(A1)=51 olacaktır.\n"
"\n"
"Benzeri: WEEKNUM, ISOYEAR\n"
"@EXAMPLES=\n"
"A1 gözesi 21.12.2000 içeriyorsa ISOWEEKNUM(A1)=51 olacaktır.\n"
"@SEEALSO=WEEKNUM, ISOYEAR"

#: ../plugins/fn-date/functions.c:1316
msgid ""
"@FUNCTION=ISOYEAR\n"
"@SYNTAX=ISOYEAR (date)\n"
"@DESCRIPTION=ISOYEAR returns the year of the ISO 8601 week number of @date.\n"
"\n"
"An ISO 8601 week starts on Monday. Weeks are numbered from 1. A week "
"including days from two different years is assigned to the year which "
"includes the most days. This means that Dec 31 could be in week 1 of the "
"following year, and Jan 1 could be in week 52 or 53 of the previous year. "
"ISOYEAR returns the year the week is assigned to.\n"
"\n"
"* ISOYEAR returns #NUM! if date is invalid.\n"
"@EXAMPLES=\n"
"If A1 contains 12/31/2001 then ISOYEAR(A1)=2002\n"
"@SEEALSO=ISOWEEKNUM"
msgstr ""
"@FUNCTION=ISOYEAR\n"
"@SYNTAX= ISOYEAR(tarih)\n"
"@DESCRIPTION=ISOYEAR verilen tarihin ISO 8601 yıl numarasını verir.\n"
"\n"
"Bir ISO 8601 haftası Pazar gününden başlar. Haftalar 1 den başlar. Yıl "
"sonunda diğer yılla karışan haftalar bir yılın saon haftasına diğer yılın da "
"ilk haftasına dahil edilir. Yani 31 Aralık yeni yılın ilk haftasının ilk "
"günü olabildiği gibi, 1 Ocak eski yılın son haftasında olabilir.\n"
"\n"
" * Tarih geçersizse #SAYI! hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"A1 gözesi 21.12.2000 içeriyorsa ISOYEAR(A1) = 2002 olacaktır.\n"
"\n"
"Benzeri: ISOWEEKNUM\n"
"@EXAMPLES=\n"
"A1 gözesi 21.12.2000 içeriyorsa ISOWEEKNUM(A1)=51 olacaktır.\n"
"@SEEALSO=ISOWEEKNUM"

#: ../plugins/fn-date/functions.c:1366
msgid ""
"@FUNCTION=WEEKNUM\n"
"@SYNTAX=WEEKNUM (date[,method])\n"
"@DESCRIPTION=WEEKNUM returns the week number of @date according to the given "
"@method.\n"
"\n"
"@method defaults to 1.\n"
"\n"
"  For @method=1, week starts on Sunday, and days before first Sunday are in "
"week 0.\n"
"  For @method=2, week starts on Monday, and days before first Monday are in "
"week 0.\n"
"  For @method=150, the ISO 8601 week number is returned.\n"
"\n"
"* WEEKNUM returns #NUM! if @date or @method is invalid.\n"
"* This function is Excel compatible, except that Excel does not support ISO "
"8601 week numbers.\n"
"\n"
"@EXAMPLES=\n"
"If A1 contains 12/21/00 then WEEKNUM(A1,2)=51\n"
"@SEEALSO=ISOWEEKNUM"
msgstr ""
"@FUNCTION=WEEKNUM\n"
"@SYNTAX=WEEKNUM (tarih[,yöntem])\n"
"@DESCRIPTION=WEEKNUM belirtilen yöntemle verilen tarihin hafta numarasını "
"verir.\n"
"\n"
" @yöntem verilmezse 1 kabul edilir.\n"
" @yöntem=1: Pazar haftanın ilk günüdür ve ilk Pazar gününden önceki günler "
"0. haftaya aittir.\n"
" @yöntem=2: Pazartesi haftanın ilk günüdür ve ilk Pazartesi gününden önceki "
"günler 0. haftaya aittir.\n"
" @yöntem=150: ISO 8601 hafta numarasını verir.\n"
"\n"
"Tarih geçersizse #SAYI! hatası ile sonuçlanır.\n"
"Excel'in ISO 8601 hafta numarasını içermemesi dışında bu işlev Excel "
"uyumludur.\n"
"\n"
"Örnek:\n"
"A1 gözesi 21.12.2000 tarihini içeriyorsa WEEKNUM(A1,2)=51 olacaktır.\n"
"\n"
"Benzeri: ISOWEEKNUM\n"
"@EXAMPLES=\n"
"A1 gözesi 21.12.2000 tarihini içeriyorsa WEEKNUM(A1,2)=51 olacaktır.\n"
"@SEEALSO=ISOWEEKNUM"

#: ../plugins/fn-date/functions.c:1414
msgid ""
"@FUNCTION=YEARFRAC\n"
"@SYNTAX=YEARFRAC (start_date, end_date [,basis])\n"
"@DESCRIPTION=YEARFRAC returns the number of full days between @start_date "
"and @end_date according to the @basis.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DATEDIF"
msgstr ""
"@FUNCTION=CUMPRINC\n"
"@SYNTAX=CUMPRINC(oran,ndön,pv,baş_dönem,son_dönem,tür)\n"
"@DESCRIPTION=CUMPRINC bir borca karşılık, @baş_dönem ve @son_dönem arasında "
"ödenecek olan toplam kümülatif anapara miktarını hesaplar.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-eng/functions.c:205
msgid ""
"@FUNCTION=BASE\n"
"@SYNTAX=BASE(number,base[,length])\n"
"@DESCRIPTION=BASE function converts a number to a string representing that "
"number in base @base.\n"
"\n"
"* @base must be an integer between 2 and 36.\n"
"* This function is OpenOffice.Org compatible.\n"
"* Optional argument @length specifies the minimum result length.  Leading  "
"zeroes will be added to reach this length.\n"
"\n"
"@EXAMPLES=\n"
"BASE(255,16,4) equals \"00FF\".\n"
"\n"
"@SEEALSO=DECIMAL"
msgstr ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=OCT2DEC işlevi dizge ya da sayı olarak verilen bir sekizlik "
"sayıyı ondalık eşdeğerine çevirir\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"OCT2DEC(\"124\") eşittir 84\n"
"\n"
"Benzer işlevler: DEC2OCT, OCT2BIN, OCT2HEX\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") eşittir 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"

#: ../plugins/fn-eng/functions.c:243
msgid ""
"@FUNCTION=BIN2DEC\n"
"@SYNTAX=BIN2DEC(x)\n"
"@DESCRIPTION=BIN2DEC function converts a binary number in string or number "
"to its decimal equivalent.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BIN2DEC(101) equals 5.\n"
"\n"
"@SEEALSO=DEC2BIN, BIN2OCT, BIN2HEX"
msgstr ""
"@FUNCTION=BIN2DEC\n"
"@SYNTAX=BIN2DEC(x)\n"
"@DESCRIPTION=BIN2DEC işlevi bir dizge veya sayı olarak verilen bir ikilik "
"sayıyı ondalık eşdeğerine çevirir.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"BIN2DEC(101) eşittir 5\n"
"\n"
"Benzer işlevler: DEC2BIN, BIN2OCT, BIN2HEX\n"
"@EXAMPLES=\n"
"BIN2DEC(101) eşittir 5.\n"
"\n"
"@SEEALSO=DEC2BIN, BIN2OCT, BIN2HEX"

#: ../plugins/fn-eng/functions.c:272
msgid ""
"@FUNCTION=BIN2OCT\n"
"@SYNTAX=BIN2OCT(number[,places])\n"
"@DESCRIPTION=BIN2OCT function converts a binary number to an octal number. "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BIN2OCT(110111) equals 67.\n"
"\n"
"@SEEALSO=OCT2BIN, BIN2DEC, BIN2HEX"
msgstr ""
"@FUNCTION=BIN2OCT\n"
"@SYNTAX=BIN2OCT(sayı[,basamak])\n"
"@DESCRIPTION=BIN2OCT işlevi bir ikilik sayıyı sekizlik eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"BIN2OCT(110111;4) eşittir 0067\n"
"\n"
"Benzer işlevler: OCT2BIN, BIN2DEC, BIN2HEX\n"
"@EXAMPLES=\n"
"BIN2OCT(110111;4) eşittir 0067.\n"
"\n"
"@SEEALSO=OCT2BIN, BIN2DEC, BIN2HEX"

#: ../plugins/fn-eng/functions.c:304
msgid ""
"@FUNCTION=BIN2HEX\n"
"@SYNTAX=BIN2HEX(number[,places])\n"
"@DESCRIPTION=BIN2HEX function converts a binary number to a hexadecimal "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BIN2HEX(100111) equals 27.\n"
"\n"
"@SEEALSO=HEX2BIN, BIN2OCT, BIN2DEC"
msgstr ""
"@FUNCTION=BIN2HEX\n"
"@SYNTAX=BIN2HEX(sayı[,basamak])\n"
"@DESCRIPTION=BIN2HEX işlevi bir ikilik sayıyı onaltılık eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"BIN2HEX(100111) eşittir 27\n"
"\n"
"Benzer işlevler: HEX2BIN, BIN2OCT, BIN2DEC\n"
"@EXAMPLES=\n"
"BIN2HEX(100111) eşittir 27.\n"
"\n"
"@SEEALSO=HEX2BIN, BIN2OCT, BIN2DEC"

#: ../plugins/fn-eng/functions.c:336
msgid ""
"@FUNCTION=DEC2BIN\n"
"@SYNTAX=DEC2BIN(number[,places])\n"
"@DESCRIPTION=DEC2BIN function converts a decimal number to a binary number. "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEC2BIN(42) equals 101010.\n"
"\n"
"@SEEALSO=BIN2DEC, DEC2OCT, DEC2HEX"
msgstr ""
"@FUNCTION=DEC2BIN\n"
"@SYNTAX=DEC2BIN(sayı[,basamak])\n"
"@DESCRIPTION=DEC2BIN işlevi bir ondalık sayıyı ikilik eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"DEC2BIN(42) eşittir 101010\n"
"\n"
"Benzer işlevler: BIN2DEC, DEC2OCT, DEC2HEX\n"
"@EXAMPLES=\n"
"DEC2BIN(42) eşittir 101010.\n"
"\n"
"@SEEALSO=BIN2DEC, DEC2OCT, DEC2HEX"

#: ../plugins/fn-eng/functions.c:368
msgid ""
"@FUNCTION=DEC2OCT\n"
"@SYNTAX=DEC2OCT(number[,places])\n"
"@DESCRIPTION=DEC2OCT function converts a decimal number to an octal number. "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEC2OCT(42) equals 52.\n"
"\n"
"@SEEALSO=OCT2DEC, DEC2BIN, DEC2HEX"
msgstr ""
"@FUNCTION=DEC2OCT\n"
"@SYNTAX=DEC2OCT(sayı[,basamak])\n"
"@DESCRIPTION=DEC2OCT işlevi bir ondalık sayıyı sekizlik eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"DEC2OCT(42) eşittir 52\n"
"\n"
"Benzer işlevler: OCT2DEC, DEC2BIN, DEC2HEX\n"
"@EXAMPLES=\n"
"DEC2OCT(42) eşittir 52.\n"
"\n"
"@SEEALSO=OCT2DEC, DEC2BIN, DEC2HEX"

#: ../plugins/fn-eng/functions.c:400
msgid ""
"@FUNCTION=DEC2HEX\n"
"@SYNTAX=DEC2HEX(number[,places])\n"
"@DESCRIPTION=DEC2HEX function converts a decimal number to a hexadecimal "
"number. @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEC2HEX(42) equals 2A.\n"
"\n"
"@SEEALSO=HEX2DEC, DEC2BIN, DEC2OCT"
msgstr ""
"@FUNCTION=DEC2HEX\n"
"@SYNTAX=DEC2HEX(sayı[,basamak])\n"
"@DESCRIPTION=DEC2HEX işlevi bir ondalık sayıyı onaltılık eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"DEC2HEX(42) eşittir 2A\n"
"\n"
"Benzer işlevler: HEX2DEC, DEC2BIN, DEC2OCT\n"
"@EXAMPLES=\n"
"DEC2HEX(42) eşittir 2A.\n"
"\n"
"@SEEALSO=HEX2DEC, DEC2BIN, DEC2OCT"

#: ../plugins/fn-eng/functions.c:432
msgid ""
"@FUNCTION=DECIMAL\n"
"@SYNTAX=DECIMAL(text,base)\n"
"@DESCRIPTION=DECIMAL function converts a number in base @base to decimal.\n"
"\n"
"* @base must be an integer between 2 and 36.\n"
"* This function is OpenOffice.Org compatible.\n"
"\n"
"@EXAMPLES=\n"
"DECIMAL(\"A1\",16) equals 161.\n"
"\n"
"@SEEALSO=BASE"
msgstr ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=OCT2DEC işlevi dizge ya da sayı olarak verilen bir sekizlik "
"sayıyı ondalık eşdeğerine çevirir\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"OCT2DEC(\"124\") eşittir 84\n"
"\n"
"Benzer işlevler: DEC2OCT, OCT2BIN, OCT2HEX\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") eşittir 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"

#: ../plugins/fn-eng/functions.c:464
msgid ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=OCT2DEC function converts an octal number in a string or number "
"to its decimal equivalent.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") equals 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"
msgstr ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=OCT2DEC işlevi dizge ya da sayı olarak verilen bir sekizlik "
"sayıyı ondalık eşdeğerine çevirir\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"OCT2DEC(\"124\") eşittir 84\n"
"\n"
"Benzer işlevler: DEC2OCT, OCT2BIN, OCT2HEX\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") eşittir 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"

#: ../plugins/fn-eng/functions.c:493
msgid ""
"@FUNCTION=OCT2BIN\n"
"@SYNTAX=OCT2BIN(number[,places])\n"
"@DESCRIPTION=OCT2BIN function converts an octal number to a binary number.  "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OCT2BIN(\"213\") equals 10001011.\n"
"\n"
"@SEEALSO=BIN2OCT, OCT2DEC, OCT2HEX"
msgstr ""
"@FUNCTION=DEC2BIN\n"
"@SYNTAX=DEC2BIN(sayı[,basamak])\n"
"@DESCRIPTION=DEC2BIN işlevi bir ondalık sayıyı ikilik eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"DEC2BIN(42) eşittir 101010\n"
"\n"
"Benzer işlevler: BIN2DEC, DEC2OCT, DEC2HEX\n"
"@EXAMPLES=\n"
"DEC2BIN(42) eşittir 101010.\n"
"\n"
"@SEEALSO=BIN2DEC, DEC2OCT, DEC2HEX"

#: ../plugins/fn-eng/functions.c:525
msgid ""
"@FUNCTION=OCT2HEX\n"
"@SYNTAX=OCT2HEX(number[,places])\n"
"@DESCRIPTION=OCT2HEX function converts an octal number to a hexadecimal "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OCT2HEX(132) equals 5A.\n"
"\n"
"@SEEALSO=HEX2OCT, OCT2BIN, OCT2DEC"
msgstr ""
"@FUNCTION=DEC2HEX\n"
"@SYNTAX=DEC2HEX(sayı[,basamak])\n"
"@DESCRIPTION=DEC2HEX işlevi bir ondalık sayıyı onaltılık eşdeğerine çevirir. "
"@basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"DEC2HEX(42) eşittir 2A\n"
"\n"
"Benzer işlevler: HEX2DEC, DEC2BIN, DEC2OCT\n"
"@EXAMPLES=\n"
"DEC2HEX(42) eşittir 2A.\n"
"\n"
"@SEEALSO=HEX2DEC, DEC2BIN, DEC2OCT"

#: ../plugins/fn-eng/functions.c:557
msgid ""
"@FUNCTION=HEX2BIN\n"
"@SYNTAX=HEX2BIN(number[,places])\n"
"@DESCRIPTION=HEX2BIN function converts a hexadecimal number to a binary "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HEX2BIN(\"2A\") equals 101010.\n"
"\n"
"@SEEALSO=BIN2HEX, HEX2OCT, HEX2DEC"
msgstr ""
"@FUNCTION=HEX2BIN\n"
"@SYNTAX=HEX2BIN(sayı[,basamak])\n"
"@DESCRIPTION=The HEX2BIN işlevi bir onaltılık sayıyı iklik eşdeğerine "
"çevirir. @basamak sayısı seçimliktir, çok küçük ya da negatif ise işlev "
"#SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"HEX2BIN(\"2A\") eşittir 101010\n"
"\n"
"Benzer işlevler: BIN2HEX, HEX2OCT, HEX2DEC\n"
"@EXAMPLES=\n"
"HEX2BIN(\"2A\") eşittir 101010.\n"
"\n"
"@SEEALSO=BIN2HEX, HEX2OCT, HEX2DEC"

#: ../plugins/fn-eng/functions.c:589
msgid ""
"@FUNCTION=HEX2OCT\n"
"@SYNTAX=HEX2OCT(number[,places])\n"
"@DESCRIPTION=HEX2OCT function converts a hexadecimal number to an octal "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HEX2OCT(\"2A\") equals 52.\n"
"\n"
"@SEEALSO=OCT2HEX, HEX2BIN, HEX2DEC"
msgstr ""
"@FUNCTION=HEX2OCT\n"
"@SYNTAX=HEX2OCT(sayı[,hane_sayısı])\n"
"@DESCRIPTION=The HEX2OCT işlevi bir onaltılık sayıyı sekizlik eşdeğerine "
"çevirir. @hane_sayısı ile isteğe bağlı olarak hane sayısı verilebilir. "
"@hane_sayısı negatif ise ya da çok küçük ise işlev #NUM! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"HEX2OCT(\"2A\",3) eşittir 052\n"
"\n"
"Benzerleri: OCT2HEX, HEX2BIN, HEX2DEC\n"
"@EXAMPLES=\n"
"HEX2OCT(\"2A\",3) eşittir 052\n"
"\n"
"@SEEALSO=OCT2HEX, HEX2BIN, HEX2DEC"

#: ../plugins/fn-eng/functions.c:621
msgid ""
"@FUNCTION=HEX2DEC\n"
"@SYNTAX=HEX2DEC(x)\n"
"@DESCRIPTION=HEX2DEC function converts a hexadecimal number to its decimal "
"equivalent.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HEX2DEC(\"2A\") equals 42.\n"
"\n"
"@SEEALSO=DEC2HEX, HEX2BIN, HEX2OCT"
msgstr ""
"@FUNCTION=HEX2DEC\n"
"@SYNTAX=HEX2DEC(x)\n"
"@DESCRIPTION=The HEX2DEC işlevi bir onaltılık sayıyı ondalık eşdeğerine "
"çevirir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"HEX2DEC(\"2A\") eşittir 42\n"
"\n"
"Benzerleri: DEC2HEX, HEX2BIN, HEX2OCT\n"
"@EXAMPLES=\n"
"HEX2DEC(\"2A\") eşittir 42\n"
"\n"
"@SEEALSO=DEC2HEX, HEX2BIN, HEX2OCT"

#: ../plugins/fn-eng/functions.c:650
msgid ""
"@FUNCTION=BESSELI\n"
"@SYNTAX=BESSELI(x,y)\n"
"@DESCRIPTION=BESSELI function returns the Neumann, Weber or Bessel "
"function.\n"
"\n"
"@x is where the function is evaluated. @y is the order of the Bessel "
"function, if non-integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELI(0.7,3) equals 0.007367374.\n"
"\n"
"@SEEALSO=BESSELJ,BESSELK,BESSELY"
msgstr ""
"@FUNCTION=BESSELI\n"
"@SYNTAX=BESSELI(x,y)\n"
"@DESCRIPTION=BESSELI işlevi Neumann, Weber ve Bessel işlevlerini hesaplar. "
"@x işlevin işlem yaptığı değer, @y ise bessel işlevinin derecesidir. Tamsayı "
"değilse ondalık kısım atılır. @x ya da @y bir sayı değilse işlev #DEĞER! "
"hatası verir. @y < 0 ise #SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BESSELI(0.7,3) eşittir 0.007367374\n"
"\n"
"Benzerleri: BESSELJ, BESSELK, BESSELY\n"
"@EXAMPLES=\n"
"BESSELI(0.7,3) eşittir 0.007367374\n"
"\n"
"@SEEALSO=BESSELJ,BESSELK,BESSELY"

#: ../plugins/fn-eng/functions.c:693
msgid ""
"@FUNCTION=BESSELK\n"
"@SYNTAX=BESSELK(x,y)\n"
"@DESCRIPTION=BESSELK function returns the Neumann, Weber or Bessel function. "
"@x is where the function is evaluated. @y is the order of the Bessel "
"function, if non-integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELK(3,9) equals 397.95880.\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELY"
msgstr ""
"@FUNCTION=BESSELK\n"
"@SYNTAX=BESSELK(x,y)\n"
"@DESCRIPTION=BESSELK işlevi Neumann, Weber ve Bessel işlevlerini hesaplar. "
"@x işlevin işlem yaptığı değer, @y ise bessel işlevinin derecesidir. Tamsayı "
"değilse ondalık kısım atılır. @x ya da @y bir sayı değilse işlev #DEĞER! "
"hatası verir. @y < 0 ise #SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BESSELK(3,9) eşittir 397.95880\n"
"\n"
"Benzerleri: BESSELI, BESSELJ, BESSELY\n"
"@EXAMPLES=\n"
"BESSELK(3,9) eşittir 397.95880\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELY"

#: ../plugins/fn-eng/functions.c:731
msgid ""
"@FUNCTION=BESSELJ\n"
"@SYNTAX=BESSELJ(x,y)\n"
"@DESCRIPTION=BESSELJ function returns the Bessel function with @x is where "
"the function is evaluated. @y is the order of the Bessel function, if non-"
"integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELJ(0.89,3) equals 0.013974004.\n"
"\n"
"@SEEALSO=BESSELI,BESSELK,BESSELY"
msgstr ""
"@FUNCTION=BESSELJ\n"
"@SYNTAX=BESSELJ(x,y)\n"
"@DESCRIPTION=BESSELJ işlevi Bessel işlevini hesaplar. @x işlevin işlem "
"yaptığı değer, @y ise bessel işlevinin derecesidir. Tamsayı değilse ondalık "
"kısım atılır. @x ya da @y bir sayı değilse işlev #DEĞER! hatası verir. @y < "
"0 ise #SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BESSELJ(0.89,3) eşittir 0.013974004\n"
"\n"
"Benzerleri: BESSELJ, BESSELK, BESSELY\n"
"@EXAMPLES=\n"
"BESSELJ(0.89,3) eşittir 0.013974004\n"
"\n"
"@SEEALSO=BESSELJ,BESSELK,BESSELY"

#: ../plugins/fn-eng/functions.c:769
msgid ""
"@FUNCTION=BESSELY\n"
"@SYNTAX=BESSELY(x,y)\n"
"@DESCRIPTION=BESSELY function returns the Neumann, Weber or Bessel "
"function.\n"
"\n"
"@x is where the function is evaluated. @y is the order of the Bessel "
"function, if non-integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELY(4,2) equals 0.215903595.\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELK"
msgstr ""
"@FUNCTION=BESSELY\n"
"@SYNTAX=BESSELY(x,y)\n"
"@DESCRIPTION=BESSELY işlevi Neumann, Weber ve Bessel işlevlerini hesaplar. "
"@x işlevin işlem yaptığı değer, @y ise bessel işlevinin derecesidir. Tamsayı "
"değilse ondalık kısım atılır. @x ya da @y bir sayı değilse işlev #DEĞER! "
"hatası verir. @y < 0 ise #SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BESSELY(4,2) eşittir 0.215903595\n"
"\n"
"Benzerleri: BESSELJ,BESSELK,BESSELY\n"
"@EXAMPLES=\n"
"BESSELY(4,2) eşittir 0.215903595\n"
"\n"
"@SEEALSO=BESSELJ,BESSELK,BESSELY"

#: ../plugins/fn-eng/functions.c:811
#, fuzzy
msgid ""
"@FUNCTION=CONVERT\n"
"@SYNTAX=CONVERT(number,from_unit,to_unit)\n"
"@DESCRIPTION=CONVERT returns a conversion from one measurement system to "
"another.  For example, you can convert a weight in pounds to a weight in "
"grams.  @number is the value you want to convert, @from_unit specifies the "
"unit of the @number, and @to_unit is the unit for the result.\n"
"\n"
"@from_unit and @to_unit can be any of the following:\n"
"\n"
"Weight and mass:\n"
"\t'g'  \t\tGram\n"
"\t'sg' \t\tSlug\n"
"\t'lbm'\t\tPound\n"
"\t'u'  \t\tU (atomic mass)\n"
"\t'ozm'\t\tOunce\n"
"\n"
"Distance:\n"
"\t'm'   \t\tMeter\n"
"\t'mi'  \t\tStatute mile\n"
"\t'Nmi' \t\tNautical mile\n"
"\t'in'  \t\tInch\n"
"\t'ft'  \t\tFoot\n"
"\t'yd'  \t\tYard\n"
"\t'ang' \t\tAngstrom\n"
"\t'Pica'\t\tPica\n"
"\n"
"Time:\n"
"\t'yr'  \t\tYear\n"
"\t'day' \t\tDay\n"
"\t'hr'  \t\tHour\n"
"\t'mn'  \t\tMinute\n"
"\t'sec' \t\tSecond\n"
"\n"
"Pressure:\n"
"\t'Pa'  \t\tPascal\n"
"\t'atm' \t\tAtmosphere\n"
"\t'mmHg'\tmm of Mercury\n"
"\n"
"Force:\n"
"\t'N'   \t\tNewton\n"
"\t'dyn' \t\tDyne\n"
"\t'lbf' \t\tPound force\n"
"\n"
"Energy:\n"
"\t'J'    \t\tJoule\n"
"\t'e'    \t\tErg\n"
"\t'c'    \t\tThermodynamic calorie\n"
"\t'cal'  \t\tIT calorie\n"
"\t'eV'   \tElectron volt\n"
"\t'HPh'  \tHorsepower-hour\n"
"\t'Wh'   \tWatt-hour\n"
"\t'flb'  \t\tFoot-pound\n"
"\t'BTU'  \tBTU\n"
"\n"
"Power:\n"
"\t'HP'   \tHorsepower\n"
"\t'W'    \tWatt\n"
"\n"
"Magnetism:\n"
"\t'T'    \t\tTesla\n"
"\t'ga'   \tGauss\n"
"\n"
"Temperature:\n"
"\t'C'    \t\tDegree Celsius\n"
"\t'F'    \t\tDegree Fahrenheit\n"
"\t'K'    \t\tDegree Kelvin\n"
"\n"
"Liquid measure:\n"
"\t'tsp'  \t\tTeaspoon\n"
"\t'tbs'  \t\tTablespoon\n"
"\t'oz'   \t\tFluid ounce\n"
"\t'cup'  \tCup\n"
"\t'pt'   \t\tPint\n"
"\t'qt'   \t\tQuart\n"
"\t'gal'  \t\tGallon\n"
"\t'l'    \t\tLiter\n"
"\n"
"For metric units any of the following prefixes can be used:\n"
"\t'Y'  \tyotta \t1E+24\n"
"\t'Z'  \tzetta \t1E+21\n"
"\t'E'  \texa   \t1E+18\n"
"\t'P'  \tpeta  \t1E+15\n"
"\t'T'  \ttera  \t\t1E+12\n"
"\t'G'  \tgiga  \t1E+09\n"
"\t'M'  \tmega  \t1E+06\n"
"\t'k'  \tkilo  \t\t1E+03\n"
"\t'h'  \thecto \t1E+02\n"
"\t'e'  \tdeka  \t1E+01\n"
"\t'd'  \tdeci  \t1E-01\n"
"\t'c'  \tcenti \t\t1E-02\n"
"\t'm'  \tmilli \t\t1E-03\n"
"\t'u'  \tmicro \t1E-06\n"
"\t'n'  \tnano  \t1E-09\n"
"\t'p'  \tpico  \t1E-12\n"
"\t'f'  \tfemto \t1E-15\n"
"\t'a'  \tatto  \t\t1E-18\n"
"\t'z'  \tzepto \t\t1E-21\n"
"\t'y'  \tyocto \t\t1E-24\n"
"\n"
"* If @from_unit and @to_unit are different types, CONVERT returns #N/A "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CONVERT(3,\"lbm\",\"g\") equals 1360.7769.\n"
"CONVERT(5.8,\"m\",\"in\") equals 228.3465.\n"
"CONVERT(7.9,\"cal\",\"J\") equals 33.07567.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CONVERT\n"
"@SYNTAX=CONVERT(değer,birimden,birime)\n"
"@DESCRIPTION=CONVERT işlevi aynı sistem içindeki ölçü birimleri arasında "
"dönüşüm yapar. Ağırlık birimlerinden pound ile gram arasında dönüşüm "
"yapılabilir. @değer ve @birimden dönüştürülecek değer ve birimini, @birime "
"ise değerin dönüştürüleceği birimdir. @birimden ve @birime için aşağıdaki "
"birimlerden biri kullanılabilir:\n"
"\n"
"Ağırlık and kütle:\n"
"'g'    Gram\n"
"'sg'   Slug\n"
"'lbm'  Pound\n"
"'u'    U (atomik kütle)\n"
"'ozm'  Ons\n"
"\n"
"Uzunluk:\n"
"'m'    Metre\n"
"'mi'   Kara mili\n"
"'Nmi'  Deniz mili\n"
"'in'   Inç\n"
"'ft'   Ayak\n"
"'yd'   Yarda\n"
"'ang'  Angström\n"
"'Pica' Pica\n"
"\n"
"Zaman:\n"
"'yr'   Yıl\n"
"'day'  Gün\n"
"'hr'   Saat\n"
"'mn'   Dakika\n"
"'sec'  Saniye\n"
"\n"
"Basınç:\n"
"'Pa'   Paskal\n"
"'atm'  Atmosfer\n"
"'mmHg' mmCıva\n"
"\n"
"Kuvvet:\n"
"'N'    Newton\n"
"'dyn'  Din\n"
"'lbf'  libre-kuvvet\n"
"\n"
"Enerji:\n"
"'J'    Jül\n"
"'e'    Erg\n"
"'c'    Termodinamik kalori\n"
"'cal'  IT kalori\n"
"'eV'   Elektron volt\n"
"'HPh'  BeygirGücü-saat\n"
"'Wh'   Wat-saat\n"
"'flb'  Foot-pound\n"
"'BTU'  BTU\n"
"\n"
"Güç:\n"
"'HP'   BeygirGücü\n"
"'W'    Wat\n"
"Elektromanyetik:\n"
"'T'    Tesla\n"
"'ga'   Gauss\n"
"\n"
"Sıcaklık:\n"
"'C'    Derece Santigrat\n"
"'F'    Derece Fahrenhayt\n"
"'K'    Derece Kelvin\n"
"\n"
"Sıvı ölçme:\n"
"'tsp'  Çay kaşığı \n"
"'tbs'  Yemek kaşığı\n"
"'oz'   sıvı onz\n"
"'cup'  fincan\n"
"'pt'   Pint\n"
"'qt'   Kuart\n"
"'gal'  Galon\n"
"'l'    Litre\n"
"\n"
"Metrik birimler için önekler:\n"
"'E'  eksa   1E+18\n"
"'P'  peta   1E+15\n"
"'T'  tera   1E+12\n"
"'G'  giga   1E+09\n"
"'M'  mega   1E+06\n"
"'k'  kilo   1E+03\n"
"'h'  hekto  1E+02\n"
"'e'  deka   1E+01\n"
"'d'  desi   1E-01\n"
"'c'  santi  1E-02\n"
"'m'  mili   1E-03\n"
"'u'  mikro  1E-06\n"
"'n'  nano   1E-09\n"
"'p'  piko   1E-12\n"
"'f'  femto  1E-15\n"
"'a'  atto   1E-18\n"
"\n"
"Farklı sistemler arasında dönüşümler #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"CONVERT(3,\"lbm\",\"g\") eşittir 1360.7769\n"
"CONVERT(5.8,\"m\",\"in\") eşittir 228.3465\n"
"CONVERT(7.9,\"cal\",\"J\") eşittir 33.07567\n"
"@EXAMPLES=\n"
"CONVERT(3,\"lbm\",\"g\") eşittir 1360.7769\n"
"CONVERT(5.8,\"m\",\"in\") eşittir 228.3465\n"
"CONVERT(7.9,\"cal\",\"J\") eşittir 33.07567\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-eng/functions.c:1228
msgid ""
"@FUNCTION=ERF\n"
"@SYNTAX=ERF([lower limit,]upper_limit)\n"
"@DESCRIPTION=ERF returns the error function.  With a single argument ERF "
"returns the error function, defined as\n"
"\n"
"\terf(x) = 2/sqrt(pi)* integral from 0 to x of exp(-t*t) dt.\n"
"\n"
"If two arguments are supplied, they are the lower and upper limits of the "
"integral.\n"
"\n"
"* If either @lower_limit or @upper_limit is not numeric a #VALUE! error is "
"returned.\n"
"* This function is upward-compatible with that in Excel. (If two arguments "
"are supplied, Excel will not allow either to be negative.)\n"
"\n"
"@EXAMPLES=\n"
"ERF(0.4) equals 0.428392355.\n"
"ERF(1.6448536269515/SQRT(2)) equals 0.90.\n"
"\n"
"The second example shows that a random variable with a normal distribution "
"has a 90 percent chance of falling within approximately 1.645 standard "
"deviations of the mean.\n"
"@SEEALSO=ERFC"
msgstr ""
"@FUNCTION=ERF\n"
"@SYNTAX=ERF([alt_sınır,]üst_sınır)\n"
"@DESCRIPTION=Tek argümanlı ERF işlevi, erf(x) = 2/sqrt(pi)*(0 dan x e kadar "
"exp(-t*t) dt integrali) hata işlevi ile sonuçlanır. İki argüman verilmişse "
"bunlar integralin alt ve üst sınırlarıdır. @alt_sınır ve @üst_sınır "
"değerleri sayısal değilse #DEĞER! hatası verir.\n"
"Bu işlev negatif argüman kabul etmek dışında Excel ile uyumludur.\n"
"\n"
"Örnek:\n"
"ERF(0.4) eşittir 0.428392355\n"
"ERF(1.6448536269515/SQRT(2)) eşittir 0.90\n"
"\n"
"İkinci örnek ortalamadan yaklaşık 1.645 standart sapma ile rastlanan bir %90 "
"lık değişime sahip bir normal açılımla bir rastgele değişken gösterir.\n"
"\n"
"Benzeri: ERFC\n"
"@EXAMPLES=\n"
"ERF(0.4) eşittir 0.428392355\n"
"ERF(1.6448536269515/SQRT(2)) eşittir 0.90\n"
"\n"
"İkinci örnek ortalamadan yaklaşık 1.645 standart sapma ile rastlanan bir %90 "
"lık değişime sahip bir normal açılımla bir rastgele değişken gösterir.\n"
"@SEEALSO=ERFC"

#: ../plugins/fn-eng/functions.c:1279
msgid ""
"@FUNCTION=ERFC\n"
"@SYNTAX=ERFC(x)\n"
"@DESCRIPTION=ERFC function returns the complementary error function, defined "
"as\n"
"\n"
"\t1 - erf(x).\n"
"\n"
"erfc(x) is calculated more accurately than 1 - erf(x) for arguments larger "
"than about 0.5.\n"
"\n"
"* If @x is not numeric a #VALUE! error is returned.  \n"
"@EXAMPLES=\n"
"ERFC(6) equals 2.15197367e-17.\n"
"\n"
"@SEEALSO=ERF"
msgstr ""
"@FUNCTION=ERFC\n"
"@SYNTAX=ERFC(x)\n"
"@DESCRIPTION=ERFC işlevi 1 - erf(x) olarak verilen eşlenik hata işlevini "
"hesaplar. erfc(x) 0.5 den daha büyük argümanlar için daha yüksek doğruluk "
"sağlar. @x bir sayı değilse #DEĞER! hatası verir.\n"
"\n"
"Örnek:\n"
"ERFC(6) eşittir 2.15197367e-17\n"
"\n"
"Benzeri: ERF\n"
"@EXAMPLES=\n"
"ERFC(6) eşittir 2.15197367e-17\n"
"\n"
"@SEEALSO=ERF"

#: ../plugins/fn-eng/functions.c:1310
msgid ""
"@FUNCTION=DELTA\n"
"@SYNTAX=DELTA(x[,y])\n"
"@DESCRIPTION=DELTA function tests for numerical equivalence of two "
"arguments, returning 1 in case of equality.\n"
"\n"
"* @y is optional, and defaults to 0.\n"
"* If either argument is non-numeric returns a #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DELTA(42.99,43) equals 0.\n"
"\n"
"@SEEALSO=EXACT,GESTEP"
msgstr ""
"@FUNCTION=DELTA\n"
"@SYNTAX=DELTA(x[,y])\n"
"@DESCRIPTION=DELTA işlevi iki argümanın sayısal eşdeğerliliğini test eder. "
"Eşitlik durumunda sonuç birdir. @y isteğe bağlıdır ve öntanımlı olarak "
"sıfırdır.\n"
"Sayısal olmayan argümanlar işlevin #DEĞER! hatası vermesiyle sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"DELTA(42.99,43) eşittir 0\n"
"\n"
"Benzerleri: EXACT, GESTEP\n"
"@EXAMPLES=\n"
"DELTA(42.99,43) eşittir 0\n"
"\n"
"@SEEALSO=EXACT,GESTEP"

#: ../plugins/fn-eng/functions.c:1342
#, fuzzy
msgid ""
"@FUNCTION=GESTEP\n"
"@SYNTAX=GESTEP(x[,y])\n"
"@DESCRIPTION=GESTEP function tests if @x is >= @y, returning 1 if it is so, "
"and 0 otherwise. @y is optional, and defaults to 0.\n"
"\n"
"* If either argument is non-numeric returns a #VALUE! error.\n"
"* This function is Excel compatible.\n"
"@EXAMPLES=\n"
"GESTEP(5,4) equals 1.\n"
"\n"
"@SEEALSO=DELTA"
msgstr ""
"@FUNCTION=GESTEP\n"
"@SYNTAX=GESTEP(x[,y])\n"
"@DESCRIPTION=GESTEP işlevi @x >= @y ise 1 ile değilse 0 ile sonuçlanır. @y "
"isteğe bağlıdır ve öntanımlı olarak sıfırdır.\n"
"Sayısal olmayan argümanın varlığı işlevin #DEĞER! hatası ile sonuçlanmasına "
"sebep olur.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"GESTEP(5,4) eşittir 1\n"
"\n"
"Benzeri: DELTA\n"
"@EXAMPLES=\n"
"GESTEP(5,4) eşittir 1\n"
"\n"
"@SEEALSO=DELTA"

#: ../plugins/fn-eng/functions.c:1373
msgid ""
"@FUNCTION=INVSUMINV\n"
"@SYNTAX=INVSUMINV(x1,x2,...)\n"
"@DESCRIPTION=INVSUMINV sum calculates the inverse of the sum of inverses.\n"
"\n"
"The primary use of this is for calculating equivalent resistance for "
"parallel resistors or equivalent capacitance of a series of capacitors.\n"
"\n"
"* All arguments must be non-negative, or else a #VALUE! result is returned.\n"
"* If any argument is zero, the result is zero.\n"
"\n"
"@EXAMPLES=\n"
"INVSUMINV(2000,2000) equals 1000.\n"
"\n"
"@SEEALSO=HARMEAN"
msgstr ""

#: ../plugins/fn-erlang/functions.c:107
msgid ""
"@FUNCTION=PROBBLOCK\n"
"@SYNTAX=PROBBLOCK(traffic,circuits)\n"
"@DESCRIPTION=PROBBLOCK returns probability of blocking when a number of "
"@traffic loads into a number of @circuits (servers).\n"
"\n"
"* @traffic cannot exceed @circuits\n"
"\n"
"@EXAMPLES=\n"
"PROBBLOCK(24,30) returns 0.4012.\n"
"\n"
"@SEEALSO=OFFTRAF, DIMCIRC, OFFCAP"
msgstr ""

#: ../plugins/fn-erlang/functions.c:139
msgid ""
"@FUNCTION=OFFTRAF\n"
"@SYNTAX=OFFTRAF(traffic,circuits)\n"
"@DESCRIPTION=OFFTRAF returns a predicted number of offered traffic from a "
"number of carried @traffic (taken from measurements) on a number of "
"@circuits.\n"
"\n"
"* @traffic cannot exceed @circuits\n"
"\n"
"@EXAMPLES=\n"
"OFFTRAF(24,30) returns 25.527.\n"
"\n"
"@SEEALSO=PROBBLOCK, DIMCIRC, OFFCAP"
msgstr ""

#: ../plugins/fn-erlang/functions.c:208
msgid ""
"@FUNCTION=DIMCIRC\n"
"@SYNTAX=DIMCIRC(traffic,gos)\n"
"@DESCRIPTION=DIMCIRC returns a number of circuits required from a number of "
"@traffic loads with @gos grade of service.\n"
"\n"
"@EXAMPLES=\n"
"DIMCIRC(24,1%) returns 35.\n"
"\n"
"@SEEALSO=OFFCAP, OFFTRAF, PROBBLOCK"
msgstr ""

#: ../plugins/fn-erlang/functions.c:253
msgid ""
"@FUNCTION=OFFCAP\n"
"@SYNTAX=OFFCAP(circuits,gos)\n"
"@DESCRIPTION=OFFCAP returns a number of traffic capacity given by a number "
"of @circuits with @gos grade of service.\n"
"\n"
"@EXAMPLES=\n"
"OFFCAP(30,1%) returns 20.337.\n"
"\n"
"@SEEALSO=DIMCIRC, OFFTRAF, PROBBLOCK"
msgstr ""

#: ../plugins/fn-financial/functions.c:346
msgid ""
"@FUNCTION=ACCRINT\n"
"@SYNTAX=ACCRINT(issue,first_interest,settlement,rate,par,frequency[,basis])\n"
"@DESCRIPTION=ACCRINT calculates the accrued interest for a security that "
"pays periodic interest.\n"
"\n"
"@issue is the issue date of the security.  @first_interest is the first "
"interest date of the security.  @settlement is the settlement date of the "
"security.  The settlement date is always after the issue date (the date when "
"the security is bought). @rate is the annual rate of the security and @par "
"is the par value of the security. @frequency is the number of coupon "
"payments per year.\n"
"\n"
"Allowed frequencies are:\n"
"  1 = annual,\n"
"  2 = semi,\n"
"  4 = quarterly.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @issue date, @first_interest date, or @settlement date is not valid, "
"ACCRINT returns #NUM! error.\n"
"* The dates must be @issue < @first_interest < @settlement, or ACCRINT "
"returns #NUM! error.\n"
"* If @rate <= 0 or @par <= 0 , ACCRINT returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, ACCRINT returns #NUM! error.\n"
"* If @issue date is after @settlement date or they are the same, ACCRINT "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINTM"
msgstr ""
"@FUNCTION=ACCRINT\n"
"@SYNTAX=ACCRINT(ihraç,ilk_faiz,valör,oran,nominal,sıklık[,tahakkuk])\n"
"@DESCRIPTION=ACCRINT periyodik bir sıklıkta faiz ödeyen bir menkul kıymet "
"için tahakkuk eden faizi hesaplar. @ihraç menkul kıymetin ihraç tarihidir "
"@ilk_faiz, menkul kıymetin ilk faiz ödeme tarihidir. @valör, menkul kıymetin "
"teslim tarihidir. Teslim tarihi her zaman ihraç tarihinden sonra olur. "
"(menkul kıymetin satın alım tarihi). @oran, menkul kıymetin yıllık faiz "
"oranı, @nominal ise nominal değeridir. @sıklık yıl boyunca ödenecek olan "
"kupon adedini belirler. İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, "
"4=yılda dört. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @ihraç tarihi, @ilk_faiz tarihi veya @valör tarihi geçersiz ise "
"ACCRINT, #SAYI! hatasını verir. Tarihler, @ihraç < @ilk_faiz < @teslim "
"sırasında olmalıdır yoksa ACCRINT #SAYI! hatasını verir. Eğer @oran <= 0 "
"veya  @nominal <= 0 ise ACCRINT #SAYI! hatasını verir. Eğer @tahakkuk "
"verilmemişse, ABD 30/360 uygulanır. Eğer @tahakkuk < 0 veya @tahakkuk > 4 "
"ise, ACCRINT #SAYI! hatasını verir. Eğer @ihraç tarihi @valör tarihinden "
"sonra ise, veya iki tarih birbirine eşit ise, ACCRINT #SAYI! hatasını "
"verir. \n"
"\n"
"Benzeri: ACCRINTM\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINTM"

#: ../plugins/fn-financial/functions.c:435
msgid ""
"@FUNCTION=ACCRINTM\n"
"@SYNTAX=ACCRINTM(issue,maturity,rate[,par,basis])\n"
"@DESCRIPTION=ACCRINTM calculates and returns the accrued interest for a "
"security from @issue to @maturity date.\n"
"\n"
"@issue is the issue date of the security.  @maturity is the maturity date of "
"the security.  @rate is the annual rate of the security and @par is the par "
"value of the security. If you omit @par, ACCRINTM applies $1,000 instead.  "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @issue date or @maturity date is not valid, ACCRINTM returns #NUM! "
"error.\n"
"* If @rate <= 0 or @par <= 0, ACCRINTM returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, ACCRINTM returns #NUM! error.\n"
"* If @issue date is after @maturity date or they are the same, ACCRINTM "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINT"
msgstr ""
"@FUNCTION=ACCRINTM\n"
"@SYNTAX=ACCRINTM(ihraç,itfa,oran[,nominal,tahakkuk])\n"
"@DESCRIPTION=ACCRINTM, bir menkul kıymetin @ihraç'tan @itfa tarihine kadar "
"tahakkuk eden faizini hesaplar. @ihraç, menkul kıymetin ihraç tarihidir. "
"@itfa ise, itfa tarihidir. @oran, menkul kıymetin yıllık oranı, @nominal ise "
"nominal değeridir. Eğer @nominal belirlenmemişse, ACCRINTM, bu değeri 1,000 "
"TL kabul eder. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @ihraç tarihi, @itfa tarihi geçersiz ise ACCRINTM, #SAYI! hatasını "
"verir. Eğer @oran <= 0 veya @nominal <= 0 ise ACCRINTM #SAYI! hatasını "
"verir. Eğer @tahakkuk verilmemişse, ABD 30/360 uygulanır. Eğer @tahakkuk < 0 "
"veya @tahakkuk > 4 ise, ACCRINTM #SAYI! hatasını verir. Eğer @ihraç tarihi "
"@itfa tarihinden sonra ise, veya iki tarih birbirine eşit ise, ACCRINTM "
"#SAYI! hatasını verir. \n"
"\n"
"Benzeri: ACCRINT\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINT"

#: ../plugins/fn-financial/functions.c:493
#, fuzzy
msgid ""
"@FUNCTION=INTRATE\n"
"@SYNTAX=INTRATE(settlement,maturity,investment,redemption[,basis])\n"
"@DESCRIPTION=INTRATE calculates and returns the interest rate of a fully "
"vested security.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security. @investment is the price of the security paid "
"at @settlement date and @redemption is the amount to be received at "
"@maturity date.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, INTRATE returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, INTRATE returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, INTRATE "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"If you had a bond with a settlement date of April 15, 2000, maturity date "
"September 30, 2000, investment of $100,000, redemption value $103,525, using "
"the actual/actual basis, the bond discount rate is:\n"
"=INTRATE(36631, 36799, 100000, 103525, 1) which equals 0.0648 or 6.48%\n"
"@SEEALSO=RECEIVED, DATE"
msgstr ""
"@FUNCTION=INTRATE\n"
"@SYNTAX=INTRATE(valör,itfa,plasman,itfa_fiyatı[,tahakkuk])\n"
"@DESCRIPTION=INTRATE müktesap bir menkul kıymetin faizini hesaplar.  @valör "
"menkul kıymetin teslim tarihini, @itfa ise itfa tarihini belirler. @plasman "
"menkul kıymet için @valör tarihinde ödenen, @itfa_fiyatı ise @itfa tarihinde "
"elde edilecek olan miktardır. @tahakkuk, kullanmak istediğiniz tahakkuk "
"esasını belirler:\n"
" \n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @valör tarihi veya @itfa tarihi geçerli değil ise, INTRATE #SAYI! "
"hatası verir. Eğer @tahakkuk verilmez ise, ABD 30/360 kullanılır. Eğer "
"@tahakkuk < 0 veya @tahakkuk > 4 ise, INTRATE #SAYI! hatası verir. Eğer "
"@valör, @itfa tarihinden sonra ise veya iki tarih birbirine eşit ise, "
"INTRATE #SAYI! hatası verir. \n"
"\n"
"Örnek:\n"
"Eğer 15 Nisan 2000 valörlü, 30 Eylül 2000 itfalı, 100,000USD fiyatında, itfa "
"fiyatı 103,525 USD olan bir tahviliniz olsa idi, gün adedi/gün adedi "
"tahakkuk usulünü kullanarak bulunacak tahvil iskonto oranı:\n"
"INTRATE(36631, 36799, 100000, 103525, 1) eşittir 0.0648 veya %6.48\n"
"\n"
"Örnek:\n"
"Eğer 15 Nisan 2000 valörlü, 30 Eylül 2000 itfalı, 100,000USD fiyatında, itfa "
"fiyatı 103,525 USD olan bir tahviliniz olsa idi, gün adedi/gün adedi "
"tahakkuk usulünü kullanarak bulunacak tahvil iskonto oranı:\n"
"INTRATE(36631, 36799, 100000, 103525, 1) yani 0.0648 veya %6.48\n"
"\n"
"Benzerleri: RECEIVED, DATE\n"
"@EXAMPLES=\n"
"\n"
"Eğer 15 Nisan 2000 valörlü, 30 Eylül 2000 itfalı, 100,000USD fiyatında, itfa "
"fiyatı 103,525 USD olan bir tahviliniz olsa idi, gün adedi/gün adedi "
"tahakkuk usulünü kullanarak bulunacak tahvil iskonto oranı:\n"
"=INTRATE(36631, 36799, 100000, 103525, 1) yani 0.0648 veya %6.48\n"
"@SEEALSO=RECEIVED, DATE"

#: ../plugins/fn-financial/functions.c:558
msgid ""
"@FUNCTION=RECEIVED\n"
"@SYNTAX=RECEIVED(settlement,maturity,investment,rate[,basis])\n"
"@DESCRIPTION=RECEIVED calculates and returns the amount to be received at "
"maturity date for a security bond.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security.  The amount of investment is specified in "
"@investment.  @rate is the security's discount rate.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, RECEIVED returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, RECEIVED returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, RECEIVED "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=INTRATE"
msgstr ""
"@FUNCTION=RECEIVED\n"
"@SYNTAX=RECEIVED(valör,itfa,plasman,oran[,tahakkuk])\n"
"@DESCRIPTION=RECEIVED @itfa tarihinde bir tahvilden elde edilecek miktarı "
"hesaplar. @valör, menkul kıymetin valör tarihidir. @itfa, menkul kıymetin "
"itfa tarihidir. Plasman miktarı @plasman olarak belirtilir. @oran, menkul "
"kıymetin iskonto oranıdır. @tahakkuk, , kullanmak istediğiniz tahakkuk "
"esasını belirler:\n"
" \n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @valör tarihi veya @itfa tarihi geçerli değil ise, RECEIVED #SAYI! "
"hatası verir. Eğer @tahakkuk verilmez ise, ABD 30/360 kullanılır. Eğer "
"@tahakkuk < 0 veya @tahakkuk > 4 ise, RECEIVED #SAYI! hatası verir. Eğer "
"@valör, @itfa tarihinden sonra ise veya iki tarih birbirine eşit ise, "
"RECEIVED #SAYI! hatası verir.\n"
"\n"
"Benzeri: INTRATE\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=INTRATE"

#: ../plugins/fn-financial/functions.c:620
msgid ""
"@FUNCTION=PRICEDISC\n"
"@SYNTAX=PRICEDISC(settlement,maturity,discount,redemption[,basis])\n"
"@DESCRIPTION=PRICEDISC calculates and returns the price per $100 face value "
"of a security bond.  The security does not pay interest at maturity.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security.  @discount is the rate for which the security "
"is discounted.  @redemption is the amount to be received on @maturity date.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, PRICEDISC returns "
"#NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, PRICEDISC returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, "
"PRICEDISC returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEMAT"
msgstr ""
"@FUNCTION=PRICEDISC\n"
"@SYNTAX=PRICEDISC(valör,itfa,oran,itfa_fiyatı[,tahakkuk])\n"
"@DESCRIPTION=PRICEDISC bir menkul kıymetin 100 nominal değer için fiyatını "
"hesaplar. Menkul kıymet itfa tarihinde faiz ödemez. @valör, menkul kıymetin "
"valör tarihidir. @itfa, menkul kıymetin itfa tarihidir. @oran, menkul "
"kıymetin iskonto oranıdır. @tahakkuk, , kullanmak istediğiniz tahakkuk "
"esasını belirler:\n"
" \n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @valör tarihi veya @itfa tarihi geçerli değil ise, PRICEDISC #SAYI! "
"hatası verir. Eğer @tahakkuk verilmez ise, ABD 30/360 kullanılır. Eğer "
"@tahakkuk < 0 veya @tahakkuk > 4 ise, PRICEDISC #SAYI! hatası verir. Eğer "
"@valör, @itfa tarihinden sonra ise veya iki tarih birbirine eşit ise, "
"PRICEDISC #SAYI! hatası verir.\n"
"\n"
"Benzeri: PRICEMAT\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEMAT"

#: ../plugins/fn-financial/functions.c:677
msgid ""
"@FUNCTION=PRICEMAT\n"
"@SYNTAX=PRICEMAT(settlement,maturity,issue,rate,yield[,basis])\n"
"@DESCRIPTION=PRICEMAT calculates and returns the price per $100 face value "
"of a security.  The security pays interest at maturity.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security.  @issue is the issue date of the security.  "
"@rate is the discount rate of the security. @yield is the annual yield of "
"the security. @basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, PRICEMAT returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, PRICEMAT returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, PRICEMAT "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEDISC"
msgstr ""
"@FUNCTION=PRICEMAT\n"
"@SYNTAX=PRICEMAT(valör,itfa,ihraç,oran,getiri[,tahakkuk])\n"
"@DESCRIPTION=PRICEMAT bir menkul kıymetin 100 nominal değer için fiyatını "
"hesaplar. Menkul kıymet itfa tarihinde faiz öder. @valör, menkul kıymetin "
"valör tarihidir. @itfa, menkul kıymetin itfa tarihidir. @ihraç, menkul "
"kıymetin ihraç tarihidir. @getiri, menkul kıymetin getiri oranıdır. "
"@tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
" \n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @valör tarihi veya @itfa tarihi geçerli değil ise, PRICEMAT #SAYI! "
"hatası verir. Eğer @tahakkuk verilmez ise, ABD 30/360 kullanılır. Eğer "
"@tahakkuk < 0 veya @tahakkuk > 4 ise, PRICEMAT #SAYI! hatası verir. Eğer "
"@valör, @itfa tarihinden sonra ise veya iki tarih birbirine eşit ise, "
"PRICEMAT #SAYI! hatası verir.\n"
"\n"
"Benzeri: PRICEDISC\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEDISC"

#: ../plugins/fn-financial/functions.c:741
msgid ""
"@FUNCTION=DISC\n"
"@SYNTAX=DISC(settlement,maturity,par,redemption[,basis])\n"
"@DESCRIPTION=DISC calculates and returns the discount rate for a security. "
"@settlement is the settlement date of the security.\n"
"\n"
"@maturity is the maturity date of the security.  @par is the price per $100 "
"face value of the security.  @redemption is the redemption value per $100 "
"face value of the security.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, DISC returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, DISC returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, DISC "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=DISC\n"
"@SYNTAX=DISC(valör,itfa,nominal,itfa_fiyatı[,tahakkuk])\n"
"@DESCRIPTION=DISC, bir menkul kıymet için iskonto oranını hesaplar. @valör, "
"menkul kıymetin valör tarihidir. @itfa, menkul kıymetin itfa tarihidir. "
"@nominal,menkul kıymetin 100 nominal değer için fiyatıdır. @itfa_fiyatı, 100 "
"nominal değer için itfa fiyatıdır. @tahakkuk, kullanmak istediğiniz tahakkuk "
"esasını belirler:\n"
" \n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @valör tarihi veya @itfa tarihi geçerli değil ise, DISC #SAYI! hatası "
"verir. Eğer @tahakkuk verilmez ise, ABD 30/360 kullanılır. Eğer @tahakkuk < "
"0 veya @tahakkuk > 4 ise, DISC #SAYI! hatası verir. Eğer @valör, @itfa "
"tarihinden sonra ise veya iki tarih birbirine eşit ise, DISC #SAYI! hatası "
"verir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:797
msgid ""
"@FUNCTION=EFFECT\n"
"@SYNTAX=EFFECT(r,nper)\n"
"@DESCRIPTION=EFFECT calculates the effective interest rate from a given "
"nominal rate.\n"
"\n"
"Effective interest rate is calculated using this formula:\n"
"\n"
"    (1 + @r / @nper) ^ @nper - 1\n"
"\n"
"where:\n"
"\n"
"@r = nominal interest rate (stated in yearly terms)\n"
"@nper = number of periods used for compounding\n"
"\n"
"* If @rate < 0, EFFECT returns #NUM! error.\n"
"* If @nper <= 0, EFFECT returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"For example credit cards will list an APR (annual percentage rate) which is "
"a nominal interest rate.\n"
"For example if you wanted to find out how much you are actually paying "
"interest on your credit card that states an APR of 19% that is compounded "
"monthly you would type in:\n"
"=EFFECT(.19,12) and you would get .2075 or 20.75%. That is the effective "
"percentage you will pay on your loan.\n"
"@SEEALSO=NOMINAL"
msgstr ""
"@FUNCTION=EFFECT\n"
"@SYNTAX=EFFECT(r,ndön)\n"
"@DESCRIPTION=EFFECT verilen bir nominal orandan efektif faiz oranını "
"hesaplar.\n"
"Efektif faiz oranı aşağıdaki formüle göre hesaplanır:\n"
"\n"
"   ( 1 + @r / @nper ) ^ @ndön - 1\n"
"\n"
"Burada:\n"
"\n"
"@r = nominal faiz oranı (yıllık)\n"
"@ndön = bileşik faiz hesabı için dönem sayısı\n"
"\n"
"Örneğin kredi kartları nominal faiz oranı olan Yıllık Faiz Oranlarını (YFO) "
"bildirirler. \n"
"Eğer aylık bileşik faiz uygulanan ve YFO'nı %19 olan kredi kartınıza "
"gerçekte ne kadar faiz ödediğinizi bulmak isterseniz: \n"
"EFFECT(.19,12) yazarsınız ve sonuç .2075 veya %20.75 olur. Bu değer, "
"borcunuza ödediğiniz efektif faiz oranıdır. \n"
"\n"
"Benzeri: NOMINAL\n"
"@EXAMPLES=\n"
"Örneğin kredi kartları nominal faiz oranı olan Yıllık Faiz Oranlarını (YFO) "
"bildirirler. \n"
"Eğer aylık bileşik faiz uygulanan ve YFO'nı %19 olan kredi kartınıza "
"gerçekte ne kadar faiz ödediğinizi bulmak isterseniz: \n"
"=EFFECT(.19,12) yazarsınız ve sonuç .2075 veya %20.75 olur. Bu değer, "
"borcunuza ödediğiniz efektif faiz oranıdır. \n"
"@SEEALSO=NOMINAL"

#: ../plugins/fn-financial/functions.c:847
msgid ""
"@FUNCTION=NOMINAL\n"
"@SYNTAX=NOMINAL(r,nper)\n"
"@DESCRIPTION=NOMINAL calculates the nominal interest rate from a given "
"effective rate.\n"
"\n"
"Nominal interest rate is given by a formula:\n"
"\n"
"@nper * (( 1 + @r ) ^ (1 / @nper) - 1 )\n"
"where:\n"
"\n"
"@r = effective interest rate\n"
"@nper = number of periods used for compounding\n"
"\n"
"* If @rate < 0, NOMINAL returns #NUM! error.\n"
"* If @nper <= 0, NOMINAL returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=EFFECT"
msgstr ""
"@FUNCTION=NOMINAL\n"
"@SYNTAX=NOMINAL(r,ndön)\n"
"@DESCRIPTION=NOMINAL verilen bir efektif faiz oranından nominal oranı "
"bulur.\n"
"Nominal faiz oranı aşağıdaki formülle tanımlanır:\n"
"\n"
"@ndön * (( 1 + @r ) ^ (1 / @ndön) - 1 )\n"
"\n"
"@r = efektif faiz oranı\n"
"@ndön = bileşik faiz hesabında kullanılan dönem sayısı\n"
"\n"
"Benzeri: EFFECT\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=EFFECT"

#: ../plugins/fn-financial/functions.c:888
msgid ""
"@FUNCTION=ISPMT\n"
"@SYNTAX=ISPMT(rate,per,nper,pv)\n"
"@DESCRIPTION=ISPMT function returns the interest paid on a given period.\n"
"\n"
"* If @per < 1 or @per > @nper, ISPMT returns #NUM! error. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV"
msgstr ""
"@FUNCTION=ISPMT\n"
"@SYNTAX=ISPMT(oran,dön,ndön,pv)\n"
"@DESCRIPTION=ISPMT işlevi verilen dönemde ödenen faizi hesaplar.\n"
"Eğer @dön < 1 veya @dön > @ndön ise, ISPMT #SAYI! hatası verir.\n"
"\n"
"Benzeri: PV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV"

#: ../plugins/fn-financial/functions.c:928
msgid ""
"@FUNCTION=DB\n"
"@SYNTAX=DB(cost,salvage,life,period[,month])\n"
"@DESCRIPTION=DB calculates the depreciation of an asset for a given period "
"using the fixed-declining balance method.  @cost is the initial value of the "
"asset.  @salvage is the value after the depreciation.\n"
"\n"
"@life is the number of periods overall.  @period is the period for which you "
"want the depreciation to be calculated.  @month is the number of months in "
"the first year of depreciation.\n"
"\n"
"* If @month is omitted, it is assumed to be 12.\n"
"* If @cost = 0, DB returns #NUM! error.\n"
"* If @life <= 0, DB returns #NUM! error.\n"
"* If @salvage / @cost < 0, DB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DDB,SLN,SYD"
msgstr ""
"@FUNCTION=DB\n"
"@SYNTAX=DB(maliyet,hurda,ömür,dönem[,ay])\n"
"@DESCRIPTION=DB sabit azalan bakiyeler amortisman yöntemi ile bir varlığın "
"verilen dönemdeki amortismanını hesaplar. @maliyet varlığın ilk maliyetidir. "
"@hurda amortisman sonrası değeridir. @ömür toplam amortisman dönemlerinin "
"sayısıdır. @dönem, amortismanı hesaplamak istediğiniz dönemdir. @ay, ilk "
"amortisman yılındaki ay sayısıdır. Eğer @ay verilmez ise, 12 olduğu "
"varsayılır.\n"
"\n"
"Benzerleri: DDB,SLN,SYD\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DDB,SLN,SYD"

#: ../plugins/fn-financial/functions.c:992
msgid ""
"@FUNCTION=DDB\n"
"@SYNTAX=DDB(cost,salvage,life,period[,factor])\n"
"@DESCRIPTION=DDB returns the depreciation of an asset for a given period "
"using the double-declining balance method or some other similar method you "
"specify.\n"
"\n"
"@cost is the initial value of the asset, @salvage is the value after the "
"last period, @life is the number of periods, @period is the period for which "
"you want the depreciation to be calculated, and @factor is the factor at "
"which the balance declines.\n"
"\n"
"* If @factor is omitted, it is assumed to be two (double-declining balance "
"method).\n"
"* If @life <= 0, DDB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=SLN,SYD"
msgstr ""
"@FUNCTION=DDB\n"
"@SYNTAX=DDB(maliyet,hurda,ömür,dönem[,faktör])\n"
"@DESCRIPTION=DDB çifte azalan bakiye amortisman veya sizin belirlediğiniz "
"başka bir yöntemle bir varlığın verilen bir dönemdeki amortismanını "
"hesaplar. @maliyet varlığın ilk maliyetidir. @hurda amortisman sonrası "
"değeridir. @ömür toplam amortisman dönemlerinin sayısıdır. @dönem, "
"amortismanı hesaplamak istediğiniz dönemdir. @faktör, bakiyenin azalma "
"faktörüdür. Eğer @faktör verilmezse, iki olduğu (çifte azalan bakiye) "
"varsayılır.\n"
"\n"
"Benzerleri: SLN, SYD\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=SLN,SYD"

#: ../plugins/fn-financial/functions.c:1048
msgid ""
"@FUNCTION=SLN\n"
"@SYNTAX=SLN(cost,salvage_value,life)\n"
"@DESCRIPTION=SLN function will determine the straight line depreciation of "
"an asset for a single period.\n"
"\n"
"The formula is:\n"
"\n"
"Depreciation expense = ( @cost - @salvage_value ) / @life\n"
"\n"
"@cost is the cost of an asset when acquired (market value).\n"
"@salvage_value is the amount you get when asset is sold at the end of the "
"asset's useful life.\n"
"@life is the anticipated life of an asset.\n"
"\n"
"* If @life <= 0, SLN returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"For example, lets suppose your company purchases a new machine for $10,000, "
"which has a salvage value of $700 and will have a useful life of 10 years. "
"The SLN yearly depreciation is computed as follows:\n"
"=SLN(10000, 700, 10)\n"
"This will return the yearly depreciation figure of $930.\n"
"@SEEALSO=SYD"
msgstr ""
"@FUNCTION=SLN\n"
"@SYNTAX=SLN(maliyet,hurda,ömür)\n"
"@DESCRIPTION=SLN işlevi, bir varlığın tek bir dönem içinde, sabitamortisman "
"yöntemi ile amortismanını hesaplar. @maliyet varlığın ilk maliyetidir. "
"@hurda, varlığın, faydalı ömrünü tamamladıktan sonraki değeridir. @ömür "
"toplam amortisman dönemlerinin sayısıdır. Bu amortisman yöntemi, amortismanı "
"varlığın ömrü boyunca sabit olarak hesaplar.\n"
"Sabit amortisman için kullanılan formül aşağıdadır:\n"
"Amortisman bedeli = ( @maliyet - @hurda ) / @ömür\n"
"\t@maliyet = bir varlığın alındığı zamanki değeri (pazar fiyatı). \t@hurda = "
"varlığı faydalı ömrünü tamamladıktan sonra sattığınız zaman aldığınız miktar."
"\t@ömür = bir varlığın beklenen faydalı ömrü.\n"
"\n"
"Örnek:\n"
"Şirketinizin 100,000 TL'ye yeni bir makina aldığını farzedelim. Bu makinanın "
"hurda değeri 700 TL ve faydalı ömrü 10 yıl olsun.SLN yıllık amortismanı:\n"
"SLN(10000, 700, 10) eşittir 930 TL\n"
"\n"
"Benzeri: SYD\n"
"@EXAMPLES=\n"
"Örneğin şirketinizin 100,000 TL'ye yeni bir makina aldığını farzedelim. Bu "
"makinanın hurda değeri 700 TL ve faydalı ömrü 10 yıl olsun.SLN yıllık "
"amortismanı aşağıdaki şekilde hesaplanır:\n"
"=SLN(10000, 700, 10)\n"
"Yıllık amortisman bedeli 930 TL olarak hesaplanır.\n"
"@SEEALSO=SYD"

#: ../plugins/fn-financial/functions.c:1101
#, fuzzy
msgid ""
"@FUNCTION=SYD\n"
"@SYNTAX=SYD(cost,salvage_value,life,period)\n"
"@DESCRIPTION=SYD function calculates the sum-of-years digits depreciation "
"for an asset based on its cost, salvage value, anticipated life and a "
"particular period. This method accelerates the rate of the depreciation, so "
"that more depreciation expense occurs in earlier periods than in later ones. "
"The depreciable cost is the actual cost minus the salvage value. The useful "
"life is the number of periods (typically years) over which the asset is "
"depreciated.\n"
"\n"
"The Formula used for sum-of-years digits depreciation is:\n"
"\n"
"Depreciation expense =\n"
"\n"
"\t ( @cost - @salvage_value ) * (@life - @period + 1) * 2 / @life * (@life + "
"1).\n"
"\n"
"@cost is the cost of an asset when acquired (market value).\n"
"@salvage_value is the amount you get when asset sold at the end of its "
"useful life.\n"
"@life is the anticipated life of an asset.\n"
"@period is the period for which we need the expense.\n"
"\n"
"* If @life <= 0, SYD returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"For example say a company purchases a new computer for $5000 which has a "
"salvage value of $200, and a useful life of five years. We would use the "
"following to calculate the second year's depreciation using the SYD method:\n"
"=SYD(5000, 200, 5, 2) which returns 1,280.00.\n"
"@SEEALSO=SLN"
msgstr ""
"@FUNCTION=SYD\n"
"@SYNTAX=SYD(maliyet,hurda,ömür,dönem)\n"
"@DESCRIPTION=SYD işlevi yılların sayıları toplamı yöntemi ile bir varlığın "
"maliyeti, hurda değeri, faydalı ömrü ve belirli bir amortisman yöntemi ile "
"amortisman bedelini hesaplar. Bu yöntem amortisman oranını hızlandırır, "
"dolayısıyla amortisman bedeli ilk dönemlerde daha fazla, sonraki dönemlerde "
"daha az olur. Amortismana tabi maliyet, gerçek maliyetle hurda değerinin "
"farkıdır. Faydalı ömür, varlığın amortismana tabi tutulduğu dönem "
"(genellikle yıl) sayısıdır. \n"
"Yılların sayıları toplamı yöntemi için kullanılan formül:\n"
"Amortisman bedeli = ( @maliyet - @hurda ) * (@ömür - @dönem + 1) * 2 / @ömür "
"* (@ömür + 1).\n"
"\t@maliyet = = bir varlığın alındığı zamanki değeri (pazar fiyatı). \t@hurda "
"= varlığı faydalı ömrünü tamamladıktan sonra sattığınız zaman aldığınız "
"miktar.\t@ömür = bir varlığın beklenen faydalı ömrü. \t@dönem = amortisman "
"bedelini hesapladığımız dönem.\n"
"\n"
"Örneğin, bir şirketin $5000 vererek yeni bir bilgisayar aldığını farzedelim. "
"Bilgisayarın hurda bedeli $200 ve faydalı ömrü üç yıldır. Yılların sayıları "
"toplamı yöntemini kullanarak ikinci yıldaki amortismanı: \n"
"=SYD(5000, 200, 5, 2) olarak hesaplarız ve 1,280.00 sonucunu alırız.\n"
"\n"
"Benzeri: SLN\n"
"@EXAMPLES=\n"
"Örneğin, bir şirketin $5000 vererek yeni bir bilgisayar aldığını farzedelim. "
"Bilgisayarın hurda bedeli $200 ve faydalı ömrü üç yıldır. Yılların sayıları "
"toplamı yöntemini kullanarak ikinci yıldaki amortismanı: \n"
"=SYD(5000, 200, 5, 2) olarak hesaplarız ve 1,280.00 sonucunu alırız.\n"
"@SEEALSO=SLN"

#: ../plugins/fn-financial/functions.c:1162
msgid ""
"@FUNCTION=DOLLARDE\n"
"@SYNTAX=DOLLARDE(fractional_dollar,fraction)\n"
"@DESCRIPTION=DOLLARDE converts a dollar price expressed as a fraction into a "
"dollar price expressed as a decimal number.\n"
"\n"
"@fractional_dollar is the fractional number to be converted. @fraction is "
"the denominator of the fraction.\n"
"\n"
"* If @fraction is non-integer it is truncated.\n"
"* If @fraction <= 0, DOLLARDE returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARFR"
msgstr ""
"@FUNCTION=DOLLARDE\n"
"@SYNTAX=DOLLARDE(kesirli_fiyat,payda)\n"
"@DESCRIPTION=DOLLARDE kesir olarak verilmiş bir fiyatı ondalık sayıya "
"çevirir.@kesirli_fiyat, dönüştürülecek olan kesirli fiyattır. @payda, "
"kesirin paydasıdır. \n"
"Eğer @payda tamsayı değil ise, budanır. Eğer @payda <= 0 ise, DOLLARDE "
"#SAYI! hatası verir. \n"
"\n"
"Benzeri: DOLLARFR\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARFR"

#: ../plugins/fn-financial/functions.c:1221
msgid ""
"@FUNCTION=DOLLARFR\n"
"@SYNTAX=DOLLARFR(decimal_dollar,fraction)\n"
"@DESCRIPTION=DOLLARFR converts a decimal dollar price into a dollar price "
"expressed as a fraction.\n"
"\n"
"* If @fraction is non-integer it is truncated.\n"
"* If @fraction <= 0, DOLLARFR returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARDE"
msgstr ""
"@FUNCTION=DOLLARFR\n"
"@SYNTAX=DOLLARFR(ondalık_fiyat,payda)\n"
"@DESCRIPTION=DOLLARFR ondalık olarak verilmiş bir fiyatı kesirli bir fiyata "
"çevirir. \n"
"Eğer @payda tamsayı değil ise, budanır. Eğer @payda <= 0 ise, DOLLARFR "
"#SAYI! hatası verir. \n"
"\n"
"Benzeri: DOLLARDE\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARDE"

#: ../plugins/fn-financial/functions.c:1275
msgid ""
"@FUNCTION=MIRR\n"
"@SYNTAX=MIRR(values,finance_rate,reinvest_rate)\n"
"@DESCRIPTION=MIRR function returns the modified internal rate of return for "
"a given periodic cash flow. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV"
msgstr ""
"@FUNCTION=MIRR\n"
"@SYNTAX=MIRR(değerler,finansman_oranı,yatırım_oranı)\n"
"@DESCRIPTION=MIRR işlevi, verilen dönemsel bir nakit akışı için "
"değiştirilmiş iç getiri oranını hesaplar.\n"
"\n"
"Benzeri: NPV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV"

#: ../plugins/fn-financial/functions.c:1338
msgid ""
"@FUNCTION=TBILLEQ\n"
"@SYNTAX=TBILLEQ(settlement,maturity,discount)\n"
"@DESCRIPTION=TBILLEQ function returns the bond-yield equivalent (BEY) for a "
"treasury bill.  TBILLEQ is equivalent to\n"
"\n"
"\t(365 * @discount) / (360 - @discount * DSM),\n"
"\n"
"where DSM is the days between @settlement and @maturity.\n"
"\n"
"* If @settlement is after @maturity or the @maturity is set to over one year "
"later than the @settlement, TBILLEQ returns #NUM! error.\n"
"* If @discount is negative, TBILLEQ returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLPRICE,TBILLYIELD"
msgstr ""
"@FUNCTION=TBILLEQ\n"
"@SYNTAX=TBILLEQ(valör,itfa,iskonto)\n"
"@DESCRIPTION=TBILLEQ bir hazine bonosu için tahvil getiri karşıtını hesaplar."
"TBILLEQ, (365 * @iskonto) / (360 - @iskonto * DSM), DSM = @valör ile @itfa "
"tarihleri arasındaki gün sayısı olarak hesaplanır.\n"
"Eğer @valör, @itfa'dan sonra ise, veya @itfa @valör'den bir yıldan fazla "
"ise, TBILLEQ #SAYI! hatası verir. Eğer @iskonto negatif ise, TBILLEQ, #SAYI! "
"hatası verir.\n"
"\n"
"Benzerleri: TBILLPRICE, TBILLYIELD\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLPRICE,TBILLYIELD"

#: ../plugins/fn-financial/functions.c:1389
msgid ""
"@FUNCTION=TBILLPRICE\n"
"@SYNTAX=TBILLPRICE(settlement,maturity,discount)\n"
"@DESCRIPTION=TBILLPRICE function returns the price per $100 value for a "
"treasury bill where @settlement is the settlement date and @maturity is the "
"maturity date of the bill.  @discount is the treasury bill's discount rate.\n"
"\n"
"* If @settlement is after @maturity or the @maturity is set to over one year "
"later than the @settlement, TBILLPRICE returns #NUM! error.\n"
"* If @discount is negative, TBILLPRICE returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLYIELD"
msgstr ""
"@FUNCTION=TBILLPRICE\n"
"@SYNTAX=TBILLPRICE(valör,itfa,iskonto)\n"
"@DESCRIPTION=TBILLPRICE işlevi 100 nominal değerli bir hazine bonosu için "
"fiyatı hesaplar. @valör, valör tarihini, @itfa ise itfa tarihini belirler. "
"@iskonto, bononun iskonto oranıdır.\n"
"Eğer @valör, @itfa'dan sonra ise, veya @itfa @valör'den bir yıldan fazla "
"ise, TBILLPRICE #SAYI! hatası verir. Eğer @iskonto negatif ise, TBILLPRICE, "
"#SAYI! hatası verir.\n"
"\n"
"Benzerleri: TBILLEQ, TBILLYIELD\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLYIELD"

#: ../plugins/fn-financial/functions.c:1435
msgid ""
"@FUNCTION=TBILLYIELD\n"
"@SYNTAX=TBILLYIELD(settlement,maturity,pr)\n"
"@DESCRIPTION=TBILLYIELD function returns the yield for a treasury bill. "
"@settlement is the settlement date and @maturity is the maturity date of the "
"bill.  @discount is the treasury bill's discount rate.\n"
"\n"
"* If @settlement is after @maturity or the @maturity is set to over one year "
"later than the @settlement, TBILLYIELD returns #NUM! error.\n"
"* If @pr is negative, TBILLYIELD returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLPRICE"
msgstr ""
"@FUNCTION=TBILLYIELD\n"
"@SYNTAX=TBILLYIELD(valör,itfa,pr)\n"
"@DESCRIPTION=TBILLYIELD bir hazine bonosunun getirisini hesaplar. @valör, "
"valör tarihini, @itfa ise itfa tarihini belirler. @iskonto, bononun iskonto "
"oranıdır.\n"
"Eğer @valör, @itfa'dan sonra ise, veya @itfa @valör'den bir yıldan fazla "
"ise, TBILLYIELD #SAYI! hatası verir. Eğer @iskonto negatif ise, TBILLYIELD, "
"#SAYI! hatası verir. Eğer @pr negatif ise, TBILLYIELD #SAYI! hatası verir\n"
"\n"
"Benzerleri: TBILLEQ, TBILLPRICE\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLPRICE"

#: ../plugins/fn-financial/functions.c:1481
#, fuzzy
msgid ""
"@FUNCTION=RATE\n"
"@SYNTAX=RATE(nper,pmt,pv[,fv,type,guess])\n"
"@DESCRIPTION=RATE calculates the rate of an investment.\n"
"\n"
"* If @pmt is ommitted it defaults to 0\n"
"* If @nper <= 0, RATE returns #NUM! error.\n"
"* If @type != 0 and @type != 1, RATE returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,FV"
msgstr ""
"@FUNCTION=RATE\n"
"@SYNTAX=RATE(ndön,pmt,pv[,fv,tür,tahmin])\n"
"@DESCRIPTION=RATE bir yatırımın oranını hesaplar.\n"
"\n"
"Benzerleri: PV, FV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,FV"

#: ../plugins/fn-financial/functions.c:1597
msgid ""
"@FUNCTION=IRR\n"
"@SYNTAX=IRR(values[,guess])\n"
"@DESCRIPTION=IRR calculates and returns the internal rate of return of an "
"investment.  This function is closely related to the net present value "
"function (NPV).  The IRR is the interest rate for a series of cash flows "
"where the net preset value is zero.\n"
"\n"
"@values contains the series of cash flows generated by the investment.  The "
"payments should occur at regular intervals.  The optional @guess is the "
"initial value used in calculating the IRR.  You do not have to use that, it "
"is only provided for the Excel compatibility.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1:A8 contain the numbers -32432, 5324, 7432, "
"9332, 12324, 4334, 1235, -3422.  Then\n"
"IRR(A1:A8) returns 0.04375. \n"
"@SEEALSO=FV,NPV,PV"
msgstr ""
"@FUNCTION=IRR\n"
"@SYNTAX=IRR(değerler[,tahmin])\n"
"@DESCRIPTION=IRR bir yatırımın iç getiri oranını hesaplar. Bu işlev, net "
"şimdiki değer işlevi (NPV) ile yakından alakalıdır. IRR, net şimdiki değeri "
"0 olan bir nakit akışı serisinin faiz oranıdır. \n"
"Yatırımın nakit akışı serisi @değerler içerisinde yer alır. Ödemeler düzenli "
"aralıklarda olmalıdır. İsteğe bağlı @tahmin, IRR hesaplamasında kullanılan "
"ilk değerdir. @tahmin verilmek zorunda değildir, yalnızca Excel uyumluluğu "
"için bulundurulmaktadır.\n"
"Bu işlev, Excel ile uyumludur. \n"
"\n"
"Örnek:\n"
"A1:A8 gözelerinde -32432, 5324, 7432, 9332, 12324, 4334, 1235, -3422 "
"değerleri varsa: IRR(A1:A8) 0.04375 cevabını verecektir.\n"
"\n"
"Benzerleri: FV, NPV, PV\n"
"@EXAMPLES=\n"
"A1:A8 gözelerinde -32432, 5324, 7432, 9332, 12324, 4334, 1235, -3422 "
"değerleri olsun. IRR(A1:A8) 0.04375 cevabını verecektir. \n"
"@SEEALSO=FV,NPV,PV"

#: ../plugins/fn-financial/functions.c:1731
msgid ""
"@FUNCTION=PV\n"
"@SYNTAX=PV(rate,nper,pmt[,fv,type])\n"
"@DESCRIPTION=PV calculates the present value of an investment. @rate is the "
"periodic interest rate, @nper is the number of periods used for compounding. "
"@pmt is the payment made each period, @fv is the future value and @type is "
"when the payment is made.\n"
"\n"
"* If @type = 1 then the payment is made at the beginning of the period.\n"
"* If @type = 0 (or omitted) it is made at the end of each period.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=FV"
msgstr ""
"@FUNCTION=PV\n"
"@SYNTAX=PV(oran,ndön,öde[,fv,tür])\n"
"@DESCRIPTION=PV bir yatırımın şimdiki değerini hesaplar. @oran dönemsel faiz "
"oranı, @ndön bileştirme için kullanılan dönem sayısı, @öde, her dönemde "
"yapılan ödeme miktarı, @fv gelecekteki değer ve @tür her dönemde ödemenin ne "
"zaman yapıldığını belirleyen değerdir. Eğer @tür = 1 ise, ödeme dönemin "
"başında yapılır. Eğer @tür = 0 ise (veya verilmemişse), ödeme dönemin "
"sonunda yapılır.\n"
"\n"
"Benzeri: FV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=FV"

#: ../plugins/fn-financial/functions.c:1779
msgid ""
"@FUNCTION=NPV\n"
"@SYNTAX=NPV(rate,v1,v2,...)\n"
"@DESCRIPTION=NPV calculates the net present value of an investment "
"generating periodic payments.  @rate is the periodic interest rate and @v1, "
"@v2, ... are the periodic payments.  If the schedule of the cash flows are "
"not periodic use the XNPV function. \n"
"@EXAMPLES=\n"
"NPV(0.17,-10000,3340,2941,2493,3233,1732,2932) equals 186.30673.\n"
"\n"
"@SEEALSO=PV,XNPV"
msgstr ""
"@FUNCTION=NPV\n"
"@SYNTAX=NPV(oran,ö1,ö2,...)\n"
"@DESCRIPTION=NPV dönemsel ödeme yapan bir yatırımın net şimdiki değerini "
"hesaplar. @oran dönemsel faiz oranı ve @ö1, @ö2, ... dönemsel ödeme "
"miktarlarıdır. Eğer nakit akışları dönemsel değil ise, XNPV işlevi "
"kullanılmalıdır.\n"
"\n"
"Örnek:\n"
"NPV(0.17,-10000,3340,2941,2493,3233,1732,2932) 186.30673 değerini verir.\n"
"\n"
"Benzerleri: PV, XNPV\n"
"@EXAMPLES=\n"
"NPV(0.17,-10000,3340,2941,2493,3233,1732,2932) 186.30673 değerini verir.\n"
"\n"
"@SEEALSO=PV,XNPV"

#: ../plugins/fn-financial/functions.c:1830
msgid ""
"@FUNCTION=XNPV\n"
"@SYNTAX=XNPV(rate,values,dates)\n"
"@DESCRIPTION=XNPV calculates the net present value of an investment.  The "
"schedule of the cash flows is given in @dates array.  The first date "
"indicates the beginning of the payment schedule.  @rate is the interest rate "
"and @values are the payments.\n"
"\n"
"* If @values and @dates contain unequal number of values, XNPV returns the "
"#NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV,PV"
msgstr ""
"@FUNCTION=XNPV\n"
"@SYNTAX=XNPV(oran,ödemeler,tarihler)\n"
"@DESCRIPTION=XNPV bir yatırımın net şimdiki değerini hesaplar. Nakit "
"akışlarının tarihleri @tarihler serisinde verilir. İlk tarih, ödeme planının "
"başını belirtir. @oran faiz oranı ve @ödemeler de ödeme miktarlarıdır. \n"
"Eğer @ödemeler ve @tarihler eşit olmayan sayıda girdi içerirse, XNPV #SAYI! "
"hatasını verir.\n"
"\n"
"Benzerleri: NPV, PV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV,PV"

#: ../plugins/fn-financial/functions.c:1892
msgid ""
"@FUNCTION=XIRR\n"
"@SYNTAX=XIRR(values,dates[,guess])\n"
"@DESCRIPTION=XIRR calculates and returns the internal rate of return of an "
"investment that has not necessarily periodic payments.  This function is "
"closely related to the net present value function (NPV and XNPV).  The XIRR "
"is the interest rate for a series of cash flows where the XNPV is zero.\n"
"\n"
"@values contains the series of cash flows generated by the investment.  "
"@dates contains the dates of the payments.  The first date describes the "
"payment day of the initial payment and thus all the other dates should be "
"after this date. The optional @guess is the initial value used in "
"calculating the XIRR.  You do not have to use that, it is only provided for "
"the Excel compatibility.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1:A5 contain the numbers -6000, 2134, 1422, "
"1933, and 1422, and the cells B1:B5 contain the dates \"1999-01-15\", \"1999-"
"04-04\", \"1999-05-09\", \"2000-03-12\", and \"2000-05-1\". Then\n"
"XIRR(A1:A5,B1:B5) returns 0.224838. \n"
"@SEEALSO=IRR,XNPV"
msgstr ""
"@FUNCTION=XIRR\n"
"@SYNTAX=XIRR(ödemeler,tarihler[,tahmin])\n"
"@DESCRIPTION=XIRR dönemsel ödemeleri olmayan bir yatırımın iç getiri oranını "
"hesaplar. Bu işlev net şimdiki değer işlevleri ile (NPV ve XNPV) yakından "
"alakalıdır. XIRR, XNPV'si sıfır olan bir nakit akışının faiz oranıdır. \n"
"Yatırımın ödeyeceği nakit akışı serisi @ödemeler içinde bulunur. @tarihler, "
"ödeme tarihlerini içerir. İlk tarih, ilk ödeme tarihini belirtir ve bütün "
"diğer tarihler bu tarihten sonra olmalıdır. Seçime bağlı @tahmin, XIRR'ı "
"hesaplamakta kullanılan ilk tahmindir. @tahmin belirtilmek zorunda değildir, "
"yalnızca Excel uyumluluğu için bulundurulmaktadır. \n"
"Bu işlev Excel ile uyumludur\n"
"\n"
"Örnek:\n"
"A1:A5 gözeleri -6000, 2134, 1422, 1933 ve 1422 rakamlarını içersin, ve B1:B5 "
"gözeleri \"1999-01-15\", \"1999-04-04\", \"1999-05-09\", \"2000-03-12\" ve "
"\"2000-05-1\" tarihlerini içersin. \n"
"XIRR(A1:A5,B1:B5) 0.224838 değerini hesaplayacaktır.\n"
"\n"
"Benzerleri: IRR,XNPV\n"
"@EXAMPLES=\n"
"A1:A5 gözeleri -6000, 2134, 1422, 1933 ve 1422 rakamlarını içersin, ve B1:B5 "
"gözeleri \"1999-01-15\", \"1999-04-04\", \"1999-05-09\", \"2000-03-12\" ve "
"\"2000-05-1\" tarihlerini içersin. \n"
"XIRR(A1:A5,B1:B5) 0.224838 değerini hesaplayacaktır. \n"
"@SEEALSO=IRR,XNPV"

#: ../plugins/fn-financial/functions.c:2012
msgid ""
"@FUNCTION=FV\n"
"@SYNTAX=FV(rate,nper,pmt[,pv,type])\n"
"@DESCRIPTION=FV computes the future value of an investment. This is based on "
"periodic, constant payments and a constant interest rate. The interest rate "
"per period is @rate, @nper is the number of periods in an annuity, @pmt is "
"the payment made each period, @pv is the present value and @type is when the "
"payment is made.\n"
"\n"
"* If @type = 1 then the payment is made at the beginning of the period.\n"
"* If @type = 0 it is made at the end of each period.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,PMT,PPMT"
msgstr ""
"@FUNCTION=FV\n"
"@SYNTAX=FV(oran,ndön,öde,pv,tür)\n"
"@DESCRIPTION=FV bir yatırımın gelecekteki değerini hesaplar. Bu hesap, "
"dönemsel, sabit ödemeler ve sabit faiz oranına dayanır. Her dönemdeki faiz "
"oranı @oran, toplam dönem sayısı @ndön, her dönemde yapılan ödeme miktarı "
"@öde, şimdiki değer @pv ve dönem içinde ödemenin yapılış zamanı @tür olarak "
"belirtilir. Eğer @tür = 1 ise, ödeme dönem başında, @tür = 0 ise, dönem "
"sonunda yapılır.\n"
"\n"
"Benzerleri: PV, PMT, PPMT\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV, PMT, PPMT"

#: ../plugins/fn-financial/functions.c:2056
msgid ""
"@FUNCTION=PMT\n"
"@SYNTAX=PMT(rate,nper,pv[,fv,type])\n"
"@DESCRIPTION=PMT returns the amount of payment for a loan based on a "
"constant interest rate and constant payments (each payment is equal "
"amount).\n"
"\n"
"@rate is the constant interest rate.\n"
"@nper is the overall number of payments.\n"
"@pv is the present value.\n"
"@fv is the future value.\n"
"@type is the type of the payment: 0 means at the end of the period and 1 "
"means at the beginning of the period.\n"
"\n"
"* If @fv is omitted, Gnumeric assumes it to be zero.\n"
"* If @type is omitted, Gnumeric assumes it to be zero.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"
msgstr ""
"@FUNCTION=PMT\n"
"@SYNTAX=PMT(oran,ndön,pv[,fv,tür])\n"
"@DESCRIPTION=PMT, sabit faiz oranı ve sabit ödemelere (her ödeme eşit "
"miktarda) sahip bir borcun dönemsel ödeme miktarını hesaplar. @oran, sabit "
"faiz oranını, @ndön toplam ödeme sayısını, @pv şimdiki değeri, @fv "
"gelecekteki değeri gösterir. @tür ödemenin dönem içinde ne zaman "
"yapılacağını belirtir: 0 dönem sonu, 1 dönem başını belirtir.\n"
"Eğer @fv belirtilmemiş ise, Gnumeric bu değeri 0 kabul eder. Eğer @tür "
"belirtilmemiş ise, Gnumeric bu değeri sıfır kabul eder.\n"
"\n"
"Benzerleri: PPMT, PV, FV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2099
msgid ""
"@FUNCTION=IPMT\n"
"@SYNTAX=IPMT(rate,per,nper,pv[,fv,type])\n"
"@DESCRIPTION=IPMT calculates the amount of a payment of an annuity going "
"towards interest.\n"
"\n"
"Formula for IPMT is:\n"
"\n"
"IPMT(PER) = -PRINCIPAL(PER-1) * INTEREST_RATE\n"
"\n"
"where:\n"
"\n"
"PRINCIPAL(PER-1) = amount of the remaining principal from last period\n"
"\n"
"* If @fv is omitted, it is assumed to be 0.\n"
"* If @type is omitted, it is assumed to be 0.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"
msgstr ""
"@FUNCTION=IPMT\n"
"@SYNTAX=IPMT(oran,dön,ndön,pv,fv,tür)\n"
"@DESCRIPTION=IPMT bir senelik irat/borç ödemesinin ne kadarının faiz ödemesi "
"olduğunu hesaplar. \n"
"IPMT hesabının formülü:\n"
"\n"
"IPMT(DÖN) = -ANAPARA(DÖN-1) * FAİZ_ORANI\n"
"\n"
"ANAPARA(DÖN-1) = geçen dönemden kalan anapara miktarını belirtir.\n"
"\n"
"Benzerleri: PPMT, PV, FV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2151
msgid ""
"@FUNCTION=PPMT\n"
"@SYNTAX=PPMT(rate,per,nper,pv[,fv,type])\n"
"@DESCRIPTION=PPMT calculates the amount of a payment of an annuity going "
"towards principal.\n"
"\n"
"Formula for it is:\n"
"PPMT(per) = PMT - IPMT(per)\n"
"where:\n"
"\n"
"PMT = Payment received on annuity\n"
"IPMT(per) = amount of interest for period @per\n"
"\n"
"* If @fv is omitted, it is assumed to be 0.\n"
"* If @type is omitted, it is assumed to be 0.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=IPMT,PV,FV"
msgstr ""
"@FUNCTION=PPMT\n"
"@SYNTAX=PPMT(oran,dön,ndön,pv[,fv,tür])\n"
"@DESCRIPTION=PPMT bir senelik irat/borç ödemesinin ne kadarını anapara geri "
"ödemesi olduğunu hesaplar. \n"
"PPMT Formülü:\n"
"PPMT(dön) = ÖDE - IPMT(dön)\n"
"\n"
"ÖDE = Dönemsel borç/irat ödemesi\n"
"IPMT(dön) = Ödemede faiz ödemesine giden miktar\n"
"\n"
"Benzerleri: IPMT, PV, FV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=IPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2207
#, fuzzy
msgid ""
"@FUNCTION=NPER\n"
"@SYNTAX=NPER(rate,pmt,pv[,fv,type])\n"
"@DESCRIPTION=NPER calculates number of periods of an investment based on "
"periodic constant payments and a constant interest rate.\n"
"\n"
"The interest rate per period is @rate, @pmt is the payment made each period, "
"@pv is the present value, @fv is the future value and @type is when the "
"payments are due. If @type = 1, payments are due at the beginning of the "
"period, if @type = 0, payments are due at the end of the period.\n"
"\n"
"* If @rate <= 0, NPER returns #DIV0 error.\n"
"\n"
"@EXAMPLES=\n"
"For example, if you deposit $10,000 in a savings account that earns an "
"interest rate of 6%. To calculate how many years it will take to double your "
"investment use NPER as follows:\n"
"=NPER(0.06, 0, -10000, 20000,0)returns 11.895661046 which indicates that you "
"can double your money just before the end of the 12th year.\n"
"@SEEALSO=PPMT,PV,FV"
msgstr ""
"@FUNCTION=NPER\n"
"@SYNTAX=NPER(oran,öde,pv,fv,tür)\n"
"@DESCRIPTION=NPER sabit ödemelere ve sabit faiz oranına sahip bir "
"yatırımdaki toplam ödeme dönemi sayısını hesaplar. Dönemsel faiz oranı, "
"@oran; her dönemde yapılan ödeme miktarı, @öde, @pv şimdiki değer, @fv "
"gelecekteki değer The interest rate per period is @rate, @pmt is the payment "
"made each period, @pv is the present value, @fv is the future value and "
"@type is when the payments are due. If @type = 1, payments are due at the "
"begining of the period, if @type = 0, payments are due at the end of the "
"period.\n"
"@EXAMPLES=\n"
"For example, if you deposit $10,000 in a savings account that earns an "
"interest rate of 6%. To calculate home many years it will take to double "
"your investment use NPER as follows:\n"
"=NPER(0.06, 0, -10000, 20000,0)returns 11.895661046 which indicates that you "
"can double your money just before the end of the 12th year.\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2267
msgid ""
"@FUNCTION=DURATION\n"
"@SYNTAX=DURATION(settlement,maturity,coup,yield,frequency[,basis])\n"
"@DESCRIPTION=DURATION calculates the duration of a security.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@coup The annual coupon rate as a percentage.\n"
"@yield The annualized yield of the security as a percentage.\n"
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, DURATION returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=G_DURATION,MDURATION"
msgstr ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(valör,itfa,ihraç,oran,pr[,tahakkuk])\n"
"@DESCRIPTION=YIELDMAT, faizi itfa tarihinde ödenen bir yatırımın yıllık "
"getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, yatırımın "
"itfa tarihidir. @ihraç, yatırımın ihraç tarihidir. @oran, yatırımın faiz "
"oranıdır. Yatırımın 100 nominal bedeline karşılık gelen fiyat, @pr olarak "
"belirtilir. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2329
msgid ""
"@FUNCTION=G_DURATION\n"
"@SYNTAX=G_DURATION(rate,pv,fv)\n"
"@DESCRIPTION=G_DURATION calculates number of periods needed for an "
"investment to attain a desired value. This function is similar to FV and PV "
"with a difference that we do not need give the direction of cash flows e.g. -"
"100 for a cash outflow and +100 for a cash inflow.\n"
"\n"
"* If @rate <= 0, G_DURATION returns #DIV0 error.\n"
"* If @fv = 0 or @pv = 0, G_DURATION returns #DIV0 error.\n"
"* If @fv / @pv < 0, G_DURATION returns #VALUE error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV,DURATION,MDURATION"
msgstr ""
"@FUNCTION=DURATION\n"
"@SYNTAX=DURATION(oran,pv,fv)\n"
"@DESCRIPTION=DURATION bir yatırımın istenen değere gelmesi için gereken "
"dönem sayısını hesaplar. Bu işlev FV ve PV'ye benzer fakat nakit akışlarının "
"yönünü belirtmek gerekmez. örn. nakit çıkışı için -100, nakit girişi için "
"+100 gibi.\n"
"\n"
"Benzerleri: PPMT,PV,FV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2373
msgid ""
"@FUNCTION=FVSCHEDULE\n"
"@SYNTAX=FVSCHEDULE(principal,schedule)\n"
"@DESCRIPTION=FVSCHEDULE returns the future value of given initial value "
"after applying a series of compound periodic interest rates. The argument "
"@principal is the present value; @schedule is an array of interest rates to "
"apply. The @schedule argument must be a range of cells.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain interest rates 0.11, "
"0.13, 0.09, 0.17, and 0.03.  Then\n"
"FVSCHEDULE(3000,A1:A5) equals 4942.7911611.\n"
"@SEEALSO=PV,FV"
msgstr ""
"@FUNCTION=FVSCHEDULE\n"
"@SYNTAX=FVSCHEDULE(anapara,ödeme_planı)\n"
"@DESCRIPTION=FVSCHEDULE verilen bir ilk değere, bileşik dönemsel faizlerden "
"oluşan bir seriyi uyguladıktan sonra elde edilen gelecekteki değeri "
"hesaplar. Şimdiki değer @anapara, uygulanacak olan faiz değerleri dizisi ise "
"@ödeme_planı içerisinde bulunur. @ödeme_planı argümanı bir gözeler aralığı "
"olmalıdır. \n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 0.11, 0.13, 0.09, 0.17 ve 0.03 faiz oranlarına "
"sahipse:\n"
"FVSCHEDULE(3000,A1:A5), 4942.7911611 sonucunu verir.\n"
"\n"
"Benzerleri: PV, FV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 0.11, 0.13, 0.09, 0.17 ve 0.03 faiz oranlarına "
"sahiptir. \n"
"FVSCHEDULE(3000,A1:A5), 4942.7911611 sonucunu verir.\n"
"@SEEALSO=PV,FV"

#: ../plugins/fn-financial/functions.c:2420
msgid ""
"@FUNCTION=EURO\n"
"@SYNTAX=EURO(currency)\n"
"@DESCRIPTION=EURO converts one Euro to a given national currency in the "
"European monetary union.\n"
"\n"
"@currency is one of the following:\n"
"\n"
"    ATS\t(Austria)\n"
"    BEF\t(Belgium)\n"
"    DEM\t(Germany)\n"
"    ESP\t(Spain)\n"
"    EUR\t(Euro)\n"
"    FIM\t(Finland)\n"
"    FRF\t(France)\n"
"    GRD\t(Greek)\n"
"    IEP\t(Ireland)\n"
"    ITL\t(Italy)\n"
"    LUF\t(Luxembourg)\n"
"    NLG\t(Netherlands)\n"
"    PTE\t(Portugal)\n"
"\n"
"* If the given @currency is other than one of the above, EURO returns #NUM! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"EURO(\"DEM\") returns 1.95583.\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=EURO\n"
"@SYNTAX=EURO(para_birimi)\n"
"@DESCRIPTION=EURO, Euro'nun Avrupa Topluluğuna üye ülkelerin para birimleri "
"karşısındaki değerini verir. Aşağıdaki para birimleri dışındaki birimler "
"hata ile sonuçlanır:\n"
"    ATS     (Avusturya)\n"
"    BEF     (Belçika)\n"
"    DEM     (Almanya)\n"
"    ESP     (İspanya)\n"
"    FIM     (Finlandiya)\n"
"    FRF     (Fransa)\n"
"    IEP     (İrlanda)\n"
"    ITL     (İtalya)\n"
"    LUF     (Luxemburg)\n"
"    NLG     (Hollanda)\n"
"    PTE     (Portekiz)\n"
"\n"
"\n"
"Örnek:\n"
"EURO(\"DEM\") eşittir 1.95583\n"
"@EXAMPLES=\n"
"EURO(\"DEM\") eşittir 1.95583\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2530
msgid ""
"@FUNCTION=EUROCONVERT\n"
"@SYNTAX=EUROCONVERT(n,source,target)\n"
"@DESCRIPTION=EUROCONVERT converts the currency value @n of @source currency "
"to a target currency @target. Both currencies are given as three-letter "
"strings using the ISO code system names.  The following currencies are "
"available:\n"
"\n"
"    ATS\t(Austria)\n"
"    BEF\t(Belgium)\n"
"    DEM\t(Germany)\n"
"    ESP\t(Spain)\n"
"    EUR\t(Euro)\n"
"    FIM\t(Finland)\n"
"    FRF\t(France)\n"
"    GRD\t(Greek)\n"
"    IEP\t(Ireland)\n"
"    ITL\t(Italy)\n"
"    LUF\t(Luxembourg)\n"
"    NLG\t(Netherlands)\n"
"    PTE\t(Portugal)\n"
"\n"
"* If the given @source or @target is other than one of the above, "
"EUROCONVERT returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"EUROCONVERT(2.1,\"DEM\",\"EUR\") returns 1.07.\n"
"@SEEALSO=EURO"
msgstr ""
"@FUNCTION=EURO\n"
"@SYNTAX=EURO(para_birimi)\n"
"@DESCRIPTION=EURO, Euro'nun Avrupa Topluluğuna üye ülkelerin para birimleri "
"karşısındaki değerini verir. Aşağıdaki para birimleri dışındaki birimler "
"hata ile sonuçlanır:\n"
"    ATS     (Avusturya)\n"
"    BEF     (Belçika)\n"
"    DEM     (Almanya)\n"
"    ESP     (İspanya)\n"
"    FIM     (Finlandiya)\n"
"    FRF     (Fransa)\n"
"    IEP     (İrlanda)\n"
"    ITL     (İtalya)\n"
"    LUF     (Luxemburg)\n"
"    NLG     (Hollanda)\n"
"    PTE     (Portekiz)\n"
"\n"
"\n"
"Örnek:\n"
"EURO(\"DEM\") eşittir 1.95583\n"
"@EXAMPLES=\n"
"EURO(\"DEM\") eşittir 1.95583\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2580
msgid ""
"@FUNCTION=PRICE\n"
"@SYNTAX=PRICE(settle,mat,rate,yield,redemption_price,[frequency,basis])\n"
"@DESCRIPTION=PRICE returns price per $100 face value of a security. This "
"method can only be used if the security pays periodic interest.\n"
"\n"
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, PRICE returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=PRICE\n"
"@SYNTAX=PRICE(valör,vade,oran,getiri,itfa_bedeli,sıklık[,tahakkuk])\n"
"@DESCRIPTION=PRICE bir yatırımın 100 nominal değere karşılık olan fiyatını "
"hesaplar. Bu işlev, yalnızca yatırım dönemsel faiz ödemeli ise "
"kullanılabilir. Bir yıldaki kupon ödeme sayısı @sıklık değerinde belirtilir. "
"Desteklenen sıklık değerleri: 1 = yılda bir, 2 = yılda iki, 4 = yılda dört. "
"@tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @sıklık, 1, 2 veya 4'den başka bir değerde ise, PRICE #SAYI! hatası "
"verir. Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, "
"0 ve 4 arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2647
msgid ""
"@FUNCTION=YIELD\n"
"@SYNTAX=YIELD(settlement,maturity,rate,price,redemption_price,frequency[,"
"basis])\n"
"@DESCRIPTION=YIELD returns the yield on a security that pays periodic "
"interest.\n"
"\n"
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, YIELD returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=YIELD\n"
"@SYNTAX=YIELD(valör,itfa,oran,fiyat,itfa_bedeli,sıklık[,tahakkuk])\n"
"@DESCRIPTION=Dönemsel faiz ödeyen bir yatırımın getirisini hesaplamak için "
"YIELD kullanılır. Bir yıldaki kupon ödeme sayısı @sıklık değerinde "
"belirtilir. Desteklenen sıklık değerleri: 1 = yılda bir, 2 = yılda iki, 4 = "
"yılda dört. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @sıklık, 1, 2 veya 4'den başka bir değerde ise, YIELD #SAYI! hatası "
"verir. Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, "
"0 ve 4 arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2770
msgid ""
"@FUNCTION=YIELDDISC\n"
"@SYNTAX=YIELDDISC(settlement,maturity,pr,redemption[,basis])\n"
"@DESCRIPTION=YIELDDISC calculates the annual yield of a security that is "
"discounted.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security. @pr is the price per $100 face value of the "
"security. @redemption is the redemption value per $100 face value. @basis is "
"the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, YIELDDISC returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=YIELDDISC\n"
"@SYNTAX=YIELDDISC(valör,itfa,pr,itfa_bedeli[,tahakkuk])\n"
"@DESCRIPTION=YIELDDISC iskontolu bir yatırımın yıllık getirisini hesaplar. "
"Yatırımın valör tarihi @valör, itfa tarihi ise @itfa olarak belirtilir. @pr, "
"yatırımda 100 nominal bedele karşı gelen fiyattır. @itfa_bedeli, 100 nominal "
"değere karşı gelen itfa bedelidir. @tahakkuk, kullanmak istediğiniz tahakkuk "
"esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2834
#, fuzzy
msgid ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(settlement,maturity,issue,rate,pr[,basis])\n"
"@DESCRIPTION=YIELDMAT calculates the annual yield of a security for which "
"the interest is paid at maturity date.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @issue is the issue date of the security. "
"@rate is the interest rate set to the security. @pr is the price per $100 "
"face value of the security. @basis is the type of day counting system you "
"want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(valör,itfa,ihraç,oran,pr[,tahakkuk])\n"
"@DESCRIPTION=YIELDMAT, faizi itfa tarihinde ödenen bir yatırımın yıllık "
"getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, yatırımın "
"itfa tarihidir. @ihraç, yatırımın ihraç tarihidir. @oran, yatırımın faiz "
"oranıdır. Yatırımın 100 nominal bedeline karşılık gelen fiyat, @pr olarak "
"belirtilir. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2890
msgid ""
"@FUNCTION=ODDFPRICE\n"
"@SYNTAX=ODDFPRICE(settlement,maturity,issue,first_coupon,rate,yld,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDFPRICE returns the price per $100 face value of a security. "
"The security should have an odd short or long first period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @issue is the issue date of the security. "
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDFPRICE returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDFPRICE\n"
"@SYNTAX=ODDFPRICE(valör,itfa,ihraç,ilk_kupon,oran,getiri,itfa_bedeli,sıklık[,"
"tahakkuk])\n"
"@DESCRIPTION=ODDFPRICE bir yatırımın 100 nominal bedele karşılık gelen "
"fiyatını hesaplar. Yatırımın normal dönemden daha önce veya sonra olan bir "
"ilk faiz ödemesi olmalıdır. @valör, yatırımın valör tarihidir. @itfa, "
"yatırımın itfa tarihidir. @ihraç, yatırımın ihraç tarihidir. @sıklık, bir "
"yıldaki kupon ödemelerinin sayısıdır. İzin verilen sıklıklar: 1=yılda bir, "
"2=yılda iki, 4=yılda dört. @tahakkuk, kullanmak istediğiniz tahakkuk esasını "
"belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @sıklık değeri 1, 2, veya 4 değil ise, ODDFPRICE, #SAYI! hatası verir. "
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3047
msgid ""
"@FUNCTION=ODDFYIELD\n"
"@SYNTAX=ODDFYIELD(settlement,maturity,issue,first_coupon,rate,pr,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDFYIELD calculates the yield of a security having an odd "
"first period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @frequency is the number of coupon payments "
"per year. Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDFYIELD returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDFYIELD\n"
"@SYNTAX=ODDFYIELD(valör,itfa,ihraç,ilk_kupon,oran,pr,itfa_bedeli,sıklık[,"
"tahakkuk])\n"
"@DESCRIPTION=ODDFYIELD ilk faiz ödemesi normal dönemin dışında olan bir "
"yatırımın getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, "
"yatırımın itfa tarihidir. @sıklık, bir yıldaki kupon ödemelerinin sayısıdır. "
"İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört. @tahakkuk, "
"kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @sıklık değeri 1, 2, veya 4 değil ise, ODDFYIELD, #SAYI! hatası verir. "
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3158
msgid ""
"@FUNCTION=ODDLPRICE\n"
"@SYNTAX=ODDLPRICE(settlement,maturity,last_interest,rate,yld,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDLPRICE calculates the price per $100 face value of a "
"security that has an odd last coupon period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @frequency is the number of coupon payments "
"per year. Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDLPRICE returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDLPRICE\n"
"@SYNTAX=ODDLPRICE(valör,itfa,son_faiz,oran,getiri,itfa_bedeli,sıklık[,"
"tahakkuk])\n"
"@DESCRIPTION=ODDLPRICE, son faiz ödemesi normal dönemselliğin dışında olan "
"bir yatırımın, 100 nominal bedele karşılık gelen fiyatını hesaplar. @valör, "
"yatırımın valör tarihidir. @itfa, yatırımın itfa tarihidir. @sıklık, bir "
"yıldaki kupon ödemelerinin sayısıdır. İzin verilen sıklıklar: 1=yılda bir, "
"2=yılda iki, 4=yılda dört. @tahakkuk, kullanmak istediğiniz tahakkuk esasını "
"belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @sıklık değeri 1, 2, veya 4 değil ise, ODDLPRICE, #SAYI! hatası verir. "
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3252
msgid ""
"@FUNCTION=ODDLYIELD\n"
"@SYNTAX=ODDLYIELD(settlement,maturity,last_interest,rate,pr,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDLYIELD calculates the yield of a security having an odd last "
"period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @frequency is the number of coupon payments "
"per year. Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDLYIELD returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDLYIELD\n"
"@SYNTAX=ODDLYIELD(settlement,maturity,last_interest,rate,pr,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDLYIELD, son faiz ödemesi normal dönemselliğin dışında olan "
"bir yatırımın getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, "
"yatırımın itfa tarihidir. @sıklık, bir yıldaki kupon ödemelerinin sayısıdır. "
"İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört. @tahakkuk, "
"kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @sıklık değeri 1, 2, veya 4 değil ise, ODDLYIELD, #SAYI! hatası verir. "
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3346
msgid ""
"@FUNCTION=AMORDEGRC\n"
"@SYNTAX=AMORDEGRC(cost,purchase_date,first_period,salvage,period,rate[,"
"basis])\n"
"@DESCRIPTION=AMORDEGRC: Calculates depreciation for each accounting period "
"using French accounting conventions.   Assets purchased in the middle of a "
"period take prorated depreciation into account.  This is similar to "
"AMORLINC, except that a depreciation coefficient is applied in the "
"calculation depending on the life of the assets.\n"
"Named for AMORtissement DEGRessif Comptabilite\n"
"\n"
"@cost The value of the asset.\n"
"@purchase_date The date the asset was purchased.\n"
"@first_period The end of the first period.\n"
"@salvage Asset value at maturity.\n"
"@period The length of accounting periods.\n"
"@rate rate of depreciation as a percentage.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"AMORDEGRC(2400,DATE(1998,8,19),DATE(1998,12,30),300,1,0.14,1) = 733\n"
"\n"
"@SEEALSO=AMORLINC"
msgstr ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(valör,itfa,ihraç,oran,pr[,tahakkuk])\n"
"@DESCRIPTION=YIELDMAT, faizi itfa tarihinde ödenen bir yatırımın yıllık "
"getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, yatırımın "
"itfa tarihidir. @ihraç, yatırımın ihraç tarihidir. @oran, yatırımın faiz "
"oranıdır. Yatırımın 100 nominal bedeline karşılık gelen fiyat, @pr olarak "
"belirtilir. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3413
msgid ""
"@FUNCTION=AMORLINC\n"
"@SYNTAX=AMORLINC(cost,purchase_date,first_period,salvage,period,rate[,"
"basis])\n"
"@DESCRIPTION=AMORLINC: Calculates depreciation for each accounting period "
"using French accounting conventions.   Assets purchased in the middle of a "
"period take prorated depreciation into account.\n"
"Named for AMORtissement LINeaire Comptabilite.\n"
"\n"
"@cost The value of the asset.\n"
"@purchase_date The date the asset was purchased.\n"
"@first_period The end of the first period.\n"
"@salvage Asset value at maturity.\n"
"@period The length of accounting periods.\n"
"@rate rate of depreciation as a percentage.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"AMORLINC(2400,DATE(1998,8,19),DATE(1998,12,31),300,1,0.15,1) = 360\n"
"\n"
"@SEEALSO=AMORDEGRC"
msgstr ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(valör,itfa,ihraç,oran,pr[,tahakkuk])\n"
"@DESCRIPTION=YIELDMAT, faizi itfa tarihinde ödenen bir yatırımın yıllık "
"getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, yatırımın "
"itfa tarihidir. @ihraç, yatırımın ihraç tarihidir. @oran, yatırımın faiz "
"oranıdır. Yatırımın 100 nominal bedeline karşılık gelen fiyat, @pr olarak "
"belirtilir. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3475
msgid ""
"@FUNCTION=COUPDAYBS\n"
"@SYNTAX=COUPDAYBS(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPDAYBS returns the number of days from the beginning of the "
"coupon period to the settlement date.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPDAYBS returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 89\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 0\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYBS\n"
"@SYNTAX=COUPDAYBS(valör,itfa,sıklık[,tahakkuk])\n"
"@DESCRIPTION=COUPDAYBS kupon döneminin başından valör tarihine kadar olan "
"gün sayısını hesaplar. @valör, yatırımın valör tarihidir. @itfa, yatırımın "
"itfa tarihidir. @sıklık, bir yıldaki kupon ödemelerinin sayısıdır. İzin "
"verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört. @tahakkuk, "
"kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"5  Avrupa+ 30/360\n"
"(Tahakkuk esaslarının ayrıntılı açıklaması için gnumeric kılavuzuna "
"bakınız.)\n"
"Eğer @sıklık değeri 1, 2, veya 4 değil ise, COUPDAYBS, #SAYI! hatası verir. "
"Eğer @tahakkuk belirtilmez ise, MSRB 30/360 uygulanır. Eğer @tahakkuk, 0 ve "
"4 arasında değil ise, #SAYI! hatası verilir. \n"
"\n"
"Örnekler:\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 89\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 0\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 89\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 0\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3523
msgid ""
"@FUNCTION=COUPDAYS\n"
"@SYNTAX=COUPDAYS(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPDAYS returns the number of days in the coupon period of the "
"settlement date.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPDAYS returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 90\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 90\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,1,FALSE) = 91\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYS\n"
"@SYNTAX=COUPDAYS(valör,itfa,sıklık[,tahakkuk,aysonu])\n"
"@DESCRIPTION=COUPDAYS valör tarihinin içinde bulunduğu kupon dönemindeki gün "
"sayısını hesaplar.\n"
" @valör, yatırımın valör tarihidir.\n"
" @itfa, yatırımın itfa tarihidir.\n"
" @sıklık, bir yıldaki kupon ödemelerinin sayısıdır.\n"
" @aysonu = DOĞRU ise itfa tarihleri ay sonu özellikli elde edilir.\n"
" İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört, 6,= yılda "
"altı, ve 12=aylık\n"
" @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"5  Avrupa+ 30/360\n"
"(Tahakkuk esaslarının ayrıntılı açıklaması için gnumeric kılavuzuna "
"bakınız.)\n"
"\n"
"Eğer @sıklık değeri yukarıdaki değerlerden biri değilse, COUPDAYS, #SAYI! "
"hatası verir. Eğer @tahakkuk belirtilmez ise, MSRB 30/360 uygulanır. Eğer "
"@tahakkuk, 0 ve 5 arasında değil ise, #SAYI! hatası verilir. \n"
"\n"
"Örnekler:\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 90\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 90\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,1,YANLIŞ) = 91\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3572
msgid ""
"@FUNCTION=COUPDAYSNC\n"
"@SYNTAX=COUPDAYSNC(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPDAYSNC returns the number of days from the settlement date "
"to the next coupon date.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPDAYSNC returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0) = 1\n"
"COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 89\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYSNC\n"
"@SYNTAX=COUPDAYSNC(valör,itfa,sıklık[,tahakkuk,aysonu])\n"
"@DESCRIPTION=COUPDAYSNC valör tarihinden bir sonraki kupon tarihine kadar "
"olan gün sayısını hesaplar.\n"
" @valör, yatırımın valör tarihidir.\n"
" @itfa, yatırımın itfa tarihidir.\n"
" @sıklık, bir yıldaki kupon ödemelerinin sayısıdır.\n"
" @aysonu = DOĞRU ise itfa tarihleri ay sonu özellikli elde edilir.\n"
"İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört, 6=yılda 6, "
"12=aylık.\n"
" @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"5  Avrupa+ 30/360\n"
"(Tahakkuk esaslarının ayrıntılı açıklaması için gnumeric kılavuzuna "
"bakınız.)\n"
"\n"
"Eğer @sıklık değeri geçersizse, COUPDAYSNC, #SAYI! hatası verir.\n"
"Eğer @tahakkuk belirtilmez ise, MSRB 30/360 uygulanır.\n"
"Eğer @tahakkuk, 0 ve 5 arasında değil ise, #SAYI! hatası verilir. \n"
"\n"
"Örnekler:\n"
"COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0) = 1\n"
"COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 89\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3620
msgid ""
"@FUNCTION=COUPNCD\n"
"@SYNTAX=COUPNCD(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPNCD returns the coupon date following settlement.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPNCD returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 30-Nov-2002\n"
"COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 28-Feb-2003\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPNCD\n"
"@SYNTAX=COUPNCD(valör,itfa,sıklık[,tahakkuk,aysonu])\n"
"@DESCRIPTION=COUPNCD valör tarihinden sonraki kupon tarihini hesaplar.\n"
" @valör, yatırımın valör tarihidir.\n"
" @itfa, yatırımın itfa tarihidir.\n"
" @sıklık, bir yıldaki kupon ödemelerinin sayısıdır.\n"
" @aysonu = DOĞRU ise itfa tarihleri ay sonu özellikli elde edilir.\n"
"İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört, 6=yılda 6, "
"12=aylık.\n"
" @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"5  Avrupa+ 30/360\n"
"(Tahakkuk esaslarının ayrıntılı açıklaması için gnumeric kılavuzuna "
"bakınız.)\n"
"\n"
"Eğer @sıklık değeri geçersizse, COUPNCD, #SAYI! hatası verir.\n"
"Eğer @tahakkuk belirtilmez ise, MSRB 30/360 uygulanır.\n"
"Eğer @tahakkuk, 0 ve 5 arasında değil ise, #SAYI! hatası verilir. \n"
"\n"
"Örnekler:\n"
"COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 30.Kasım.2002\n"
"COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 28.Şubat.2003\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3669
msgid ""
"@FUNCTION=COUPPCD\n"
"@SYNTAX=COUPPCD(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPPCD returns the coupon date preceding settlement.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPPCD returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 31-Aug-2002\n"
"COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 29-Nov-2002\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPPCD\n"
"@SYNTAX=COUPPCD(valör,itfa,sıklık[,tahakkuk,aysonu])\n"
"@DESCRIPTION=COUPPCD valör tarihinden önceki kupon tarihini hesaplar.\n"
" @valör, yatırımın valör tarihidir.\n"
" @itfa, yatırımın itfa tarihidir.\n"
" @sıklık, bir yıldaki kupon ödemelerinin sayısıdır.\n"
" @aysonu = DOĞRU ise itfa tarihleri ay sonu özellikli elde edilir.\n"
"İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört, 6=yılda 6, "
"12=aylık.\n"
" @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"5  Avrupa+ 30/360\n"
"(Tahakkuk esaslarının ayrıntılı açıklaması için gnumeric kılavuzuna "
"bakınız.)\n"
"\n"
"Eğer @sıklık değeri geçersizse, COUPNCD, #SAYI! hatası verir.\n"
"Eğer @tahakkuk belirtilmez ise, MSRB 30/360 uygulanır.\n"
"Eğer @tahakkuk, 0 ve 5 arasında değil ise, #SAYI! hatası verilir. \n"
"\n"
"Örnekler:\n"
"COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 31.Ağustos.2002\n"
"COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 29.Kasım.2002\n"
"\n"
" @EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3719
msgid ""
"@FUNCTION=COUPNUM\n"
"@SYNTAX=COUPNUM(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPNUM returns the numbers of coupons to be paid between the "
"settlement and maturity dates, rounded up.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"* If @frequency is other than 1, 2, 4, 6 or 12, COUPNUM returns #NUM! "
"error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is not in between 0 and 5, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0) = 6\n"
"COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 5\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPNUM\n"
"@SYNTAX=COUPNUM(valör,itfa,sıklık[,tahakkuk,aysonu])\n"
"@DESCRIPTION=COUPNUM yuvarlanmış olarak, valör ve itfa tarihleri arasında "
"kalan kupon ödeme sayısını hesaplar.\n"
" @valör, yatırımın valör tarihidir.\n"
" @itfa, yatırımın itfa tarihidir.\n"
" @sıklık, bir yıldaki kupon ödemelerinin sayısıdır.\n"
" @aysonu = DOĞRU ise itfa tarihleri ay sonu özellikli elde edilir.\n"
"İzin verilen sıklıklar: 1=yılda bir, 2=yılda iki, 4=yılda dört, 6=yılda 6, "
"12=aylık.\n"
" @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"5  Avrupa+ 30/360\n"
"(Tahakkuk esaslarının ayrıntılı açıklaması için gnumeric kılavuzuna "
"bakınız.)\n"
"\n"
"Eğer @sıklık değeri geçersizse, COUPNCD, #SAYI! hatası verir.\n"
"Eğer @tahakkuk belirtilmez ise, MSRB 30/360 uygulanır.\n"
"Eğer @tahakkuk, 0 ve 5 arasında değil ise, #SAYI! hatası verilir. \n"
"\n"
"Örnekler:\n"
"COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0) = 6\n"
"COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0,YANLIŞ) = 5\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3763
msgid ""
"@FUNCTION=CUMIPMT\n"
"@SYNTAX=CUMIPMT(rate,nper,pv,start_period,end_period,type)\n"
"@DESCRIPTION=CUMIPMT returns the cumulative interest paid on a loan between "
"@start_period and @end_period.\n"
"\n"
"* If @rate <= 0, CUMIPMT returns #NUM! error.\n"
"* If @nper <= 0, CUMIPMT returns #NUM! error.\n"
"* If @pv <= 0, CUMIPMT returns #NUM! error.\n"
"* If @start_period < 1, CUMIPMT returns #NUM! error.\n"
"* If @end_period < @start_period, CUMIPMT returns #NUM! error.\n"
"* If @end_period > @nper, CUMIPMT returns #NUM! error.\n"
"* If @type <> 0 and @type <> 1, CUMIPMT returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=VDB\n"
"@SYNTAX=VDB(maliyet,hurda,ömür,baş_dönem,son_dönem[,faktör,bayrak])\n"
"@DESCRIPTION=VDB çift azalan bakiye yöntemini kullanarak bir varlığın "
"verilen tam veya kısmi bir dönem için amortismanını hesaplar.\n"
"\n"
"Benzeri: DB\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DB"

#: ../plugins/fn-financial/functions.c:3816
msgid ""
"@FUNCTION=CUMPRINC\n"
"@SYNTAX=CUMPRINC(rate,nper,pv,start_period,end_period,type)\n"
"@DESCRIPTION=CUMPRINC returns the cumulative principal paid on a loan "
"between @start_period and @end_period.\n"
"\n"
"* If @rate <= 0, CUMPRINC returns #NUM! error.\n"
"* If @nper <= 0, CUMPRINC returns #NUM! error.\n"
"* If @pv <= 0, CUMPRINC returns #NUM! error.\n"
"* If @start_period < 1, CUMPRINC returns #NUM! error.\n"
"* If @end_period < @start_period, CUMPRINC returns #NUM! error.\n"
"* If @end_period > @nper, CUMPRINC returns #NUM! error.\n"
"* If @type <> 0 and @type <> 1, CUMPRINC returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=VDB\n"
"@SYNTAX=VDB(maliyet,hurda,ömür,baş_dönem,son_dönem[,faktör,bayrak])\n"
"@DESCRIPTION=VDB çift azalan bakiye yöntemini kullanarak bir varlığın "
"verilen tam veya kısmi bir dönem için amortismanını hesaplar.\n"
"\n"
"Benzeri: DB\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DB"

#: ../plugins/fn-financial/functions.c:3869
msgid ""
"@FUNCTION=MDURATION\n"
"@SYNTAX=MDURATION(settlement,maturity,coupon,yield,frequency[,basis])\n"
"@DESCRIPTION=MDURATION returns the Macauley duration for a security with par "
"value 100.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"* If @settlement or @maturity are not valid dates, MDURATION returns #NUM! "
"error.\n"
"* If @frequency is other than 1, 2, or 4, MDURATION returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DURATION,G_DURATION"
msgstr ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(valör,itfa,ihraç,oran,pr[,tahakkuk])\n"
"@DESCRIPTION=YIELDMAT, faizi itfa tarihinde ödenen bir yatırımın yıllık "
"getirisini hesaplar. @valör, yatırımın valör tarihidir. @itfa, yatırımın "
"itfa tarihidir. @ihraç, yatırımın ihraç tarihidir. @oran, yatırımın faiz "
"oranıdır. Yatırımın 100 nominal bedeline karşılık gelen fiyat, @pr olarak "
"belirtilir. @tahakkuk, kullanmak istediğiniz tahakkuk esasını belirler:\n"
"\n"
"0  ABD 30/360\n"
"1  gün adedi/gün adedi\n"
"2  gün adedi/360\n"
"3  gün adedi/365\n"
"4  Avrupa 30/360\n"
"\n"
"Eğer @tahakkuk belirtilmez ise, ABD 30/360 uygulanır. Eğer @tahakkuk, 0 ve 4 "
"arasında değil ise, #SAYI! hatası verilir. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3930
msgid ""
"@FUNCTION=VDB\n"
"@SYNTAX=VDB(cost,salvage,life,start_period,end_period[,factor,switch])\n"
"@DESCRIPTION=VDB calculates the depreciation of an asset for a given period "
"or partial period using the double-declining balance method.\n"
"\n"
"* If @start_period < 0, VDB returns #NUM! error.\n"
"* If @start_period > @end_period, VDB returns #NUM! error.\n"
"* If @end_period > @life, VDB returns #NUM! error.\n"
"* If @cost < 0, VDB returns #NUM! error.\n"
"* If @salvage > @cost, VDB returns #NUM! error.\n"
"* If @factor <= 0, VDB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DB"
msgstr ""
"@FUNCTION=VDB\n"
"@SYNTAX=VDB(maliyet,hurda,ömür,baş_dönem,son_dönem[,faktör,bayrak])\n"
"@DESCRIPTION=VDB çift azalan bakiye yöntemini kullanarak bir varlığın "
"verilen tam veya kısmi bir dönem için amortismanını hesaplar.\n"
"\n"
"Benzeri: DB\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DB"

#: ../plugins/fn-info/functions.c:69
msgid ""
"@FUNCTION=CELL\n"
"@SYNTAX=CELL(type,ref)\n"
"@DESCRIPTION=CELL returns information about the formatting, location, or "
"contents of a cell.\n"
"\n"
"@type specifies the type of information you want to obtain:\n"
"\n"
"  address    \tReturns the given cell reference as text.\n"
"  col        \t\tReturns the number of the column in @ref.\n"
"  contents   \tReturns the contents of the cell in @ref.\n"
"  format     \t\tReturns the code of the format of the cell.\n"
"  parentheses\tReturns 1 if @ref contains a negative value\n"
"             \t\tand its format displays it with parentheses.\n"
"  row        \t\tReturns the number of the row in @ref.\n"
"  width      \t\tReturns the column width.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Cell(\"format\",A1) returns the code of the format of the cell A1.\n"
"\n"
"@SEEALSO=INDIRECT"
msgstr ""
"@FUNCTION=CELL\n"
"@SYNTAX=CELL(türü,ref)\n"
"@DESCRIPTION=Gözenin içeriği, konumu ve biçemleme bilgilerini verir. @türü "
"ile aradığınız bilgi türünü belirtebilirsiniz:\n"
" address       belirtilen göze başvurusu\n"
" col           @ref içindeki sütun sayısı\n"
" contents      @ref içindeki gözelerin\n"
"               içeriği\n"
" format        göze biçem kodu\n"
" parentheses   @ref bir negatif değer\n"
"               içeriyorsa biçem parantezli\n"
"               gösterilir.\n"
" row           @ref içindeki satır sayısı\n"
" width         Sütun genişliği\n"
"\n"
"Bu işlev Excel uyumludur. \n"
"\n"
"Örnek:\n"
"CELL(\"format\",A1) işlevi\n"
"A1 gözesinin biçem kodu ile döner.\n"
"@EXAMPLES=\n"
"CEll(\"format\",A1) A1 gözesinin biçem kodu ile döner.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1166
msgid ""
"@FUNCTION=EXPRESSION\n"
"@SYNTAX=EXPRESSION(cell)\n"
"@DESCRIPTION=EXPRESSION returns expression in @cell as a string, or empty if "
"the cell is not an expression.\n"
"@EXAMPLES=\n"
"entering '=EXPRESSION(A3)' in A2 = empty (assuming there is nothing in A3).\n"
"entering '=EXPRESSION(A2)' in A1 = 'EXPRESSION(A3)'.\n"
"\n"
"@SEEALSO=TEXT"
msgstr ""
"@SYNTAX=EXPRESSION(göze)\n"
"@DESCRIPTION=EXPRESSION @göze bir ifade ise bu ifadeyi bir dizge olarak "
"verir, değilse boş döner.\n"
"Örnekler:\n"
"A1 içinde EXPRESSION(A2) eşittir 'EXPRESSION(A3)'.\n"
"A2 içinde EXPRESSION(A3) eşittir ''.\n"
"\n"
"Benzer işlev: TEXT\n"
"@EXAMPLES=\n"
"A1 içinde EXPRESSION(A2) eşittir 'EXPRESSION(A3)'.\n"
"A2 içinde EXPRESSION(A3) eşittir ''.\n"
"\n"
"@SEEALSO=TEXT"

#: ../plugins/fn-info/functions.c:1213
msgid ""
"@FUNCTION=COUNTBLANK\n"
"@SYNTAX=COUNTBLANK(range)\n"
"@DESCRIPTION=COUNTBLANK returns the number of blank cells in a @range.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COUNTBLANK(A1:A20) returns the number of blank cell in A1:A20.\n"
"\n"
"@SEEALSO=COUNT"
msgstr ""
"@FUNCTION=COUNTBLANK\n"
"@SYNTAX=COUNTBLANK(aralık)\n"
"@DESCRIPTION=COUNTBLANK işlevi verilen bir @aralık'taki boş gözelerin "
"sayısını verir.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"COUNTBLANK(A1:A20) işlevi A1:A20 içindeki boş gözelerin sayısını verir.\n"
"\n"
"Benzer işlev: COUNT\n"
"@EXAMPLES=\n"
"COUNTBLANK(A1:A20) işlevi A1:A20 içindeki boş gözelerin sayısını verir.\n"
"\n"
"@SEEALSO=COUNT"

#: ../plugins/fn-info/functions.c:1264
msgid ""
"@FUNCTION=INFO\n"
"@SYNTAX=INFO(type)\n"
"@DESCRIPTION=INFO returns information about the current operating "
"environment. \n"
"\n"
"@type is the type of information you want to obtain:\n"
"\n"
"  memavail \tReturns the amount of memory available, bytes.\n"
"  memused  \tReturns the amount of memory used (bytes).\n"
"  numfile  \t\tReturns the number of active worksheets.\n"
"  osversion\t\tReturns the operating system version.\n"
"  recalc   \t\tReturns the recalculation mode (automatic).\n"
"  release  \t\tReturns the version of Gnumeric as text.\n"
"  system   \t\tReturns the name of the environment.\n"
"  totmem   \t\tReturns the amount of total memory available.\n"
"\n"
"* This function is Excel compatible, except that types directory and origin "
"are not implemented.\n"
"\n"
"@EXAMPLES=\n"
"INFO(\"system\") returns \"Linux\" on a Linux system.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=INFO\n"
"@SYNTAX=INFO(türü)\n"
"@DESCRIPTION= İşletim sistemi hakkında bilgi verir. @türü ile aradığınız "
"bilgi türünü belirtebilirsiniz:\n"
" memavail    Serbest bellek miktarı (bayt)\n"
" memused     Kullanımdaki bellek miktarı (bayt)\n"
" numfile     Etkin çizelge sayısı\n"
" osversion   işletim sistemi sürümü\n"
" recalc      yeniden hesaplama kipi (otomatik)\n"
" release     Gnumeric sürümü\n"
" system      Ortam ismi\n"
" totmem      Toplam bellek miktarı.\n"
"\n"
"Dizin ve orijin türleri dışında Excel uyumludur.\n"
"Örnek:\n"
"Bir Linux sistemi üzerinde:\n"
"INFO(\"system\") eşittir \"Linux\"\n"
"\n"
"@EXAMPLES=\n"
"Bir Linux sistemi üzerinde INFO(\"system\") eşittir \"Linux\".\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1372
msgid ""
"@FUNCTION=ISERROR\n"
"@SYNTAX=ISERROR(value)\n"
"@DESCRIPTION=ISERROR returns a TRUE value if the expression has an error.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISERROR(NA()) equals TRUE.\n"
"\n"
"@SEEALSO=ERROR"
msgstr ""
"@FUNCTION=ISERROR\n"
"@SYNTAX=ISERROR(ifade)\n"
"@DESCRIPTION=ISERROR işlevi @ifade hatalı ise DOĞRU ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISERROR(NA()) eşittir DOĞRU\n"
"\n"
"Benzer işlev: ISERR, ERROR\n"
"@EXAMPLES=\n"
"ISERROR(NA()) eşittir DOĞRU.\n"
"\n"
"@SEEALSO=ERROR"

#: ../plugins/fn-info/functions.c:1397
msgid ""
"@FUNCTION=ISNA\n"
"@SYNTAX=ISNA(value)\n"
"@DESCRIPTION=ISNA returns TRUE if the value is the #N/A error value.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISNA(NA()) equals TRUE.\n"
"\n"
"@SEEALSO=NA"
msgstr ""
"@FUNCTION=ISNA\n"
"@SYNTAX=ISNA(değer)\n"
"@DESCRIPTION=ISNA işlevi @değer #YOK! ise DOĞRU ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISNA(NA()) eşittir DOĞRU\n"
"\n"
"Benzer işlev: NA\n"
"@EXAMPLES=\n"
"ISNA(NA()) eşittir DOĞRU.\n"
"\n"
"@SEEALSO=NA"

#: ../plugins/fn-info/functions.c:1426
msgid ""
"@FUNCTION=ISERR\n"
"@SYNTAX=ISERR(value)\n"
"@DESCRIPTION=ISERR returns TRUE if the value is any error value except #N/"
"A.\n"
"\n"
"* This function is Excel compatible. \n"
"@EXAMPLES=\n"
"ISERR(NA()) return FALSE.\n"
"\n"
"@SEEALSO=ISERROR"
msgstr ""
"@FUNCTION=ISERR\n"
"@SYNTAX=ISERR(değer)\n"
"@DESCRIPTION=ISERR işlevi #YOK! hatası dışındaki tüm hata değerleri için "
"DOĞRU sonucu verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISERR(NA()) eşittir YANLIŞ\n"
"\n"
"Benzer işlevler: ISERROR, ERROR\n"
"@EXAMPLES=\n"
"ISERR(NA()) eşittir YANLIŞ.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1452
msgid ""
"@FUNCTION=ERROR.TYPE\n"
"@SYNTAX=ERROR.TYPE(value)\n"
"@DESCRIPTION=ERROR.TYPE returns an error number corresponding to the given "
"error value.  The error numbers for error values are:\n"
"\n"
"\t#DIV/0!  \t\t2\n"
"\t#VALUE!  \t3\n"
"\t#REF!    \t\t4\n"
"\t#NAME?   \t5\n"
"\t#NUM!    \t\t6\n"
"\t#N/A     \t\t7\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ERROR.TYPE(NA()) equals 7.\n"
"\n"
"@SEEALSO=ISERROR"
msgstr ""
"@FUNCTION=ERROR.TYPE\n"
"@SYNTAX=ERROR.TYPE(değer)\n"
"@DESCRIPTION=Verilen bir hata değerine karşılık olan hata numarası ile "
"sonuçlanır. Bazı hata değerleri ve numaraları:\n"
" #BÖL/0!    2\n"
" #DEĞER!    3\n"
" #REF!      4\n"
" #İSİM!     5\n"
" #SAYI!     6\n"
" #YOK!      7\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"ERROR.TYPE(NA()) eşittir 7\n"
"\n"
"Benzer işlev: ISERROR, ERROR\n"
"@EXAMPLES=\n"
"ERROR.TYPE(NA()) eşittir 7.\n"
"\n"
"@SEEALSO=ISERROR"

#: ../plugins/fn-info/functions.c:1494
msgid ""
"@FUNCTION=NA\n"
"@SYNTAX=NA()\n"
"@DESCRIPTION=NA returns the error value #N/A.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NA() equals #N/A error.\n"
"\n"
"@SEEALSO=ISNA"
msgstr ""
"@FUNCTION=NA\n"
"@SYNTAX=NA()\n"
"@DESCRIPTION=NA işlevi daima #YOK! ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"NA() eşittir #YOK!\n"
"\n"
"Benzer işlev: ISNA\n"
"@EXAMPLES=\n"
"NA() eşittir #YOK!.\n"
"\n"
"@SEEALSO=ISNA"

#: ../plugins/fn-info/functions.c:1519
msgid ""
"@FUNCTION=ERROR\n"
"@SYNTAX=ERROR(text)\n"
"@DESCRIPTION=ERROR return the specified error.\n"
"\n"
"@EXAMPLES=\n"
"ERROR(\"#OWN ERROR\").\n"
"\n"
"@SEEALSO=ISERROR"
msgstr ""
"@FUNCTION=ERROR\n"
"@SYNTAX=ERROR(metin)\n"
"@DESCRIPTION=ERROR @metin ile belirtilen hata dizgesi ile döner.\n"
"\n"
"Örnek:\n"
"ERROR(\"Bir daha olmasın!\")\n"
"\n"
"Benzer işlev: ISERROR\n"
"\n"
"@EXAMPLES=\n"
"ERROR(\"#YOK HATASI\").\n"
"\n"
"@SEEALSO=ISERROR"

#: ../plugins/fn-info/functions.c:1543
msgid ""
"@FUNCTION=ISBLANK\n"
"@SYNTAX=ISBLANK(value)\n"
"@DESCRIPTION=ISBLANK returns TRUE if the value is blank.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISBLANK(A1).\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISBLANK\n"
"@SYNTAX=ISBLANK(değer)\n"
"@DESCRIPTION=ISBLANK işlevi @değer veri içermiyorsa DOĞRU ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"@EXAMPLES=\n"
"ISBLANK(A1).\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1568
msgid ""
"@FUNCTION=ISEVEN\n"
"@SYNTAX=ISEVEN(value)\n"
"@DESCRIPTION=ISEVEN returns TRUE if the number is even.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISEVEN(4) equals TRUE.\n"
"\n"
"@SEEALSO=ISODD"
msgstr ""
"@FUNCTION=ISEVEN\n"
"@SYNTAX=ISEVEN(değer)\n"
"@DESCRIPTION=ISEVEN işlevi verilen değer çift sayı ise DOĞRU ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISEVEN(4) eşittir DOĞRU\n"
"\n"
"Benzer işlev: ISODD\n"
"@EXAMPLES=\n"
"ISEVEN(4) eşittir DOĞRU.\n"
"\n"
"@SEEALSO=ISODD"

#: ../plugins/fn-info/functions.c:1597
msgid ""
"@FUNCTION=ISLOGICAL\n"
"@SYNTAX=ISLOGICAL(value)\n"
"@DESCRIPTION=ISLOGICAL returns TRUE if the value is a logical value.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISLOGICAL(A1).\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISLOGICAL\n"
"@SYNTAX=ISLOGICAL(değer)\n"
"@DESCRIPTION=ISLOGICAL işlevi bir mantıksal değer verilmişse DOĞRU ile "
"sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"@EXAMPLES=\n"
"ISLOGICAL(A1).\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1622
msgid ""
"@FUNCTION=ISNONTEXT\n"
"@SYNTAX=ISNONTEXT(value)\n"
"@DESCRIPTION=ISNONTEXT Returns TRUE if the value is not text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISNONTEXT(\"text\") equals FALSE.\n"
"\n"
"@SEEALSO=ISTEXT"
msgstr ""
"@FUNCTION=ISNONTEXT\n"
"@SYNTAX=ISNONTEXT(değer)\n"
"@DESCRIPTION=ISNONTEXT işlevi verilen değer metin değilse DOĞRU ile "
"sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISNONTEXT(\"metin\") eşittir YANLIŞ\n"
"\n"
"Benzer işlev: ISTEXT\n"
"@EXAMPLES=\n"
"ISNONTEXT(\"metin\") eşittir YANLIŞ.\n"
"\n"
"@SEEALSO=ISTEXT"

#: ../plugins/fn-info/functions.c:1647
msgid ""
"@FUNCTION=ISNUMBER\n"
"@SYNTAX=ISNUMBER(value)\n"
"@DESCRIPTION=ISNUMBER returns TRUE if the value is a number.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISNUMBER(\"text\") equals FALSE.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISNUMBER\n"
"@SYNTAX=ISNUMBER(değer)\n"
"@DESCRIPTION=ISNUMBER işlevi verilen değer bir sayı ise DOĞRU ile "
"sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISNUMBER(\"metin\") eşittir YANLIŞ\n"
"@EXAMPLES=\n"
"ISNUMBER(\"metin\") eşittir YANLIŞ.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1672
msgid ""
"@FUNCTION=ISODD\n"
"@SYNTAX=ISODD(value)\n"
"@DESCRIPTION=ISODD returns TRUE if the number is odd.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISODD(3) equals TRUE.\n"
"\n"
"@SEEALSO=ISEVEN"
msgstr ""
"@FUNCTION=ISODD\n"
"@SYNTAX=ISODD(değer)\n"
"@DESCRIPTION=ISODD işlevi verilen değer bir tek sayı ise DOĞRU ile "
"sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISODD(3) eşittir DOĞRU\n"
"\n"
"Benzer işlev: ISEVEN\n"
"@EXAMPLES=\n"
"ISODD(3) eşittir DOĞRU.\n"
"\n"
"@SEEALSO=ISEVEN"

#: ../plugins/fn-info/functions.c:1701
msgid ""
"@FUNCTION=ISREF\n"
"@SYNTAX=ISREF(value)\n"
"@DESCRIPTION=ISREF returns TRUE if the value is a reference.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISREF(A1) equals TRUE.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISREF\n"
"@SYNTAX=ISREF(değer)\n"
"@DESCRIPTION=ISREF işlevi verilen değer bir başvuru ise DOĞRU ile "
"sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISREF(A1) eşittir DOĞRU\n"
"@EXAMPLES=\n"
"ISREF(A1) eşittir DOĞRU.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1730
msgid ""
"@FUNCTION=ISTEXT\n"
"@SYNTAX=ISTEXT(value)\n"
"@DESCRIPTION=ISTEXT returns TRUE if the value is text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISTEXT(\"text\") equals TRUE.\n"
"\n"
"@SEEALSO=ISNONTEXT"
msgstr ""
"@FUNCTION=ISTEXT\n"
"@SYNTAX=ISTEXT(değer)\n"
"@DESCRIPTION=ISTEXT işlevi verilen değer bir metin ise DOĞRU ile "
"sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ISTEXT(\"metin\") eşittir DOĞRU\n"
"\n"
"Benzer işlev: ISNONTEXT\n"
"@EXAMPLES=\n"
"ISTEXT(\"metin\") eşittir DOĞRU.\n"
"\n"
"@SEEALSO=ISNONTEXT"

#: ../plugins/fn-info/functions.c:1755
msgid ""
"@FUNCTION=N\n"
"@SYNTAX=N(value)\n"
"@DESCRIPTION=N returns a value converted to a number.  Strings containing "
"text are converted to the zero value.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"N(\"42\") equals 42.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=N\n"
"@SYNTAX=N(değer)\n"
"@DESCRIPTION=N işlevi verilen değeri bir sayıya dönüştürür. Metin içeren "
"değerler sıfıra dönüştürülür.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"N(\"42\") eşittir 42\n"
"@EXAMPLES=\n"
"N(\"42\") eşittir 42.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1795
msgid ""
"@FUNCTION=TYPE\n"
"@SYNTAX=TYPE(value)\n"
"@DESCRIPTION=TYPE returns a number indicating the data type of a value.\n"
"\n"
"1  == number\n"
"2  == text\n"
"4  == boolean\n"
"16 == error\n"
"64 == array\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TYPE(3) equals 1.\n"
"TYPE(\"text\") equals 2.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=TYPE\n"
"@SYNTAX=TYPE(değer)\n"
"@DESCRIPTION=TYPE işlevi verilen değerin veri türü ile sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"TYPE(3) eşittir 1\n"
"TYPE(\"metin\") eşittir 2\n"
"@EXAMPLES=\n"
"TYPE(3) eşittir 1.\n"
"TYPE(\"metin\") eşittir 2.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1844
msgid ""
"@FUNCTION=GETENV\n"
"@SYNTAX=GETENV(string)\n"
"@DESCRIPTION=GETENV retrieves a value from the execution environment.\n"
"\n"
"* If the variable specified by @string does not exist, #N/A! will be "
"returned.  Note, that variable names are case sensitive.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=GETENV\n"
"@SYNTAX=GETENV(dizge)\n"
"@DESCRIPTION=GETENV @dizge ile belirtilen bir sistem değişkeninin değerini "
"verir.\n"
"\n"
" @dizge ile belirtilen ortam değişkeni yoksa #YOK! hatası verir. Ortam "
"değişkenlerinin isimleri harf büyüklüğüne duyarlıdır.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-logical/functions.c:45
#, fuzzy
msgid ""
"@FUNCTION=AND\n"
"@SYNTAX=AND(b1, b2, ...)\n"
"@DESCRIPTION=AND implements the logical AND function: the result is TRUE if "
"all of the expressions evaluate to TRUE, otherwise it returns FALSE.\n"
"\n"
"@b1 through @bN are expressions that should evaluate to TRUE or FALSE.  If "
"an integer or floating point value is provided, zero is considered FALSE and "
"anything else is TRUE.\n"
"\n"
"* If the values contain strings or empty cells those values are ignored.\n"
"* If no logical values are provided, then the error #VALUE! is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"AND(TRUE,TRUE) equals TRUE.\n"
"AND(TRUE,FALSE) equals FALSE.\n"
"\n"
"Let us assume that A1 holds number five and A2 number one.  Then\n"
"AND(A1>3,A2<2) equals TRUE.\n"
"\n"
"@SEEALSO=OR, NOT"
msgstr ""
"@FUNCTION=AND\n"
"@SYNTAX=AND(b1, b2, ...)\n"
"@DESCRIPTION=AND mantıksal VE işlevidir. @b1, .. @bN ile verilen ve herbiri "
"DOĞRU veya YANLIŞ olarak sonuçlanan ifadelerin hepsi DOĞRU ise işlev DOĞRU "
"ile sonuçlanır. Tamsayı ya da gerçel sayı değer sıfır ise YANLIŞ değilse "
"DOĞRU kabul edilir. Metin içeren ve boş gözeler yoksayılır. Mantıksal "
"olmayan bir değerin varlığı #DEĞER! hatası ile sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"AND(DOĞRU,DOĞRU) eşittir DOĞRU\n"
"AND(DOĞRU,YANLIŞ) eşittir YANLIŞ\n"
"\n"
"A1 gözesi 5 ve A2 gözesi 1 içeriyorsa:\n"
"AND(A1>3,A2<2) eşittir DOĞRU\n"
"\n"
"Benzerleri: OR, NOT\n"
"@EXAMPLES=\n"
"AND(DOĞRU,DOĞRU) eşittir DOĞRU.\n"
"AND(DOĞRU,YANLIŞ) eşittir YANLIŞ.\n"
"\n"
"A1 gözesi 5 ve A2 gözesi 1 içeriyorsa\n"
"AND(A1>3,A2<2) eşittir DOĞRU.\n"
"\n"
"@SEEALSO=OR, NOT"

#: ../plugins/fn-logical/functions.c:112
msgid ""
"@FUNCTION=NOT\n"
"@SYNTAX=NOT(number)\n"
"@DESCRIPTION=NOT implements the logical NOT function: the result is TRUE if "
"the @number is zero;  otherwise the result is FALSE.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NOT(0) equals TRUE.\n"
"NOT(TRUE) equals FALSE.\n"
"\n"
"@SEEALSO=AND, OR"
msgstr ""
"@FUNCTION=NOT\n"
"@SYNTAX=NOT(sayı)\n"
"@DESCRIPTION=NOT mantıksal DEĞİL işlevidir. @sayı sıfırsa DOĞRU değilse "
"YANLIŞ ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"NOT(0) eşittir DOĞRU\n"
"NOT(DOĞRU) eşittir YANLIŞ\n"
"\n"
"Benzerleri: AND, OR\n"
"@EXAMPLES=\n"
"NOT(0) eşittir DOĞRU\n"
"NOT(DOĞRU) eşittir YANLIŞ\n"
"\n"
"@SEEALSO=AND, OR"

#: ../plugins/fn-logical/functions.c:143
#, fuzzy
msgid ""
"@FUNCTION=OR\n"
"@SYNTAX=OR(b1, b2, ...)\n"
"@DESCRIPTION=OR implements the logical OR function: the result is TRUE if "
"any of the values evaluated to TRUE.\n"
"\n"
"@b1 through @bN are expressions that should evaluate to TRUE or FALSE. If an "
"integer or floating point value is provided, zero is considered FALSE and "
"anything else is TRUE.\n"
"\n"
"* If the values contain strings or empty cells those values are ignored.\n"
"* If no logical values are provided, then the error #VALUE! is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OR(TRUE,FALSE) equals TRUE.\n"
"OR(3>4,4<3) equals FALSE.\n"
"\n"
"@SEEALSO=AND, NOT"
msgstr ""
"@FUNCTION=OR\n"
"@SYNTAX=OR(b1,b2, ...)\n"
"@DESCRIPTION=OR mantıksal VEYA işlevidir. @b1, .. @bN ile verilen ve her "
"biri DOĞRU veya YANLIŞ olarak sonuçlanan ifadelerin bazıları DOĞRU ise işlev "
"DOĞRU ile sonuçlanır. Tam ya da gerçel sayı olsun değer sıfır ise YANLIŞ "
"değilse DOĞRU kabul edilir. Metin içeren ve boş gözeler yoksayılır. "
"Mantıksal olmayan bir değerin varlığı #DEĞER! hatası ile sonuçlanır.\n"
"Bı işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"OR(DOĞRU,YANLIŞ) eşittir DOĞRU\n"
"OR(3>4,4<3) eşittir YANLIŞ\n"
"\n"
"Benzerleri: AND, NOT\n"
"@EXAMPLES=\n"
"OR(DOĞRU,YANLIŞ) eşittir DOĞRU\n"
"OR(3>4,4<3) eşittir YANLIŞ\n"
"\n"
"@SEEALSO=AND, NOT"

#: ../plugins/fn-logical/functions.c:207
#, fuzzy
msgid ""
"@FUNCTION=XOR\n"
"@SYNTAX=XOR(b1, b2, ...)\n"
"@DESCRIPTION=XOR implements the logical exclusive OR function: the result is "
"TRUE if an odd number of the values evaluated to TRUE.\n"
"\n"
"@b1 through @bN are expressions that should evaluate to TRUE or FALSE. If an "
"integer or floating point value is provided, zero is considered FALSE and "
"anything else is TRUE.\n"
"\n"
"* If the values contain strings or empty cells those values are ignored.\n"
"* If no logical values are provided, then the error #VALUE! is returned.\n"
"@EXAMPLES=\n"
"XOR(TRUE,FALSE) equals TRUE.\n"
"XOR(3>4,4<3) equals FALSE.\n"
"\n"
"@SEEALSO=OR, AND, NOT"
msgstr ""
"@FUNCTION=OR\n"
"@SYNTAX=OR(b1,b2, ...)\n"
"@DESCRIPTION=OR mantıksal VEYA işlevidir. @b1, .. @bN ile verilen ve her "
"biri DOĞRU veya YANLIŞ olarak sonuçlanan ifadelerin bazıları DOĞRU ise işlev "
"DOĞRU ile sonuçlanır. Tam ya da gerçel sayı olsun değer sıfır ise YANLIŞ "
"değilse DOĞRU kabul edilir. Metin içeren ve boş gözeler yoksayılır. "
"Mantıksal olmayan bir değerin varlığı #DEĞER! hatası ile sonuçlanır.\n"
"Bı işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"OR(DOĞRU,YANLIŞ) eşittir DOĞRU\n"
"OR(3>4,4<3) eşittir YANLIŞ\n"
"\n"
"Benzerleri: AND, NOT\n"
"@EXAMPLES=\n"
"OR(DOĞRU,YANLIŞ) eşittir DOĞRU\n"
"OR(3>4,4<3) eşittir YANLIŞ\n"
"\n"
"@SEEALSO=AND, NOT"

#: ../plugins/fn-logical/functions.c:269
msgid ""
"@FUNCTION=IF\n"
"@SYNTAX=IF(condition[,if-true,if-false])\n"
"@DESCRIPTION=IF function can be used to evaluate conditionally other "
"expressions. IF evaluates @condition.  If @condition returns a non-zero "
"value the result of the IF expression is the @if-true expression, otherwise "
"IF evaluates to the value of @if-false.\n"
"\n"
"* If omitted @if-true defaults to TRUE and @if-false to FALSE.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IF(FALSE,TRUE,FALSE) equals FALSE.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IF\n"
"@SYNTAX=IF(koşul[,doğruysa,yanlışsa])\n"
"@DESCRIPTION=Bu işlevde @koşul doğruysa @doğruysa ifadesi, yanlışsa "
"@yanlışsa ifadesi sonuç olarak elde edilir. @doğruysa verilmezse DOĞRU, "
"@yanlışsa verilmezse YANLIŞ öntanımlı olarak kullanılır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"if(YANLIŞ,DOĞRU,YANLIŞ) eşittir YANLIŞ\n"
"@EXAMPLES=\n"
"if(YANLIŞ,DOĞRU,YANLIŞ) eşittir YANLIŞ\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-logical/functions.c:310
msgid ""
"@FUNCTION=TRUE\n"
"@SYNTAX=TRUE()\n"
"@DESCRIPTION=TRUE returns boolean value true.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TRUE() equals TRUE.\n"
"\n"
"@SEEALSO=FALSE"
msgstr ""
"@FUNCTION=TRUE\n"
"@SYNTAX=TRUE()\n"
"@DESCRIPTION=TRUE işlevi mantıksal değer olan DOĞRU ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TRUE() eşittir DOĞRU\n"
"\n"
"Benzeri: FALSE\n"
"@EXAMPLES=\n"
"TRUE() eşittir DOĞRU\n"
"\n"
"@SEEALSO=FALSE"

#: ../plugins/fn-logical/functions.c:335
msgid ""
"@FUNCTION=FALSE\n"
"@SYNTAX=FALSE()\n"
"@DESCRIPTION=FALSE returns boolean value false.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FALSE() equals FALSE.\n"
"\n"
"@SEEALSO=TRUE"
msgstr ""
"@FUNCTION=FALSE\n"
"@SYNTAX=FALSE()\n"
"@DESCRIPTION=FALSE işlevi mantıksal değer olan YANLIŞ ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FALSE() eşittir YANLIŞ\n"
"\n"
"Benzeri: TRUE\n"
"@EXAMPLES=\n"
"FALSE() eşittir YANLIŞ\n"
"\n"
"@SEEALSO=TRUE"

#: ../plugins/fn-lookup/functions.c:327
msgid ""
"@FUNCTION=ADDRESS\n"
"@SYNTAX=ADDRESS(row_num,col_num[,abs_num,a1,text])\n"
"@DESCRIPTION=ADDRESS returns a cell address as text for specified row and "
"column numbers.\n"
"\n"
"@a1 is a logical value that specifies the reference style.  If @a1 is TRUE "
"or omitted, ADDRESS returns an A1-style reference, i.e. $D$4.  Otherwise "
"ADDRESS returns an R1C1-style reference, i.e. R4C4.\n"
"\n"
"@text specifies the name of the worksheet to be used as the external "
"reference.\n"
"\n"
"* If @abs_num is 1 or omitted, ADDRESS returns absolute reference.\n"
"* If @abs_num is 2 ADDRESS returns absolute row and relative column.\n"
"* If @abs_num is 3 ADDRESS returns relative row and absolute column.\n"
"* If @abs_num is 4 ADDRESS returns relative reference.\n"
"* If @abs_num is greater than 4 ADDRESS returns #VALUE! error.\n"
"* If @row_num or @col_num is less than one, ADDRESS returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"ADDRESS(5,4) equals \"$D$5\".\n"
"ADDRESS(5,4,4) equals \"D5\".\n"
"ADDRESS(5,4,3,FALSE) equals \"R[5]C4\".\n"
"\n"
"@SEEALSO=COLUMNNUMBER"
msgstr ""
"@FUNCTION=ADDRESS\n"
"@SYNTAX=ADDRESS(satır_num,sütun_num[,mut_num,a1,metin])\n"
"@DESCRIPTION=ADDRESS işlevi satır ve sütun numaraları ile belirtilen gözenin "
"adresini metin olarak verir.\n"
" @mut_num 1 ise ya da verilmemişse ADDRESS mutlak başvuru adresi ile "
"sonuçlanır. 2 verilmişse mutlak satır ve göreli sütun numarasını, 3 ise "
"göreli satır ve mutlak sütun numarasını, 4 ise göreli başvuru ve 4 den "
"büyükse #SAYI! hatasını verir.\n"
" @a1 başvuru türünü belirleyen bir mantıksal değerdir. @a1 DOĞRU ise ya da "
"belirtilmemişse A1-tipi başvuru ($D$4), YANLIŞ ise R1C1-tipi başvuru (R4C4) "
"ile sonuçlanır.\n"
" @metin dış başvuru kaynağı olarak kullanılan bir çizelgenin ismini "
"belirtmek için kullanılır.\n"
"@satır_num veya @sütun_num birden küçük ise işlev #SAYI! hatası ile "
"sonuçlanır.\n"
"\n"
"Örnekler:\n"
"ADDRESS(5,4) eşittir \"$D$5\"\n"
"ADDRESS(5,4,4) eşittir \"D5\"\n"
"ADDRESS(5,4,3,YANLIŞ) eşittir \"R[5]C4\"\n"
"\n"
"@EXAMPLES=\n"
"ADDRESS(5,4) eşittir \"$D$5\"\n"
"ADDRESS(5,4,4) eşittir \"D5\"\n"
"ADDRESS(5,4,3,YANLIŞ) eşittir \"R[5]C4\"\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:429
msgid ""
"@FUNCTION=AREAS\n"
"@SYNTAX=AREAS(reference)\n"
"@DESCRIPTION=AREAS returns the number of areas in @reference. \n"
"\n"
"@EXAMPLES=\n"
"AREAS((A1,B2,C3)) equals 3.\n"
"\n"
"@SEEALSO=ADDRESS,INDEX,INDIRECT,OFFSET"
msgstr ""
"@FUNCTION=CHAR\n"
"@SYNTAX=CHAR(sayı)\n"
"@DESCRIPTION=CHAR @sayı'ya karşılık gelen ASCII karakter ile sonuçlanır.\n"
"Örnek:\n"
"CHAR(65) eşittir A\n"
"\n"
"Benzer işlev: CODE\n"
"@EXAMPLES=\n"
"CHAR(65) eşittir A.\n"
"\n"
"@SEEALSO=CODE"

#: ../plugins/fn-lookup/functions.c:508
msgid ""
"@FUNCTION=CHOOSE\n"
"@SYNTAX=CHOOSE(index[,value1][,value2]...)\n"
"@DESCRIPTION=CHOOSE returns the value of index @index. @index is rounded to "
"an integer if it is not.\n"
"\n"
"* If @index < 1 or @index > number of values, CHOOSE returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"CHOOSE(3,\"Apple\",\"Orange\",\"Grape\",\"Perry\") equals \"Grape\".\n"
"\n"
"@SEEALSO=IF"
msgstr ""
"@FUNCTION=CHOOSE\n"
"@SYNTAX=CHOOSE(indeks[,değer1][,değer2]...)\n"
"@DESCRIPTION=CHOOSE işlevi @indeks'teki değerle döner. @indeks bir tamsayı "
"değilse tamsayıya yuvarlanır. @indeks < 1 veya @indeks > değerlerin sayısı "
"ise #DEĞER! hatası verir.\n"
"\n"
"Örnek:\n"
"CHOOSE(3,\"Elma\",\"Portakal\",\"Armut\",\"Mandalina\") eşittir \"Armut\".\n"
"\n"
"Benzeri: IF\n"
"@EXAMPLES=\n"
"CHOOSE(3,\"Elma\",\"Portakal\",\"Armut\",\"Mandalina\") eşittir \"Armut\".\n"
"\n"
"@SEEALSO=IF"

#: ../plugins/fn-lookup/functions.c:562
msgid ""
"@FUNCTION=VLOOKUP\n"
"@SYNTAX=VLOOKUP(value,range,column[,approximate,as_index])\n"
"@DESCRIPTION=VLOOKUP function finds the row in range that has a first column "
"similar to @value.  If @approximate is not true it finds the row with an "
"exact equivalence.  If @approximate is true, then the values must be sorted "
"in order of ascending value for correct function; in this case it finds the "
"row with value less than @value.  It returns the value in the row found at a "
"1-based offset in @column columns into the @range.  @as_index returns the 0-"
"based offset that matched rather than the value.\n"
"\n"
"* VLOOKUP returns #NUM! if @column < 0.\n"
"* VLOOKUP returns #REF! if @column falls outside @range.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=HLOOKUP"
msgstr ""
"@FUNCTION=VLOOKUP\n"
"@SYNTAX=VLOOKUP(değer,aralık,sütun[,yaklaşık])\n"
"@DESCRIPTION=VLOOKUP işlevi verilen aralık içinde ilk sütundaki değerlere "
"benzer bir değeri içeren satırı bulur. @yaklaşık YANLIŞ ise tam bir eşitlik "
"aranır. @yaklaşık DOĞRU ise işlevin doğru sonuç vermesi için değerler artan "
"sırada sıralanmış olmalıdır. Bu durumda @değerden küçük değere sahip olan "
"satırı @aralık içindeki @sütununun başlangıcını 1 kabul eden bir sayı olarak "
"bulur. @sütun < 0 ise #SAYI!, @sütun @aralık dışında ise #REF! hatası "
"verir.\n"
"\n"
"Benzeri: HLOOKUP\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=HLOOKUP"

#: ../plugins/fn-lookup/functions.c:623
msgid ""
"@FUNCTION=HLOOKUP\n"
"@SYNTAX=HLOOKUP(value,range,row[,approximate,as_index])\n"
"@DESCRIPTION=HLOOKUP function finds the col in range that has a first row "
"cell similar to @value.  If @approximate is not true it finds the col with "
"an exact equivalence.  If @approximate is true, then the values must be "
"sorted in order of ascending value for correct function; in this case it "
"finds the col with value less than @value it returns the value in the col "
"found at a 1-based offset in @row rows into the @range.  @as_index returns "
"the 0-based offset that matched rather than the value.\n"
"\n"
"* HLOOKUP returns #NUM! if @row < 0.\n"
"* HLOOKUP returns #REF! if @row falls outside @range.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=VLOOKUP"
msgstr ""
"@FUNCTION=HLOOKUP\n"
"@SYNTAX=HLOOKUP(değer,aralık,satır[,yaklaşık])\n"
"@DESCRIPTION=HLOOKUP işlevi verilen aralık içinde ilk satırdaki değerlere "
"benzer bir değeri içeren sütunu bulur. @yaklaşık YANLIŞ ise tam bir eşitlik "
"aranır. @yaklaşık DOĞRU ise işlevin doğru sonuç vermesi için değerler artan "
"sırada sıralanmış olmalıdır. Bu durumda @değerden küçük değere sahip olan "
"sütunu @aralık içindeki @satırının başlangıcını 1 kabul eden bir sayı olarak "
"bulur. @satır < 0 ise #SAYI!, @satır @aralık dışında ise #REF! hatası "
"verir.\n"
"\n"
"Benzeri: VLOOKUP\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=VLOOKUP"

#: ../plugins/fn-lookup/functions.c:685
msgid ""
"@FUNCTION=LOOKUP\n"
"@SYNTAX=LOOKUP(value,vector1[,vector2])\n"
"@DESCRIPTION=LOOKUP function finds the row index of @value in @vector1 and "
"returns the contents of @vector2 at that row index. Alternatively a single "
"array can be used for @vector1. If the area is longer than it is wide then "
"the sense of the search is rotated. \n"
"\n"
"* If LOOKUP can't find @value it uses the largest value less than @value.\n"
"* The data must be sorted.\n"
"* If @value is smaller than the first value it returns #N/A.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=VLOOKUP,HLOOKUP"
msgstr ""
"@FUNCTION=LOOKUP\n"
"@SYNTAX=LOOKUP(değer,vektör1,vektör2)\n"
"@DESCRIPTION=The LOOKUP işlevi @vektör1 içindeki @değerin satır indeksini "
"bulur ve satır indeksindeki vektör2 nin içeriği ile sonuçlanır. Alan, "
"genişliğinden daha büyükse aramanın duyarlığı döndürülür. Alternatif olarak "
"bir tek dizi kullanılabilir.\n"
"İşlev @değeri bulamazsa değerden küçük sonraki en büyük değeri kullanır. "
"Veri sıralanmış olmalıdır. @değer ilk değerden küçükse işlev #YOK! hatası "
"ile sonuçlanır.\n"
"\n"
"Benzerleri: VLOOKUP,HLOOKUP\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=VLOOKUP,HLOOKUP"

#: ../plugins/fn-lookup/functions.c:751
msgid ""
"@FUNCTION=MATCH\n"
"@SYNTAX=MATCH(seek,vector[,type])\n"
"@DESCRIPTION=MATCH function finds the row index of @seek in @vector and "
"returns it.\n"
"\n"
"If the area is longer than it is wide then the sense of the search is "
"rotated. Alternatively a single array can be used.\n"
"\n"
"* The @type parameter, which defaults to +1, controls the search:\n"
"* If @type = 1, MATCH finds largest value <= @seek.\n"
"* If @type = 0, MATCH finds first value == @seek.\n"
"* If @type = -1, MATCH finds smallest value >= @seek.\n"
"* For @type = 0, the data can be in any order.  * For @type = -1 and @type = "
"+1, the data must be sorted.  (And in these cases, MATCH uses a binary "
"search to locate the index.)\n"
"* If @seek could not be found, #N/A is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOOKUP"
msgstr ""
"@FUNCTION=MATCH\n"
"@SYNTAX=MATCH(sıra,vektör[,türü])\n"
"@DESCRIPTION=MATCH işlevi @vektör içindeki @sıranın satır indeksini bulur. "
"Alan, genişliğinden uzunsa aramanın duyarlığı döndürülür. Alternatif olarak "
"bir tek dizi kullanılabilir. @türü verilmezse öntanımlı olarak +1 dir. Arama "
"denetimi:\n"
" @türü = 1 ise @sıradan küçük ya da eşit en büyük değeri bulur.\n"
" @türü = 0 ise @sıraya eşit ilk değeri bulur.\n"
" @türü = -1 ise @sıradan büyük ya da eşit en küçük değeri bulur.\n"
"\n"
" @türü = 0 için veri herhangi bir sırada olabilir. Diğer türler için veri "
"sıralı olmalıdır. (Bu durumda işlev indeksi bulurken ikilik arama yapar.)\n"
" @sıra bulunamazsa #YOK! hatası verir.\n"
"\n"
"Benzeri: LOOKUP\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOOKUP"

#: ../plugins/fn-lookup/functions.c:809
msgid ""
"@FUNCTION=INDIRECT\n"
"@SYNTAX=INDIRECT(ref_text[,format])\n"
"@DESCRIPTION=INDIRECT function returns the contents of the cell pointed to "
"by the @ref_text string. The string specifies a single cell reference the "
"format of which is either A1 or R1C1 style. The style is set by the @format "
"boolean, which defaults to the A1 style.\n"
"\n"
"* If @ref_text is not a valid reference returns #REF! \n"
"@EXAMPLES=\n"
"If A1 contains 3.14 and A2 contains A1, then\n"
"INDIRECT(A2) equals 3.14.\n"
"\n"
"@SEEALSO=AREAS,INDEX,CELL"
msgstr ""
"@FUNCTION=INDIRECT\n"
"@SYNTAX=INDIRECT(ref_metin[,biçem])\n"
"@DESCRIPTION=INDIRECT işlevi @ref_metin dizgesiyle başvurulan gözenin "
"içeriğini verir. Başvuru A1 ya da R1C1 türünde olabilir. Tür, @biçem ile "
"mevcut gösterimi öntanımlı kabul ederek mantıksal bir değer olarak "
"belirtilebilir. @ref_metin geçerli bir başvuru içermiyorsa #REF! hatası "
"verir.\n"
"\n"
"Örnek:\n"
"A1 -> 3.14 ve A2 -> A1 içeriyorsa,\n"
"INDIRECT(A2) eşittir 3.14\n"
"@EXAMPLES=\n"
"A1 -> 3.14 ve A2 -> A1 içeriyorsa,\n"
"INDIRECT(A2) eşittir 3.14\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:858
msgid ""
"@FUNCTION=INDEX\n"
"@SYNTAX=INDEX(array[,row, col, area])\n"
"@DESCRIPTION=INDEX gives a reference to a cell in the given @array.The cell "
"is pointed out by @row and @col, which count the rows and columns in the "
"array.\n"
"\n"
"* If @row and @col are omitted the are assumed to be 1.\n"
"* If the reference falls outside the range of the @array, INDEX returns a "
"#REF! error.\n"
"\n"
"@EXAMPLES=Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, "
"17.3, 21.3, 25.9, and 40.1. Then INDEX(A1:A5,4,1,1) equals 25.9\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=INDEX\n"
"@SYNTAX=INDEX(dizi[,satır,sütun,alan])\n"
"@DESCRIPTION=INDEX işlevi belirtilen dizi içindeki bir gözenin değerini "
"verir. Gözenin yeri @satır, @sütunluk bölgede belirtilebilir.\n"
"Eğer @satır ve @sütun belirtilmezse 1 varsayılır. @alan 1 olacaktır çünkü "
"henüz çoklu alanlardan değer döndürme işleminin kodu yazılmadı. Eğer başvuru "
"@dizi kapsamının dışında kalıyorsa işlev #REF! hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"INDEX(A1:A5,4,1,1) eşitir 25,9\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3,21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"INDEX(A1:A5,4,1,1) eşitir 25,9\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:944
msgid "COLUMN:vector of column numbers."
msgstr ""

#: ../plugins/fn-lookup/functions.c:945 ../plugins/fn-lookup/functions.c:1124
msgid "[reference]."
msgstr ""

#: ../plugins/fn-lookup/functions.c:947
msgid ""
"COLUMN function returns a Nx1 array containing the series of integers from "
"the first column to the last column of @reference.\n"
"* @reference defaults to the position of the current expression.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, returns "
"#VALUE! error.\n"
msgstr ""

#: ../plugins/fn-lookup/functions.c:954
msgid "COLUMN(A1:C4) equals {1,2,3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:955
msgid "COLUMN(A:C) equals {1,2,3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:956
msgid "COLUMN() in G13 equals 7."
msgstr ""

#: ../plugins/fn-lookup/functions.c:997
msgid ""
"@FUNCTION=COLUMNNUMBER\n"
"@SYNTAX=COLUMNNUMBER(name)\n"
"@DESCRIPTION=COLUMNNUMBER function returns an integer corresponding to the "
"column name supplied as a string.\n"
"\n"
"* If @name is invalid, COLUMNNUMBER returns the #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"COLUMNNUMBER(\"E\") equals 5.\n"
"\n"
"@SEEALSO=ADDRESS"
msgstr ""
"@FUNCTION=COLUMNS\n"
"@SYNTAX=COLUMNS(referans)\n"
"@DESCRIPTION=COLUMNS işlevi belirtilen alandaki sütun sayısı ile sonuçlanır. "
"@referans bir dizi, bir aralık ya da bir başvuru değilse işlev #DEĞER! "
"hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"COLUMNS(H2:J3) eşittir 3\n"
"\n"
"Benzerleri: COLUMN, ROW, ROWS\n"
"@EXAMPLES=\n"
"COLUMNS(H2:J3) eşittir 3\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"

#: ../plugins/fn-lookup/functions.c:1032
msgid ""
"@FUNCTION=COLUMNS\n"
"@SYNTAX=COLUMNS(reference)\n"
"@DESCRIPTION=COLUMNS function returns the number of columns in area or array "
"reference.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, COLUMNS "
"returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"COLUMNS(H2:J3) equals 3.\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"
msgstr ""
"@FUNCTION=COLUMNS\n"
"@SYNTAX=COLUMNS(referans)\n"
"@DESCRIPTION=COLUMNS işlevi belirtilen alandaki sütun sayısı ile sonuçlanır. "
"@referans bir dizi, bir aralık ya da bir başvuru değilse işlev #DEĞER! "
"hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"COLUMNS(H2:J3) eşittir 3\n"
"\n"
"Benzerleri: COLUMN, ROW, ROWS\n"
"@EXAMPLES=\n"
"COLUMNS(H2:J3) eşittir 3\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"

#: ../plugins/fn-lookup/functions.c:1060
msgid ""
"@FUNCTION=OFFSET\n"
"@SYNTAX=OFFSET(range,row,col[,height[,width]])\n"
"@DESCRIPTION=OFFSET function returns a cell range. The cell range starts at "
"offset (@row,@col) from @range, and is of height @height and width @width.\n"
"\n"
"* If @range is neither a reference nor a range, OFFSET returns #VALUE!.\n"
"* If either @height or @width is omitted, the height or width of the "
"reference is used.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=COLUMN,COLUMNS,ROWS,INDEX,INDIRECT,ADDRESS"
msgstr ""
"@FUNCTION=OFFSET\n"
"@SYNTAX=OFFSET(aralık,satır,sütun,yükseklik,genişlik)\n"
"@DESCRIPTION=OFFSET işlevi bir göze aralığı ile sonuçlanır. Bu göze aralığı "
"@aralık içindeki (@satır, @sütun) adresinden başlayan @yükseklik ve "
"@genişlikte bir bölgedir. @aralık bir aralık ya da bir başvuru değilse işlev "
"#DEĞER! hatası ile sonuçlanır. @yükseklik ya da @genişlik verilmezse @aralık "
"sınırları kullanılır.\n"
"\n"
"Benzerleri: COLUMN, COLUMNS, ROWS\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=COLUMN,COLUMNS,ROWS"

#: ../plugins/fn-lookup/functions.c:1123
msgid "ROW:vector of row numbers."
msgstr ""

#: ../plugins/fn-lookup/functions.c:1126
msgid ""
"ROW function returns a 1xN array containing the series of integers from the "
"first row to the last row of @reference.\n"
"* @reference defaults to the position of the current expression.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, returns "
"#VALUE! error.\n"
msgstr ""

#: ../plugins/fn-lookup/functions.c:1133
msgid "ROW(A1:D3) equals {1;2;3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:1134
msgid "ROW(1:3) equals {1;2;3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:1135
msgid "ROW() in G13 equals 13."
msgstr ""

#: ../plugins/fn-lookup/functions.c:1176
msgid ""
"@FUNCTION=ROWS\n"
"@SYNTAX=ROWS(reference)\n"
"@DESCRIPTION=ROWS function returns the number of rows in area or array "
"reference.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, ROWS "
"returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"ROWS(H7:I13) equals 7.\n"
"\n"
"@SEEALSO=COLUMN,COLUMNS,ROW"
msgstr ""
"@FUNCTION=ROWS\n"
"@SYNTAX=ROWS(referans)\n"
"@DESCRIPTION=The ROWS işlevi verilen alandaki satır sayısını verir. "
"@referans bir dizi, bir aralık ya da bir başvuru değilse işlev #DEĞER! "
"hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"ROWS(H7:I13) eşittir 7\n"
"\n"
"Benzerleri: COLUMN, ROW, ROWS\n"
"@EXAMPLES=\n"
"ROWS(H7:I13) eşittir 7\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"

#: ../plugins/fn-lookup/functions.c:1204
msgid ""
"@FUNCTION=HYPERLINK\n"
"@SYNTAX=HYPERLINK(link_location[,optional_label])\n"
"@DESCRIPTION=HYPERLINK function currently returns its 2nd argument, or if "
"that is omitted the 1st argument.\n"
"\n"
"@EXAMPLES=\n"
"HYPERLINK(\"www.gnome.org\",\"GNOME\").\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=HYPERLINK\n"
"@SYNTAX=HYPERLINK(bağ_konumu,seçimlik_etiket)\n"
"@DESCRIPTION=HYPERLINK işlevi 2. argümanla yoksa 1. argümanla sonuçlanır.\n"
"\n"
"Örnek:\n"
"HYPERLINK(\"www.gnome.org\",\"GNOME\")\n"
"@EXAMPLES=\n"
"HYPERLINK(\"www.gnome.org\",\"GNOME\")\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:1232
msgid ""
"@FUNCTION=TRANSPOSE\n"
"@SYNTAX=TRANSPOSE(matrix)\n"
"@DESCRIPTION=TRANSPOSE function returns the transpose of the input @matrix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT"
msgstr ""
"@FUNCTION=TRANSPOSE\n"
"@SYNTAX=TRANSPOSE(matris)\n"
"@DESCRIPTION=TRANSPOSE işlevi giriş @matrisinin transpozesini hesaplar.\n"
"\n"
"Benzeri: MMULT\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT"

#: ../plugins/fn-math/functions.c:77
msgid ""
"@FUNCTION=GCD\n"
"@SYNTAX=GCD(number1,number2,...)\n"
"@DESCRIPTION=GCD returns the greatest common divisor of given numbers.\n"
"\n"
"* If any of the arguments is less than one, GCD returns #NUM! error.\n"
"* If any of the arguments is non-integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GCD(470,770) equals 10.\n"
"GCD(470,770,1495) equals 5.\n"
"\n"
"@SEEALSO=LCM"
msgstr ""
"@FUNCTION=GCD\n"
"@SYNTAX=GCD(sayı1,sayı2,...)\n"
"@DESCRIPTION=GCD işlevi verilen sayıların en büyük ortak bölenini hesaplar. "
"Sayılar negatif değer içeriyorsa işlev #SAYI! hatası ile sonuçlanır. Tamsayı "
"olmayan değerlerin ondalık kısmı atılarak tamsayıya dönüştürülür.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"GCD(470,770) eşittir 10\n"
"GCD(470,770,1495) eşittir 5\n"
"\n"
"Benzeri: LCM\n"
"@EXAMPLES=\n"
"GCD(470,770) eşittir 10\n"
"GCD(470,770,1495) eşittir 5\n"
"\n"
"@SEEALSO=LCM"

#: ../plugins/fn-math/functions.c:148
#, fuzzy
msgid ""
"@FUNCTION=LCM\n"
"@SYNTAX=LCM(number1,number2,...)\n"
"@DESCRIPTION=LCM returns the least common multiple of integers.  The least "
"common multiple is the smallest positive number that is a multiple of all "
"integer arguments given.\n"
"\n"
"* If any of the arguments is less than one, LCM returns #NUM!.\n"
"* If any of the arguments is non-integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LCM(2,13) equals 26.\n"
"LCM(4,7,5) equals 140.\n"
"\n"
"@SEEALSO=GCD"
msgstr ""
"@FUNCTION=LCM\n"
"@SYNTAX=LCM(sayı1,sayı2,...)\n"
"@DESCRIPTION=LCM işlevi tamsayıların en küçük ortak çarpımını hesaplar.En "
"küçük ortak çarpım, verilen tamsayıların çarpımlarının en küçüğüdür.\n"
"Verilen değerler arasında birden küçük olan varsa işlev #SAYI! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"LCM(2,13) eşittir 26\n"
"LCM(4,7,5) eşittir 140\n"
"\n"
"Benzeri: GCD\n"
"@EXAMPLES=\n"
"LCM(2,13) eşittir 26\n"
"LCM(4,7,5) eşittir 140\n"
"\n"
"@SEEALSO=GCD"

#: ../plugins/fn-math/functions.c:218
#, fuzzy
msgid ""
"@FUNCTION=HYPOT\n"
"@SYNTAX=HYPOT(number1,number2,...)\n"
"@DESCRIPTION=HYPOT returns the square root of the sum of the squares of the "
"arguments.\n"
"\n"
"@EXAMPLES=\n"
"HYPOT(3,4) equals 5.\n"
"\n"
"@SEEALSO=MIN,MAX"
msgstr ""
"@FUNCTION=ODD\n"
"@SYNTAX=ODD(sayı)\n"
"@DESCRIPTION=ODD işlevi @sayı'yı en yakın büyük tek sayıya yuvarlar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ODD(4.4) eşittir 5\n"
"\n"
"Benzeri: EVEN\n"
"@EXAMPLES=\n"
"ODD(4.4) eşittir 5\n"
"\n"
"@SEEALSO=EVEN"

#: ../plugins/fn-math/functions.c:248
msgid ""
"@FUNCTION=ABS\n"
"@SYNTAX=ABS(b1)\n"
"@DESCRIPTION=ABS implements the Absolute Value function:  the result is to "
"drop the negative sign (if present).  This can be done for integers and "
"floating point numbers.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ABS(7) equals 7.\n"
"ABS(-3.14) equals 3.14.\n"
"\n"
"@SEEALSO=CEIL, CEILING, FLOOR, INT, MOD"
msgstr ""
"@FUNCTION=ABS\n"
"@SYNTAX=ABS(b1)\n"
"@DESCRIPTION=ABS işlevi bir sayının mutlak değerini verir. Basitçe sayıda "
"eksi işareti varsa kaldırılır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ABS(7) eşittir 7\n"
"ABS(-3.14) eşittir 3.14\n"
"\n"
"Benzerleri: CEIL, FLOOR\n"
"@EXAMPLES=\n"
"ABS(7) eşittir 7\n"
"ABS(-3.14) eşittir 3.14\n"
"\n"
"@SEEALSO=CEIL, FLOOR"

#: ../plugins/fn-math/functions.c:276
msgid ""
"@FUNCTION=ACOS\n"
"@SYNTAX=ACOS(x)\n"
"@DESCRIPTION=ACOS function calculates the arc cosine of @x; that is the "
"value whose cosine is @x.\n"
"\n"
"* The value it returns is in radians.\n"
"* If @x falls outside the range -1 to 1, ACOS returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ACOS(0.1) equals 1.470629.\n"
"ACOS(-0.1) equals 1.670964.\n"
"\n"
"@SEEALSO=COS, SIN, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ACOS\n"
"@SYNTAX=ACOS(x)\n"
"@DESCRIPTION=ACOS işlevi kosinüsü x olan açıyı hesaplar. @x değeri -1 ile 1 "
"arasında değilse işlev #SAYI! hatası ile sonuçlanır. Sonuç radyan "
"cinsindendir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ACOS(0.1) eşittir 1.470629\n"
"ACOS(-0.1) eşittir 1.670964\n"
"\n"
"Benzerleri: COS, SIN, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ACOS(0.1) eşittir 1.470629\n"
"ACOS(-0.1) eşittir 1.670964\n"
"\n"
"@SEEALSO=COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:312
msgid ""
"@FUNCTION=ACOSH\n"
"@SYNTAX=ACOSH(x)\n"
"@DESCRIPTION=ACOSH  function  calculates  the inverse hyperbolic cosine of "
"@x; that is the value whose hyperbolic cosine is @x.\n"
"\n"
"* If @x is less than 1.0, ACOSH() returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"ACOSH(2) equals 1.31696.\n"
"ACOSH(5.3) equals 2.35183.\n"
"\n"
"@SEEALSO=ACOS, ASINH, DEGREES, RADIANS "
msgstr ""
"@FUNCTION=ACOSH\n"
"@SYNTAX=ACOSH(x)\n"
"@DESCRIPTION=ACOSH işlevi hiperbolik kosinüsü @x olan açıyı hesaplar. @x < "
"1.0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ACOSH(2) eşittir 1.31696\n"
"ACOSH(5.3) eşittir 2.35183\n"
"\n"
"Benzerleri: ACOS, ASINH, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ACOSH(2) eşittir 1.31696\n"
"ACOSH(5.3) eşittir 2.35183\n"
"\n"
"@SEEALSO=ACOS, ASINH, DEGREES, RADIANS "

#: ../plugins/fn-math/functions.c:347
msgid ""
"@FUNCTION=ASIN\n"
"@SYNTAX=ASIN(x)\n"
"@DESCRIPTION=ASIN function calculates the arc sine of @x; that is the value "
"whose sine is @x.\n"
"\n"
"* If @x falls outside the range -1 to 1, ASIN returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ASIN(0.5) equals 0.523599.\n"
"ASIN(1) equals 1.570797.\n"
"\n"
"@SEEALSO=SIN, COS, ASINH, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ASIN\n"
"@SYNTAX=ASIN(x)\n"
"@DESCRIPTION=ASIN işlevi sinüsü @x olan açıyı hesaplar. @x değeri -1 ile 1 "
"arasında değilse işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ASIN(0.5) eşittir 0.523599\n"
"ASIN(1) eşittir 1.570797\n"
"\n"
"Benzerleri: SIN, COS, ASINH, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ASIN(0.5) eşittir 0.523599\n"
"ASIN(1) eşittir 1.570797\n"
"\n"
"@SEEALSO=SIN, COS, ASINH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:382
msgid ""
"@FUNCTION=ASINH\n"
"@SYNTAX=ASINH(x)\n"
"@DESCRIPTION=ASINH function calculates the inverse hyperbolic sine of @x; "
"that is the value whose hyperbolic sine is @x.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ASINH(0.5) equals 0.481212.\n"
"ASINH(1.0) equals 0.881374.\n"
"\n"
"@SEEALSO=ASIN, ACOSH, SIN, COS, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ASINH\n"
"@SYNTAX=ASINH(x)\n"
"@DESCRIPTION=ASINH işlevi hiperbolik sinüsü @x olan açıyı hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ASINH(0.5) eşittir 0.481212\n"
"ASINH(1.0) eşittir 0.881374\n"
"\n"
"Benzerleri: ASIN, ACOSH, SIN, COS, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ASINH(0.5) eşittir 0.481212\n"
"ASINH(1.0) eşittir 0.881374\n"
"\n"
"@SEEALSO=ASIN, ACOSH, SIN, COS, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:409
msgid ""
"@FUNCTION=ATAN\n"
"@SYNTAX=ATAN(x)\n"
"@DESCRIPTION=ATAN function calculates the arc tangent of @x; that is the "
"value whose tangent is @x.\n"
"\n"
"* Return value is in radians.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ATAN(0.5) equals 0,463648.\n"
"ATAN(1) equals 0,785398.\n"
"\n"
"@SEEALSO=TAN, COS, SIN, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ATAN\n"
"@SYNTAX=ATAN(x)\n"
"@DESCRIPTION=ATAN işlevi tanjantı @x olan açıyı radyan cinsinden hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ATAN(0.5) eşittir 0,463648\n"
"ATAN(1) eşittir 0,785398\n"
"\n"
"Benzerleri: TAN, COS, SIN, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ATAN(0.5) eşittir 0,463648\n"
"ATAN(1) eşittir 0,785398\n"
"\n"
"@SEEALSO=TAN, COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:437
msgid ""
"@FUNCTION=ATANH\n"
"@SYNTAX=ATANH(x)\n"
"@DESCRIPTION=ATANH function calculates the inverse hyperbolic tangent of @x; "
"that is the value whose hyperbolic tangent is @x.\n"
"\n"
"* If the absolute value of @x is greater than 1.0, ATANH returns #NUM! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ATANH(0.5) equals 0.549306.\n"
"ATANH(0.8) equals 1.098612.\n"
"\n"
"@SEEALSO=ATAN, TAN, SIN, COS, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ATANH\n"
"@SYNTAX=ATANH(x)\n"
"@DESCRIPTION=ATANH işlevi hiperbolik tanjantı @x olan açıyı hesaplar. @x'in "
"mutlak değeri 1.0 dan büyükse işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ATANH(0.5) eşittir 0.549306\n"
"ATANH(0.8) eşittir 1.098612\n"
"\n"
"Benzerleri: ATAN, TAN, SIN, COS, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ATANH(0.5) eşittir 0.549306\n"
"ATANH(0.8) eşittir 1.098612\n"
"\n"
"@SEEALSO=ATAN, TAN, SIN, COS, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:472
msgid ""
"@FUNCTION=ATAN2\n"
"@SYNTAX=ATAN2(b1,b2)\n"
"@DESCRIPTION=ATAN2 function calculates the arc tangent of the two variables "
"@b1 and @b2.  It is similar to calculating the arc tangent of @b2 / @b1, "
"except that the signs of both arguments are used to determine the quadrant "
"of the result.\n"
"\n"
"* The result is in radians.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ATAN2(0.5,1.0) equals 1.107149.\n"
"ATAN2(-0.5,2.0) equals 1.815775.\n"
"\n"
"@SEEALSO=ATAN, ATANH, COS, SIN, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ATAN2\n"
"@SYNTAX=ATAN2(b1,b2)\n"
"@DESCRIPTION=ATAN2 işlevi @b1 ve @b2 değişkenlerinin ark tanjantını "
"hesaplar. Sonucun koordinat ekseninin hangi çeyreğinde olduğunu her iki "
"argümanın işaretlerine bakarak saptamanın dışında atan(@b2/@b1) hesabına "
"benzer. Sonuç radyan cinsindendir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ATAN2(0.5,1.0) eşittir 1.107149\n"
"ATAN2(-0.5,2.0) eşittir 1.815775\n"
"\n"
"Benzerleri: ATAN, ATANH, COS, SIN, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"ATAN2(0.5;1.0) eşittir 1.107149\n"
"ATAN2(-0.5;2.0) eşittir 1.815775\n"
"\n"
"@SEEALSO=ATAN, ATANH, COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:508
msgid ""
"@FUNCTION=CEIL\n"
"@SYNTAX=CEIL(x)\n"
"@DESCRIPTION=CEIL function rounds @x up to the next nearest integer.\n"
"\n"
"\n"
"@EXAMPLES=\n"
"CEIL(0.4) equals 1.\n"
"CEIL(-1.1) equals -1.\n"
"CEIL(-2.9) equals -2.\n"
"\n"
"@SEEALSO=CEILING, FLOOR, ABS, INT, MOD"
msgstr ""
"@FUNCTION=CEIL\n"
"@SYNTAX=CEIL(x)\n"
"@DESCRIPTION=CEIL işlevi @x'i en yakın büyük tamsayıya yuvarlar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"CEIL(0.4) eşittir 1\n"
"CEIL(-1.1) eşittir -1\n"
"CEIL(-2.9) eşittir -2\n"
"\n"
"Benzerleri: ABS, FLOOR, INT\n"
"@EXAMPLES=\n"
"CEIL(0.4) eşittir 1\n"
"CEIL(-1.1) eşittir -1\n"
"CEIL(-2.9) eşittir -2\n"
"\n"
"@SEEALSO=ABS, FLOOR, INT"

#: ../plugins/fn-math/functions.c:534
msgid ""
"@FUNCTION=COUNTIF\n"
"@SYNTAX=COUNTIF(range,criteria)\n"
"@DESCRIPTION=COUNTIF function counts the number of cells in the given @range "
"that meet the given @criteria.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, "
"and 39.  Then\n"
"COUNTIF(A1:A5,\"<=28\") equals 3.\n"
"COUNTIF(A1:A5,\"<28\") equals 2.\n"
"COUNTIF(A1:A5,\"28\") equals 1.\n"
"COUNTIF(A1:A5,\">28\") equals 2.\n"
"\n"
"@SEEALSO=COUNT,SUMIF"
msgstr ""
"@FUNCTION=COUNTIF\n"
"@SYNTAX=COUNTIF(aralık,koşul)\n"
"@DESCRIPTION=COUNTIF işlevi @aralık içindeki değerlerden @koşulu "
"sağlayanların sayısını bulur.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 23, 27, 28, 33, ve 39 değerlerini "
"içeriyorsa:\n"
"COUNTIF(A1:A5,\"<=28\") eşittir 3\n"
"COUNTIF(A1:A5,\"<28\") eşittir 2\n"
"COUNTIF(A1:A5,\"28\") eşittir 1\n"
"COUNTIF(A1:A5,\">28\") eşittir 2\n"
"\n"
"Benzerleri: COUNT, SUMIF\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 23, 27, 28, 33, ve 39 değerlerini "
"içeriyorsa:\n"
"COUNTIF(A1:A5,\"<=28\") eşittir 3\n"
"COUNTIF(A1:A5,\"<28\") eşittir 2\n"
"COUNTIF(A1:A5,\"28\") eşittir 1\n"
"COUNTIF(A1:A5,\">28\") eşittir 2\n"
"\n"
"@SEEALSO=COUNT,SUMIF"

#: ../plugins/fn-math/functions.c:612
msgid ""
"@FUNCTION=SUMIF\n"
"@SYNTAX=SUMIF(range,criteria[,actual_range])\n"
"@DESCRIPTION=SUMIF function sums the values in the given @range that meet "
"the given @criteria.  If @actual_range is given, SUMIF sums the values in "
"the @actual_range whose corresponding components in @range meet the given "
"@criteria.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, "
"and 39.  Then\n"
"SUMIF(A1:A5,\"<=28\") equals 78.\n"
"SUMIF(A1:A5,\"<28\") equals 50.\n"
"In addition, if the cells B1, B2, ..., B5 hold numbers 5, 3, 2, 6, and 7 "
"then:\n"
"SUMIF(A1:A5,\"<=27\",B1:B5) equals 8.\n"
"\n"
"@SEEALSO=COUNTIF, SUM"
msgstr ""
"@FUNCTION=SUMIF\n"
"@SYNTAX=SUMIF(aralık,koşul[,güncel_aralık])\n"
"@DESCRIPTION=SUMIF işlevi @aralık içindeki değerler arasında @koşula uyan "
"değerlerin toplamını hesaplar. @güncel_aralık verilmişse, @aralık içinde "
"@koşula uyan değerlere @güncel_aralık içinde karşı düşen değerlerin "
"toplamını hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 23, 27, 28, 33, ve 39 değerlerini "
"içeriyorsa:\n"
"SUMIF(A1:A5,\"<=28\") eşittir 78\n"
"SUMIF(A1:A5,\"<28\") eşittir 50\n"
"Ek olarak B1, B2, ..., B5 gözeleri sırasıyla 5, 3, 2, 6, ve 7  değerlerini "
"içeriyorsa:\n"
"SUMIF(A1:A5,\"<=27\",B1:B5) eşittir 8\n"
"\n"
"Benzerleri: COUNTIF, SUM\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 23, 27, 28, 33, ve 39 değerlerini "
"içeriyorsa:\n"
"SUMIF(A1:A5,\"<=28\") eşittir 78\n"
"SUMIF(A1:A5,\"<28\") eşittir 50\n"
"Ek olarak B1, B2, ..., B5 gözeleri sırasıyla 5, 3, 2, 6, ve 7  değerlerini "
"içeriyorsa:\n"
"SUMIF(A1:A5,\"<=27\",B1:B5) eşittir 8\n"
"\n"
"@SEEALSO=COUNTIF, SUM"

#: ../plugins/fn-math/functions.c:736
msgid ""
"@FUNCTION=CEILING\n"
"@SYNTAX=CEILING(x[,significance])\n"
"@DESCRIPTION=CEILING function rounds @x up to the nearest multiple of "
"@significance.\n"
"\n"
"* If @x or @significance is non-numeric CEILING returns #VALUE! error.\n"
"* If @x and @significance have different signs CEILING returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CEILING(2.43,1) equals 3.\n"
"CEILING(123.123,3) equals 126.\n"
"\n"
"@SEEALSO=CEIL, FLOOR, ABS, INT, MOD"
msgstr ""
"@FUNCTION=CEILING\n"
"@SYNTAX=CEILING(x,önem)\n"
"@DESCRIPTION=CEILING işlevi @x'i @önem'in çarpanı olduğu en yakın tamsayıya "
"yuvarlar. @x ya da @önem sayısal değilse @DEĞER!, farklı işaretlere "
"sahipseler @SAYI! hatasıyla sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"CEILING(2.43,1) eşittir 3\n"
"CEILING(123.123,3) eşittir 126\n"
"\n"
"Benzeri: CEIL\n"
"@EXAMPLES=\n"
"CEILING(2.43,1) eşittir 3\n"
"CEILING(123.123,3) eşittir 126\n"
"\n"
"@SEEALSO=CEIL"

#: ../plugins/fn-math/functions.c:777
msgid ""
"@FUNCTION=COS\n"
"@SYNTAX=COS(x)\n"
"@DESCRIPTION=COS function returns the cosine of @x, where @x is given in "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COS(0.5) equals 0.877583.\n"
"COS(1) equals 0.540302.\n"
"\n"
"@SEEALSO=COSH, SIN, SINH, TAN, TANH, RADIANS, DEGREES"
msgstr ""
"@FUNCTION=COS\n"
"@SYNTAX=COS(x)\n"
"@DESCRIPTION=COS işlevi radyan cinsinden verildiğinde @x'in kosinüsünü "
"hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"COS(0.5) eşittir 0.877583\n"
"COS(1) eşittir 0.540302\n"
"\n"
"Benzerleri: COSH, SIN, SINH, TAN, TANH, RADIANS, DEGREES\n"
"@EXAMPLES=\n"
"COS(0.5) eşittir 0.877583\n"
"COS(1) eşittir 0.540302\n"
"\n"
"@SEEALSO=COSH, SIN, SINH, TAN, TANH, RADIANS, DEGREES"

#: ../plugins/fn-math/functions.c:804
msgid ""
"@FUNCTION=COSH\n"
"@SYNTAX=COSH(x)\n"
"@DESCRIPTION=COSH function returns the hyperbolic cosine of @x, which is "
"defined mathematically as\n"
"\n"
"\t(exp(@x) + exp(-@x)) / 2.\n"
"\n"
"* @x is in radians.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COSH(0.5) equals 1.127626.\n"
"COSH(1) equals 1.543081.\n"
"\n"
"@SEEALSO=COS, SIN, SINH, TAN, TANH, RADIANS, DEGREES, EXP"
msgstr ""
"@FUNCTION=COSH\n"
"@SYNTAX=COSH(x)\n"
"@DESCRIPTION=COSH işlevi matematiksel olarak (exp(@x) + exp(-@x)) / 2 "
"ifadesi ile tanımlanan sinüs hiperbolik @x'i hesaplar. @x radyan cinsinden "
"olmalıdır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"COSH(0.5) eşittir 1.127626\n"
"COSH(1) eşittir 1.543081\n"
"\n"
"Benzerleri: COS, SIN, SINH, TAN, TANH, RADIANS, DEGREES, EXP\n"
"@EXAMPLES=\n"
"COSH(0.5) eşittir 1.127626\n"
"COSH(1) eşittir 1.543081\n"
"\n"
"@SEEALSO=COS, SIN, SINH, TAN, TANH, RADIANS, DEGREES, EXP"

#: ../plugins/fn-math/functions.c:832
msgid ""
"@FUNCTION=DEGREES\n"
"@SYNTAX=DEGREES(x)\n"
"@DESCRIPTION=DEGREES computes the number of degrees equivalent to @x "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEGREES(2.5) equals 143.2394.\n"
"\n"
"@SEEALSO=RADIANS, PI"
msgstr ""
"@FUNCTION=DEGREES\n"
"@SYNTAX=DEGREES(x)\n"
"@DESCRIPTION=DEGREES işlevi radyan cinsinden verilen @x'in derece cinsinden "
"eşdeğerini hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"DEGREES(2.5) eşittir 143.2394\n"
"\n"
"Benzerleri: RADIANS, PI\n"
"@EXAMPLES=\n"
"DEGREES(2.5) eşittir 143.2394\n"
"\n"
"@SEEALSO=RADIANS, PI"

#: ../plugins/fn-math/functions.c:859
msgid ""
"@FUNCTION=EXP\n"
"@SYNTAX=EXP(x)\n"
"@DESCRIPTION=EXP computes the value of e (the base of natural logarithms) "
"raised to the power of @x.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EXP(2) equals 7.389056.\n"
"\n"
"@SEEALSO=LOG, LOG2, LOG10"
msgstr ""
"@FUNCTION=EXP\n"
"@SYNTAX=EXP(x)\n"
"@DESCRIPTION=EXP işlevi e üssü @x hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"EXP(2) eşittir 7.389056\n"
"\n"
"Benzerleri: LOG, LOG2, LOG10\n"
"@EXAMPLES=\n"
"EXP(2) eşittir 7.389056.\n"
"\n"
"@SEEALSO=LOG, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:885
msgid ""
"@FUNCTION=EXPM1\n"
"@SYNTAX=EXPM1(x)\n"
"@DESCRIPTION=EXPM1 computes EXP(@x)-1 with higher resulting precision than "
"the direct formula.\n"
"\n"
"@EXAMPLES=\n"
"EXPM1(0.01) equals 0.01005.\n"
"\n"
"@SEEALSO=EXP, LN1P"
msgstr ""
"@FUNCTION=EXP\n"
"@SYNTAX=EXP(x)\n"
"@DESCRIPTION=EXP işlevi e üssü @x hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"EXP(2) eşittir 7.389056\n"
"\n"
"Benzerleri: LOG, LOG2, LOG10\n"
"@EXAMPLES=\n"
"EXP(2) eşittir 7.389056.\n"
"\n"
"@SEEALSO=LOG, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:909
msgid ""
"@FUNCTION=FACT\n"
"@SYNTAX=FACT(x)\n"
"@DESCRIPTION=FACT computes the factorial of @x. ie, @x!\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FACT(3) equals 6.\n"
"FACT(9) equals 362880.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=FACT\n"
"@SYNTAX=FACT(x)\n"
"@DESCRIPTION=FACT işlevi (@x!) @x faktöriyeli hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"FACT(3) eşittir 6\n"
"FACT(9) eşittir 362880\n"
"@EXAMPLES=\n"
"FACT(3) eşittir 6\n"
"FACT(9) eşittir 362880\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:948
#, fuzzy
msgid ""
"@FUNCTION=BETA\n"
"@SYNTAX=BETA(a,b)\n"
"@DESCRIPTION=BETA function returns the value of the mathematical beta "
"function extended to all real numbers except 0 and negative integers.\n"
"\n"
"* If @a, @b, or (@a + @b) are non-positive integers, BETA returns #NUM! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"BETA(2,3) equals 0.083333.\n"
"BETA(-0.5,0.5) equals #NUM!.\n"
"\n"
"@SEEALSO=BETALN,GAMMALN"
msgstr ""
"@FUNCTION=ISPMT\n"
"@SYNTAX=ISPMT(oran,dön,ndön,pv)\n"
"@DESCRIPTION=ISPMT işlevi verilen dönemde ödenen faizi hesaplar.\n"
"Eğer @dön < 1 veya @dön > @ndön ise, ISPMT #SAYI! hatası verir.\n"
"\n"
"Benzeri: PV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV"

#: ../plugins/fn-math/functions.c:981
msgid ""
"@FUNCTION=BETALN\n"
"@SYNTAX=BETALN(a,b)\n"
"@DESCRIPTION=BETALN function returns the natural logarithm of the absolute "
"value of the beta function.\n"
"\n"
"* If @a, @b, or (@a + @b) are non-positive integers, BETALN returns #NUM! \n"
"@EXAMPLES=\n"
"BETALN(2,3) equals -2.48.\n"
"BETALN(-0.5,0.5) equals #NUM!.\n"
"\n"
"@SEEALSO=BETA,GAMMALN"
msgstr ""
"@FUNCTION=ISPMT\n"
"@SYNTAX=ISPMT(oran,dön,ndön,pv)\n"
"@DESCRIPTION=ISPMT işlevi verilen dönemde ödenen faizi hesaplar.\n"
"Eğer @dön < 1 veya @dön > @ndön ise, ISPMT #SAYI! hatası verir.\n"
"\n"
"Benzeri: PV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV"

#: ../plugins/fn-math/functions.c:1013
msgid ""
"@FUNCTION=COMBIN\n"
"@SYNTAX=COMBIN(n,k)\n"
"@DESCRIPTION=COMBIN computes the number of combinations.\n"
"\n"
"* Performing this function on a non-integer or a negative number returns "
"#NUM! error.\n"
"* If @n is less than @k COMBIN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COMBIN(8,6) equals 28.\n"
"COMBIN(6,2) equals 15.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COMBIN\n"
"@SYNTAX=COMBIN(n,k)\n"
"@DESCRIPTION=COMBIN işlevi birleşim sayısını hesaplar. Tamsayı olmayan ya da "
"negatif sayılar verilirse ya da @n < @k ise hata verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"COMBIN(8,6) eşittir 28\n"
"COMBIN(6,2) eşittir 15\n"
"@EXAMPLES=\n"
"COMBIN(8,6) eşittir 28\n"
"COMBIN(6,2) eşittir 15\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:1048
msgid "FLOOR:rounds down."
msgstr ""

#: ../plugins/fn-math/functions.c:1049
msgid "x:value."
msgstr ""

#: ../plugins/fn-math/functions.c:1050
msgid "significance:base multiple (defaults to 1 for @x > 0 and -1 for @x <0)"
msgstr ""

#: ../plugins/fn-math/functions.c:1052
msgid ""
"FLOOR function rounds @x down to the next nearest multiple of @significance."
msgstr ""

#: ../plugins/fn-math/functions.c:1054
msgid "FLOOR(0.5) equals 0."
msgstr ""

#: ../plugins/fn-math/functions.c:1055
msgid "FLOOR(5,2) equals 4."
msgstr ""

#: ../plugins/fn-math/functions.c:1056
msgid "FLOOR(-5,-2) equals -4."
msgstr ""

#: ../plugins/fn-math/functions.c:1057
msgid "FLOOR(-5,2) equals #NUM!."
msgstr ""

#: ../plugins/fn-math/functions.c:1084
msgid ""
"@FUNCTION=INT\n"
"@SYNTAX=INT(a)\n"
"@DESCRIPTION=INT function returns the largest integer that is not bigger "
"than its argument.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"INT(7.2) equals 7.\n"
"INT(-5.5) equals -6.\n"
"\n"
"@SEEALSO=CEIL, CEILING, FLOOR, ABS, MOD"
msgstr ""
"@FUNCTION=INT\n"
"@SYNTAX=INT(a)\n"
"@DESCRIPTION=The INT işlevi verilen sayıyı en yakın küçük tamsayıya "
"yuvarlar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"INT(7.2) eşittir 7\n"
"INT(-5.5) eşittir -6\n"
"\n"
"Benzerleri: FLOOR, CEIL, ABS\n"
"@EXAMPLES=\n"
"INT(7.2) eşittir 7\n"
"INT(-5.5) eşittir -6\n"
"\n"
"@SEEALSO=FLOOR, CEIL, ABS"

#: ../plugins/fn-math/functions.c:1112
msgid ""
"@FUNCTION=LOG\n"
"@SYNTAX=LOG(x[,base])\n"
"@DESCRIPTION=LOG computes the logarithm of @x in the given base @base.  If "
"no @base is given LOG returns the logarithm in base 10. @base must be > 0. "
"and cannot equal 1.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOG(2) equals 0.30103.\n"
"LOG(8192,2) equals 13.\n"
"\n"
"@SEEALSO=LN, LOG2, LOG10"
msgstr ""
"@SYNTAX=LOG(x[,taban])\n"
"@DESCRIPTION=LOG işlevi @x'in @taban tabanındaki logaritmasını hesaplar. "
"@taban verilmezse 10 kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"LOG(2) eşittir 0.30103\n"
"LOG(8192,2) eşittir 13\n"
"\n"
"Benzerleri: LN, LOG2, LOG10\n"
"@EXAMPLES=\n"
"LOG(2) eşittir 0.30103\n"
"LOG(8192,2) eşittir 13\n"
"\n"
"@SEEALSO=LN, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:1149
msgid ""
"@FUNCTION=LN\n"
"@SYNTAX=LN(x)\n"
"@DESCRIPTION=LN returns the natural logarithm of @x.\n"
"\n"
"* If @x <= 0, LN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LN(7) equals 1.94591.\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG10"
msgstr ""
"@FUNCTION=LN\n"
"@SYNTAX=LN(x)\n"
"@DESCRIPTION=LN işlevi @x'in tabii logaritmasını hesaplar. @x <=0 ile işlev "
"#SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"LN(7) eşittir 1.94591\n"
"\n"
"Benzerleri: EXP, LOG2, LOG10\n"
"@EXAMPLES=\n"
"LN(7) eşittir 1.94591\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:1181
msgid ""
"@FUNCTION=LN1P\n"
"@SYNTAX=LN1P(x)\n"
"@DESCRIPTION=LN1P computes LN(1+@x) with higher resulting precision than the "
"direct formula.\n"
"\n"
"* If @x <= -1, LN1P returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"LN1P(0.01) equals 0.00995.\n"
"\n"
"@SEEALSO=LN, EXPM1"
msgstr ""
"@FUNCTION=LOG2\n"
"@SYNTAX=LOG2(x)\n"
"@DESCRIPTION=LOG2 işlevi @x'in 2 tabanına göre logaritmasını hesaplar. @x <= "
"0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"LOG2(1024) eşittir 10\n"
"\n"
"Benzerleri: EXP, LOG10, LOG\n"
"@EXAMPLES=\n"
"LOG2(1024) eşittir 10\n"
"\n"
"@SEEALSO=EXP, LOG10, LOG"

#: ../plugins/fn-math/functions.c:1213
#, fuzzy
msgid ""
"@FUNCTION=POWER\n"
"@SYNTAX=POWER(x,y)\n"
"@DESCRIPTION=POWER returns the value of @x raised to the power @y.\n"
"\n"
"\n"
"* If both @x and @y equal 0, POWER returns #NUM! error.\n"
"* If @x = 0 and @y < 0, POWER returns #DIV/0! error.\n"
"* If @x < 0 and @y is non-integer, POWER returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"POWER(2,7) equals 128.\n"
"POWER(3,3.141) equals 31.523749.\n"
"\n"
"@SEEALSO=EXP"
msgstr ""
"@FUNCTION=POWER\n"
"@SYNTAX=POWER(x,y)\n"
"@DESCRIPTION=POWER işlevi @x üssü @y hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"POWER(2,3) eşittir 8\n"
"POWER(3,3.141) eşittir 31.523749\n"
"\n"
"Benzeri: EXP\n"
"@EXAMPLES=\n"
"POWER(2,3) eşittir 8\n"
"POWER(3,3.141) eşittir 31.523749\n"
"\n"
"@SEEALSO=EXP"

#: ../plugins/fn-math/functions.c:1252
msgid ""
"@FUNCTION=LOG2\n"
"@SYNTAX=LOG2(x)\n"
"@DESCRIPTION=LOG2 computes the base-2 logarithm of @x.\n"
"\n"
"* If @x <= 0, LOG2 returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"LOG2(1024) equals 10.\n"
"\n"
"@SEEALSO=EXP, LOG10, LOG"
msgstr ""
"@FUNCTION=LOG2\n"
"@SYNTAX=LOG2(x)\n"
"@DESCRIPTION=LOG2 işlevi @x'in 2 tabanına göre logaritmasını hesaplar. @x <= "
"0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"LOG2(1024) eşittir 10\n"
"\n"
"Benzerleri: EXP, LOG10, LOG\n"
"@EXAMPLES=\n"
"LOG2(1024) eşittir 10\n"
"\n"
"@SEEALSO=EXP, LOG10, LOG"

#: ../plugins/fn-math/functions.c:1282
msgid ""
"@FUNCTION=LOG10\n"
"@SYNTAX=LOG10(x)\n"
"@DESCRIPTION=LOG10 computes the base-10 logarithm of @x.\n"
"\n"
"* If @x <= 0, LOG10 returns #NUM! error.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"LOG10(7) equals 0.845098.\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG"
msgstr ""
"@FUNCTION=LOG10\n"
"@SYNTAX=LOG10(x)\n"
"@DESCRIPTION=LOG10 işlevi @x'in 10 tabanına göre logaritmasını hesaplar. @x "
"<=0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"LOG10(7) eşittir 0.845098\n"
"\n"
"Benzerleri: EXP, LOG2, LOG\n"
"@EXAMPLES=\n"
"LOG10(7) eşittir 0.845098\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG"

#: ../plugins/fn-math/functions.c:1313
msgid ""
"@FUNCTION=MOD\n"
"@SYNTAX=MOD(number,divisor)\n"
"@DESCRIPTION=MOD function returns the remainder when @divisor is divided "
"into @number.\n"
"\n"
"* MOD returns #DIV/0! if @divisor is zero.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"MOD(23,7) equals 2.\n"
"\n"
"@SEEALSO=CEIL, CEILING, FLOOR, ABS, INT, ABS"
msgstr ""
"@FUNCTION=MOD\n"
"@SYNTAX=MOD(sayı,bölen)\n"
"@DESCRIPTION=MOD işlevi @sayının @bölenle bölünmesinde kalanı verir. @bölen "
"sıfırsa işlev #BÖL/0! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"MOD(23,7) eşittir 2\n"
"\n"
"Benzerleri: INT, FLOOR, CEIL\n"
"@EXAMPLES=\n"
"MOD(23,7) eşittir 2\n"
"\n"
"@SEEALSO=INT,FLOOR,CEIL"

#: ../plugins/fn-math/functions.c:1366
msgid ""
"@FUNCTION=RADIANS\n"
"@SYNTAX=RADIANS(x)\n"
"@DESCRIPTION=RADIANS computes the number of radians equivalent to @x "
"degrees.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RADIANS(180) equals 3.14159.\n"
"\n"
"@SEEALSO=PI,DEGREES"
msgstr ""
"@FUNCTION=RADIANS\n"
"@SYNTAX=RADIANS(x)\n"
"@DESCRIPTION=RADIANS işlev, derece cinsinden verilen @x'in radyan eşdeğerini "
"hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"RADIANS(180) eşittir 3.14159\n"
"\n"
"Benzerleri: PI,DEGREES\n"
"@EXAMPLES=\n"
"RADIANS(180) eşittir 3.14159\n"
"\n"
"@SEEALSO=PI,DEGREES"

#: ../plugins/fn-math/functions.c:1393
msgid ""
"@FUNCTION=SIN\n"
"@SYNTAX=SIN(x)\n"
"@DESCRIPTION=SIN function returns the sine of @x, where @x is given in "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SIN(0.5) equals 0.479426.\n"
"\n"
"@SEEALSO=COS, COSH, SINH, TAN, TANH, RADIANS, DEGREES"
msgstr ""
"@FUNCTION=SIN\n"
"@SYNTAX=SIN(x)\n"
"@DESCRIPTION=SIN işlevi radyan olarak verilen @x açısının sinüsünü "
"hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"SIN(0.5) eşittir 0.479426\n"
"\n"
"Benzerleri: COS, COSH, SINH, TAN, TANH, RADIANS, DEGREES\n"
"@EXAMPLES=\n"
"SIN(0.5) eşittir 0.479426\n"
"\n"
"@SEEALSO=COS, COSH, SINH, TAN, TANH, RADIANS, DEGREES"

#: ../plugins/fn-math/functions.c:1419
msgid ""
"@FUNCTION=SINH\n"
"@SYNTAX=SINH(x)\n"
"@DESCRIPTION=SINH function returns the hyperbolic sine of @x, which is "
"defined mathematically as\n"
"\n"
"\t(exp(@x) - exp(-@x)) / 2.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SINH(0.5) equals 0.521095.\n"
"\n"
"@SEEALSO=SIN, COS, COSH, TAN, TANH, DEGREES, RADIANS, EXP"
msgstr ""
"@FUNCTION=SINH\n"
"@SYNTAX=SINH(x)\n"
"@DESCRIPTION=SINH işlevi matematiksel olarak (exp(@x) - exp(-@x)) / 2 ile "
"ifade edilen sinüs hiperbolik @x'i hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"SINH(0.5) eşittir 0.521095\n"
"\n"
"Benzerleri: SIN, COS, COSH, TAN, TANH, DEGREES, RADIANS, EXP\n"
"@EXAMPLES=\n"
"SINH(0.5) eşittir 0.521095\n"
"\n"
"@SEEALSO=SIN, COS, COSH, TAN, TANH, DEGREES, RADIANS, EXP"

#: ../plugins/fn-math/functions.c:1446
msgid ""
"@FUNCTION=SQRT\n"
"@SYNTAX=SQRT(x)\n"
"@DESCRIPTION=SQRT function returns the square root of @x.\n"
"\n"
"* If @x is negative, SQRT returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SQRT(2) equals 1.4142136.\n"
"\n"
"@SEEALSO=POWER"
msgstr ""
"@FUNCTION=SQRT\n"
"@SYNTAX=SQRT(x)\n"
"@DESCRIPTION=SQRT işlevi @x'in karekökünü hesaplar. @x negatifse işlev "
"#SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"SQRT(2) eşittir 1.4142136\n"
"\n"
"Benzeri: POWER\n"
"@EXAMPLES=\n"
"SQRT(2) eşittir 1.4142136\n"
"\n"
"@SEEALSO=POWER"

#: ../plugins/fn-math/functions.c:1477
msgid ""
"@FUNCTION=SUMA\n"
"@SYNTAX=SUMA(value1, value2, ...)\n"
"@DESCRIPTION=SUMA computes the sum of all the values and cells referenced in "
"the argument list.  Numbers, text and logical values are included in the "
"calculation too.  If the cell contains text or the argument evaluates to "
"FALSE, it is counted as value zero (0). If the argument evaluates to TRUE, "
"it is counted as one (1).\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43.  Then\n"
"SUMA(A1:A5) equals 107.\n"
"\n"
"@SEEALSO=AVERAGE, SUM, COUNT"
msgstr ""
"@FUNCTION=SUMA\n"
"@SYNTAX=SUMA(değer1,değer2, ...)\n"
"@DESCRIPTION=SUMA işlevi verilen değerlerin toplamını hesaplar. Sayılar, "
"metin ve mantıksal değerler hesaba dahildir. Göze metin içeriyorsa ya da "
"YANLIŞ sonuç veren bir ifade içeriyorsa değeri (0) sıfır, DOĞRU sonuçlanan "
"bir ifade içeriyorsa bir (1) olarak değerlendirilir.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 değerlerini içeriyorsa:\n"
"SUMA(A1:A5) eşittir 107\n"
"\n"
"Benzerleri: AVERAGE, SUM, COUNT\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 değerlerini içeriyorsa:\n"
"SUMA(A1:A5) eşittir 107\n"
"\n"
"@SEEALSO=AVERAGE, SUM, COUNT"

#: ../plugins/fn-math/functions.c:1512
msgid ""
"@FUNCTION=SUMSQ\n"
"@SYNTAX=SUMSQ(value1, value2, ...)\n"
"@DESCRIPTION=SUMSQ returns the sum of the squares of all the values and "
"cells referenced in the argument list.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43.  Then\n"
"SUMSQ(A1:A5) equals 2925.\n"
"\n"
"@SEEALSO=SUM, COUNT"
msgstr ""
"@FUNCTION=SUMSQ\n"
"@SYNTAX=SUMSQ(değer1,değer2, ...)\n"
"@DESCRIPTION=SUMSQ işlevi verilen değerlerin karelerinin toplamını "
"hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örenk:\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 değerlerini içeriyorsa:\n"
"SUMSQ(A1:A5) eşittir 2925\n"
"\n"
"Benzerleri: SUM, COUNT\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 değerlerini içeriyorsa:\n"
"SUMSQ(A1:A5) eşittir 2925\n"
"\n"
"@SEEALSO=SUM, COUNT"

#: ../plugins/fn-math/functions.c:1546
msgid ""
"@FUNCTION=MULTINOMIAL\n"
"@SYNTAX=MULTINOMIAL(value1, value2, ...)\n"
"@DESCRIPTION=MULTINOMIAL returns the ratio of the factorial of a sum of "
"values to the product of factorials.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"MULTINOMIAL(2,3,4) equals 1260.\n"
"\n"
"@SEEALSO=SUM"
msgstr ""
"@FUNCTION=MULTINOMIAL\n"
"@SYNTAX=MULTINOMIAL(değer1, değer2, ...)\n"
"@DESCRIPTION=MULTINOMIAL işlevi değerler toplamının faktoriyelinin, "
"faktoriyeller çarpımına oranını verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"MULTINOMIAL(2,3,4) eşittir 1260\n"
"\n"
"Benzeri: SUM\n"
"@EXAMPLES=\n"
"MULTINOMIAL(2,3,4) eşittir 1260\n"
"\n"
"@SEEALSO=SUM"

#: ../plugins/fn-math/functions.c:1578
msgid ""
"@FUNCTION=G_PRODUCT\n"
"@SYNTAX=G_PRODUCT(value1, value2, ...)\n"
"@DESCRIPTION=G_PRODUCT returns the product of all the values and cells "
"referenced in the argument list.\n"
"\n"
"* Empty cells are ignored and the empty product is 1.\n"
"\n"
"@EXAMPLES=\n"
"G_PRODUCT(2,5,9) equals 90.\n"
"\n"
"@SEEALSO=SUM, COUNT"
msgstr ""
"@FUNCTION=G_PRODUCT\n"
"@SYNTAX=G_PRODUCT(değer1, değer2, ...)\n"
"@DESCRIPTION=PRODUCT işlevi verilen değerlerin birbirleri ile çarpımını "
"hesaplar. Boş gözelerin değeri 1 sayılır.\n"
"\n"
"Örnek:\n"
"G_PRODUCT(2,5,9) eşittir 90\n"
"\n"
"Benzerleri: SUM, COUNT\n"
"@EXAMPLES=\n"
"G_PRODUCT(2,5,9) eşittir 90\n"
"\n"
"@SEEALSO=SUM, COUNT"

#: ../plugins/fn-math/functions.c:1609
msgid ""
"@FUNCTION=TAN\n"
"@SYNTAX=TAN(x)\n"
"@DESCRIPTION=TAN function returns the tangent of @x, where @x is given in "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TAN(3) equals -0.1425465.\n"
"\n"
"@SEEALSO=TANH, COS, COSH, SIN, SINH, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=TAN\n"
"@SYNTAX=TAN(x)\n"
"@DESCRIPTION=TAN işlevi radyan cinsinden verilen @x açısının tanjantını "
"hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TAN(3) eşittir -0.1425465\n"
"\n"
"Benzerleri: TANH, COS, COSH, SIN, SINH, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"TAN(3) eşittir -0.1425465\n"
"\n"
"@SEEALSO=TANH, COS, COSH, SIN, SINH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:1635
msgid ""
"@FUNCTION=TANH\n"
"@SYNTAX=TANH(x)\n"
"@DESCRIPTION=TANH function returns the hyperbolic tangent of @x, which is "
"defined mathematically as \n"
"\n"
"\tsinh(@x) / cosh(@x).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TANH(2) equals 0.96402758.\n"
"\n"
"@SEEALSO=TAN, SIN, SINH, COS, COSH, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=TANH\n"
"@SYNTAX=TANH(x)\n"
"@DESCRIPTION=TANH işlevi sinh(@x) / cosh(@x) olarak ifade edilen tanjant "
"hiperbolik @x'i hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TANH(2) eşittir 0.96402758\n"
"\n"
"Benzerleri: TAN, SIN, SINH, COS, COSH, DEGREES, RADIANS\n"
"@EXAMPLES=\n"
"TANH(2) eşittir 0.96402758\n"
"\n"
"@SEEALSO=TAN, SIN, SINH, COS, COSH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:1661
msgid ""
"@FUNCTION=PI\n"
"@SYNTAX=PI()\n"
"@DESCRIPTION=PI functions returns the value of pi.\n"
"\n"
"* This function is called with no arguments.\n"
"* This function is Excel compatible, except that it returns pi with a better "
"precision.\n"
"\n"
"@EXAMPLES=\n"
"PI() equals about 3.141593.\n"
"\n"
"@SEEALSO=SQRTPI"
msgstr ""
"@FUNCTION=PI\n"
"@SYNTAX=PI()\n"
"@DESCRIPTION=PI işlevi pi sayısını verir. Argümansız kullanılır.\n"
"Bu işlev Excel uyumludur ancak pi sayısı burada daha yüksek doğruluktadır.\n"
"\n"
"Örnek:\n"
"PI() eşittir 3.141593\n"
"\n"
"Benzeri: SQRTPI\n"
"@EXAMPLES=\n"
"PI() eşittir 3.141593\n"
"\n"
"@SEEALSO=SQRTPI"

#: ../plugins/fn-math/functions.c:1689
msgid ""
"@FUNCTION=TRUNC\n"
"@SYNTAX=TRUNC(number[,digits])\n"
"@DESCRIPTION=TRUNC function returns the value of @number truncated to the "
"number of digits specified.\n"
"\n"
"* If @digits is omitted or negative then @digits defaults to zero.\n"
"* If @digits is not an integer, it is truncated.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"TRUNC(3.12) equals 3.\n"
"TRUNC(4.15,1) equals 4.1.\n"
"\n"
"@SEEALSO=INT"
msgstr ""
"@FUNCTION=TRUNC\n"
"@SYNTAX=TRUNC(sayı[,hane])\n"
"@DESCRIPTION=TRUNC işlevi @sayıyı belirtilen @hane sayısına alta yuvarlar. "
"@hane verilmezsa sıfır kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"TRUNC(3.12) eşittir 3\n"
"TRUNC(4.15,1) eşittir 4.1\n"
"\n"
"Benzeri: INT\n"
"@EXAMPLES=\n"
"TRUNC(3.12) eşittir 3\n"
"TRUNC(4.15,1) eşittir 4.1\n"
"\n"
"@SEEALSO=INT"

#: ../plugins/fn-math/functions.c:1735
msgid ""
"@FUNCTION=EVEN\n"
"@SYNTAX=EVEN(number)\n"
"@DESCRIPTION=EVEN function returns the number rounded up to the nearest even "
"integer.  Negative numbers are rounded down.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"EVEN(5.4) equals 6.\n"
"EVEN(-5.4) equals -6.\n"
"\n"
"@SEEALSO=ODD"
msgstr ""
"@FUNCTION=EVEN\n"
"@SYNTAX=EVEN(sayı)\n"
"@DESCRIPTION=EVEN işlevi @sayı'yı en yakın büyük çift sayıya yuvarlar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"EVEN(5.4) eşittir 6\n"
"\n"
"Benzeri: ODD\n"
"@EXAMPLES=\n"
"EVEN(5.4) eşittir 6\n"
"\n"
"@SEEALSO=ODD"

#: ../plugins/fn-math/functions.c:1779
msgid ""
"@FUNCTION=ODD\n"
"@SYNTAX=ODD(number)\n"
"@DESCRIPTION=ODD function returns the @number rounded up to the nearest odd "
"integer.  Negative numbers are rounded down.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"ODD(4.4) equals 5.\n"
"ODD(-4.4) equals -5.\n"
"\n"
"@SEEALSO=EVEN"
msgstr ""
"@FUNCTION=ODD\n"
"@SYNTAX=ODD(sayı)\n"
"@DESCRIPTION=ODD işlevi @sayı'yı en yakın büyük tek sayıya yuvarlar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ODD(4.4) eşittir 5\n"
"\n"
"Benzeri: EVEN\n"
"@EXAMPLES=\n"
"ODD(4.4) eşittir 5\n"
"\n"
"@SEEALSO=EVEN"

#: ../plugins/fn-math/functions.c:1823
msgid ""
"@FUNCTION=FACTDOUBLE\n"
"@SYNTAX=FACTDOUBLE(number)\n"
"@DESCRIPTION=FACTDOUBLE function returns the double factorial of a @number, "
"i.e., x!!.\n"
"\n"
"* If @number is not an integer, it is truncated.\n"
"* If @number is negative FACTDOUBLE returns #NUM! error.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"FACTDOUBLE(5) equals 15.\n"
"\n"
"@SEEALSO=FACT"
msgstr ""
"@FUNCTION=FACTDOUBLE\n"
"@SYNTAX=FACTDOUBLE(sayı)\n"
"@DESCRIPTION=FACTDOUBLE işlevi @sayı'nın çift faktoriyelini hesaplar. x!! "
"gibi\n"
" @sayı tamsayı değilse ondalık kısmı atılır, @sayı negatifse işlev #SAYI! "
"hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FACTDOUBLE(5) eşittir 15\n"
"\n"
"Benzeri: FACT\n"
"@EXAMPLES=\n"
"FACTDOUBLE(5) eşittir 15\n"
"\n"
"@SEEALSO=FACT"

#: ../plugins/fn-math/functions.c:1870
msgid ""
"@FUNCTION=FIB\n"
"@SYNTAX=FIB(number)\n"
"@DESCRIPTION=FIB function computes Fibonacci numbers.\n"
"\n"
"* If @number is not an integer, it is truncated.\n"
"* If @number is negative or zero FIB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"FIB(12) equals 144.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=FACTDOUBLE\n"
"@SYNTAX=FACTDOUBLE(sayı)\n"
"@DESCRIPTION=FACTDOUBLE işlevi @sayı'nın çift faktoriyelini hesaplar. x!! "
"gibi\n"
" @sayı tamsayı değilse ondalık kısmı atılır, @sayı negatifse işlev #SAYI! "
"hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FACTDOUBLE(5) eşittir 15\n"
"\n"
"Benzeri: FACT\n"
"@EXAMPLES=\n"
"FACTDOUBLE(5) eşittir 15\n"
"\n"
"@SEEALSO=FACT"

#: ../plugins/fn-math/functions.c:1921
msgid ""
"@FUNCTION=QUOTIENT\n"
"@SYNTAX=QUOTIENT(numerator,denominator)\n"
"@DESCRIPTION=QUOTIENT function returns the integer portion of a division.  "
"@numerator is the divided number and @denominator is the divisor.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"QUOTIENT(23,5) equals 4.\n"
"\n"
"@SEEALSO=MOD"
msgstr ""
"@FUNCTION=QUOTIENT\n"
"@SYNTAX=QUOTIENT(pay,payda)\n"
"@DESCRIPTION=QUOTIENT işlevi @pay, @payda ile bölündüğünde bölümün tamsayı "
"kısmı ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"QUOTIENT(23,5) eşittir 4\n"
"\n"
"Benzeri: MOD\n"
"@EXAMPLES=\n"
"QUOTIENT(23,5) eşittir 4\n"
"\n"
"@SEEALSO=MOD"

#: ../plugins/fn-math/functions.c:1954
msgid ""
"@FUNCTION=SIGN\n"
"@SYNTAX=SIGN(number)\n"
"@DESCRIPTION=SIGN function returns 1 if the @number is positive, zero if the "
"@number is 0, and -1 if the @number is negative.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"SIGN(3) equals 1.\n"
"SIGN(-3) equals -1.\n"
"SIGN(0) equals 0.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=SIGN\n"
"@SYNTAX=SIGN(sayı)\n"
"@DESCRIPTION=SIGN işlevi @sayı > 0 ise 1, @sayı = 0 ise 0, @sayı < 0 ise -1 "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"SIGN(3) eşittir 1\n"
"SIGN(-3) eşittir -1\n"
"SIGN(0) eşittir 0\n"
"@EXAMPLES=\n"
"SIGN(3) eşittir 1\n"
"SIGN(-3) eşittir -1\n"
"SIGN(0) eşittir 0\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:1989
msgid ""
"@FUNCTION=SQRTPI\n"
"@SYNTAX=SQRTPI(number)\n"
"@DESCRIPTION=SQRTPI function returns the square root of a @number multiplied "
"by pi.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SQRTPI(2) equals 2.506628275.\n"
"\n"
"@SEEALSO=PI"
msgstr ""
"@FUNCTION=SQRTPI\n"
"@SYNTAX=SQRTPI(sayı)\n"
"@DESCRIPTION=SQRTPI işlevi @sayı'nın pi ile çarpımının karekökünü hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"SQRTPI(2) eşittir 2.506628275\n"
"\n"
"Benzerleri: PI, SQRT\n"
"@EXAMPLES=\n"
"SQRTPI(2) eşittir 2.506628275\n"
"\n"
"@SEEALSO=PI"

#: ../plugins/fn-math/functions.c:2020
msgid ""
"@FUNCTION=ROUNDDOWN\n"
"@SYNTAX=ROUNDDOWN(number[,digits])\n"
"@DESCRIPTION=ROUNDDOWN function rounds a given @number towards 0.\n"
"\n"
"@number is the number you want rounded toward 0 and @digits is the number of "
"digits to which you want to round that number.\n"
"\n"
"* If @digits is greater than zero, @number is rounded toward 0 to the given "
"number of digits.\n"
"* If @digits is zero or omitted, @number is rounded toward 0 to the next "
"integer.\n"
"* If @digits is less than zero, @number is rounded toward 0 to the left of "
"the decimal point.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROUNDDOWN(5.5) equals 5.\n"
"ROUNDDOWN(-3.3) equals -3.\n"
"ROUNDDOWN(1501.15,1) equals 1501.1.\n"
"ROUNDDOWN(1501.15,-2) equals 1500.0.\n"
"\n"
"@SEEALSO=ROUND,ROUNDUP"
msgstr ""
"@FUNCTION=ROUNDDOWN\n"
"@SYNTAX=ROUNDDOWN(sayı[,hane])\n"
"@DESCRIPTION=ROUNDDOWN işlevi verilen @sayı'yı alta yuvarlar. @sayı "
"yuvarlanacak değeri, @hane ise yuvarlanacak hanelerin sayısıdır.\n"
" @hane verilmezse 0 kabul edilir ve bu durumda sayı en yakın küçük tamsayıya "
"yuvarlanır. Pozitif @haneler ondalık noktanın sağındaki hane sayısını, "
"negatif @haneler ise ondalık noktanın solundaki sıfırlanan hane sayısını "
"gösterir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ROUNDDOWN(5.5) eşittir 5\n"
"ROUNDDOWN(-3.3) eşittir -4\n"
"ROUNDDOWN(1501.15,1) eşittir 1501.1\n"
"ROUNDDOWN(1501.15,-2) eşittir 1500.0\n"
"\n"
"Benzerleri: ROUND, ROUNDUP\n"
"@EXAMPLES=\n"
"ROUNDDOWN(5.5) eşittir 5\n"
"ROUNDDOWN(-3.3) eşittir -4\n"
"ROUNDDOWN(1501.15,1) eşittir 1501.1\n"
"ROUNDDOWN(1501.15,-2) eşittir 1500.0\n"
"\n"
"@SEEALSO=ROUND,ROUNDUP"

#: ../plugins/fn-math/functions.c:2057
msgid ""
"@FUNCTION=ROUND\n"
"@SYNTAX=ROUND(number[,digits])\n"
"@DESCRIPTION=ROUND function rounds a given number.\n"
"\n"
"@number is the number you want rounded and @digits is the number of digits "
"to which you want to round that number.\n"
"\n"
"* If @digits is greater than zero, @number is rounded to the given number of "
"digits.\n"
"* If @digits is zero or omitted, @number is rounded to the nearest integer.\n"
"* If @digits is less than zero, @number is rounded to the left of the "
"decimal point.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROUND(5.5) equals 6.\n"
"ROUND(-3.3) equals -3.\n"
"ROUND(1501.15,1) equals 1501.2.\n"
"ROUND(1501.15,-2) equals 1500.0.\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUNDUP"
msgstr ""
"@FUNCTION=ROUND\n"
"@SYNTAX=ROUND(sayı[,hane])\n"
"@DESCRIPTION=ROUND işlevi verilen @sayı'yı yuvarlar. @sayı yuvarlanacak "
"değeri, @haneler ise yuvarlanacak hanelerin sayısıdır. @haneler verilmezse 0 "
"kabul edilir ve bu durumda sayı en yakın tamsayıya yuvarlanır. Pozitif "
"@haneler ondalık noktanın sağındaki hane sayısını, negatif @haneler ise "
"ondalık noktanın solundaki sıfırların sayısını gösterir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"ROUND(5.5) eşittir 6\n"
"ROUND(-3.3) eşittir -3\n"
"ROUND(1501.15,1) eşittir 1501.2\n"
"ROUND(1501.15,-2) eşittir 1500.0\n"
"\n"
"Benzerleri: ROUNDDOWN, ROUNDUP\n"
"@EXAMPLES=\n"
"ROUND(5.5) eşittir 6\n"
"ROUND(-3.3) eşittir -3\n"
"ROUND(1501.15,1) eşittir 1501.2\n"
"ROUND(1501.15,-2) eşittir 1500.0\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUNDUP"

#: ../plugins/fn-math/functions.c:2111
msgid ""
"@FUNCTION=ROUNDUP\n"
"@SYNTAX=ROUNDUP(number[,digits])\n"
"@DESCRIPTION=ROUNDUP function rounds a given number away from 0.\n"
"\n"
"@number is the number you want rounded away from 0 and @digits is the number "
"of digits to which you want to round that number.\n"
"\n"
"* If @digits is greater than zero, @number is rounded away from 0 to the "
"given number of digits.\n"
"* If @digits is zero or omitted, @number is rounded away from 0 to the next "
"integer.\n"
"* If @digits is less than zero, @number is rounded away from 0 to the left "
"of the decimal point.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROUNDUP(5.5) equals 6.\n"
"ROUNDUP(-3.3) equals -4.\n"
"ROUNDUP(1501.15,1) equals 1501.2.\n"
"ROUNDUP(1501.15,-2) equals 1600.0.\n"
"\n"
"@SEEALSO=ROUND,ROUNDDOWN"
msgstr ""
"@FUNCTION=ROUNDUP\n"
"@SYNTAX=ROUNDUP(sayı[,hane])\n"
"@DESCRIPTION=ROUNDUP işlevi verilen @sayı'yı üste yuvarlar. @sayı "
"yuvarlanacak değeri, @hane ise yuvarlanacak hanelerin sayısıdır.\n"
" @hane verilmezse 0 kabul edilir ve bu durumda sayı en yakın büyük tamsayıya "
"yuvarlanır. Pozitif @haneler ondalık noktanın sağındaki hane sayısını, "
"negatif @haneler ise ondalık noktanın solundaki sıfırlanan hane sayısını "
"gösterir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ROUNDUP(5.5) equals 6\n"
"ROUNDUP(-3.3) equals -3\n"
"ROUNDUP(1501.123,2) eşittir 1501.13\n"
"ROUNDUP(1501.15,1) eşittir 1501.2\n"
"ROUNDUP(1501.15,-2) eşittir 1600.0\n"
"\n"
"Benzerleri: ROUND, ROUNDDOWN\n"
"@EXAMPLES=\n"
"ROUNDUP(5.5) equals 6\n"
"ROUNDUP(-3.3) equals -3\n"
"ROUNDUP(1501.123,2) eşittir 1501.13\n"
"ROUNDUP(6.15,-2) eşittir 100\n"
"ROUNDUP(-6.15,-2) eşittir 0\n"
"\n"
"@SEEALSO=ROUND,ROUNDDOWN"

#: ../plugins/fn-math/functions.c:2172
msgid ""
"@FUNCTION=MROUND\n"
"@SYNTAX=MROUND(number,multiple)\n"
"@DESCRIPTION=MROUND function rounds a given number to the desired multiple.\n"
"\n"
"@number is the number you want rounded and @multiple is the the multiple to "
"which you want to round the number.\n"
"\n"
"* If @number and @multiple have different sign, MROUND returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MROUND(1.7,0.2) equals 1.8.\n"
"MROUND(321.123,0.12) equals 321.12.\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUND,ROUNDUP"
msgstr ""
"@FUNCTION=MROUND\n"
"@SYNTAX=MROUND(sayı,çarpan)\n"
"@DESCRIPTION=MROUND işlevi verilen @sayı'yı @çarpan'ı verilen sayıya "
"yuvarlar. @sayı ve @çarpan farklı işaretlere sahipse işlev #SAYI! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"MROUND(1.7,0.2) eşittir 1.8\n"
"MROUND(321.123,0.12) eşittir 321.12\n"
"\n"
"Benzerleri: ROUNDDOWN, ROUND, ROUNDUP\n"
"@EXAMPLES=\n"
"MROUND(1.7,0.2) eşittir 1.8\n"
"MROUND(321.123,0.12) eşittir 321.12\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUND,ROUNDUP"

#: ../plugins/fn-math/functions.c:2229
msgid ""
"@FUNCTION=ROMAN\n"
"@SYNTAX=ROMAN(number[,type])\n"
"@DESCRIPTION=ROMAN function returns an arabic number in the roman numeral "
"style, as text. @number is the number you want to convert and @type is the "
"type of roman numeral you want.\n"
"\n"
"* If @type is 0 or it is omitted, ROMAN returns classic roman numbers.\n"
"* Type 1 is more concise than classic type, type 2 is more concise than type "
"1, and type 3 is more concise than type 2.  Type 4 is simplified type.\n"
"* If @number is negative or greater than 3999, ROMAN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROMAN(999) equals CMXCIX.\n"
"ROMAN(999,1) equals LMVLIV.\n"
"ROMAN(999,2) equals XMIX.\n"
"ROMAN(999,3) equals VMIV.\n"
"ROMAN(999,4) equals IM.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ROMAN\n"
"@SYNTAX=ROMAN(sayı[,türü])\n"
"@DESCRIPTION=ROMAN işlevi arap rakamlarını roma rakamlarına dönüştürür. "
"@sayı dönüşümü yapılacak değer, @türü ise elde edilecek roma rakamlarının "
"hassasiyetini belirten indistir. @türü verilmezse 0 kabul edilir. 0 klasik "
"türdür, @türü büyüdükçe hassasiyet artar. 4 en yüksek indistir. @sayı 3999 "
"dan büyükse işlev #DEĞER! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"ROMAN(999) eşittir CMXCIX\n"
"ROMAN(999,1) eşittir LMVLIV\n"
"ROMAN(999,2) eşittir XMIX\n"
"ROMAN(999,3) eşittir VMIV\n"
"ROMAN(999,4) eşittir IM\n"
"@EXAMPLES=\n"
"ROMAN(999) eşittir CMXCIX\n"
"ROMAN(999,1) eşittir LMVLIV\n"
"ROMAN(999,2) eşittir XMIX\n"
"ROMAN(999,3) eşittir VMIV\n"
"ROMAN(999,4) eşittir IM\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:2494
msgid ""
"@FUNCTION=SUMX2MY2\n"
"@SYNTAX=SUMX2MY2(array1,array2)\n"
"@DESCRIPTION=SUMX2MY2 function returns the sum of the difference of squares "
"of corresponding values in two arrays. @array1 is the first array or range "
"of data points and @array2 is the second array or range of data points. The "
"equation of SUMX2MY2 is SUM (x^2-y^2).\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If @array1 and @array2 have different number of data points, SUMX2MY2 "
"returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.  "
"Then\n"
"SUMX2MY2(A1:A5,B1:B5) equals -1299.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2PY2"
msgstr ""
"@FUNCTION=SUMX2MY2\n"
"@SYNTAX=SUMX2MY2(dizi_x,dizi_y)\n"
"@DESCRIPTION=SUMX2MY2 işlevi verilen iki dizinin aynı indisli elemanlarının "
"karelerinin farklarının toplamını hesaplar. Eşitlik SUM (x²-y²) "
"şeklindedir.\n"
"Dizgeler ve boş gözeler yok sayılır.\n"
" @dizi_x ve @dizi_y farklı sayıda değer içeriyorsa işlev #YOK! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 ve B1, B2, ..., B5 gözeleri 13, "
"22, 31, 33, 39 içeriyorsa:\n"
"SUMX2MY2(A1:A5,B1:B5) eşittir -1299\n"
"\n"
"Örnekler: SUMSQ, SUMX2PY2\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 ve B1, B2, ..., B5 gözeleri 13, "
"22, 31, 33, 39 içeriyorsa:\n"
"SUMX2MY2(A1:A5,B1:B5) eşittir -1299\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2PY2"

#: ../plugins/fn-math/functions.c:2611
msgid ""
"@FUNCTION=SUMX2PY2\n"
"@SYNTAX=SUMX2PY2(array1,array2)\n"
"@DESCRIPTION=SUMX2PY2 function returns the sum of the sum of squares of "
"corresponding values in two arrays. @array1 is the first array or range of "
"data points and @array2 is the second array or range of data points. The "
"equation of SUMX2PY2 is SUM (x^2+y^2).\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If @array1 and @array2 have different number of data points, SUMX2PY2 "
"returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.  "
"Then\n"
"SUMX2PY2(A1:A5,B1:B5) equals 7149.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2"
msgstr ""
"@FUNCTION=SUMX2PY2\n"
"@SYNTAX=SUMX2PY2(dizi_x,dizi_y)\n"
"@DESCRIPTION=SUMX2PY2 işlevi verilen iki dizinin aynı indisli elemanlarının "
"karelerinin toplamlarının toplamını hesaplar. Eşitlik SUM (x²+y²) "
"şeklindedir.\n"
"Dizgeler ve boş gözeler yok sayılır.\n"
" @dizi_x ve @dizi_y farklı sayıda değer içeriyorsa işlev #YOK! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 ve B1, B2, ..., B5 gözeleri 13, "
"22, 31, 33, 39 içeriyorsa:\n"
"SUMX2PY2(A1:A5,B1:B5) eşittir 7149\n"
"\n"
"Benzerleri: SUMSQ, SUMX2MY2\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 ve B1, B2, ..., B5 gözeleri 13, "
"22, 31, 33, 39 içeriyorsa:\n"
"SUMX2PY2(A1:A5,B1:B5) eşittir 7149\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2"

#: ../plugins/fn-math/functions.c:2725
msgid ""
"@FUNCTION=SUMXMY2\n"
"@SYNTAX=SUMXMY2(array1,array2)\n"
"@DESCRIPTION=SUMXMY2 function returns the sum of squares of differences of "
"corresponding values in two arrays. @array1 is the first array or range of "
"data points and @array2 is the second array or range of data points. The "
"equation of SUMXMY2 is SUM (x-y)^2.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If @array1 and @array2 have different number of data points, SUMXMY2 "
"returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.  "
"Then\n"
"SUMXMY2(A1:A5,B1:B5) equals 409.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2,SUMX2PY2"
msgstr ""
"@FUNCTION=SUMXMY2\n"
"@SYNTAX=SUMXMY2(dizi_x,dizi_y)\n"
"@DESCRIPTION=SUMXMY2 işlevi iki dizi içinde aynı indisli değerlerin "
"farklarının kareleri toplamını hesaplar. Eşitlik SUM (x-y)² şeklindedir.\n"
"Dizgeler ve boş gözeler yoksayılır.\n"
" @dizi_x ve @dizi_y farklı sayıda değer içeriyorsa işlev #YOK! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 ve B1, B2, ..., B5 gözeleri 13, "
"22, 31, 33, 39 içeriyorsa:\n"
"SUMXMY2(A1:A5,B1:B5) eşittir 409\n"
"\n"
"Benzerleri: SUMSQ,SUMX2MY2,SUMX2PY2\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11, 15, 17, 21, 43 ve B1, B2, ..., B5 gözeleri 13, "
"22, 31, 33, 39 içeriyorsa:\n"
"SUMXMY2(A1:A5,B1:B5) eşittir 409\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2,SUMX2PY2"

#: ../plugins/fn-math/functions.c:2841
msgid ""
"@FUNCTION=SERIESSUM\n"
"@SYNTAX=SERIESSUM(x,n,m,coefficients)\n"
"@DESCRIPTION=SERIESSUM function returns the sum of a power series.  @x is "
"the base of the power series, @n is the initial power to raise @x, @m is the "
"increment to the power for each term in the series, and @coefficients are "
"the coefficients by which each successive power of @x is multiplied.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 1.23, 2.32, "
"2.98, 3.42, and 4.33.  Then\n"
"SERIESSUM(3,1,2.23,A1:A5) equals 251416.43018.\n"
"\n"
"@SEEALSO=COUNT,SUM"
msgstr ""
"@FUNCTION=SERIESSUM\n"
"@SYNTAX=SERIESSUM(x,n,m,katsayılar)\n"
"@DESCRIPTION=SERIESSUM işlevi üslü serinin toplamını hesaplar. @x üssün "
"tabanını, @n üssün değeri, @m serideki her değer için üs artışı, katsayılar "
"ise her terimin katsayılarının bulunduğu göze aralığıdır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 1.23, 2.32, 2.98, 3.42, ve 4.33 "
"içeriyorsa:\n"
"SERIESSUM(3,1,2.23,A1:A5) eşittir 251416.43018\n"
"\n"
"Benzerleri: COUNT, SUM\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 1.23, 2.32, 2.98, 3.42, ve 4.33 "
"içeriyorsa:\n"
"SERIESSUM(3,1,2.23,A1:A5) eşittir 251416.43018\n"
"\n"
"@SEEALSO=COUNT,SUM"

#: ../plugins/fn-math/functions.c:2902
msgid ""
"@FUNCTION=MINVERSE\n"
"@SYNTAX=MINVERSE(matrix)\n"
"@DESCRIPTION=MINVERSE function returns the inverse matrix of @matrix.\n"
"\n"
"* If @matrix cannot be inverted, MINVERSE returns #NUM! error.\n"
"* If @matrix does not contain equal number of columns and rows, MINVERSE "
"returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT, MDETERM"
msgstr ""
"@FUNCTION=MINVERSE\n"
"@SYNTAX=MINVERSE(matris)\n"
"@DESCRIPTION=MINVERSE işlevi verilen matrisin tersini verir. @matris ters "
"çevrilemezse işlev #SAYI! hatası ile sonuçlanır. @matris eşit sayıda satır "
"ve sütun içermiyorsa işlev #DEĞER! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzerleri: MMULT, MDETERM\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT, MDETERM"

#: ../plugins/fn-math/functions.c:3047
msgid ""
"@FUNCTION=MMULT\n"
"@SYNTAX=MMULT(array1,array2)\n"
"@DESCRIPTION=MMULT function returns the matrix product of two arrays. The "
"result is an array with the same number of rows as @array1 and the same "
"number of columns as @array2.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TRANSPOSE,MINVERSE"
msgstr ""
"@FUNCTION=MMULT\n"
"@SYNTAX=MMULT(dizi1,dizi2)\n"
"@DESCRIPTION=MMULT işlevi iki dizinin matrisel çarpımını hesaplar. Sonuç "
"@dizi1 ile aynı satır ve @dizi2 ile aynı sütun sayısında bir dizidir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzerleri: TRANSPOSE, MINVERSE\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TRANSPOSE,MINVERSE"

#: ../plugins/fn-math/functions.c:3123
msgid ""
"@FUNCTION=MDETERM\n"
"@SYNTAX=MDETERM(matrix)\n"
"@DESCRIPTION=MDETERM function returns the determinant of a given matrix.\n"
"\n"
"* If the @matrix does not contain equal number of columns and rows, MDETERM "
"returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that A1, ..., A4 contain numbers 2, 3, 7, and 3, B1, ..., B4 "
"4, 2, 4, and 1, C1, ..., C4 9, 4, 3, and 2, and D1, ..., D4 7, 3, 6, and 5. "
"Then\n"
"MDETERM(A1:D4) equals 148.\n"
"\n"
"@SEEALSO=MMULT, MINVERSE"
msgstr ""
"@FUNCTION=MDETERM\n"
"@SYNTAX=MDETERM(matris)\n"
"@DESCRIPTION=MDETERM işlevi verilen matrisin determinantını hesaplar. "
"@matris eşit sayıda satır ve sütun içermiyorsa işlev #DEĞER! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, ..., A4 gözeleri 2, 3, 7, 3\n"
"B1, ..., B4 gözeleri 4, 2, 4, 1\n"
"C1, ..., C4 gözeleri 9, 4, 3, 2\n"
"D1, ..., D4 gözeleri 7, 3, 6, 5 içeriyorsa:\n"
"MDETERM(A1:D4) eşittir 148\n"
"\n"
"Benzerleri: MMULT, MINVERSE\n"
"@EXAMPLES=\n"
"A1, ..., A4 gözeleri 2, 3, 7, 3\n"
"B1, ..., B4 gözeleri 4, 2, 4, 1\n"
"C1, ..., C4 gözeleri 9, 4, 3, 2\n"
"D1, ..., D4 gözeleri 7, 3, 6, 5 içeriyorsa:\n"
"MDETERM(A1:D4) eşittir 148\n"
"\n"
"@SEEALSO=MMULT, MINVERSE"

#: ../plugins/fn-math/functions.c:3172
msgid "SUMPRODUCT:Multiplies components and adds the results."
msgstr ""

#: ../plugins/fn-math/functions.c:3174
msgid ""
"Multiplies corresponding data entries in the given arrays or ranges, and "
"then returns the sum of those products."
msgstr ""

#: ../plugins/fn-math/functions.c:3177
msgid "If an entry is not numeric, the value zero is used instead."
msgstr ""

#: ../plugins/fn-math/functions.c:3178
msgid ""
"If arrays or range arguments do not have the same dimensions, return #VALUE! "
"error."
msgstr ""

#: ../plugins/fn-math/functions.c:3180
msgid ""
"SUMPRODUCTs arguments are arrays or ranges. Attempting to use A1:A5>0 will "
"not work, implicit intersection will kick in. Instead use --(A1:A5>0)"
msgstr ""

#: ../plugins/fn-r/functions.c:19
msgid "R.DNORM:probability density function of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:20 ../plugins/fn-r/functions.c:45
#: ../plugins/fn-r/functions.c:99 ../plugins/fn-r/functions.c:124
#: ../plugins/fn-r/functions.c:151 ../plugins/fn-r/functions.c:178
#: ../plugins/fn-r/functions.c:203 ../plugins/fn-r/functions.c:257
#: ../plugins/fn-r/functions.c:282 ../plugins/fn-r/functions.c:336
#: ../plugins/fn-r/functions.c:359 ../plugins/fn-r/functions.c:409
#: ../plugins/fn-r/functions.c:434 ../plugins/fn-r/functions.c:461
#: ../plugins/fn-r/functions.c:488 ../plugins/fn-r/functions.c:511
#: ../plugins/fn-r/functions.c:561 ../plugins/fn-r/functions.c:586
#: ../plugins/fn-r/functions.c:640 ../plugins/fn-r/functions.c:663
#: ../plugins/fn-r/functions.c:713 ../plugins/fn-r/functions.c:736
#: ../plugins/fn-r/functions.c:786 ../plugins/fn-r/functions.c:811
#: ../plugins/fn-r/functions.c:838 ../plugins/fn-r/functions.c:865
#: ../plugins/fn-r/functions.c:890 ../plugins/fn-r/functions.c:944
#: ../plugins/fn-r/functions.c:971 ../plugins/fn-r/functions.c:1029
#: ../plugins/fn-r/functions.c:1052 ../plugins/fn-r/functions.c:1102
#: ../plugins/fn-r/functions.c:1127
msgid "x:observation."
msgstr ""

#: ../plugins/fn-r/functions.c:21 ../plugins/fn-r/functions.c:46
#: ../plugins/fn-r/functions.c:73
msgid "mu:mean of the distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:22 ../plugins/fn-r/functions.c:47
#: ../plugins/fn-r/functions.c:74
msgid "sigma:standard deviation of the distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:23 ../plugins/fn-r/functions.c:102
#: ../plugins/fn-r/functions.c:181 ../plugins/fn-r/functions.c:260
#: ../plugins/fn-r/functions.c:338 ../plugins/fn-r/functions.c:412
#: ../plugins/fn-r/functions.c:490 ../plugins/fn-r/functions.c:564
#: ../plugins/fn-r/functions.c:642 ../plugins/fn-r/functions.c:715
#: ../plugins/fn-r/functions.c:789 ../plugins/fn-r/functions.c:868
#: ../plugins/fn-r/functions.c:948 ../plugins/fn-r/functions.c:1031
#: ../plugins/fn-r/functions.c:1105
msgid ""
"give_log:if true, log of the result will be returned instead.  This is "
"useful if the result would otherwise underflow to 0.  Defaults to false."
msgstr ""

#: ../plugins/fn-r/functions.c:24
msgid ""
"This function returns the probability density function of the normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:44
msgid "R.PNORM:cumulative distribution function of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:48 ../plugins/fn-r/functions.c:75
#: ../plugins/fn-r/functions.c:127 ../plugins/fn-r/functions.c:154
#: ../plugins/fn-r/functions.c:206 ../plugins/fn-r/functions.c:233
#: ../plugins/fn-r/functions.c:285 ../plugins/fn-r/functions.c:312
#: ../plugins/fn-r/functions.c:361 ../plugins/fn-r/functions.c:386
#: ../plugins/fn-r/functions.c:437 ../plugins/fn-r/functions.c:464
#: ../plugins/fn-r/functions.c:513 ../plugins/fn-r/functions.c:538
#: ../plugins/fn-r/functions.c:589 ../plugins/fn-r/functions.c:616
#: ../plugins/fn-r/functions.c:665 ../plugins/fn-r/functions.c:690
#: ../plugins/fn-r/functions.c:738 ../plugins/fn-r/functions.c:763
#: ../plugins/fn-r/functions.c:814 ../plugins/fn-r/functions.c:841
#: ../plugins/fn-r/functions.c:893 ../plugins/fn-r/functions.c:920
#: ../plugins/fn-r/functions.c:975 ../plugins/fn-r/functions.c:1004
#: ../plugins/fn-r/functions.c:1054 ../plugins/fn-r/functions.c:1079
#: ../plugins/fn-r/functions.c:1130 ../plugins/fn-r/functions.c:1157
msgid ""
"lower_tail:if true (the default), the lower tail of the distribution is "
"considered."
msgstr ""

#: ../plugins/fn-r/functions.c:49 ../plugins/fn-r/functions.c:76
#: ../plugins/fn-r/functions.c:128 ../plugins/fn-r/functions.c:155
#: ../plugins/fn-r/functions.c:207 ../plugins/fn-r/functions.c:234
#: ../plugins/fn-r/functions.c:286 ../plugins/fn-r/functions.c:313
#: ../plugins/fn-r/functions.c:362 ../plugins/fn-r/functions.c:387
#: ../plugins/fn-r/functions.c:438 ../plugins/fn-r/functions.c:465
#: ../plugins/fn-r/functions.c:514 ../plugins/fn-r/functions.c:539
#: ../plugins/fn-r/functions.c:590 ../plugins/fn-r/functions.c:617
#: ../plugins/fn-r/functions.c:666 ../plugins/fn-r/functions.c:691
#: ../plugins/fn-r/functions.c:739 ../plugins/fn-r/functions.c:764
#: ../plugins/fn-r/functions.c:815 ../plugins/fn-r/functions.c:842
#: ../plugins/fn-r/functions.c:894 ../plugins/fn-r/functions.c:921
#: ../plugins/fn-r/functions.c:976 ../plugins/fn-r/functions.c:1005
#: ../plugins/fn-r/functions.c:1055 ../plugins/fn-r/functions.c:1080
#: ../plugins/fn-r/functions.c:1131 ../plugins/fn-r/functions.c:1158
msgid ""
"log_p:if true, log of the probability is used.  This is useful if the "
"probability would otherwise underflow to 0.  Defaults to false."
msgstr ""

#: ../plugins/fn-r/functions.c:50
msgid ""
"This function returns the cumulative distribution function of the normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:71
msgid "R.QNORM:probability quantile function of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:72 ../plugins/fn-r/functions.c:230
#: ../plugins/fn-r/functions.c:309 ../plugins/fn-r/functions.c:384
#: ../plugins/fn-r/functions.c:536 ../plugins/fn-r/functions.c:613
#: ../plugins/fn-r/functions.c:688 ../plugins/fn-r/functions.c:761
#: ../plugins/fn-r/functions.c:917 ../plugins/fn-r/functions.c:1000
#: ../plugins/fn-r/functions.c:1077 ../plugins/fn-r/functions.c:1154
msgid "p:probability."
msgstr ""

#: ../plugins/fn-r/functions.c:77
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:98
msgid "R.DLNORM:probability density function of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:100 ../plugins/fn-r/functions.c:125
#: ../plugins/fn-r/functions.c:152
msgid "logmean:mean of the underlying normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:101 ../plugins/fn-r/functions.c:126
#: ../plugins/fn-r/functions.c:153
msgid "logsd:standard deviation of the underlying normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:103
msgid ""
"This function returns the probability density function of the log-normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:123
msgid ""
"R.PLNORM:cumulative distribution function of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:129
msgid ""
"This function returns the cumulative distribution function of the log-normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:150
msgid "R.QLNORM:probability quantile function of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:156
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:177
msgid "R.DGAMMA:probability density function of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:179 ../plugins/fn-r/functions.c:204
#: ../plugins/fn-r/functions.c:231 ../plugins/fn-r/functions.c:562
#: ../plugins/fn-r/functions.c:587 ../plugins/fn-r/functions.c:614
msgid "shape:the shape parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:180 ../plugins/fn-r/functions.c:205
#: ../plugins/fn-r/functions.c:232 ../plugins/fn-r/functions.c:563
#: ../plugins/fn-r/functions.c:588 ../plugins/fn-r/functions.c:615
#: ../plugins/fn-r/functions.c:714 ../plugins/fn-r/functions.c:737
#: ../plugins/fn-r/functions.c:762 ../plugins/fn-r/functions.c:1104
#: ../plugins/fn-r/functions.c:1129 ../plugins/fn-r/functions.c:1156
msgid "scale:the scale parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:182
msgid ""
"This function returns the probability density function of the gamma "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:202
msgid "R.PGAMMA:cumulative distribution function of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:208
msgid ""
"This function returns the cumulative distribution function of the gamma "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:229
msgid "R.QGAMMA:probability quantile function of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:235
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:256
msgid "R.DBETA:probability density function of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:258 ../plugins/fn-r/functions.c:283
#: ../plugins/fn-r/functions.c:310
msgid "a:the first shape parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:259 ../plugins/fn-r/functions.c:284
#: ../plugins/fn-r/functions.c:311
msgid "b:the second scale parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:261
msgid ""
"This function returns the probability density function of the beta "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:281
msgid "R.PBETA:cumulative distribution function of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:287
msgid ""
"This function returns the cumulative distribution function of the beta "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:308
msgid "R.QBETA:probability quantile function of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:314
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:335
msgid "R.DT:probability density function of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:337 ../plugins/fn-r/functions.c:360
#: ../plugins/fn-r/functions.c:385
msgid "n:the number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:339
msgid ""
"This function returns the probability density function of the Student t "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:358
msgid "R.PT:cumulative distribution function of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:363
msgid ""
"This function returns the cumulative distribution function of the Student t "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:383
msgid "R.QT:probability quantile function of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:388
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:408
msgid "R.DF:probability density function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:410 ../plugins/fn-r/functions.c:435
#: ../plugins/fn-r/functions.c:462
msgid "n1:the first number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:411 ../plugins/fn-r/functions.c:436
#: ../plugins/fn-r/functions.c:463
msgid "n2:the second number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:413
msgid ""
"This function returns the probability density function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:433
msgid "R.PF:cumulative distribution function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:439
msgid ""
"This function returns the cumulative distribution function of the F "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:460
msgid "R.QF:probability quantile function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:466
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:487
msgid "R.DCHISQ:probability density function of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:489 ../plugins/fn-r/functions.c:512
#: ../plugins/fn-r/functions.c:537
msgid "df:the number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:491
msgid ""
"This function returns the probability density function of the chi-square "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:510
msgid ""
"R.PCHISQ:cumulative distribution function of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:515
msgid ""
"This function returns the cumulative distribution function of the chi-square "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:535
msgid "R.QCHISQ:probability quantile function of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:540
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:560
msgid "R.DWEIBULL:probability density function of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:565
msgid ""
"This function returns the probability density function of the Weibull "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:585
msgid ""
"R.PWEIBULL:cumulative distribution function of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:591
msgid ""
"This function returns the cumulative distribution function of the Weibull "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:612
msgid "R.QWEIBULL:probability quantile function of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:618
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:639
msgid "R.DPOIS:probability density function of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:641 ../plugins/fn-r/functions.c:664
#: ../plugins/fn-r/functions.c:689
msgid "lambda:the mean of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:643
msgid ""
"This function returns the probability density function of the Poisson "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:662
msgid "R.PPOIS:cumulative distribution function of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:667
msgid ""
"This function returns the cumulative distribution function of the Poisson "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:687
msgid "R.QPOIS:probability quantile function of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:692
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:712
msgid "R.DEXP:probability density function of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:716
msgid ""
"This function returns the probability density function of the exponential "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:735
msgid ""
"R.PEXP:cumulative distribution function of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:740
msgid ""
"This function returns the cumulative distribution function of the "
"exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:760
msgid "R.QEXP:probability quantile function of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:765
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:785
msgid "R.DBINOM:probability density function of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:787 ../plugins/fn-r/functions.c:812
#: ../plugins/fn-r/functions.c:839 ../plugins/fn-r/functions.c:866
#: ../plugins/fn-r/functions.c:891 ../plugins/fn-r/functions.c:918
msgid "n:the number of trials"
msgstr ""

#: ../plugins/fn-r/functions.c:788 ../plugins/fn-r/functions.c:813
#: ../plugins/fn-r/functions.c:840 ../plugins/fn-r/functions.c:867
#: ../plugins/fn-r/functions.c:892 ../plugins/fn-r/functions.c:919
#: ../plugins/fn-r/functions.c:1030 ../plugins/fn-r/functions.c:1053
#: ../plugins/fn-r/functions.c:1078
msgid "psuc:the probability of success in each trial"
msgstr ""

#: ../plugins/fn-r/functions.c:790
msgid ""
"This function returns the probability density function of the binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:810
msgid "R.PBINOM:cumulative distribution function of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:816
msgid ""
"This function returns the cumulative distribution function of the binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:837
msgid "R.QBINOM:probability quantile function of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:843
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:864
msgid ""
"R.DNBINOM:probability density function of the negative binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:869
msgid ""
"This function returns the probability density function of the negative "
"binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:889
msgid ""
"R.PNBINOM:cumulative distribution function of the negative binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:895
msgid ""
"This function returns the cumulative distribution function of the negative "
"binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:916
msgid ""
"R.QNBINOM:probability quantile function of the negative binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:922
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the negative binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:943
msgid ""
"R.DHYPER:probability density function of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:945 ../plugins/fn-r/functions.c:972
#: ../plugins/fn-r/functions.c:1001
msgid "r:the number of red balls"
msgstr ""

#: ../plugins/fn-r/functions.c:946 ../plugins/fn-r/functions.c:973
#: ../plugins/fn-r/functions.c:1002
msgid "b:the number of black balls"
msgstr ""

#: ../plugins/fn-r/functions.c:947 ../plugins/fn-r/functions.c:974
#: ../plugins/fn-r/functions.c:1003
msgid "n:the number of balls drawn"
msgstr ""

#: ../plugins/fn-r/functions.c:949
msgid ""
"This function returns the probability density function of the hypergeometric "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:970
msgid ""
"R.PHYPER:cumulative distribution function of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:977
msgid ""
"This function returns the cumulative distribution function of the "
"hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:999
msgid ""
"R.QHYPER:probability quantile function of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1006
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1028
msgid "R.DGEOM:probability density function of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1032
msgid ""
"This function returns the probability density function of the geometric "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1051
msgid "R.PGEOM:cumulative distribution function of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1056
msgid ""
"This function returns the cumulative distribution function of the geometric "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1076
msgid "R.QGEOM:probability quantile function of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1081
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1101
msgid "R.DCAUCHY:probability density function of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1103 ../plugins/fn-r/functions.c:1128
#: ../plugins/fn-r/functions.c:1155
msgid "location:the center of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:1106
msgid ""
"This function returns the probability density function of the Cauchy "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1126
msgid "R.PCAUCHY:cumulative distribution function of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1132
msgid ""
"This function returns the cumulative distribution function of the Cauchy "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1153
msgid "R.QCAUCHY:probability quantile function of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1159
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1194
msgid "x,mu,sigma,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1202
msgid "x,mu,sigma,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1210
msgid "p,mu,sigma,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1218
msgid "x,logmean,logsd,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1226 ../plugins/fn-r/functions.c:1234
msgid "x,logmean,logsd,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1242 ../plugins/fn-r/functions.c:1362
msgid "x,shape,scale,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1250 ../plugins/fn-r/functions.c:1370
msgid "x,shape,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1258 ../plugins/fn-r/functions.c:1378
msgid "p,shape,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1266
msgid "x,a,b,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1274
msgid "x,a,b,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1282
msgid "p,a,b,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1290
msgid "x,n,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1298
msgid "x,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1306
msgid "p,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1314
msgid "x,n1,n2,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1322 ../plugins/fn-r/functions.c:1330
msgid "x,n1,n2,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1338
msgid "x,df,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1346
msgid "x,df,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1354
msgid "p,df,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1386
msgid "x,lambda,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1394
msgid "x,lambda,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1402
msgid "p,lambda,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1410
msgid "x,scale,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1418
msgid "x,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1426
msgid "p,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1434 ../plugins/fn-r/functions.c:1458
msgid "x,n,psuc,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1442 ../plugins/fn-r/functions.c:1450
#: ../plugins/fn-r/functions.c:1466
msgid "x,n,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1474
msgid "p,n,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1482
msgid "x,r,b,n,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1490
msgid "x,r,b,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1498
msgid "p,r,b,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1506
msgid "x,psuc,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1514
msgid "x,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1522
msgid "p,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1530
msgid "x,location,scale,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1538
msgid "x,location,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1546
msgid "p,location,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-random/functions.c:47
msgid ""
"@FUNCTION=RAND\n"
"@SYNTAX=RAND()\n"
"@DESCRIPTION=RAND returns a random number between zero and one.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RAND() returns a random number greater than zero but less than one.\n"
"\n"
"@SEEALSO=RANDBETWEEN"
msgstr ""
"@FUNCTION=RAND\n"
"@SYNTAX=RAND()\n"
"@DESCRIPTION=RAND işlevi sıfır ile bir arasında rasgele bir sayı verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzeri: RANDBETWEEN\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDBETWEEN"

#: ../plugins/fn-random/functions.c:73
msgid ""
"@FUNCTION=RANDUNIFORM\n"
"@SYNTAX=RANDUNIFORM(a,b)\n"
"@DESCRIPTION=RANDUNIFORM returns a random variate from the uniform (flat) "
"distribution from a to b. The distribution is,\n"
"\n"
"\tp(x) dx = {1 over (b-a)} dx : for a <= x < b.\n"
"p(x) dx = 0 : for x < a or b <= x.\n"
"* If @a > @b RANDUNIFORM returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDUNIFORM(1.4,4.2) returns a random number greater than or equal to 1.4 "
"but less than 4.2.\n"
"\n"
"@SEEALSO=RANDBETWEEN,RAND"
msgstr ""
"@FUNCTION=RAND\n"
"@SYNTAX=RAND()\n"
"@DESCRIPTION=RAND işlevi sıfır ile bir arasında rasgele bir sayı verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzeri: RANDBETWEEN\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDBETWEEN"

#: ../plugins/fn-random/functions.c:108
msgid ""
"@FUNCTION=RANDDISCRETE\n"
"@SYNTAX=RANDDISCRETE(val_range[,prob_range])\n"
"@DESCRIPTION=RANDDISCRETE returns one of the values in the @val_range. The "
"probabilities for each value are given in the @prob_range.\n"
"\n"
"* If @prob_range is omitted, the uniform discrete distribution is assumed.\n"
"* If the sum of all values in @prob_range is other than one, RANDDISCRETE "
"returns #NUM! error.\n"
"* If @val_range and @prob_range are not the same size, RANDDISCRETE returns "
"#NUM! error.\n"
"* If @val_range or @prob_range is not a range, RANDDISCRETE returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"RANDDISCRETE(A1:A6) returns one of the values in the range A1:A6.\n"
"\n"
"@SEEALSO=RANDBETWEEN,RAND"
msgstr ""

#: ../plugins/fn-random/functions.c:244
msgid ""
"@FUNCTION=RANDEXP\n"
"@SYNTAX=RANDEXP(b)\n"
"@DESCRIPTION=RANDEXP returns a exponentially-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDEXP(0.5).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:270
msgid ""
"@FUNCTION=RANDPOISSON\n"
"@SYNTAX=RANDPOISSON(lambda)\n"
"@DESCRIPTION=RANDPOISSON returns a Poisson-distributed random number.\n"
"\n"
"* If @lambda < 0 RANDPOISSON returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDPOISSON(3).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RandPoisson\n"
"@SYNTAX=RandPoisson(lambda)\n"
"@DESCRIPTION=RandPoisson işlevi poisson açılımlı bir rasgele sayı verir.\n"
"\n"
"Örnek:\n"
"RandPoisson(3)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandPoisson(3)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:301
msgid ""
"@FUNCTION=RANDBINOM\n"
"@SYNTAX=RANDBINOM(p,trials)\n"
"@DESCRIPTION=RANDBINOM returns a binomially-distributed random number.\n"
"\n"
"* If @p < 0 or @p > 1 RANDBINOM returns #NUM! error.\n"
"* If @trials < 0 RANDBINOM returns #NUM! error. \n"
"@EXAMPLES=\n"
"RANDBINOM(0.5,2).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:334
#, fuzzy
msgid ""
"@FUNCTION=RANDBETWEEN\n"
"@SYNTAX=RANDBETWEEN(bottom,top)\n"
"@DESCRIPTION=RANDBETWEEN function returns a random integer number between "
"and including @bottom and @top.\n"
"\n"
"* If @bottom is non-integer, it is rounded up.\n"
"* If @top is non-integer, it is rounded down.\n"
"* If @bottom > @top, RANDBETWEEN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RANDBETWEEN(3,7).\n"
"\n"
"@SEEALSO=RAND,RANDUNIFORM"
msgstr ""
"@FUNCTION=RANDBETWEEN\n"
"@SYNTAX=RANDBETWEEN(alt,üst)\n"
"@DESCRIPTION=RANDBETWEEN işlevi @alt ile @üst arasında rasgele bir sayı "
"üretir.\n"
" @alt ya da @üst tamsayı değilse alta yuvarlanır. @alt > @üst ise işlev "
"#SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"RANDBETWEEN(3,7)\n"
"\n"
"Benzeri: RAND\n"
"@EXAMPLES=\n"
"RANDBETWEEN(3,7)\n"
"\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:374
msgid ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,failures)\n"
"@DESCRIPTION=RANDNEGBINOM returns a negative binomially-distributed random "
"number.\n"
"\n"
"* If @p < 0 or @p > 1, RANDNEGBINOM returns #NUM! error.\n"
"* If @failures < 1, RANDNEGBINOM returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:408
msgid ""
"@FUNCTION=RANDBERNOULLI\n"
"@SYNTAX=RANDBERNOULLI(p)\n"
"@DESCRIPTION=RANDBERNOULLI returns a Bernoulli-distributed random number.\n"
"\n"
"* If @p < 0 or @p > 1 RANDBERNOULLI returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDBERNOULLI(0.5).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RandBernoulli\n"
"@SYNTAX=RandBernoulli(p)\n"
"@DESCRIPTION=RandBernoulli işlevi Bernoulli açılımlı bir rasgele sayı verir. "
"@p < 0 veya @p > 1 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RandBernoulli(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandBernoulli(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:439
msgid ""
"@FUNCTION=RANDNORM\n"
"@SYNTAX=RANDNORM(mean,stdev)\n"
"@DESCRIPTION=RANDNORM returns a normal-distributed random number.\n"
"\n"
"* If @stdev < 0 RANDNORM returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDNORM(0,1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandBernoulli\n"
"@SYNTAX=RandBernoulli(p)\n"
"@DESCRIPTION=RandBernoulli işlevi Bernoulli açılımlı bir rasgele sayı verir. "
"@p < 0 veya @p > 1 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RandBernoulli(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandBernoulli(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:471
msgid ""
"@FUNCTION=RANDCAUCHY\n"
"@SYNTAX=RANDCAUCHY(a)\n"
"@DESCRIPTION=RANDCAUCHY returns a Cauchy-distributed random number with "
"scale parameter a. The Cauchy distribution is also known as the Lorentz "
"distribution.\n"
"\n"
"* If @a < 0 RANDCAUCHY returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDCAUCHY(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:504
msgid ""
"@FUNCTION=RANDLOGNORM\n"
"@SYNTAX=RANDLOGNORM(zeta,sigma)\n"
"@DESCRIPTION=RANDLOGNORM returns a lognormal-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDLOGNORM(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandPoisson\n"
"@SYNTAX=RandPoisson(lambda)\n"
"@DESCRIPTION=RandPoisson işlevi poisson açılımlı bir rasgele sayı verir.\n"
"\n"
"Örnek:\n"
"RandPoisson(3)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandPoisson(3)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:531
msgid ""
"@FUNCTION=RANDWEIBULL\n"
"@SYNTAX=RANDWEIBULL(a,b)\n"
"@DESCRIPTION=RANDWEIBULL returns a Weibull-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDWEIBULL(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:558
msgid ""
"@FUNCTION=RANDLAPLACE\n"
"@SYNTAX=RANDLAPLACE(a)\n"
"@DESCRIPTION=RANDLAPLACE returns a Laplace-distributed random number. "
"Laplace distribution is also known as two-sided exponential probability "
"distribution.\n"
"\n"
"@EXAMPLES=\n"
"RANDLAPLACE(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:586
msgid ""
"@FUNCTION=RANDRAYLEIGH\n"
"@SYNTAX=RANDRAYLEIGH(sigma)\n"
"@DESCRIPTION=RANDRAYLEIGH returns a Rayleigh-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDRAYLEIGH(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:612
msgid ""
"@FUNCTION=RANDRAYLEIGHTAIL\n"
"@SYNTAX=RANDRAYLEIGHTAIL(a,sigma)\n"
"@DESCRIPTION=RANDRAYLEIGHTAIL returns  a random variate from the tail of the "
"Rayleigh distribution with scale parameter sigma and a lower limit of a. The "
"distribution is,\n"
"\n"
"\tp(x) dx = {x over sigma^2} exp ((a^2 - x^2) /(2 sigma^2)) dx,\n"
"\n"
"for x > a.\n"
"\n"
"@EXAMPLES=\n"
"RANDRAYLEIGHTAIL(0.3,1).\n"
"\n"
"@SEEALSO=RAND,RANDRAYLEIGH"
msgstr ""
"@FUNCTION=RandPoisson\n"
"@SYNTAX=RandPoisson(lambda)\n"
"@DESCRIPTION=RandPoisson işlevi poisson açılımlı bir rasgele sayı verir.\n"
"\n"
"Örnek:\n"
"RandPoisson(3)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandPoisson(3)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:643
msgid ""
"@FUNCTION=RANDGAMMA\n"
"@SYNTAX=RANDGAMMA(a,b)\n"
"@DESCRIPTION=RANDGAMMA returns a Gamma-distributed random number.\n"
"\n"
"* If @a <= 0 RANDGAMMA returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDGAMMA(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandBernoulli\n"
"@SYNTAX=RandBernoulli(p)\n"
"@DESCRIPTION=RandBernoulli işlevi Bernoulli açılımlı bir rasgele sayı verir. "
"@p < 0 veya @p > 1 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RandBernoulli(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandBernoulli(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:675
msgid ""
"@FUNCTION=RANDPARETO\n"
"@SYNTAX=RANDPARETO(a,b)\n"
"@DESCRIPTION=RANDPARETO returns a Pareto-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDPARETO(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:702
msgid ""
"@FUNCTION=RANDFDIST\n"
"@SYNTAX=RANDFDIST(nu1,nu2)\n"
"@DESCRIPTION=RANDFDIST returns a F-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDFDIST(1,2).\n"
"\n"
"@SEEALSO=RAND,RANDGAMMA"
msgstr ""
"@FUNCTION=RandPoisson\n"
"@SYNTAX=RandPoisson(lambda)\n"
"@DESCRIPTION=RandPoisson işlevi poisson açılımlı bir rasgele sayı verir.\n"
"\n"
"Örnek:\n"
"RandPoisson(3)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandPoisson(3)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:729
msgid ""
"@FUNCTION=RANDBETA\n"
"@SYNTAX=RANDBETA(a,b)\n"
"@DESCRIPTION=RANDBETA returns a Beta-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDBETA(1,2).\n"
"\n"
"@SEEALSO=RAND,RANDGAMMA"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:756
msgid ""
"@FUNCTION=RANDLOGISTIC\n"
"@SYNTAX=RANDLOGISTIC(a)\n"
"@DESCRIPTION=RANDLOGISTIC returns a logistic-distributed random number.  The "
"distribution function is,\n"
"\n"
"\tp(x) dx = { exp(-x/a) over a (1 + exp(-x/a))^2 } dx for -infty < x < "
"+infty.\n"
"\n"
"@EXAMPLES=\n"
"RANDLOGISTIC(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandPoisson\n"
"@SYNTAX=RandPoisson(lambda)\n"
"@DESCRIPTION=RandPoisson işlevi poisson açılımlı bir rasgele sayı verir.\n"
"\n"
"Örnek:\n"
"RandPoisson(3)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandPoisson(3)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:785
msgid ""
"@FUNCTION=RANDGEOM\n"
"@SYNTAX=RANDGEOM(p)\n"
"@DESCRIPTION=RANDGEOM returns a geometric-distributed random number. The "
"number of independent trials with probability @p until the first success. "
"The probability distribution for geometric variates is, \n"
"\n"
"\tp(k) =  p (1-p)^(k-1), for k >= 1.\n"
"\n"
"* If @p < 0 or @p > 1 RANDGEOM returns #NUM! error. \n"
"@EXAMPLES=\n"
"RANDGEOM(0.4).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:819
msgid ""
"@FUNCTION=RANDHYPERG\n"
"@SYNTAX=RANDHYPERG(n1,n2,t)\n"
"@DESCRIPTION=RANDHYPERG returns a hypergeometric-distributed random number. "
"The probability distribution for hypergeometric random variates is,\n"
"\n"
"\tp(k) =  C(n_1,k) C(n_2, t-k) / C(n_1 + n_2,k), \n"
"\n"
"where C(a,b) = a!/(b!(a-b)!). \n"
"\n"
"The domain of k is max(0,t-n_2), ..., max(t,n_1).\n"
"@EXAMPLES=\n"
"RANDHYPERG(21,1,9).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:854
msgid ""
"@FUNCTION=RANDLOG\n"
"@SYNTAX=RANDLOG(p)\n"
"@DESCRIPTION=RANDLOG returns a logarithmic-distributed random number.\n"
"\n"
"* If @p < 0 or @p > 1 RANDLOG returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDLOG(0.72).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandBernoulli\n"
"@SYNTAX=RandBernoulli(p)\n"
"@DESCRIPTION=RandBernoulli işlevi Bernoulli açılımlı bir rasgele sayı verir. "
"@p < 0 veya @p > 1 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RandBernoulli(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandBernoulli(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:885
msgid ""
"@FUNCTION=RANDCHISQ\n"
"@SYNTAX=RANDCHISQ(nu)\n"
"@DESCRIPTION=RANDCHISQ returns a Chi-Square-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDCHISQ(0.5).\n"
"\n"
"@SEEALSO=RAND,RANDGAMMA"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:911
msgid ""
"@FUNCTION=RANDTDIST\n"
"@SYNTAX=RANDTDIST(nu)\n"
"@DESCRIPTION=RANDTDIST returns a T-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDTDIST(0.5).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:937
msgid ""
"@FUNCTION=RANDGUMBEL\n"
"@SYNTAX=RANDGUMBEL(a,b[,type])\n"
"@DESCRIPTION=RANDGUMBEL returns a Type I or Type II Gumbel-distributed "
"random number. @type is either 1 or 2 and specifies the type of the "
"distribution (Type I or Type II).\n"
"\n"
"* If @type is neither 1 nor 2, RANDGUMBEL returns #NUM! error.\n"
"* If @type is omitted, Type I is assumed.\n"
"\n"
"@EXAMPLES=\n"
"RANDGUMBEL(0.5,1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandBernoulli\n"
"@SYNTAX=RandBernoulli(p)\n"
"@DESCRIPTION=RandBernoulli işlevi Bernoulli açılımlı bir rasgele sayı verir. "
"@p < 0 veya @p > 1 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RandBernoulli(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandBernoulli(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:975
msgid ""
"@FUNCTION=RANDLEVY\n"
"@SYNTAX=RANDLEVY(c,alpha[,beta])\n"
"@DESCRIPTION=RANDLEVY returns a Levy-distributed random number. If @beta is "
"omitted, it is assumed to be 0.\n"
"\n"
"* For @alpha = 1, @beta=0, we get the Lorentz distribution.\n"
"* For @alpha = 2, @beta=0, we get the normal distribution.\n"
"\n"
"* If @alpha <= 0 or @alpha > 2, RANDLEVY returns #NUM! error.\n"
"* If @beta < -1 or @beta > 1, RANDLEVY returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDLEVY(0.5,0.1,1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:1013
msgid ""
"@FUNCTION=RANDEXPPOW\n"
"@SYNTAX=RANDEXPPOW(a,b)\n"
"@DESCRIPTION=RANDEXPPOW returns a random variate from the exponential power "
"distribution with scale parameter @a and exponent @b. The distribution is,\n"
"\n"
"\tp(x) dx = {1 over 2 a Gamma(1+1/b)} exp(-|x/a|^b) dx, for x >= 0.\n"
"\n"
"* For @b = 1 this reduces to the Laplace distribution.\n"
"* For @b = 2 it has the same form as a normal distribution with sigma = a/"
"sqrt(2).\n"
"\n"
"@EXAMPLES=\n"
"RANDEXPPOW(0.5,0.1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RandPoisson\n"
"@SYNTAX=RandPoisson(lambda)\n"
"@DESCRIPTION=RandPoisson işlevi poisson açılımlı bir rasgele sayı verir.\n"
"\n"
"Örnek:\n"
"RandPoisson(3)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandPoisson(3)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:1047
msgid ""
"@FUNCTION=RANDLANDAU\n"
"@SYNTAX=RANDLANDAU()\n"
"@DESCRIPTION=RANDLANDAU returns a random variate from the Landau "
"distribution. The probability distribution for Landau random variates is "
"defined analytically by the complex integral,\n"
"\n"
"\tp(x) = (1/(2 pi i)) int_{c-i infty}^{c+i infty} ds exp(s log(s) + x s).\n"
"\n"
"For numerical purposes it is more convenient to use the following equivalent "
"form of the integral,\n"
"\n"
"\tp(x) = (1/pi) int_0^ infty dt exp(-t log(t) - x t) sin(pi t).\n"
"\n"
"@EXAMPLES=\n"
"RANDLANDAU().\n"
"\n"
"@SEEALSO=RAND"
msgstr ""

#: ../plugins/fn-random/functions.c:1078
msgid ""
"@FUNCTION=RANDNORMTAIL\n"
"@SYNTAX=RANDNORMTAIL(a,sigma)\n"
"@DESCRIPTION=RANDNORMTAIL returns a random variates from the upper tail of a "
"normal distribution with standard deviation @sigma. The values returned are "
"larger than the lower limit @a, which must be positive. The method is based "
"on Marsaglia's famous rectangle-wedge-tail algorithm (Ann Math Stat 32, 894-"
"899 (1961)), with this aspect explained in Knuth, v2, 3rd ed, p139, 586 "
"(exercise 11).\n"
"\n"
"The probability distribution for normal tail random variates is,\n"
"\n"
"\tp(x) dx = {1 over N(a;sigma)} exp (- x^2/(2 sigma^2)) dx,\n"
"\n"
"for x > a where N(a;sigma) is the normalization constant, N(a;sigma) = (1/2) "
"erfc(a / sqrt(2 sigma^2)).\n"
"\n"
"@EXAMPLES=\n"
"RANDNORMTAIL(0.5,0.1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""

#: ../plugins/fn-random/functions.c:1117
msgid ""
"@FUNCTION=SIMTABLE\n"
"@SYNTAX=SIMTABLE(d1, d2, ..., dN)\n"
"@DESCRIPTION=SIMTABLE returns one of the values in the given argument list "
"depending on the round number of the simulation tool. When the simulation "
"tool is not activated, SIMTABLE returns @d1.\n"
"\n"
"With the simulation tool and the SIMTABLE function you can test given "
"decision variables. Each SIMTABLE function contains the possible values of a "
"simulation variable. In most valid simulation models you should have the "
"same number of values @dN for all decision variables.  If the simulation is "
"run more rounds than there are values defined, SIMTABLE returns #N/A! error "
"(e.g. if A1 contains `=SIMTABLE(1)' and A2 `=SIMTABLE(1,2)', A1 yields #N/A! "
"error on the second round).\n"
"\n"
"The successive use of the simulation tool also requires that you give to the "
"tool at least one input variable having RAND() or any other "
"RAND<distribution name>() function in it. On each round, the simulation tool "
"iterates for the given number of rounds over all the input variables to "
"reevaluate them. On each iteration, the values of the output variables are "
"stored, and when the round is completed, descriptive statistical information "
"is created according to the values.\n"
"\n"
"@EXAMPLES=\n"
"SIMTABLE(TRUE,FALSE) returns TRUE on the first simulation round and FALSE on "
"the second round.\n"
"SIMTABLE(223,225,227,229) returns 227 on the simulation round #3.\n"
"\n"
"@SEEALSO="
msgstr ""

#: ../plugins/fn-stat/functions.c:65
msgid ""
"@FUNCTION=VARP\n"
"@SYNTAX=VARP(b1, b2, ...)\n"
"@DESCRIPTION=VARP calculates the variance of an entire population.\n"
"VARP is also known as the N-variance.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"VARP(A1:A5) equals 94.112.\n"
"\n"
"@SEEALSO=AVERAGE,DVAR,DVARP,STDEV,VAR"
msgstr ""
"@FUNCTION=VARP\n"
"@SYNTAX=VARP(b1, b2, ...)\n"
"@DESCRIPTION=VARP tüm dağılımı kapsayan bir dağılımın üyelerinin oluşturduğu "
"kümenin değişimini hesaplar. (VARP, N değişimi olarak da bilinir.)\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"VARP(A1:A5) eşittir 94.112\n"
"\n"
"Benzerleri: AVERAGE, DVAR, DVARP, STDEV, VAR\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"VARP(A1:A5) eşittir 94.112\n"
"\n"
"@SEEALSO=AVERAGE,DVAR,DVARP,STDEV,VAR"

#: ../plugins/fn-stat/functions.c:97
msgid ""
"@FUNCTION=VAR\n"
"@SYNTAX=VAR(b1, b2, ...)\n"
"@DESCRIPTION=VAR calculates sample variance of the given sample. To get the "
"true variance of a complete population use VARP.\n"
"VAR is also known as the N-1-variance. Under reasonable conditions, it is "
"the maximum-likelihood estimator for the true variance.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"VAR(A1:A5) equals 117.64.\n"
"\n"
"@SEEALSO=VARP,STDEV"
msgstr ""
"@FUNCTION=VAR\n"
"@SYNTAX=VAR(b1, b2, ...)\n"
"@DESCRIPTION=VAR bir dağılım örneğinin değişimini tahmin eder. Tüm dağılımın "
"gerçek değişimini bulmak için VARP işlevini kullanın. (VAR N-1 değişimi "
"olarak da bilinir. Normal şartlar altında, gerçek değişime azami "
"yaklaşıklıkla tahmin yapılır.)\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"VAR(A1:A5) eşittir 117.64\n"
"\n"
"Benzerleri: VARP, STDEV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"VAR(A1:A5) eşittir 117.64\n"
"\n"
"@SEEALSO=VARP,STDEV"

#: ../plugins/fn-stat/functions.c:134
msgid ""
"@FUNCTION=STDEV\n"
"@SYNTAX=STDEV(b1, b2, ...)\n"
"@DESCRIPTION=STDEV returns the sample standard deviation of the given "
"sample.\n"
"To obtain the population standard deviation of a whole population use "
"STDEVP.\n"
"STDEV is also known as the N-1-standard deviation.\n"
"Under reasonable conditions, it is the maximum-likelihood estimator for the "
"true population standard deviation.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"STDEV(A1:A5) equals 10.84619749.\n"
"\n"
"@SEEALSO=AVERAGE,DSTDEV,DSTDEVP,STDEVA,STDEVPA,VAR"
msgstr ""
"@FUNCTION=VAR\n"
"@SYNTAX=VAR(b1, b2, ...)\n"
"@DESCRIPTION=VAR bir dağılım örneğinin değişimini tahmin eder. Tüm dağılımın "
"gerçek değişimini bulmak için VARP işlevini kullanın. (VAR N-1 değişimi "
"olarak da bilinir. Normal şartlar altında, gerçek değişime azami "
"yaklaşıklıkla tahmin yapılır.)\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"VAR(A1:A5) eşittir 117.64\n"
"\n"
"Benzerleri: VARP, STDEV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"VAR(A1:A5) eşittir 117.64\n"
"\n"
"@SEEALSO=VARP,STDEV"

#: ../plugins/fn-stat/functions.c:173
msgid ""
"@FUNCTION=STDEVP\n"
"@SYNTAX=STDEVP(b1, b2, ...)\n"
"@DESCRIPTION=STDEVP returns the population standard deviation of the given "
"population. \n"
"This is also known as the N-standard deviation\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"STDEVP(A1:A5) equals 9.701133954.\n"
"\n"
"@SEEALSO=STDEV,STDEVA,STDEVPA"
msgstr ""
"@FUNCTION=STDEVP\n"
"@SYNTAX=STDEVP(b1;b2; ...)\n"
"@DESCRIPTION=STDEVP işlevi sayılar kümesini tüm dağılımın üyeleri kabul "
"ederek sayılar kümesinin standart sapmasını hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, ve 40.1 içeriyorsa:\n"
"STDEVP(A1:A5) eşittir 9.701133954\n"
"\n"
"Benzerleri: STDEV, STDEVA, STDEVPA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, ve 40.1 içeriyorsa:\n"
"STDEVP(A1:A5) eşittir 9.701133954\n"
"\n"
"@SEEALSO=STDEV,STDEVA,STDEVPA"

#: ../plugins/fn-stat/functions.c:207
msgid ""
"@FUNCTION=RANK\n"
"@SYNTAX=RANK(x,ref[,order])\n"
"@DESCRIPTION=RANK returns the rank of a number in a list of numbers.  @x is "
"the number whose rank you want to find, @ref is the list of numbers, and "
"@order specifies how to rank numbers.  If @order is 0, numbers are ranked in "
"descending order, otherwise numbers are ranked in ascending order.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"RANK(17.3,A1:A5) equals 4.\n"
"\n"
"@SEEALSO=PERCENTRANK"
msgstr ""
"@FUNCTION=RANK\n"
"@SYNTAX=RANK(x,dizi[,azalan])\n"
"@DESCRIPTION=RANK @x'in @dizi içindeki sayılar arasında kaçıncı sırada "
"olduğunu bulur. @azalan 0 ise artan sıralama, aksi takdirde azalan "
"sıralamaya göre sonuç bulunur.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"RANK(17.3,A1:A5) eşittir 4\n"
"\n"
"Benzeri: PERCENTRANK\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"RANK(17.3,A1:A5) eşittir 4\n"
"\n"
"@SEEALSO=PERCENTRANK"

#: ../plugins/fn-stat/functions.c:294
#, fuzzy
msgid ""
"@FUNCTION=TRIMMEAN\n"
"@SYNTAX=TRIMMEAN(ref,fraction)\n"
"@DESCRIPTION=TRIMMEAN returns the mean of the interior of a data set. @ref "
"is the list of numbers whose mean you want to calculate and @fraction is the "
"fraction of the data set excluded from the mean. For example, if "
"@fraction=0.2 and the data set contains 40 numbers, 8 numbers are trimmed "
"from the data set (40 x 0.2): the 4 largest and the 4 smallest.  To avoid a "
"bias, the number of points to be excluded is always rounded down to the "
"nearest even number.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"TRIMMEAN(A1:A5,0.2) equals 23.2.\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE"
msgstr ""
"@FUNCTION=TRIMMEAN\n"
"@SYNTAX=TRIMMEAN(ref,dış_oran)\n"
"@DESCRIPTION=TRIMMEAN bir veri kümesinin iç kısımlarındaki değerlerin "
"ortalamasını hesaplar. @ref ortalaması hesaplanacak değerlerin listesi "
"@dış_oran ise ortalama hesabında dışlanacak veri sayısını belirleyecek "
"orandır. Örneğin 40 üyeli bir veri kümesi ile @dış_oran = 0.2 verilmişse 40 "
"üyenin alttan 4 ve üstten de 4 üyesi olmak üzere (40 x 0.2) 8 üye ortalama "
"hesabına alınmayacaktır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"TRIMMEAN(A1:A5,0.2) eşittir 23.2\n"
"\n"
"Benzerleri: AVERAGE, GEOMEAN, HARMEAN, MEDIAN, MODE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"TRIMMEAN(A1:A5,0.2) eşittir 23.2\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE"

#: ../plugins/fn-stat/functions.c:356
msgid ""
"@FUNCTION=COVAR\n"
"@SYNTAX=COVAR(array1,array2)\n"
"@DESCRIPTION=COVAR returns the covariance of two data sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"COVAR(A1:A5,B1:B5) equals 65.858.\n"
"\n"
"@SEEALSO=CORREL,FISHER,FISHERINV"
msgstr ""
"@FUNCTION=COVAR\n"
"@SYNTAX=COVAR(array1,array2)\n"
"@DESCRIPTION=COVAR iki veri kümesi arasındaki uyuşmazlığı hesaplar.\n"
"Dizgeler ve boş gözeler yoksayılır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ... B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini içeriyorsa:\n"
"COVAR(A1:A5,B1:B5) eşittir 65.858\n"
"\n"
"Benzerleri: CORREL, FISHER, FISHERINV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ... B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini içeriyorsa:\n"
"COVAR(A1:A5,B1:B5) eşittir 65.858\n"
"\n"
"@SEEALSO=CORREL,FISHER,FISHERINV"

#: ../plugins/fn-stat/functions.c:392
msgid ""
"@FUNCTION=CORREL\n"
"@SYNTAX=CORREL(array1,array2)\n"
"@DESCRIPTION=CORREL returns the correlation coefficient of two data sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"CORREL(A1:A5,B1:B5) equals 0.996124788.\n"
"\n"
"@SEEALSO=COVAR,FISHER,FISHERINV"
msgstr ""
"@FUNCTION=CORREL\n"
"@SYNTAX=CORREL(dizi1,dizi2)\n"
"@DESCRIPTION=CORREL iki veri kümesinin ilinti katsayısını hesaplar. Dizgeler "
"ve boş gözeler yoksayılır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1, değerlerini "
"ve B1, B2, ... B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"CORREL(A1:A5,B1:B5) eşittir 0.996124788\n"
"\n"
"Benzerleri: COVAR, FISHER, FISHERINV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1, değerlerini "
"ve B1, B2, ... B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"CORREL(A1:A5,B1:B5) eşittir 0.996124788\n"
"\n"
"@SEEALSO=COVAR,FISHER,FISHERINV"

#: ../plugins/fn-stat/functions.c:428
msgid ""
"@FUNCTION=NEGBINOMDIST\n"
"@SYNTAX=NEGBINOMDIST(f,t,p)\n"
"@DESCRIPTION=NEGBINOMDIST function returns the negative binomial "
"distribution. @f is the number of failures, @t is the threshold number of "
"successes, and @p is the probability of a success.\n"
"\n"
"* If @f or @t is a non-integer it is truncated.\n"
"* If (@f + @t -1) <= 0 NEGBINOMDIST returns #NUM! error.\n"
"* If @p < 0 or @p > 1 NEGBINOMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NEGBINOMDIST(2,5,0.55) equals 0.152872629.\n"
"\n"
"@SEEALSO=BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT"
msgstr ""
"@FUNCTION=NEGBINOMDIST\n"
"@SYNTAX=NEGBINOMDIST(f,t,p)\n"
"@DESCRIPTION=NEGBINOMDIST negatif binom açılımını hesaplar. @f "
"başarısızlıkların sayısı, @t başarılıların eşik değeri ve @p başarı "
"olasılığıdır. @f ve @t tamsayı değilse ondalık kısım atılır. (@f + @t -1) <= "
"0, @p < 0 ya da @p > 1 ise işlev #SAYI! hatası verir.Bu işlev Excel "
"uyumludur.\n"
"\n"
"Örnek:\n"
"NEGBINOMDIST(2,5,0.55) eşittir 0.152872629\n"
"\n"
"Benzerleri: BINOMDIST, COMBIN, FACT, HYPGEOMDIST, PERMUT\n"
"@EXAMPLES=\n"
"NEGBINOMDIST(2,5,0.55) eşittir 0.152872629\n"
"\n"
"@SEEALSO=BINOMDIST, COMBIN,  FACT, HYPGEOMDIST, PERMUT"

#: ../plugins/fn-stat/functions.c:466
msgid ""
"@FUNCTION=NORMSDIST\n"
"@SYNTAX=NORMSDIST(x)\n"
"@DESCRIPTION=NORMSDIST function returns the standard normal cumulative "
"distribution. @x is the value for which you want the distribution.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMSDIST(2) equals 0.977249868.\n"
"\n"
"@SEEALSO=NORMDIST"
msgstr ""
"@FUNCTION=NORMSDIST\n"
"@SYNTAX=NORMSDIST(x)\n"
"@DESCRIPTION=NORMSDIST standart normal kümülatif açılımı hesaplar. @x "
"açılımınızın değeridir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"NORMSDIST(2) eşittir 0.977249868\n"
"\n"
"Benzeri: NORMDIST\n"
"@EXAMPLES=\n"
"NORMSDIST(2) eşittir 0.977249868\n"
"\n"
"@SEEALSO=NORMDIST"

#: ../plugins/fn-stat/functions.c:498
msgid ""
"@FUNCTION=NORMSINV\n"
"@SYNTAX=NORMSINV(p)\n"
"@DESCRIPTION=NORMSINV function returns the inverse of the standard normal "
"cumulative distribution. @p is the given probability corresponding to the "
"normal distribution.\n"
"\n"
"* If @p < 0 or @p > 1 NORMSINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMSINV(0.2) equals -0.841621234.\n"
"\n"
"@SEEALSO=NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST"
msgstr ""
"@FUNCTION=NORMSINV\n"
"@SYNTAX=NORMSINV(p)\n"
"@DESCRIPTION=NORMSINV standart normal kümülatif açılımın tersini hesaplar. "
"@p normal açılıma karşılık düşen olasılıktır. @p < 0 veya @p > 1 ise işlev "
"#SAYI! hatası ile sonuçlanır.\n"
"Bu işlev excel uyumludur.\n"
"\n"
"Örnek:\n"
"NORMSINV(0.2) eşittir -0.841621234\n"
"\n"
"Benzerleri: NORMDIST, NORMINV, NORMSDIST, STANDARDIZE, ZTEST\n"
"@EXAMPLES=\n"
"NORMSINV(0.2) eşittir -0.841621234\n"
"\n"
"@SEEALSO=NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST"

#: ../plugins/fn-stat/functions.c:533
msgid ""
"@FUNCTION=LOGNORMDIST\n"
"@SYNTAX=LOGNORMDIST(x,mean,stddev)\n"
"@DESCRIPTION=LOGNORMDIST function returns the lognormal distribution. @x is "
"the value for which you want the distribution, @mean is the mean of the "
"distribution, and @stddev is the standard deviation of the distribution.\n"
"\n"
"* If @stddev = 0 LOGNORMDIST returns #DIV/0! error.\n"
"* If @x <= 0, @mean < 0 or @stddev < 0 LOGNORMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOGNORMDIST(3,1,2) equals 0.519662338.\n"
"\n"
"@SEEALSO=NORMDIST"
msgstr ""
"@FUNCTION=LOGNORMDIST\n"
"@SYNTAX=LOGNORMDIST(x,ort,stdsapma)\n"
"@DESCRIPTION=LOGNORMDIST lognormal açılımı hesaplar. @x istenen açılımın "
"değeri, @ort açılımın ortalaması, @stdsapma ise açılımın standart "
"sapmasıdır. @stdev = 0 ise işlev #BÖL/0! hatası ile, @x <= 0, @mean < 0 ya "
"da @stdev < 0 ise #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"LOGNORMDIST(3,1,2) eşittir 0.519662338\n"
"\n"
"Benzeri: NORMDIST, LOGINV\n"
"@EXAMPLES=\n"
"LOGNORMDIST(3,1,2) eşittir 0.519662338\n"
"\n"
"@SEEALSO=NORMDIST"

#: ../plugins/fn-stat/functions.c:571
msgid ""
"@FUNCTION=LOGINV\n"
"@SYNTAX=LOGINV(p,mean,stddev)\n"
"@DESCRIPTION=LOGINV function returns the inverse of the lognormal cumulative "
"distribution. @p is the given probability corresponding to the normal "
"distribution, @mean is the arithmetic mean of the distribution, and @stddev "
"is the standard deviation of the distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @stddev <= 0 LOGINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOGINV(0.5,2,3) equals 7.389056099.\n"
"\n"
"@SEEALSO=EXP,LN,LOG,LOG10,LOGNORMDIST"
msgstr ""
"@FUNCTION=LOGINV\n"
"@SYNTAX=LOGINV(p,ort,stdsapma)\n"
"@DESCRIPTION=LOGINV lognormal kümülatif açılımın tersini hesaplar. @p normal "
"açılıma karşı düşen olasılık olarak verilir. @ort açılımın aritmetik "
"ortalaması, @stdsapma ise açılımın standart sapmasıdır. @p < 0, @p > 1 veya "
"@stdev <= 0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"LOGINV(0.5,2,3) eşittir 7.389056099\n"
"\n"
"Benzerleri: EXP, LN, LOG, LOG10, LOGNORMDIST\n"
"@EXAMPLES=\n"
"LOGINV(0.5,2,3) eşittir 7.389056099\n"
"\n"
"@SEEALSO=EXP,LN,LOG,LOG10,LOGNORMDIST"

#: ../plugins/fn-stat/functions.c:611
msgid ""
"@FUNCTION=FISHERINV\n"
"@SYNTAX=FISHERINV(x)\n"
"@DESCRIPTION=FISHERINV function returns the inverse of the Fisher "
"transformation at @x.\n"
"\n"
"* If @x is non-number FISHERINV returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FISHERINV(2) equals 0.96402758.\n"
"\n"
"@SEEALSO=FISHER"
msgstr ""
"@FUNCTION=FISHERINV\n"
"@SYNTAX=FISHERINV(x)\n"
"@DESCRIPTION=FISHERINV işlevi @x için Fisher dönüşümünün tersini hesaplar. "
"@x sayı değilse işlev #DEĞER! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FISHERINV(2) eşittir 0.96402758\n"
"\n"
"Benzeri: FISHER\n"
"@EXAMPLES=\n"
"FISHERINV(2) eşittir 0.96402758\n"
"\n"
"@SEEALSO=FISHER"

#: ../plugins/fn-stat/functions.c:641
msgid ""
"@FUNCTION=MODE\n"
"@SYNTAX=MODE(n1, n2, ...)\n"
"@DESCRIPTION=MODE returns the most common number of the data set. If the "
"data set has many most common numbers MODE returns the first one of them.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If the data set does not contain any duplicates MODE returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"11.4, 25.9, and 40.1.  Then\n"
"MODE(A1:A5) equals 11.4.\n"
"\n"
"@SEEALSO=AVERAGE,MEDIAN"
msgstr ""
"@FUNCTION=MODE\n"
"@SYNTAX=MODE(n1,n2,...)\n"
"@DESCRIPTION=MODE işlevi verilen küme içinde en çok tekrarlanan sayıyı "
"bulur. Kümede en çok tekrarlananların sayısı birden fazla ise ilk raslanan "
"ile sonuçlanır. Metin içeren ve boş olan gözeler yoksayılır. Kümede "
"tekrarlanan sayı yoksa işlev #YOK! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 11.4, 25.9, ve 40.1. içeriyorsa:\n"
"MODE(A1:A5) eşittir 11.4\n"
"\n"
"Benzerleri: AVERAGE, MEDIAN\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 11.4, 25.9, ve 40.1. içeriyorsa\n"
"MODE(A1:A5) eşittir 11.4.\n"
"\n"
"@SEEALSO=AVERAGE,MEDIAN"

#: ../plugins/fn-stat/functions.c:679
msgid ""
"@FUNCTION=HARMEAN\n"
"@SYNTAX=HARMEAN(b1, b2, ...)\n"
"@DESCRIPTION=HARMEAN returns the harmonic mean of the N data points (that "
"is, N divided by the sum of the inverses of the data points).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"HARMEAN(A1:A5) equals 19.529814427.\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,MEDIAN,MODE,TRIMMEAN"
msgstr ""
"@FUNCTION=HARMEAN\n"
"@SYNTAX=HARMEAN(b1,b2, ...)\n"
"@DESCRIPTION=HARMEAN işlevi verilen veri noktalarının harmonik ortalamasını "
"hesaplar. Veri noktalarının sayısı, veri noktalarının terslerinin toplamına "
"bölünür.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, ve 40.1 içeriyorsa:\n"
"HARMEAN(A1:A5) eşittir 19.529814427\n"
"\n"
"Benzerleri: AVERAGE, GEOMEAN, MEDIAN, MODE, TRIMMEAN\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, ve 40.1 içeriyorsa:\n"
"HARMEAN(A1:A5) eşittir 19.529814427\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,MEDIAN,MODE,TRIMMEAN"

#: ../plugins/fn-stat/functions.c:713
msgid ""
"@FUNCTION=GEOMEAN\n"
"@SYNTAX=GEOMEAN(b1, b2, ...)\n"
"@DESCRIPTION=GEOMEAN returns the geometric mean of the given arguments. This "
"is equal to the Nth root of the product of the terms.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"GEOMEAN(A1:A5) equals 21.279182482.\n"
"\n"
"@SEEALSO=AVERAGE,HARMEAN,MEDIAN,MODE,TRIMMEAN"
msgstr ""
"@FUNCTION=GEOMEAN\n"
"@SYNTAX=GEOMEAN(b1,b2, ...)\n"
"@DESCRIPTION=GEOMEAN işlevi verilen değerlerin geometrik ortalamasını "
"hesaplar. Bu değerlerin çarpımının n. (değer sayısı) dereceden köküne "
"eşittir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, ve 40.1 değerlerini "
"içeriyorsa:\n"
"GEOMEAN(A1:A5) eşittir 21.279182482\n"
"\n"
"Benzerleri: AVERAGE, HARMEAN, MEDIAN, MODE, TRIMMEAN\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, ve 40.1 değerlerini "
"içeriyorsa:\n"
"GEOMEAN(A1:A5) eşittir 21.279182482\n"
"\n"
"@SEEALSO=AVERAGE,HARMEAN,MEDIAN,MODE,TRIMMEAN"

#: ../plugins/fn-stat/functions.c:746
msgid ""
"@FUNCTION=COUNT\n"
"@SYNTAX=COUNT(b1, b2, ...)\n"
"@DESCRIPTION=COUNT returns the total number of integer or floating point "
"arguments passed.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"COUNT(A1:A5) equals 5.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=COUNT\n"
"@SYNTAX=COUNT(b1,b2, ...)\n"
"@DESCRIPTION=COUNT işlevi verilen değerler arasındaki tamsayı ve gerçel "
"sayıları sayar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"COUNT(A1:A5) eşittir 5\n"
"\n"
"Benzeri: AVERAGE, COUNTA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"COUNT(A1:A5) eşittir 5\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:791
msgid ""
"@FUNCTION=COUNTA\n"
"@SYNTAX=COUNTA(b1, b2, ...)\n"
"@DESCRIPTION=COUNTA returns the number of arguments passed not including "
"empty cells.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, \"missing\", \"missing\", 25.9, and 40.1.  Then\n"
"COUNTA(A1:A5) equals 5.\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM"
msgstr ""
"@FUNCTION=COUNTA\n"
"@SYNTAX=COUNTA(b1,b2, ...)\n"
"@DESCRIPTION=COUNTA işlevi verilen aralıkdaki gözelerden boş olmayanları "
"sayar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla rakam ve metin olarak 11.4, \"missing\", "
"\"missing\", 25.9, ve 40.1 değerlerini içeriyorsa:\n"
"COUNTA(A1:A5) eşittir 5\n"
"\n"
"Benzerleri: AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla rakam ve metin olarak 11.4, \"missing\", "
"\"missing\", 25.9, ve 40.1 değerlerini içeriyorsa:\n"
"COUNTA(A1:A5) eşittir 5\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM"

#: ../plugins/fn-stat/functions.c:835
msgid ""
"@FUNCTION=AVERAGE\n"
"@SYNTAX=AVERAGE(value1, value2,...)\n"
"@DESCRIPTION=AVERAGE computes the average of all the values and cells "
"referenced in the argument list.  This is equivalent to the sum of the "
"arguments divided by the count of the arguments.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"AVERAGE(A1:A5) equals 23.2.\n"
"\n"
"@SEEALSO=SUM, COUNT"
msgstr ""
"@FUNCTION=AVERAGE\n"
"@SYNTAX=AVERAGE(değer1,değer2,...)\n"
"@DESCRIPTION=AVERAGE işlevi verilen değerlerin aritmetik ortalamasını "
"hesaplar. Değerlerin toplamının sayısına oranıdır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"AVERAGE(A1:A5) eşittir 23.2\n"
"\n"
"Benzerleri: SUM, COUNT, AVERAGEA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"AVERAGE(A1:A5) eşittir 23.2\n"
"\n"
"@SEEALSO=SUM, COUNT"

#: ../plugins/fn-stat/functions.c:869
msgid ""
"@FUNCTION=MIN\n"
"@SYNTAX=MIN(b1, b2, ...)\n"
"@DESCRIPTION=MIN returns the value of the element of the values passed that "
"has the smallest value, with negative numbers considered smaller than "
"positive numbers.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"MIN(A1:A5) equals 11.4.\n"
"\n"
"@SEEALSO=MAX,ABS"
msgstr ""
"@FUNCTION=MIN\n"
"@SYNTAX=MIN(b1,b2, ...)\n"
"@DESCRIPTION=MIN işlevi verilen değerler arasındaki en küçük değeri bulur. "
"Negatif sayılar pozitif sayılardan küçük kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"MIN(A1:A5) eşittir 11.4\n"
"\n"
"Benzerleri: MAX, ABS\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"MIN(A1:A5) eşittir 11.4\n"
"\n"
"@SEEALSO=MAX,ABS"

#: ../plugins/fn-stat/functions.c:913
msgid ""
"@FUNCTION=MAX\n"
"@SYNTAX=MAX(b1, b2, ...)\n"
"@DESCRIPTION=MAX returns the value of the element of the values passed that "
"has the largest value, with negative numbers considered smaller than "
"positive numbers.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"MAX(A1:A5) equals 40.1.\n"
"\n"
"@SEEALSO=MIN,ABS"
msgstr ""
"@FUNCTION=MAX\n"
"@SYNTAX=MAX(b1,b2, ...)\n"
"@DESCRIPTION=MAX işlevi verilen değerler arasındaki en büyük değeri bulur. "
"Negatif değerler pozitif değerlerden küçük kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"MAX(A1:A5) eşittir 40.1\n"
"\n"
"Benzerleri: MIN, ABS\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"MAX(A1:A5) eşittir 40.1\n"
"\n"
"@SEEALSO=MIN,ABS"

#: ../plugins/fn-stat/functions.c:957
msgid ""
"@FUNCTION=SKEW\n"
"@SYNTAX=SKEW(n1, n2, ...)\n"
"@DESCRIPTION=SKEW returns an unbiased estimate for skewness of a "
"distribution.\n"
"\n"
"Note, that this is only meaningful if the underlying distribution really has "
"a third moment.  The skewness of a symmetric (e.g., normal) distribution is "
"zero.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If less than three numbers are given, SKEW returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"SKEW(A1:A5) equals 0.976798268.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEWP,KURT"
msgstr ""
"@FUNCTION=SKEW\n"
"@SYNTAX=SKEW(n1, n2, ...)\n"
"@DESCRIPTION=SKEW bir açılımın yanlı olmayan yaklaşık eğriliğini hesaplar. "
"Bu, sadece uyumsuz açılım aslında bir üçüncü kuvvete sahipse anlamlıdır. Bir "
"simetrik (örn. normal) açılımın eğriliği sıfırdır.\n"
"Dizgeler ve boş gözeler yok sayılır. Üçten az değer verilirse işlev #BÖL/0! "
"hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"SKEW(A1:A5) eşittir 0.976798268\n"
"\n"
"Benzerleri: AVERAGE, VAR, SKEWP, KURT\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"SKEW(A1:A5) eşittir 0.976798268\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEWP,KURT"

#: ../plugins/fn-stat/functions.c:997
msgid ""
"@FUNCTION=SKEWP\n"
"@SYNTAX=SKEWP(n1, n2, ...)\n"
"@DESCRIPTION=SKEWP returns the population skewness of a data set.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If less than two numbers are given, SKEWP returns #DIV/0! error.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"SKEWP(A1:A5) equals 0.655256198.\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEW,KURTP"
msgstr ""
"@FUNCTION=SKEWP\n"
"@SYNTAX=SKEWP(n1, n2, ...)\n"
"@DESCRIPTION=SKEWP bir veri kümesinin dağılım eğriliğini hesaplar. Dizgeler "
"ve boş gözeler yoksayılır. İkiden az değer verilirse işlev #BÖL/0! hatası "
"ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"SKEWP(A1:A5) eşittir 0.655256198\n"
"\n"
"Benzerleri: AVERAGE, VARP, SKEW, KURTP\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"SKEWP(A1:A5) eşittir 0.655256198\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEW,KURTP"

#: ../plugins/fn-stat/functions.c:1032
msgid ""
"@FUNCTION=EXPONDIST\n"
"@SYNTAX=EXPONDIST(x,y,cumulative)\n"
"@DESCRIPTION=EXPONDIST function returns the exponential distribution. If the "
"@cumulative boolean is false it will return:\n"
"\n"
"\t@y * exp (-@y*@x),\n"
"\n"
"otherwise it will return\n"
"\n"
"\t1 - exp (-@y*@x).\n"
"\n"
"* If @x < 0 or @y <= 0 this will return an error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EXPONDIST(2,4,0) equals 0.001341851.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=EXPONDIST\n"
"@SYNTAX=EXPONDIST(x,y,kümülatif)\n"
"@DESCRIPTION=EXPONDIST işlevi üstel açılımı verir. @kümülatif YANLIŞ ise @y "
"* exp (-@y * @x), değilse 1 - exp (-@y * @x) hesaplanır. @x < 0 veya @y <= 0 "
"ise işlev hata verir.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"EXPONDIST(2,4,0) eşittir 0.001341851\n"
"\n"
"Benzeri: POISSON\n"
"@EXAMPLES=\n"
"EXPONDIST(2,4,0) eşittir 0.001341851\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:1072
msgid ""
"@FUNCTION=BERNOULLI\n"
"@SYNTAX=BERNOULLI(k,p)\n"
"@DESCRIPTION=BERNOULLI returns the probability p(k) of obtaining @k from a "
"Bernoulli distribution with probability parameter @p.\n"
"\n"
"* If @k != 0 and @k != 1 BERNOULLI returns #NUM! error.\n"
"* If @p < 0 or @p > 1 BERNOULLI returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"BERNOULLI(0,0.5).\n"
"\n"
"@SEEALSO=RANDBERNOULLI"
msgstr ""
"@FUNCTION=RandBernoulli\n"
"@SYNTAX=RandBernoulli(p)\n"
"@DESCRIPTION=RandBernoulli işlevi Bernoulli açılımlı bir rasgele sayı verir. "
"@p < 0 veya @p > 1 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RandBernoulli(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandBernoulli(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:1117
msgid ""
"@FUNCTION=GAMMALN\n"
"@SYNTAX=GAMMALN(x)\n"
"@DESCRIPTION=GAMMALN function returns the natural logarithm of the gamma "
"function.\n"
"\n"
"* If @x is non-number then GAMMALN returns #VALUE! error.\n"
"* If @x <= 0 then GAMMALN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GAMMALN(23) equals 48.471181352.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=GAMMALN\n"
"@SYNTAX=GAMMALN(x)\n"
"@DESCRIPTION=GAMMALN işlevi gamma işlevinin tabii logaritmasını hesaplar. @x "
"bir sayı değilse işlev #DEĞER! hatası verir. @x <= 0 ise işlev #SAYI hatası "
"verir.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"GAMMALN(23) eşittir 48.471181352\n"
"\n"
"Benzeri: POISSON\n"
"@EXAMPLES=\n"
"GAMMALN(23) eşittir 48.471181352\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:1157
msgid ""
"@FUNCTION=GAMMADIST\n"
"@SYNTAX=GAMMADIST(x,alpha,beta,cum)\n"
"@DESCRIPTION=GAMMADIST function returns the gamma distribution. If @cum is "
"TRUE, GAMMADIST returns the incomplete gamma function, otherwise it returns "
"the probability mass function.\n"
"\n"
"* If @x < 0 GAMMADIST returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0, GAMMADIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GAMMADIST(1,2,3,0) equals 0.07961459.\n"
"\n"
"@SEEALSO=GAMMAINV"
msgstr ""
"@FUNCTION=GAMMADIST\n"
"@SYNTAX=GAMMADIST(x,alfa,beta,küm)\n"
"@DESCRIPTION=GAMMADIST gamma açılımını hesaplar. @küm DOĞRU ise işlev eksik "
"gamma işlevini, aksi takdirde olasılık yığını işlevini hesaplar. @x < 0,  "
"@alfa <= 0 ya da @beta <= 0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"GAMMADIST(1,2,3,0) eşittir 0.07961459\n"
"\n"
"Benzeri: GAMMAINV\n"
"@EXAMPLES=\n"
"GAMMADIST(1,2,3,0) eşittir 0.07961459\n"
"\n"
"@SEEALSO=GAMMAINV"

#: ../plugins/fn-stat/functions.c:1198
msgid ""
"@FUNCTION=GAMMAINV\n"
"@SYNTAX=GAMMAINV(p,alpha,beta)\n"
"@DESCRIPTION=GAMMAINV function returns the inverse of the cumulative gamma "
"distribution.\n"
"\n"
"* If @p < 0 or @p > 1 GAMMAINV returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0 GAMMAINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GAMMAINV(0.34,2,4) equals 4.829093908.\n"
"\n"
"@SEEALSO=GAMMADIST"
msgstr ""
"@FUNCTION=GAMMAINV\n"
"@SYNTAX=GAMMAINV(p,alfa,beta)\n"
"@DESCRIPTION=GAMMAINV kümülatif gamma açılımının tersini hesaplar. @p < 0,  "
"@p > 1 @alfa <= 0 ya da @beta <= 0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"GAMMAINV(0.34,2,4) eşittir 4.829093908\n"
"\n"
"Benzeri: GAMMADIST\n"
"@EXAMPLES=\n"
"GAMMAINV(0.34,2,4) eşittir 4.829093908\n"
"\n"
"@SEEALSO=GAMMADIST"

#: ../plugins/fn-stat/functions.c:1236
msgid ""
"@FUNCTION=CHIDIST\n"
"@SYNTAX=CHIDIST(x,dof)\n"
"@DESCRIPTION=CHIDIST function returns the one-tailed probability of the chi-"
"squared distribution. @dof is the number of degrees of freedom.\n"
"\n"
"* If @dof is non-integer it is truncated.\n"
"* If @dof < 1 CHIDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CHIDIST(5.3,2) equals 0.070651213.\n"
"\n"
"@SEEALSO=CHIINV,CHITEST"
msgstr ""
"@FUNCTION=CHIDIST\n"
"@SYNTAX=CHIDIST(x,sd)\n"
"@DESCRIPTION=CHIDIST çe-kare açılımının tek sonlu olasılığını hesaplar. @sd "
"serbestlik derecesidir ve tam sayı değilse ondalık kısmı atılır. @sd < 1 ise "
"işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CHIDIST(5.3,2) eşittir 0.070651213\n"
"\n"
"Benzeleri: CHIINV,CHITEST\n"
"@EXAMPLES=\n"
"CHIDIST(5.3,2) eşittir 0.070651213\n"
"\n"
"@SEEALSO=CHIINV,CHITEST"

#: ../plugins/fn-stat/functions.c:1272
msgid ""
"@FUNCTION=CHIINV\n"
"@SYNTAX=CHIINV(p,dof)\n"
"@DESCRIPTION=CHIINV function returns the inverse of the one-tailed "
"probability of the chi-squared distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @dof < 1 CHIINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CHIINV(0.98,7) equals 1.564293004.\n"
"\n"
"@SEEALSO=CHIDIST,CHITEST"
msgstr ""
"@FUNCTION=CHIINV\n"
"@SYNTAX=CHIINV(p,sd)\n"
"@DESCRIPTION=CHIINV çe-kare açılımının tek sonlu olasılığının tersini "
"hesaplar. @sd serbestlik derecesidir ve tam sayı değilse ondalık kısmı "
"atılır. @p < 0, @p > 1 ya da @sd < 1 ise işlev #SAYI! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CHIINV(0.98,7) eşittir 1.564293004\n"
"\n"
"Benzeri: CHIDIST,CHITEST\n"
"@EXAMPLES=\n"
"CHIINV(0.98,7) eşittir 1.564293004\n"
"\n"
"@SEEALSO=CHIDIST,CHITEST"

#: ../plugins/fn-stat/functions.c:1306
msgid ""
"@FUNCTION=CHITEST\n"
"@SYNTAX=CHITEST(actual_range,theoretical_range)\n"
"@DESCRIPTION=CHITEST function returns the test for independence of chi-"
"squared distribution.\n"
"\n"
"@actual_range is a range that contains the observed data points. "
"@theoretical_range is a range that contains the expected values of the data "
"points.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=CHIDIST,CHIINV"
msgstr ""
"@FUNCTION=CHITEST\n"
"@SYNTAX=CHITEST(pratik_aralık,teorik_aralık)\n"
"@DESCRIPTION=CHITEST çe-kare açılımının olabilirliğini bulur. @pratik_aralık "
"bulunan veri noktalarını, teorik_aralık ise umulan veri noktalarını içerir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzerleri:CHIDIST, CHIINV\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=CHIDIST, CHIINV"

#: ../plugins/fn-stat/functions.c:1401
msgid ""
"@FUNCTION=BETADIST\n"
"@SYNTAX=BETADIST(x,alpha,beta[,a,b])\n"
"@DESCRIPTION=BETADIST function returns the cumulative beta distribution. @a "
"is the optional lower bound of @x and @b is the optional upper bound of @x.\n"
"* If @a is not given, BETADIST uses 0.\n"
"* If @b is not given, BETADIST uses 1.\n"
"* If @x < @a or @x > @b BETADIST returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0, BETADIST returns #NUM! error.\n"
"* If @a >= @b BETADIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BETADIST(0.12,2,3) equals 0.07319808.\n"
"\n"
"@SEEALSO=BETAINV"
msgstr ""
"@FUNCTION=BETADIST\n"
"@SYNTAX=BETADIST(x,alfa,beta[,a,b])\n"
"@DESCRIPTION=BETADIST kümülatif beta açılımını hesaplar. @a ve @b "
"seçimliktir ve @a @x'in alt indis değeri, @b ise üst indis değeridir. @a "
"verilmemişse 0, @b verilmemişse 1 kabul edilir. @x < @a, @x > @b, @alpha <= "
"0, @beta <= 0 veya @a >= @b ise işlev #SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BETADIST(0.12,2,3) eşittir 0.07319808\n"
"\n"
"Benzeri: BETAINV\n"
"@EXAMPLES=\n"
"BETADIST(0.12,2,3) eşittir 0.07319808\n"
"\n"
"@SEEALSO=BETAINV"

#: ../plugins/fn-stat/functions.c:1447
msgid ""
"@FUNCTION=BETAINV\n"
"@SYNTAX=BETAINV(p,alpha,beta[,a,b])\n"
"@DESCRIPTION=BETAINV function returns the inverse of cumulative beta "
"distribution.  @a is the optional lower bound of @x and @b is the optional "
"upper bound of @x.\n"
"\n"
"* If @a is not given, BETAINV uses 0.\n"
"* If @b is not given, BETAINV uses 1.\n"
"* If @p < 0 or @p > 1 BETAINV returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0, BETAINV returns #NUM! error.\n"
"* If @a >= @b BETAINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BETAINV(0.45,1.6,1) equals 0.607096629.\n"
"\n"
"@SEEALSO=BETADIST"
msgstr ""
"@FUNCTION=BETAINV\n"
"@SYNTAX=BETAINV(p,alfa,beta[,a,b])\n"
"@DESCRIPTION=BETAINV kümülatif beta açılımının tersini hesaplar. @a ve @b "
"seçimliktir ve @a @x'in alt indis değeri, @b ise üst indis değeridir. @a "
"verilmemişse 0, @b verilmemişse 1 kabul edilir. @x < @a, @x > @b, @alpha <= "
"0, @beta <= 0 veya @a >= @b ise işlev #SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BETAINV(0.45,1.6,1) eşittir 0.607096629\n"
"\n"
"Benzeri: BETADIST\n"
"@EXAMPLES=\n"
"BETAINV(0.45,1.6,1) eşittir 0.607096629\n"
"\n"
"@SEEALSO=BETADIST"

#: ../plugins/fn-stat/functions.c:1491
#, fuzzy
msgid ""
"@FUNCTION=TDIST\n"
"@SYNTAX=TDIST(x,dof,tails)\n"
"@DESCRIPTION=TDIST function returns the Student's t-distribution. @dof is "
"the degree of freedom and @tails is 1 or 2 depending on whether you want one-"
"tailed or two-tailed distribution.\n"
"@tails = 1 returns the size of the right tail.\n"
"\n"
"* If @dof < 1 TDIST returns #NUM! error.\n"
"* If @tails is neither 1 or 2 TDIST returns #NUM! error.\n"
"* This function is Excel compatible for non-negative @x.\n"
"\n"
"Warning: the parameterization of this function is different from what is "
"used for, e.g., NORMSDIST.  This is a common source of mistakes, but "
"necessary for compatibility.\n"
"\n"
"@EXAMPLES=\n"
"TDIST(2,5,1) equals 0.050969739.\n"
"TDIST(-2,5,1) equals 0.949030261.\n"
"TDIST(0,5,2) equals 1.\n"
"\n"
"@SEEALSO=TINV,TTEST"
msgstr ""
"@FUNCTION=TDIST\n"
"@SYNTAX=TDIST(x,sd,son)\n"
"@DESCRIPTION=TDIST Talebelerinin t-açılımını hesaplar. @sd serbestlik "
"derecesidir. @son ile açılımın 1 sonlu mu yoksa 2 sonlu mu istendiği "
"belirtilir. @sd < 1 ya da @son 1 veya 2 den farklı ise işlev #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TDIST(2,5,1) eşittir 0.050969739\n"
"\n"
"Benzerleri: TINV, TTEST\n"
"@EXAMPLES=\n"
"TDIST(2,5,1) eşittir 0.050969739\n"
"\n"
"@SEEALSO=TINV,TTEST"

#: ../plugins/fn-stat/functions.c:1536
#, fuzzy
msgid ""
"@FUNCTION=TINV\n"
"@SYNTAX=TINV(p,dof)\n"
"@DESCRIPTION=TINV function returns the inverse of the two-tailed Student's t-"
"distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @dof < 1 TINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"Warning: the parameterization of this function is different from what is "
"used for, e.g., NORMSINV.  This is a common source of mistakes, but "
"necessary for compatibility.\n"
"\n"
"@EXAMPLES=\n"
"TINV(0.4,32) equals 0.852998454.\n"
"\n"
"@SEEALSO=TDIST,TTEST"
msgstr ""
"@FUNCTION=TINV\n"
"@SYNTAX=TINV(p,sd)\n"
"@DESCRIPTION=TINV Talebelerinin t-dağılımının tersini hesaplar. @p < 0, @p > "
"1 veya @sd < 1 ise işlev @SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TINV(0.4,32) eşittir 0.852998454\n"
"\n"
"Benzerleri: TDIST, TTEST\n"
"@EXAMPLES=\n"
"TINV(0.4,32) eşittir 0.852998454\n"
"\n"
"@SEEALSO=TDIST,TTEST"

#: ../plugins/fn-stat/functions.c:1580
msgid ""
"@FUNCTION=FDIST\n"
"@SYNTAX=FDIST(x,dof1,dof2)\n"
"@DESCRIPTION=FDIST function returns the F probability distribution. @dof1 is "
"the numerator degrees of freedom and @dof2 is the denominator degrees of "
"freedom.\n"
"\n"
"* If @x < 0 FDIST returns #NUM! error.\n"
"* If @dof1 < 1 or @dof2 < 1, FDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FDIST(2,5,5) equals 0.232511319.\n"
"\n"
"@SEEALSO=FINV"
msgstr ""
"@FUNCTION=FDIST\n"
"@SYNTAX=FDIST(x,sdpay,sdpayda)\n"
"@DESCRIPTION=FDIST F olasılık açılımını hesaplar. @sdpay serbestlik derecesi "
"payı, @sdpayda ise paydasıdır. @x < 0, @sdpay < 1 ya da @sdpayda < 1 ise "
"işlev @SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FDIST(2,5,5) eşittir 0.232511319\n"
"\n"
"Benzeri: FINV\n"
"@EXAMPLES=\n"
"FDIST(2,5,5) eşittir 0.232511319\n"
"\n"
"@SEEALSO=FINV"

#: ../plugins/fn-stat/functions.c:1617
msgid ""
"@FUNCTION=LANDAU\n"
"@SYNTAX=LANDAU(x)\n"
"@DESCRIPTION=LANDAU returns the probability density p(x) at @x for the "
"Landau distribution using an approximation method. \n"
"@EXAMPLES=\n"
"LANDAU(0.34).\n"
"\n"
"@SEEALSO=RANDLANDAU"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:1762
msgid ""
"@FUNCTION=FINV\n"
"@SYNTAX=FINV(p,dof1,dof2)\n"
"@DESCRIPTION=FINV function returns the inverse of the F probability "
"distribution.\n"
"\n"
"* If @p < 0 or @p > 1 FINV returns #NUM! error.\n"
"* If @dof1 < 1 or @dof2 < 1 FINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FINV(0.2,2,4) equals 2.472135955.\n"
"\n"
"@SEEALSO=FDIST"
msgstr ""
"@FUNCTION=FINV\n"
"@SYNTAX=FINV(p,sdpay,sdpayda)\n"
"@DESCRIPTION=FINV F olasılık açılımının tersini hesaplar. @sdpay serbestlik "
"derecesi payı, @sdpayda ise paydasıdır. @p < 0, @p > 1 @sdpay < 1 ya da "
"@sdpayda < 1 ise işlev @SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FINV(0.2,2,4) eşittir 2.472135955\n"
"\n"
"Benzeri: FDIST\n"
"@EXAMPLES=\n"
"FINV(0.2,2,4) eşittir 2.472135955\n"
"\n"
"@SEEALSO=FDIST"

#: ../plugins/fn-stat/functions.c:1798
msgid ""
"@FUNCTION=BINOMDIST\n"
"@SYNTAX=BINOMDIST(n,trials,p,cumulative)\n"
"@DESCRIPTION=BINOMDIST function returns the binomial distribution. @n is the "
"number of successes, @trials is the total number of independent trials, @p "
"is the probability of success in trials, and @cumulative describes whether "
"to return the sum of the binomial function from 0 to @n.\n"
"\n"
"* If @n or @trials are non-integer they are truncated.\n"
"* If @n < 0 or @trials < 0 BINOMDIST returns #NUM! error.\n"
"* If @n > @trials BINOMDIST returns #NUM! error.\n"
"* If @p < 0 or @p > 1 BINOMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BINOMDIST(3,5,0.8,0) equals 0.2048.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=BINOMDIST\n"
"@SYNTAX=BINOMDIST(n,deneme,p,kümülatif)\n"
"@DESCRIPTION=BINOMDIST binom açılımını hesaplar. @n başarı sayısı, @deneme "
"bağımsız denemelerin toplam sayısı, @kümülatif ise binom işlevinin 0 dan @n "
"e kadar toplam olup olmadığıdır. @n ve @deneme tamsayı değilse ondalık kısım "
"atılır. @n < 0, @deneme < 0, @n > @deneme, @p < 0 ya da @p > 1 ise işlev "
"#SAYI! hatası verir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"BINOMDIST(3,5,0.8,0) eşittir 0.2048\n"
"\n"
"Benzeri: POISSON\n"
"@EXAMPLES=\n"
"BINOMDIST(3,5,0.8,0) eşittir 0.2048\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:1843
msgid ""
"@FUNCTION=CAUCHY\n"
"@SYNTAX=CAUCHY(x,a,cum)\n"
"@DESCRIPTION=CAUCHY returns the Cauchy distribution with scale parameter @a. "
"If @cum is TRUE, CAUCHY returns the cumulative distribution.\n"
"\n"
"* If @a < 0 CAUCHY returns #NUM! error.\n"
"* If @cum != TRUE and @cum != FALSE CAUCHY returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"CAUCHY(0.43,1,TRUE) returns 0.370735.\n"
"\n"
"@SEEALSO=RANDCAUCHY"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,yanılma)\n"
"@DESCRIPTION=RANDNEGBINOM işlevi negatif binom açılımlı bir rasgele sayı "
"verir. @p < 0 veya @p > 1 veya @yanılma < 0 ise işlev #SAYI! hatası verir.\n"
"\n"
"Örnek:\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:1881
msgid ""
"@FUNCTION=CRITBINOM\n"
"@SYNTAX=CRITBINOM(trials,p,alpha)\n"
"@DESCRIPTION=CRITBINOM function returns the smallest value for which the "
"cumulative is greater than or equal to a given value. @n is the number of "
"trials, @p is the probability of success in trials, and @alpha is the "
"criterion value.\n"
"\n"
"* If @trials is a non-integer it is truncated.\n"
"* If @trials < 0 CRITBINOM returns #NUM! error.\n"
"* If @p < 0 or @p > 1 CRITBINOM returns #NUM! error.\n"
"* If @alpha < 0 or @alpha > 1 CRITBINOM returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CRITBINOM(10,0.5,0.75) equals 6.\n"
"\n"
"@SEEALSO=BINOMDIST"
msgstr ""
"@FUNCTION=CRITBINOM\n"
"@SYNTAX=CRITBINOM(n,p,alfa)\n"
"@DESCRIPTION=CRITBINOM verilen değere eşit yada ondan büyük kümülatif "
"değerlerin en küçüğünü verir. @n deneme sayısı, @p denemelerdeki başarı "
"olasılığı, @alfa ise koşul değerini içerir.\n"
"function returns the smallest value for which @n tamsayı değilse ondalık "
"kısım atılır. @n < 0, @p < 0, @p > 1, @alfa < 0, ya da @alfa > 1 ise işlev "
"#SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CRITBINOM(10,0.5,0.75) eşittir 6\n"
"\n"
"Benzeri: BINOMDIST\n"
"@EXAMPLES=\n"
"CRITBINOM(10,0.5,0.75) eşittir 6\n"
"\n"
"@SEEALSO=BINOMDIST"

#: ../plugins/fn-stat/functions.c:1921
msgid ""
"@FUNCTION=PERMUT\n"
"@SYNTAX=PERMUT(n,k)\n"
"@DESCRIPTION=PERMUT function returns the number of permutations. @n is the "
"number of objects, @k is the number of objects in each permutation.\n"
"\n"
"* If @n = 0 PERMUT returns #NUM! error.\n"
"* If @n < @k PERMUT returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"PERMUT(7,3) equals 210.\n"
"\n"
"@SEEALSO=COMBIN"
msgstr ""
"@FUNCTION=PERMUT\n"
"@SYNTAX=PERMUT(n,k)\n"
"@DESCRIPTION=PERMUT işlevi devşirim sayısını hesaplar. @n nesne sayısı, @k "
"ise her devşirimdeki nesne sayısıdır. @n=0 ya da @n < @k ise işlev #SAYI! "
"hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"PERMUT(7,3) eşittir 210\n"
"\n"
"Benzeri: COMBIN\n"
"@EXAMPLES=\n"
"PERMUT(7,3) eşittir 210\n"
"\n"
"@SEEALSO=COMBIN"

#: ../plugins/fn-stat/functions.c:1957
msgid ""
"@FUNCTION=HYPGEOMDIST\n"
"@SYNTAX=HYPGEOMDIST(x,n,M,N[,cumulative])\n"
"@DESCRIPTION=HYPGEOMDIST function returns the hypergeometric distribution. "
"@x is the number of successes in the sample, @n is the number of trials, @M "
"is the number of successes overall, and @N is the population size.\n"
"\n"
"If the optional argument @cumulative is TRUE, the cumulative left tail will "
"be returned.\n"
"\n"
"* If @x,@n,@M or @N is a non-integer it is truncated.\n"
"* If @x,@n,@M or @N < 0 HYPGEOMDIST returns #NUM! error.\n"
"* If @x > @M or @n > @N HYPGEOMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HYPGEOMDIST(1,2,3,10) equals 0.4666667.\n"
"\n"
"@SEEALSO=BINOMDIST,POISSON"
msgstr ""
"@FUNCTION=HYPGEOMDIST\n"
"@SYNTAX=HYPGEOMDIST(x,n,M,N)\n"
"@DESCRIPTION=HYPGEOMDIST hiper geometrik açılımı hesaplar. @x örneklerdeki "
"başarı sayısı, @n deneme sayısı, @M tüm başarıların sayısı, @N ise toplanan "
"örnek sayısıdır. @x,@n,@M veya @N tamsayı değilse ondalık kısım atılır. @x,"
"@n,@M veya @N sıfırdan küçükse veya  @x > @M ya da @n > @N ise işlev #SAYI! "
"hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"HYPGEOMDIST(1,2,3,10) eşittir 0.4666667\n"
"\n"
"Benzerleri: BINOMDIST, POISSON\n"
"@EXAMPLES=\n"
"HYPGEOMDIST(1,2,3,10) eşittir 0.4666667\n"
"\n"
"@SEEALSO=BINOMDIST,POISSON"

#: ../plugins/fn-stat/functions.c:2004
msgid ""
"@FUNCTION=CONFIDENCE\n"
"@SYNTAX=CONFIDENCE(x,stddev,size)\n"
"@DESCRIPTION=CONFIDENCE function returns the confidence interval for a mean. "
"@x is the significance level, @stddev is the population standard deviation, "
"and @size is the size of the sample.\n"
"\n"
"* If @size is non-integer it is truncated.\n"
"* If @size < 0 CONFIDENCE returns #NUM! error.\n"
"* If @size is 0 CONFIDENCE returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CONFIDENCE(0.05,1,33) equals 0.341185936.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=CONFIDENCE\n"
"@SYNTAX=CONFIDENCE(x,stdsapma,boyut)\n"
"@DESCRIPTION=CONFIDENCE bir ortalamanın emniyet aralığını hesaplar. @x "
"ağırlık seviyesi, @boyut ise örnek sayısıdır ve tamsayı değilse ondalık "
"kısmı atılır. @boyut < 0 ise işlev #SAYI!, @boyut = 0 ise #BÖL/0! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CONFIDENCE(0.05,1,33) eşittir 0.341185936\n"
"\n"
"Benzeri: AVERAGE\n"
"@EXAMPLES=\n"
"CONFIDENCE(0.05,1,33) eşittir 0.341185936\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:2042
msgid ""
"@FUNCTION=STANDARDIZE\n"
"@SYNTAX=STANDARDIZE(x,mean,stddev)\n"
"@DESCRIPTION=STANDARDIZE function returns a normalized value. @x is the "
"number to be normalized, @mean is the mean of the distribution, @stddev is "
"the standard deviation of the distribution.\n"
"\n"
"* If @stddev is 0 STANDARDIZE returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"STANDARDIZE(3,2,4) equals 0.25.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=STANDARDIZE\n"
"@SYNTAX=STANDARDIZE(x,ort,stdsapma)\n"
"@DESCRIPTION=STANDARDIZE bir normalleştirilmiş değer ile döner. @x "
"normalleştirilecek sayı, @ort açılımın ortalaması, @stdsapma ise açılımın "
"standart sapmasıdır. @stdsapma 0 ise işlev #BÖL/0 hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"STANDARDIZE(3,2,4) eşittir 0.25\n"
"\n"
"Benzeri: AVERAGE\n"
"@EXAMPLES=\n"
"STANDARDIZE(3,2,4) eşittir 0.25\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:2079
msgid ""
"@FUNCTION=WEIBULL\n"
"@SYNTAX=WEIBULL(x,alpha,beta,cumulative)\n"
"@DESCRIPTION=WEIBULL function returns the Weibull distribution. If the "
"@cumulative boolean is true it will return:\n"
"\n"
"\t1 - exp (-(@x/@beta)^@alpha),\n"
"\n"
"otherwise it will return\n"
"\n"
"\t(@alpha/@beta^@alpha) * @x^(@alpha-1) * exp(-(@x/@beta^@alpha)).\n"
"\n"
"* If @x < 0 WEIBULL returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0 WEIBULL returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"WEIBULL(3,2,4,0) equals 0.213668559.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=WEIBULL\n"
"@SYNTAX=WEIBULL(x,alfa,beta,kümülatif)\n"
"@DESCRIPTION=WEIBULL açılımını hesaplar. @kümülatif DOĞRU ise sonuç 1 - exp "
"(-(@x/@beta)^@alfa) ile değilse (@alfa/@beta^@alfa) * @x^(@alfa-1) * exp(-"
"(@x/@beta^@alfa)) ile hesaplanır.@x < 0, @alpha <= 0 ya da @beta <= 0 ise "
"WEIBULL #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"WEIBULL(3,2,4,0) eşittir 0.213668559\n"
"\n"
"Benzeri: POISSON\n"
"@EXAMPLES=\n"
"WEIBULL(3,2,4,0) eşittir 0.213668559\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:2121
#, fuzzy
msgid ""
"@FUNCTION=NORMDIST\n"
"@SYNTAX=NORMDIST(x,mean,stddev,cumulative)\n"
"@DESCRIPTION=The NORMDIST function returns the value of the probability "
"density function or the cumulative distribution function for the normal "
"distribution with the mean given by @mean, and the standard deviation given "
"by @stddev. If @cumulative is FALSE, NORMDIST returns the value of the "
"probability density function at the value @x. If @cumulative is TRUE, "
"NORMDIST returns the value of the cumulative distribution function at @x.\n"
"\n"
"* If @stddev is 0 NORMDIST returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMDIST(2,1,2,0) equals 0.176032663.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=EXPONDIST\n"
"@SYNTAX=EXPONDIST(x,y,kümülatif)\n"
"@DESCRIPTION=EXPONDIST işlevi üstel açılımı verir. @kümülatif YANLIŞ ise @y "
"* exp (-@y*@x), değilse 1 - exp (-@y*@x) hesaplanır. @x < 0 veya @y <= 0 ise "
"işlev hata verir.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"EXPONDIST(2,4,0) eşittir 0.001341851\n"
"\n"
"Benzeri: POISSON\n"
"@EXAMPLES=\n"
"EXPONDIST(2,4,0) eşittir 0.001341851\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:2167
msgid ""
"@FUNCTION=NORMINV\n"
"@SYNTAX=NORMINV(p,mean,stddev)\n"
"@DESCRIPTION=NORMINV function returns the inverse of the normal cumulative "
"distribution. @p is the given probability corresponding to the normal "
"distribution, @mean is the arithmetic mean of the distribution, and @stddev "
"is the standard deviation of the distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @stddev <= 0 NORMINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMINV(0.76,2,3) equals 4.118907689.\n"
"\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST"
msgstr ""
"@FUNCTION=NORMINV\n"
"@SYNTAX=NORMINV(p,ort,stdsapma)\n"
"@DESCRIPTION=NORMINV normal kümülatif açılımın tersini hesaplar. @p ile "
"normal açılıma karşı düşen olasılık verilir. @ort açılımın aritmetik "
"ortalamasıdır. @stdsapma ise açılımın standart sapmasıdır. @p < 0, @p > 1 "
"veya @stsapma <= 0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"NORMINV(0.76,2,3) eşittir 4.118907689\n"
"\n"
"Benzerleri: NORMDIST, NORMSDIST, NORMSINV, STANDARDIZE, ZTEST\n"
"@EXAMPLES=\n"
"NORMINV(0.76,2,3) eşittir 4.118907689\n"
"\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST"

#: ../plugins/fn-stat/functions.c:2206
msgid ""
"@FUNCTION=KURT\n"
"@SYNTAX=KURT(n1, n2, ...)\n"
"@DESCRIPTION=KURT returns an unbiased estimate of the kurtosis of a data "
"set.\n"
"Note, that this is only meaningful if the underlying distribution really has "
"a fourth moment.  The kurtosis is offset by three such that a normal "
"distribution will have zero kurtosis.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If fewer than four numbers are given or all of them are equal KURT returns "
"#DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"KURT(A1:A5) equals 1.234546305.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEW,KURTP"
msgstr ""
"@FUNCTION=KURT\n"
"@SYNTAX=KURT(n1, n2, ...)\n"
"@DESCRIPTION=KURT bir veri kümesinin kurtosisinin tarafsız bir tahminini "
"hesaplar. Not: Bu, yalnızca dağılımın 4. kuvveti var ise anlamlı olan bir "
"hesaptır. İlküç kuvvetin kurtosis'e olan etkisi öyledir ki, normal dağılımın "
"kurtosis'isıfıra eşittir. Dizgeler ve boş hücreler yok sayılır. Eğer 4 den "
"az sayı verilirse veya hepsi eşit ise KURT #BÖL/0 hatasını verir.İşlev Excel "
"uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"KURT(A1:A5) eşittir 1.234546305\n"
"\n"
"Benzerleri: AVERAGE,VAR,SKEW,KURTP\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"KURT(A1:A5) eşittir 1.234546305\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEW,KURTP"

#: ../plugins/fn-stat/functions.c:2247
msgid ""
"@FUNCTION=KURTP\n"
"@SYNTAX=KURTP(n1, n2, ...)\n"
"@DESCRIPTION=KURTP returns the population kurtosis of a data set.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If fewer than two numbers are given or all of them are equal KURTP returns "
"#DIV/0! error.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"KURTP(A1:A5) equals -0.691363424.\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEWP,KURT"
msgstr ""
"@FUNCTION=KURTP\n"
"@SYNTAX=KURTP(n1, n2, ...)\n"
"@DESCRIPTION=KURTP bir veri kümesinin dağılım kurtosisini hesaplar. Dizgeler "
"ve boş gözeler yok sayılır. Eğer 2 den az sayı verilirse veya hepsi eşit ise "
"KURTP #BÖL/0 hatasını verir.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"KURTP(A1:A5) eşittir -0.691363424\n"
"\n"
"Benzerleri: AVERAGE, VARP, SKEWP, KURT\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"KURTP(A1:A5) eşittir -0.691363424\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEWP,KURT"

#: ../plugins/fn-stat/functions.c:2282
msgid ""
"@FUNCTION=AVEDEV\n"
"@SYNTAX=AVEDEV(n1, n2, ...)\n"
"@DESCRIPTION=AVEDEV returns the average of the absolute deviations of a data "
"set from their mean.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"AVEDEV(A1:A5) equals 7.84.\n"
"\n"
"@SEEALSO=STDEV"
msgstr ""
"@FUNCTION=AVEDEV\n"
"@SYNTAX=AVEDEV(n1, n2, ...)\n"
"@DESCRIPTION=AVEDEV bir veri kümesinin ortalamasından mutlak sapmalarının "
"ortalamasını hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3,21.3, 25.9, 40.1. değerlerini "
"içeriyorsa:\n"
"AVEDEV(A1:A5) eşittir 7.84\n"
"\n"
"Benzeri: STDEV\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"AVEDEV(A1:A5) equals 7.84.\n"
"\n"
"@SEEALSO=STDEV"

#: ../plugins/fn-stat/functions.c:2315
msgid ""
"@FUNCTION=DEVSQ\n"
"@SYNTAX=DEVSQ(n1, n2, ...)\n"
"@DESCRIPTION=DEVSQ returns the sum of squares of deviations of a data set "
"from the sample mean.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"DEVSQ(A1:A5) equals 470.56.\n"
"\n"
"@SEEALSO=STDEV"
msgstr ""
"@FUNCTION=DEVSQ\n"
"@SYNTAX=DEVSQ(n1, n2, ...)\n"
"@DESCRIPTION=DEVSQ bir veri kümesinin örnekleme ortalamasından sapmaların "
"karelerinin toplamını hesaplar.\n"
"Dizgeler ve boş gözeler yoksayılır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"DEVSQ(A1:A5) eşittir 470.56\n"
"\n"
"Benzeri: STDEV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"DEVSQ(A1:A5) eşittir 470.56\n"
"\n"
"@SEEALSO=STDEV"

#: ../plugins/fn-stat/functions.c:2350
msgid ""
"@FUNCTION=FISHER\n"
"@SYNTAX=FISHER(x)\n"
"@DESCRIPTION=FISHER function returns the Fisher transformation at @x.\n"
"\n"
"* If @x is not a number, FISHER returns #VALUE! error.\n"
"* If @x <= -1 or @x >= 1, FISHER returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FISHER(0.332) equals 0.345074339.\n"
"\n"
"@SEEALSO=SKEW"
msgstr ""
"@FUNCTION=FISHER\n"
"@SYNTAX=FISHER(x)\n"
"@DESCRIPTION=FISHER işlevi @x için Fisher dönüşümünü hesaplar. @x sayı "
"değilse işlev #DEĞER! hatası ile @x <= -1 ya da @x >= 1 ise #SAYI! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FISHER(0.332) eşittir 0.345074339\n"
"\n"
"Benzeri: SKEW\n"
"@EXAMPLES=\n"
"FISHER(0.332) eşittir 0.345074339\n"
"\n"
"@SEEALSO=SKEW"

#: ../plugins/fn-stat/functions.c:2388
msgid ""
"@FUNCTION=POISSON\n"
"@SYNTAX=POISSON(x,mean,cumulative)\n"
"@DESCRIPTION=POISSON function returns the Poisson distribution. @x is the "
"number of events, @mean is the expected numeric value @cumulative describes "
"whether to return the sum of the Poisson function from 0 to @x.\n"
"\n"
"* If @x is a non-integer it is truncated.\n"
"* If @x < 0 POISSON returns #NUM! error.\n"
"* If @mean <= 0 POISSON returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"POISSON(3,6,0) equals 0.089235078.\n"
"\n"
"@SEEALSO=NORMDIST, WEIBULL"
msgstr ""
"@FUNCTION=POISSON\n"
"@SYNTAX=POISSON(x,ortalama,kümülatif)\n"
"@DESCRIPTION=POISSON açılımını hesaplar. @x eylem sayısı, @ortalama beklenen "
"sayısal değer, @kümülatif ise 0 dan @x e kadar poisson işlevinin toplamı "
"olup olmadığıdır. @x tamsayı değilse ondalık kısım atılır. @x < 0 ya da "
"@ortalama <= 0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"POISSON(3,6,0) eşittir 0.089235078\n"
"\n"
"Benzerleri: NORMDIST, WEIBULL\n"
"@EXAMPLES=\n"
"POISSON(3,6,0) eşittir 0.089235078\n"
"\n"
"@SEEALSO=NORMDIST, WEIBULL"

#: ../plugins/fn-stat/functions.c:2430
msgid ""
"@FUNCTION=PEARSON\n"
"@SYNTAX=PEARSON(array1,array2)\n"
"@DESCRIPTION=PEARSON returns the Pearson correlation coefficient of two data "
"sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=INTERCEPT,LINEST,RSQ,SLOPE,STEYX"
msgstr ""
"@FUNCTION=PEARSON\n"
"@SYNTAX=PEARSON(dizi1,dizi2)\n"
"@DESCRIPTION=PEARSON işlevi iki veri kümesinin Pearson ilinti katsayısını "
"hesaplar. Metin içeren ve boş olan gözeler yoksayılır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzerleri: INTERCEPT, LINEST, RSQ, SLOPE, STEYX\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=INTERCEPT,LINEST,RSQ,SLOPE,STEYX"

#: ../plugins/fn-stat/functions.c:2458
msgid ""
"@FUNCTION=RSQ\n"
"@SYNTAX=RSQ(array1,array2)\n"
"@DESCRIPTION=RSQ returns the square of the Pearson correlation coefficient "
"of two data sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=CORREL,COVAR,INTERCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND"
msgstr ""
"@FUNCTION=RSQ\n"
"@SYNTAX=RSQ(dizi1,dizi2)\n"
"@DESCRIPTION=RSQ işlevi iki veri kümesinin Pearson ilinti katsayısının "
"karesini hesaplar. Metin içeren ve boş olan gözeler yoksayılır.\n"
"\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzerleri: CORREL, COVAR, INTERCEPT, LINEST, LOGEST, PEARSON, SLOPE, STEYX, "
"TREND\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=CORREL,COVAR,INTERCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND"

#: ../plugins/fn-stat/functions.c:2492
msgid ""
"@FUNCTION=MEDIAN\n"
"@SYNTAX=MEDIAN(n1, n2, ...)\n"
"@DESCRIPTION=MEDIAN returns the median of the given data set.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If even numbers are given MEDIAN returns the average of the two numbers in "
"the middle.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"MEDIAN(A1:A5) equals 21.3.\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SSMEDIAN,SUM"
msgstr ""
"@FUNCTION=MEDIAN\n"
"@SYNTAX=MEDIAN(n1,n2,...)\n"
"@DESCRIPTION=MEDIAN işlevi veri kümesi içinde büyüklük bakımından ortada "
"olan değerle sonuçlanır. Metin içeren ve boş olan gözeler yoksayılır. Küme "
"çift sayıda eleman içeriyorsa sonuç orta büyüklükteki iki değerin "
"ortalamasıdır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"MEDIAN(A1:A5) eşittir 21.3\n"
"\n"
"Benzerleri: AVERAGE, COUNT, COUNTA, DAVERAGE, MODE, SUM\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"MEDIAN(A1:A5) eşittir 21.3\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SUM"

#: ../plugins/fn-stat/functions.c:2528
msgid ""
"@FUNCTION=SSMEDIAN\n"
"@SYNTAX=SSMEDIAN(array[,interval)]\n"
"@DESCRIPTION=The SSMEDIAN function returns the median for grouped data as "
"commonly determined in the social sciences. The data points given in @array "
"are assumed to be the result of grouping data into intervals of length "
"@interval\n"
"\n"
"* If @interval is not given, SSMEDIAN uses 1.\n"
"* If @array is empty, SSMEDIAN returns #NUM! error.\n"
"* If @interval <= 0, SSMEDIAN returns #NUM! error.\n"
"* SSMEDIAN does not check whether the data points are at least @interval "
"apart.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, A3 contain numbers 7, 8, 8.  Then\n"
"SSMEDIAN(A1:A3, 1) equals 7.75.\n"
"\n"
"@SEEALSO=MEDIAN"
msgstr ""
"@FUNCTION=PERCENTILE\n"
"@SYNTAX=PERCENTILE(dizi,k)\n"
"@DESCRIPTION=PERCENTILE veri noktalarının yüzde 100*@k lığını hesaplar. @k < "
"0, @k > 1 ya da @dizi boşsa işlev #SAYI hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"PERCENTILE(A1:A5,0.42) eşittir 20.02\n"
"\n"
"Benzeri: QUARTILE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"PERCENTILE(A1:A5,0.42) eşittir 20.02\n"
"\n"
"@SEEALSO=QUARTILE"

#: ../plugins/fn-stat/functions.c:2634
#, fuzzy
msgid ""
"@FUNCTION=LARGE\n"
"@SYNTAX=LARGE(n, k)\n"
"@DESCRIPTION=LARGE returns the k-th largest value in a data set.\n"
"\n"
"* If data set is empty LARGE returns #NUM! error.\n"
"* If @k <= 0 or @k is greater than the number of data items given LARGE "
"returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"LARGE(A1:A5,2) equals 25.9.\n"
"LARGE(A1:A5,4) equals 17.3.\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,SMALL"
msgstr ""
"@FUNCTION=LARGE\n"
"@SYNTAX=LARGE(n1;n2;...;k)\n"
"@DESCRIPTION=LARGE işlevi veri kümesi içindeki k. en büyük değer ile "
"sonuçlanır. Veri kümesi boşsa, @k<= 0 ise ya da k veri kümesindeki öğelerin "
"sayısından büyükse işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"LARGE(A1:A5;2) eşittir 25.9\n"
"LARGE(A1:A5;4) eşittir 17.3\n"
"\n"
"Benzerleri: PERCENTILE, PERCENTRANK, QUARTILE, SMALL\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"LARGE(A1:A5;2) eşittir 25.9\n"
"LARGE(A1:A5;4) eşittir 17.3\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,SMALL"

#: ../plugins/fn-stat/functions.c:2685
#, fuzzy
msgid ""
"@FUNCTION=SMALL\n"
"@SYNTAX=SMALL(n, k)\n"
"@DESCRIPTION=SMALL returns the k-th smallest value in a data set.\n"
"\n"
"* If data set is empty SMALL returns #NUM! error.\n"
"* If @k <= 0 or @k is greater than the number of data items given SMALL "
"returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"SMALL(A1:A5,2) equals 17.3.\n"
"SMALL(A1:A5,4) equals 25.9.\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,LARGE"
msgstr ""
"@FUNCTION=SMALL\n"
"@SYNTAX=SMALL(n1, n2,..., k)\n"
"@DESCRIPTION=SMALL işlevi veri kümesi içindeki k. en küçük değer ile "
"sonuçlanır. Veri kümesi boşsa, @k<= 0 ise ya da k veri kümesindeki öğelerin "
"sayısından büyükse işlev #SAYI! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"SMALL(A1:A5,2) eşittir 17.3\n"
"SMALL(A1:A5,4) eşittir 25.9\n"
"\n"
"Benzerleri: PERCENTILE, PERCENTRANK, QUARTILE, LARGE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, ve 40.1 "
"değerlerini içeriyorsa:\n"
"SMALL(A1:A5,2) eşittir 17.3\n"
"SMALL(A1:A5,4) eşittir 25.9\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,LARGE"

#: ../plugins/fn-stat/functions.c:2762
msgid ""
"@FUNCTION=PROB\n"
"@SYNTAX=PROB(x_range,prob_range,lower_limit[,upper_limit])\n"
"@DESCRIPTION=PROB function returns the probability that values in a range or "
"an array are between two limits. If @upper_limit is not given, PROB returns "
"the probability that values in @x_range are equal to @lower_limit.\n"
"\n"
"* If the sum of the probabilities in @prob_range is not equal to 1 PROB "
"returns #NUM! error.\n"
"* If any value in @prob_range is <=0 or > 1, PROB returns #NUM! error.\n"
"* If @x_range and @prob_range contain a different number of data entries, "
"PROB returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=BINOMDIST,CRITBINOM"
msgstr ""
"@FUNCTION=PROB\n"
"@SYNTAX=PROB(aralık_x,prob_aralığı,alt_sınır[,üst_sınır])\n"
"@DESCRIPTION=PROB işlevi iki sınır arasındaki veya bir dizi ya da bir "
"aralıktaki değerlerin olasılığını hesaplar. @üst_sınır verilmezse, @aralık_x "
"içindeki @alt_limite eşit değerlerin olasılığını hesaplar. "
"@prob_aralığındaki olasılıkların toplamı birden farklı ise işlev #SAYI! "
"hatası ile sonuçlanır. @prob_aralığındaki <=0 veya > 1 olan değerlerin "
"bulunması işlevin #SAYI! hatası ile sonuçlanmasına sebep olur.@aralık_x ve "
"prob_aralığı farklı sayıda veri girdisi içeriyorsa işlev #YOK! hatası ile "
"sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Benzerleri: BINOMDIST, CRITBINOM\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=BINOMDIST,CRITBINOM"

#: ../plugins/fn-stat/functions.c:2857
msgid ""
"@FUNCTION=STEYX\n"
"@SYNTAX=STEYX(known_y's,known_x's)\n"
"@DESCRIPTION=STEYX function returns the standard error of the predicted y-"
"value for each x in the regression.\n"
"\n"
"* If @known_y's and @known_x's are empty or have a different number of "
"arguments then STEYX returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"STEYX(A1:A5,B1:B5) equals 1.101509979.\n"
"\n"
"@SEEALSO=PEARSON,RSQ,SLOPE"
msgstr ""
"@FUNCTION=STEYX\n"
"@SYNTAX=STEYX(yler,xler)\n"
"@DESCRIPTION=STEYX eğiğin her @x için tahmini y değerlerinin standart "
"sapmasını hesaplar. @xler ve @yler boşsa ya da aynı sayıda argüman "
"içermiyorlarsa işlev #YOK! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, B2, ... B5 "
"23.2, 25.8, 29.9, 33.5, 42.7 değerlerini içeriyorsa\n"
"STEYX(A1:A5,B1:B5) eşittir 1.101509979\n"
"\n"
"Benzerleri: PEARSON, RSQ, SLOPE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, B2, ... B5 "
"23.2, 25.8, 29.9, 33.5, 42.7 değerlerini içeriyorsa\n"
"STEYX(A1:A5,B1:B5) eşittir 1.101509979\n"
"\n"
"@SEEALSO=PEARSON,RSQ,SLOPE"

#: ../plugins/fn-stat/functions.c:3015
msgid ""
"@FUNCTION=ZTEST\n"
"@SYNTAX=ZTEST(ref,x)\n"
"@DESCRIPTION=ZTEST returns the two-tailed probability of a z-test.\n"
"\n"
"@ref is the data set and @x is the value to be tested.\n"
"\n"
"* If @ref contains less than two data items ZTEST returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"ZTEST(A1:A5,20) equals 0.254717826.\n"
"\n"
"@SEEALSO=CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE"
msgstr ""
"@FUNCTION=ZTEST\n"
"@SYNTAX=ZTEST(ref,x)\n"
"@DESCRIPTION=ZTEST bir z-testinin iki-sonlu olasılığını hesaplar. @ref ile "
"veri kümesi, @x ile test edilecek değer belirtilir. @ref 2 den az veri "
"içeriyorsa işlev #BÖL/0! hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"ZTEST(A1:A5,20) eşittir 0.254717826\n"
"\n"
"Benzerleri: CONFIDENCE, NORMDIST, NORMINV, NORMSDIST, NORMSINV, STANDARDIZE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"ZTEST(A1:A5,20) eşittir 0.254717826\n"
"\n"
"@SEEALSO=CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE"

#: ../plugins/fn-stat/functions.c:3071
msgid ""
"@FUNCTION=AVERAGEA\n"
"@SYNTAX=AVERAGEA(number1,number2,...)\n"
"@DESCRIPTION=AVERAGEA returns the average of the given arguments.  Numbers, "
"text and logical values are included in the calculation too. If the cell "
"contains text or the argument evaluates to FALSE, it is counted as value "
"zero (0).  If the argument evaluates to TRUE, it is counted as one (1).  "
"Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"AVERAGEA(A1:A5) equals 18.94.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=AVERAGEA\n"
"@SYNTAX=AVERAGEA(değer1,değer2,...)\n"
"@DESCRIPTION=AVERAGEA işlevi verilen değerlerin ortalamasını hesaplar. "
"Hesaplama alanı sayılar, metin ve mantıksal değerler içerebilir. Göze metin "
"ya da YANLIŞ sonuçlanan ifadeler içeriyorsa değeri sıfır (0), DOĞRU "
"sonuçlanan ifadeler içeriyorsa değeri bir (1) kabul edilir. Boş gözeler "
"sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"AVERAGEA(A1:A5) eşittir 18.94\n"
"\n"
"Benzeri: AVERAGE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"AVERAGEA(A1:A5) eşittir 18.94\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:3109
msgid ""
"@FUNCTION=MAXA\n"
"@SYNTAX=MAXA(number1,number2,...)\n"
"@DESCRIPTION=MAXA returns the largest value of the given arguments.  "
"Numbers, text and logical values are included in the calculation too. If the "
"cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"MAXA(A1:A5) equals 40.1.\n"
"\n"
"@SEEALSO=MAX,MINA"
msgstr ""
"@FUNCTION=MAXA\n"
"@SYNTAX=MAXA(sayı1,sayı2,...)\n"
"@DESCRIPTION=MAXA işlevi verilen değerlerin en büyüğünü hesaplar. Hesaplama "
"alanı sayılar, metin ve mantıksal değerler içerebilir. Göze metin ya da "
"YANLIŞ sonuçlanan ifadeler içeriyorsa değeri sıfır (0), DOĞRU sonuçlanan "
"ifadeler içeriyorsa değeri bir (1) kabul edilir. Boş gözeler sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"eksik\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"MAXA(A1:A5) eşittir 40.1\n"
"\n"
"Benzerleri: MAX, MINA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"MAXA(A1:A5) eşittir 40.1\n"
"\n"
"@SEEALSO=MAX,MINA"

#: ../plugins/fn-stat/functions.c:3147
msgid ""
"@FUNCTION=MINA\n"
"@SYNTAX=MINA(number1,number2,...)\n"
"@DESCRIPTION=MINA returns the smallest value of the given arguments.  "
"Numbers, text and logical values are included in the calculation too. If the "
"cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"MINA(A1:A5) equals 0.\n"
"\n"
"@SEEALSO=MIN,MAXA"
msgstr ""
"@FUNCTION=MINA\n"
"@SYNTAX=MINA(sayı1,sayı2,...)\n"
"@DESCRIPTION=MINA işlevi verilen değerlerin en küçüğünü hesaplar. Hesaplama "
"alanı sayılar, metin ve mantıksal değerler içerebilir. Göze metin ya da "
"YANLIŞ sonuçlanan ifadeler içeriyorsa değeri sıfır (0), DOĞRU sonuçlanan "
"ifadeler içeriyorsa değeri bir (1) kabul edilir. Boş gözeler sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"eksik\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"MINA(A1:A5) eşittir 0\n"
"\n"
"Benzerleri: MIN, MAXA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"eksik\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"MINA(A1:A5) eşittir 0\n"
"\n"
"@SEEALSO=MIN,MAXA"

#: ../plugins/fn-stat/functions.c:3185
msgid ""
"@FUNCTION=VARA\n"
"@SYNTAX=VARA(number1,number2,...)\n"
"@DESCRIPTION=VARA calculates sample variance of the given sample.\n"
"To get the true variance of a complete population use VARPA.\n"
"VARA is also known as the N-1-variance.\n"
"Under reasonable conditions, it is the maximum-likelihood estimator for the "
"true variance.\n"
"Numbers, text and logical values are included in the calculation too. If the "
"cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"VARA(A1:A5) equals 228.613.\n"
"\n"
"@SEEALSO=VAR,VARPA"
msgstr ""
"@FUNCTION=VARA\n"
"@SYNTAX=VARA(sayı1,sayı2,...)\n"
"@DESCRIPTION=VARA işlevi bir örnek üzerine tabanlanmış değişimi hesaplar. "
"Hesaplama alanı sayılar, metin ve mantıksal değerler içerebilir. Göze metin "
"ya da YANLIŞ sonuçlanan ifadeler içeriyorsa değeri sıfır (0), DOĞRU "
"sonuçlanan ifadeler içeriyorsa değeri bir (1) kabul edilir. Boş gözeler "
"sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"VARA(A1:A5) eşittir 228.613\n"
"\n"
"Benzerleri: VAR, VARPA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"VARA(A1:A5) eşittir 228.613\n"
"\n"
"@SEEALSO=VAR,VARPA"

#: ../plugins/fn-stat/functions.c:3229
msgid ""
"@FUNCTION=VARPA\n"
"@SYNTAX=VARPA(number1,number2,...)\n"
"@DESCRIPTION=VARPA calculates the variance of an entire population.\n"
"VARPA is also known as the N-variance.\n"
"Numbers, text and logical values are included in the calculation too.  If "
"the cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"VARPA(A1:A5) equals 182.8904.\n"
"\n"
"@SEEALSO=VARA,VARP"
msgstr ""
"@FUNCTION=VARPA\n"
"@SYNTAX=VARPA(sayı1,sayı2,...)\n"
"@DESCRIPTION=VARPA işlevi mevcut dağılım üzerine tabanlanmış değişimi "
"hesaplar. Hesaplama alanı sayılar, metin ve mantıksal değerler içerebilir. "
"Göze metin ya da YANLIŞ sonuçlanan ifadeler içeriyorsa değeri sıfır (0), "
"DOĞRU sonuçlanan ifadeler içeriyorsa değeri bir (1) kabul edilir. Boş "
"gözeler sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"VARPA(A1:A5) eşittir 182.8904\n"
"\n"
"Benzerleri: VARP, VARP\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"VARPA(A1:A5) eşittir 182.8904\n"
"\n"
"@SEEALSO=VARP,VARP"

#: ../plugins/fn-stat/functions.c:3268
msgid ""
"@FUNCTION=STDEVA\n"
"@SYNTAX=STDEVA(number1,number2,...)\n"
"@DESCRIPTION=STDEVA returns the sample standard deviation of the given "
"sample.\n"
"To obtain the population standard deviation of a whole population use "
"STDEVPA.\n"
"STDEVA is also known as the N-1-standard deviation.\n"
"Under reasonable conditions, it is the maximum-likelihood estimator for the "
"true population standard deviation.\n"
"Numbers, text and logical values are included in the calculation too.  If "
"the cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"STDEVA(A1:A5) equals 15.119953704.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"
msgstr ""
"@FUNCTION=STDEVA\n"
"@SYNTAX=STDEVA(sayı1,sayı2,...)\n"
"@DESCRIPTION=STDEVA işlevi bir örnek üzerine tabanlanmış standart sapmayı "
"hesaplar. Hesaplama alanı sayılar, metin ve mantıksal değerler içerebilir. "
"Göze metin ya da YANLIŞ sonuçlanan ifadeler içeriyorsa değeri sıfır (0), "
"DOĞRU sonuçlanan ifadeler içeriyorsa değeri bir (1) kabul edilir. Boş "
"gözeler sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"STDEVA(A1:A5) eşittir 15.119953704\n"
"\n"
"Benzerleri: STDEV, STDEVPA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"STDEVA(A1:A5) eşittir 15.119953704\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"

#: ../plugins/fn-stat/functions.c:3313
msgid ""
"@FUNCTION=STDEVPA\n"
"@SYNTAX=STDEVPA(number1,number2,...)\n"
"@DESCRIPTION=STDEVPA returns the population standard deviation of an entire "
"population.\n"
"This is also known as the N-standard deviation\n"
"Numbers, text and logical values are included in the calculation too.  If "
"the cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"STDEVPA(A1:A5) equals 13.523697719.\n"
"\n"
"@SEEALSO=STDEVA,STDEVP"
msgstr ""
"@FUNCTION=STDEVPA\n"
"@SYNTAX=STDEVPA(sayı1,sayı2,...)\n"
"@DESCRIPTION=STDEVPA işlevi mevcut açılım üzerine tabanlanmış standart "
"sapmayı hesaplar. Hesaplama alanı sayılar, metin ve mantıksal değerler "
"içerebilir. Göze metin ya da YANLIŞ sonuçlanan ifadeler içeriyorsa değeri "
"sıfır (0), DOĞRU sonuçlanan ifadeler içeriyorsa değeri bir (1) kabul edilir. "
"Boş gözeler sayılmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"STDEVPA(A1:A5) eşittir 13.523697719\n"
"\n"
"Benzerleri: STDEVA, STDEVP\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, \"missing\", 25.9, ve 40.1 "
"içeriyorsa:\n"
"STDEVPA(A1:A5) eşittir 13.523697719\n"
"\n"
"@SEEALSO=STDEVA,STDEVP"

#: ../plugins/fn-stat/functions.c:3353
msgid ""
"@FUNCTION=PERCENTRANK\n"
"@SYNTAX=PERCENTRANK(array,x[,significance])\n"
"@DESCRIPTION=PERCENTRANK function returns the rank of a data point in a data "
"set.  @array is the range of numeric values, @x is the data point which you "
"want to rank, and the optional @significance specifies the number of "
"significant digits for the returned value, truncating the remainder.  If "
"@significance is omitted, PERCENTRANK uses three digits.\n"
"\n"
"* If @array contains no data points, PERCENTRANK returns #NUM! error.\n"
"* If @significance is less than one, PERCENTRANK returns #NUM! error.\n"
"* If @x exceeds the largest value or is less than the smallest value in "
"@array, PERCENTRANK returns #NUM! error.\n"
"* If @x does not match any of the values in @array or @x matches more than "
"once, PERCENTRANK interpolates the returned value.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL"
msgstr ""
"@FUNCTION=PERCENTRANK\n"
"@SYNTAX=PERCENTRANK(dizi,x[,önem])\n"
"@DESCRIPTION=PERCENTRANK bir veri kümesindeki bir verinin sıralamadaki "
"yerini verir. @dizi sayısal değerler içeren bir aralık, @x yeri aranan "
"değerdir. Seçimlik olarak verilen @önem ise sonucun önemli hanelerinin "
"sayısıdır, verilmezse 3 hane varsayılır.\n"
" @dizi boşsa ya da @önem < 1 ise işlev #SAYI! hatası ile sonuçlanır.\n"
" @x @dizi içinde yoksa ya da birden fazla varsa sonuç aradeğer olarak "
"verilir.\n"
"\n"
"Benzerleri: LARGE, MAX, MEDIAN, MIN, PERCENTILE, QUARTILE, SMALL\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL"

#: ../plugins/fn-stat/functions.c:3466
msgid ""
"@FUNCTION=PERCENTILE\n"
"@SYNTAX=PERCENTILE(array,k)\n"
"@DESCRIPTION=PERCENTILE function returns the 100*@k-th percentile of the "
"given data points (that is, a number x such that a fraction @k of the data "
"points are less than x).\n"
"\n"
"* If @array is empty, PERCENTILE returns #NUM! error.\n"
"* If @k < 0 or @k > 1, PERCENTILE returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"PERCENTILE(A1:A5,0.42) equals 20.02.\n"
"\n"
"@SEEALSO=QUARTILE"
msgstr ""
"@FUNCTION=PERCENTILE\n"
"@SYNTAX=PERCENTILE(dizi,k)\n"
"@DESCRIPTION=PERCENTILE veri noktalarının yüzde 100*@k lığını hesaplar. @k < "
"0, @k > 1 ya da @dizi boşsa işlev #SAYI hatası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"PERCENTILE(A1:A5,0.42) eşittir 20.02\n"
"\n"
"Benzeri: QUARTILE\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"PERCENTILE(A1:A5,0.42) eşittir 20.02\n"
"\n"
"@SEEALSO=QUARTILE"

#: ../plugins/fn-stat/functions.c:3518
msgid ""
"@FUNCTION=QUARTILE\n"
"@SYNTAX=QUARTILE(array,quart)\n"
"@DESCRIPTION=QUARTILE function returns the quartile of the given data "
"points.\n"
"\n"
"If @quart is equal to: QUARTILE returns:\n"
"0                      the smallest value of @array.\n"
"1                      the first quartile\n"
"2                      the second quartile\n"
"3                      the third quartile\n"
"4                      the largest value of @array.\n"
"\n"
"* If @array is empty, QUARTILE returns #NUM! error.\n"
"* If @quart < 0 or @quart > 4, QUARTILE returns #NUM! error.\n"
"* If @quart is not an integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"QUARTILE(A1:A5,1) equals 17.3.\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,SMALL"
msgstr ""
"@FUNCTION=QUARTILE\n"
"@SYNTAX=QUARTILE(dizi,çeyrek)\n"
"@DESCRIPTION= QUARTILE veri kümesinin çeyreklerini hesaplar. @dizi boşsa, "
"@çeyrek <0 ya da @çeyrek > 4 ise işlev #SAYI! hatası ile sonuçlanır. @çeyrek "
"bir tamsayı değilse ondalık kısmı atılır. @çeyrek 0 ise @dizideki en küçük "
"değer, 4 ise en büyük değer, ara değerlerde ise çeyreklerdeki değerler "
"döner.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"QUARTILE(A1:A5,1) eşittir 17.3\n"
"\n"
"Benzerleri: LARGE, MAX, MEDIAN, MIN, PERCENTILE, SMALL\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1 değerlerini "
"içeriyorsa:\n"
"QUARTILE(A1:A5,1) eşittir 17.3\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,SMALL"

#: ../plugins/fn-stat/functions.c:3577
msgid ""
"@FUNCTION=FTEST\n"
"@SYNTAX=FTEST(array1,array2)\n"
"@DESCRIPTION=FTEST function returns the two-tailed probability that the "
"variances in the given two data sets are not significantly different.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"FTEST(A1:A5,B1:B5) equals 0.510815017.\n"
"\n"
"@SEEALSO=FDIST,FINV"
msgstr ""
"@FUNCTION=FTEST\n"
"@SYNTAX=FTEST(dizi1,dizi2)\n"
"@DESCRIPTION=FTEST verilen önemce farklı olmayan iki veri kümesindeki "
"değişimlerin iki-sonlu olasılığını hesaplar.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırasıyla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ... B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini içeriyorsa:\n"
"FTEST(A1:A5,B1:B5) eşittir 0.510815017\n"
"\n"
"Benzerleri: FDIST, FINV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sıasıyla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ... B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini içeriyorsa:\n"
"FTEST(A1:A5,B1:B5) eşittir 0.510815017\n"
"\n"
"@SEEALSO=FDIST,FINV"

#: ../plugins/fn-stat/functions.c:3642
msgid ""
"@FUNCTION=TTEST\n"
"@SYNTAX=TTEST(array1,array2,tails,type)\n"
"@DESCRIPTION=TTEST function returns the probability of a Student's t-Test. \n"
"@array1 is the first data set and @array2 is the second data set.  If @tails "
"is one, TTEST uses the one-tailed distribution and if @tails is two, TTEST "
"uses the two-tailed distribution.  @type determines the kind of the test:\n"
"\n"
"\t1  Paired test\n"
"\t2  Two-sample equal variance\n"
"\t3  Two-sample unequal variance\n"
"\n"
"* If the data sets contain a different number of data points and the test is "
"paired (@type one), TTEST returns the #N/A error.\n"
"* @tails and @type are truncated to integers.\n"
"* If @tails is not one or two, TTEST returns #NUM! error.\n"
"* If @type is any other than one, two, or three, TTEST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"TTEST(A1:A5,B1:B5,1,1) equals 0.003127619.\n"
"TTEST(A1:A5,B1:B5,2,1) equals 0.006255239.\n"
"TTEST(A1:A5,B1:B5,1,2) equals 0.111804322.\n"
"TTEST(A1:A5,B1:B5,1,3) equals 0.113821797.\n"
"\n"
"@SEEALSO=FDIST,FINV"
msgstr ""
"@FUNCTION=TTEST\n"
"@SYNTAX=TTEST(dizi1,dizi2,son,tür)\n"
"@DESCRIPTION=TTEST işlevi öğrencilerin t-testinin olasılığını hesaplar. "
"@dizi1 ilk veri kümesi, @dizi2 ise ikinci veri kümesidir. @son 1 ise işlev "
"bir-sonlu, 2 ise işlev iki-sonlu açılım kullanır.@tür test çeşidini "
"belirler:\n"
"1  Eşli test\n"
"2  İki örnekli eşit değişim\n"
"3  İki örnekli farklı değişim\n"
"\n"
"Veri kümeleri farklı sayıda veri noktaları içeriyor ve test eşli (1. tür) "
"ise işlev #DEĞER! hatası ile sonuçlanır. @son ve @tür tamsayıya yuvarlanır. "
"@son 1 ya da 2 değilse ya da @tür 1, 2, veya 3 değilse işlev #DEĞER! hatası "
"ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içerdiği varsayımıyla:\n"
"TTEST(A1:A5,B1:B5,1,1) eşittir 0.003127619\n"
"TTEST(A1:A5,B1:B5,2,1) eşittir 0.006255239\n"
"TTEST(A1:A5,B1:B5,1,2) eşittir 0.111804322\n"
"TTEST(A1:A5,B1:B5,1,3) eşittir 0.113821797\n"
"\n"
"Bnzerleri: FDIST, FINV\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içerdiği varsayımıyla:\n"
"TTEST(A1:A5,B1:B5,1,1) eşittir 0.003127619\n"
"TTEST(A1:A5,B1:B5,2,1) eşittir 0.006255239\n"
"TTEST(A1:A5,B1:B5,1,2) eşittir 0.111804322\n"
"TTEST(A1:A5,B1:B5,1,3) eşittir 0.113821797\n"
"\n"
"@SEEALSO=FDIST,FINV"

#: ../plugins/fn-stat/functions.c:3826
msgid ""
"@FUNCTION=FREQUENCY\n"
"@SYNTAX=FREQUENCY(data_array,bins_array)\n"
"@DESCRIPTION=FREQUENCY function counts how often given values occur within a "
"range of values.  The results are given as an array.\n"
"\n"
"@data_array is a data array for which you want to count the frequencies.  "
"@bin_array is an array containing the intervals into which you want to group "
"the values in data_array.  If the @bin_array is empty, FREQUENCY returns the "
"number of data points in @data_array.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=FREQUENCY\n"
"@SYNTAX=FREQUENCY(veri_dizisi,süre_dizisi)\n"
"@DESCRIPTION=FREQUENCY bir değer aralığı içinde verilen değerlerin hangi "
"sıklıkta görüldüğünü sayar. Sonuçlar bir dizi olarak alınır. @veri_dizisi "
"sayılması istenen sıklık için veri dizisidir. @süre_dizisi ise @veri_dizisi "
"içindeki gruplanmak istenen değerlerin zaman aralıklarını içeren dizidir. "
"@süre_dizisi boşsa, işlev @veri_dizisi içindeki veri noktalarının sayısını "
"verir.\n"
"Bu işlev Excel uyumludur.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-stat/functions.c:3906
#, fuzzy
msgid ""
"@FUNCTION=LINEST\n"
"@SYNTAX=LINEST(known_y's[,known_x's[,const[,stat]]])\n"
"@DESCRIPTION=LINEST function calculates the ``least squares'' line that best "
"fit to your data in @known_y's.  @known_x's contains the corresponding x's "
"where y=mx+b.\n"
"\n"
"LINEST returns an array having two columns and one row.  The slope (m) of "
"the regression line y=mx+b is given in the first column and the y-intercept "
"(b) in the second.\n"
"\n"
"If @stat is TRUE, extra statistical information will be returned. Extra "
"statistical information is written below the regression line coefficients in "
"the result array.  Extra statistical information consists of four rows of "
"data.  In the first row the standard error values for the coefficients m1, "
"(m2, ...), b are represented.  The second row contains the square of R and "
"the standard error for the y estimate.  The third row contains the F-"
"observed value and the degrees of freedom.  The last row contains the "
"regression sum of squares and the residual sum of squares.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used.\n"
"* If @known_y's and @known_x's have unequal number of data points, LINEST "
"returns #NUM! error.\n"
"* If @const is FALSE, the line will be forced to go through the origin, i."
"e., b will be zero. The default is TRUE.\n"
"* The default of @stat is FALSE.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"
msgstr ""
"@FUNCTION=LINEST\n"
"@SYNTAX=LINEST(yler[,xler[,sabit[,durum]]])\n"
"@DESCRIPTION=LINEST işlevi verilen @ylere uyan en küçük kareler doğrusunu "
"hesaplar. @xler y=mx+b denklemine uyan x değerleridir. \n"
" * @xler verilmezse {1, 2, 3, ...} dizisi kullanılır. @xler ve @ylerde "
"değereksikse işlev #DEĞER! hatası ile sonuçlanır.\n"
" * İşlev bir satır ve iki sütunluk bir dizi ile sonuçlanır. Birinci sütunda "
"y=mx+b sapmasındaki m eğimi, ikinci sütunda ise b değeri bulunur.\n"
" * @sabit YANLIŞ ise çizgi orijinden geçecek ve b sıfır olacaktır. Öntanımlı "
"değer DOĞRU'dur.\n"
" * @durum DOĞRU ise fazladan istatistiksel bilgiler alınabilir. Bu "
"istatistiksel bilgi dört satırdan oluşur. İlk satırda m1, (m2, ...), b "
"katsayıları için standart hata değerleri, ikinci satırda R nin karesi ve "
"yaklaşık y için standart hata, üçüncü satırda F-gözlem değeri ve serbestlik "
"derecesi, son satırda ise sapmaların ve artanların kareler toplamı bulunur.\n"
"\n"
"Benzerleri: LOGEST,TREND\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"

#: ../plugins/fn-stat/functions.c:4169
msgid ""
"@FUNCTION=LOGREG\n"
"@SYNTAX=LOGREG(known_y's[,known_x's[,const[,stat]]])\n"
"@DESCRIPTION=LOGREG function transforms your x's to z=ln(x) and applies the "
"``least squares'' method to fit the linear equation\n"
"y = m * z + b \n"
"to your y's and z's --- equivalent to fitting the equation\n"
"y = m * ln(x) + b \n"
"to y's and x's. \n"
"\n"
"If @known_x's is omitted, an array {1, 2, 3, ...} is used. LOGREG returns an "
"array having two columns and one row. m is given in the first column and b "
"in the second. \n"
"\n"
"If @known_y's and @known_x's have unequal number of data points, LOGREG "
"returns #NUM! error.\n"
"\n"
"If @const is FALSE, the curve will be forced to go through [1; 0], i.e., b "
"will be zero. The default is TRUE.\n"
"\n"
"If @stat is TRUE, extra statistical information will be returned which "
"applies to the state AFTER transformation to z. Extra statistical "
"information is written below m and b in the result array.  Extra statistical "
"information consists of four rows of data.  In the first row the standard "
"error values for the coefficients m, b are represented.  The second row "
"contains the square of R and the standard error for the y estimate. The "
"third row contains the F-observed value and the degrees of freedom.  The "
"last row contains the regression sum of squares and the residual sum of "
"squares.The default of @stat is FALSE.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGFIT,LINEST,LOGEST"
msgstr ""
"@FUNCTION=LOGEST\n"
"@SYNTAX=LOGEST(yler[,xler,sabit,durum])\n"
"@DESCRIPTION=The LOGEST işlevi en küçük kareler yöntemi ile verilerinize "
"uyan y = b * m{1}^x{1} * m{2}^x{2}... biçimindeki üstel eğriyi hesaplar. "
"@x'ler verilmezse {1, 2, 3, ...} dizisi kullanılır. İşlev { m{n},m{n-1}, ...,"
"m{1},b } dizisi ile sonuçlanır. @xler ve @ylerde  değer eksikse işlev "
"#DEĞER! hatası ile sonuçlanır. @sabit YANLIŞ ise çizgi (0,1) den geçecek, b "
"bir olacaktır. Öntanımlı değeri DOĞRU'dur. @durum DOĞRU ise fazladan "
"istatistiksel bilgiler alınabilir. Bu istatistiksel bilgi dört satırdan "
"oluşur. İlk satırda m1, (m2, ...), b katsayıları için standart hata "
"değerleri, ikinci satırda R nin karesi ve yaklaşık y için standart hata, "
"üçüncü satırda F-gözlem değeri ve serbestlik derecesi, son satırda ise "
"sapmaların ve artanların kareler toplamı bulunur. @durum için öntanımlı "
"değer YANLIŞtır.\n"
"\n"
"Benzerleri: LINEST, GROWTH, TREND\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LINEST,GROWTH,TREND"

#: ../plugins/fn-stat/functions.c:4439
msgid ""
"@FUNCTION=LOGFIT\n"
"@SYNTAX=LOGFIT(known_y's,known_x's)\n"
"@DESCRIPTION=LOGFIT function applies the ``least squares'' method to fit the "
"logarithmic equation\n"
"y = a + b * ln(sign * (x - c)) ,   sign = +1 or -1 \n"
"to your data. The graph of the equation is a logarithmic curve moved "
"horizontally by c and possibly mirrored across the y-axis (if sign = -1).\n"
"\n"
"LOGFIT returns an array having five columns and one row. `Sign' is given in "
"the first column, `a', `b', and `c' are given in columns 2 to 4. Column 5 "
"holds the sum of squared residuals.\n"
"\n"
"An error is returned when there are less than 3 different x's or y's, or "
"when the shape of the point cloud is too different from a ``logarithmic'' "
"one.\n"
"\n"
"You can use the above formula \n"
"= a + b * ln(sign * (x - c)) \n"
"or rearrange it to \n"
"= (exp((y - a) / b)) / sign + c \n"
"to compute unknown y's or x's, respectively. \n"
"\n"
"Technically, this is non-linear fitting by trial-and-error. The accuracy of "
"`c' is: width of x-range -> rounded to the next smaller (10^integer), times "
"0.000001. There might be cases in which the returned fit is not the best "
"possible.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGREG,LINEST,LOGEST"
msgstr ""

#: ../plugins/fn-stat/functions.c:4542
msgid ""
"@FUNCTION=TREND\n"
"@SYNTAX=TREND(known_y's[,known_x's[,new_x's[,const]]])\n"
"@DESCRIPTION=TREND function estimates future values of a given data set "
"using the ``least squares'' line that best fit to your data. @known_y's is "
"the y-values where y=mx+b and @known_x's contains the corresponding x-"
"values.  @new_x's contains the x-values for which you want to estimate the y-"
"values. If @const is FALSE, the line will be forced to go through the "
"origin, i.e., b will be zero.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used.\n"
"* If @new_x's is omitted, it is assumed to be the same as @known_x's.\n"
"* If @const is omitted, it is assumed to be TRUE.\n"
"* If @known_y's and @known_x's have unequal number of data points, TREND "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"TREND(A1:A5,B1:B5) equals {12.1, 15.7, 21.6, 26.7, 39.7}.\n"
"\n"
"@SEEALSO=LINEST"
msgstr ""
"@FUNCTION=TREND\n"
"@SYNTAX=TREND(yler[,xler],yeni_xler])\n"
"@DESCRIPTION=TREND işlevi 'en küçük kareler yöntemi' ile verilerinize uyan "
"en yakın değerleri tahmin eder. @yler y=mx+b denklemindeki y değerleri ve "
"@xler ise bu y değerlerine karşı düşen x değerleridir. @yeni_xler tahmin "
"edilecek y değerlerine karşı düşen x değerleridir. @xler verilmezse {1, 2, "
"3, ...} dizisi kullanılır. @yeni_xler verilmezse @xler ile aynı kabul "
"edilir. @xler ve @ylerde değer eksikse işlev #DEĞER! hatası ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içerdiği varsayımıyla:\n"
"TREND(A1:A5;B1:B5) eşittir {12.1, 15.7, 21.6, 26.7, 39.7}.\n"
"\n"
"Benzeri: LINEST\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içerdiği varsayımıyla:\n"
"TREND(A1:A5;B1:B5) eşittir {12.1, 15.7, 21.6, 26.7, 39.7}.\n"
"\n"
"@SEEALSO=LINEST"

#: ../plugins/fn-stat/functions.c:4660
#, fuzzy
msgid ""
"@FUNCTION=LOGEST\n"
"@SYNTAX=LOGEST(known_y's[,known_x's,const,stat])\n"
"@DESCRIPTION=LOGEST function applies the ``least squares'' method to fit an "
"exponential curve of the form\n"
"\n"
"\ty = b * m{1}^x{1} * m{2}^x{2}... to your data.\n"
"\n"
"If @stat is TRUE, extra statistical information will be returned. Extra "
"statistical information is written below the regression line coefficients in "
"the result array.  Extra statistical information consists of four rows of "
"data.  In the first row the standard error values for the coefficients m1, "
"(m2, ...), b are represented.  The second row contains the square of R and "
"the standard error for the y estimate.  The third row contains the F-"
"observed value and the degrees of freedom.  The last row contains the "
"regression sum of squares and the residual sum of squares.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used. LOGEST returns "
"an array { m{n},m{n-1}, ...,m{1},b }.\n"
"* If @known_y's and @known_x's have unequal number of data points, LOGEST "
"returns #NUM! error.\n"
"* If @const is FALSE, the line will be forced to go through (0,1),i.e., b "
"will be one.  The default is TRUE.\n"
"* The default of @stat is FALSE.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=GROWTH,TREND"
msgstr ""
"@FUNCTION=LINEST\n"
"@SYNTAX=LINEST(yler[,xler[,sabit[,durum]]])\n"
"@DESCRIPTION=LINEST işlevi verilen @ylere uyan en küçük kareler doğrusunu "
"hesaplar. @xler y=mx+b denklemine uyan x değerleridir. \n"
" * @xler verilmezse {1, 2, 3, ...} dizisi kullanılır. @xler ve @ylerde "
"değereksikse işlev #DEĞER! hatası ile sonuçlanır.\n"
" * İşlev bir satır ve iki sütunluk bir dizi ile sonuçlanır. Birinci sütunda "
"y=mx+b sapmasındaki m eğimi, ikinci sütunda ise b değeri bulunur.\n"
" * @sabit YANLIŞ ise çizgi orijinden geçecek ve b sıfır olacaktır. Öntanımlı "
"değer DOĞRU'dur.\n"
" * @durum DOĞRU ise fazladan istatistiksel bilgiler alınabilir. Bu "
"istatistiksel bilgi dört satırdan oluşur. İlk satırda m1, (m2, ...), b "
"katsayıları için standart hata değerleri, ikinci satırda R nin karesi ve "
"yaklaşık y için standart hata, üçüncü satırda F-gözlem değeri ve serbestlik "
"derecesi, son satırda ise sapmaların ve artanların kareler toplamı bulunur.\n"
"\n"
"Benzerleri: LOGEST,TREND\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"

#: ../plugins/fn-stat/functions.c:4905
msgid ""
"@FUNCTION=GROWTH\n"
"@SYNTAX=GROWTH(known_y's[,known_x's,new_x's,const])\n"
"@DESCRIPTION=GROWTH function applies the ``least squares'' method to fit an "
"exponential curve to your data and predicts the exponential growth by using "
"this curve. \n"
"GROWTH returns an array having one column and a row for each data point in "
"@new_x.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used.\n"
"* If @new_x's is omitted, it is assumed to be the same as @known_x's.\n"
"* If @known_y's and @known_x's have unequal number of data points, GROWTH "
"returns #NUM! error.\n"
"* If @const is FALSE, the line will be forced to go through the origin, i."
"e., b will be zero. The default is TRUE.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,GROWTH,TREND"
msgstr ""
"@FUNCTION=GROWTH\n"
"@SYNTAX=GROWTH(yler[,xler,yeni_xler,sabit])\n"
"@DESCRIPTION=GROWTH işlevi en küçük kareler yöntemi ile verilerinize uyan "
"üstel eğriyi hesaplar ve bu eğriyi kullanarak üstel gelişimi tahmin eder. "
"@xler verilmezse {1, 2, 3, ...} dizisi kullanılır. @yeni_xler verilmezse "
"@xler ile aynı kabul edilir. GROWTH @yeni_xlerdeki her nokta için bir sütun "
"ve bir satır ile sonuçlanır. @xler ve @ylerde  değer eksikse işlev #DEĞER! "
"hatası ile sonuçlanır. @sabit YANLIŞ ise çizgi orijinden geçecek ve b sıfır "
"olacaktır. Öntanımlı değer DOĞRU'dur.\n"
"\n"
"Benzerleri: LOGEST, GROWTH, TREND\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"

#: ../plugins/fn-stat/functions.c:5020
msgid ""
"@FUNCTION=FORECAST\n"
"@SYNTAX=FORECAST(x,known_y's,known_x's)\n"
"@DESCRIPTION=FORECAST function estimates a future value according to "
"existing values using simple linear regression.  The estimated future value "
"is a y-value for a given x-value (@x).\n"
"\n"
"* If @known_x or @known_y contains no data entries or different number of "
"data entries, FORECAST returns #N/A error.\n"
"* If the variance of the @known_x is zero, FORECAST returns #DIV/0 error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"FORECAST(7,A1:A5,B1:B5) equals -10.859397661.\n"
"\n"
"@SEEALSO=INTERCEPT,TREND"
msgstr ""
"@FUNCTION=FORECAST\n"
"@SYNTAX=FORECAST(x,yler,xler)\n"
"@DESCRIPTION=FORECAST işlevi @xler ve @ylerin basit doğrusal değişiminden "
"yararlanarak @x için yaklaşık y değerini hesaplar.\n"
" @xler ve @yler veri içermiyorsa, değer eksikse işlev #YOK! hatası ile,\n"
" @xlerin değişimi sıfırsa #BÖL/0! hatası ile sonuçlanır.\n"
"İşlev Excel uyumludur. \n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"FORECAST(7;A1:A5;B1:B5) eşittir -10.859397661\n"
"\n"
"Benzerleri: INTERCEPT, TREND\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri de 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"FORECAST(7;A1:A5;B1:B5) eşittir -10.859397661\n"
"\n"
"@SEEALSO=INTERCEPT,TREND"

#: ../plugins/fn-stat/functions.c:5094
msgid ""
"@FUNCTION=INTERCEPT\n"
"@SYNTAX=INTERCEPT(known_y's,known_x's)\n"
"@DESCRIPTION=INTERCEPT function calculates the point where the linear "
"regression line intersects the y-axis.\n"
"\n"
"* If @known_x or @known_y contains no data entries or different number of "
"data entries, INTERCEPT returns #N/A error.\n"
"* If the variance of the @known_x is zero, INTERCEPT returns #DIV/0 error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"INTERCEPT(A1:A5,B1:B5) equals -20.785117212.\n"
"\n"
"@SEEALSO=FORECAST,TREND"
msgstr ""
"@FUNCTION=INTERCEPT\n"
"@SYNTAX=INTERCEPT(yler,xler)\n"
"@DESCRIPTION=INTERCEPT işlevi bir eğiğin y eksenini kestiği noktayı "
"hesaplar.\n"
" @xler ve @yler veri içermiyorsa, değer eksikse işlev #DEĞER! hatasıyla,\n"
" @xlerin değişimi sıfırsa işlev #BÖL/0! hatası ile sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"INTERCEPT(A1:A5;B1:B5) eşittir -20.785117212\n"
"\n"
"Benzerleri: FORECAST, TREND\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1, ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"INTERCEPT(A1:A5;B1:B5) eşittir -20.785117212\n"
"\n"
"@SEEALSO=FORECAST,TREND"

#: ../plugins/fn-stat/functions.c:5148
msgid ""
"@FUNCTION=SLOPE\n"
"@SYNTAX=SLOPE(known_y's,known_x's)\n"
"@DESCRIPTION=SLOPE returns the slope of the linear regression line.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"SLOPE(A1:A5,B1:B5) equals 1.417959936.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"
msgstr ""
"@FUNCTION=SLOPE\n"
"@SYNTAX=SLOPE(xler,yler)\n"
"@DESCRIPTION=SLOPE lineer sapmanın eğimini hesaplar.\n"
"Bu işlev Excel uyumludur. \n"
"\n"
"Örnek:\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1 ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içeriyorsa:\n"
"SLOPE(A1:A5;B1:B5) eşittir 1.417959936\n"
"\n"
"Benzerleri: STDEV, STDEVPA\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri sırayla 11.4, 17.3, 21.3, 25.9, 40.1 ve B1, "
"B2, ..., B5 gözeleri sırayla 23.2, 25.8, 29.9, 33.5, 42.7 değerlerini "
"içerdiği varsayımıyla:\n"
"SLOPE(A1:A5;B1:B5) eşittir 1.417959936.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"

#: ../plugins/fn-stat/functions.c:5196
msgid ""
"@FUNCTION=SUBTOTAL\n"
"@SYNTAX=SUBTOTAL(function_nbr,ref1,ref2,...)\n"
"@DESCRIPTION=SUBTOTAL function returns a subtotal of given list of "
"arguments. @function_nbr is the number that specifies which function to use "
"in calculating the subtotal.\n"
"\n"
"The following functions are available:\n"
"\n"
"\t1   AVERAGE\n"
"\t2   COUNT\n"
"\t3   COUNTA\n"
"\t4   MAX\n"
"\t5   MIN\n"
"\t6   PRODUCT\n"
"\t7   STDEV\n"
"\t8   STDEVP\n"
"\t9   SUM\n"
"\t10   VAR\n"
"\t11   VARP\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, "
"and 39.  Then\n"
"SUBTOTAL(1,A1:A5) equals 30.\n"
"SUBTOTAL(6,A1:A5) equals 22378356.\n"
"SUBTOTAL(7,A1:A5) equals 6.164414003.\n"
"SUBTOTAL(9,A1:A5) equals 150.\n"
"SUBTOTAL(11,A1:A5) equals 30.4.\n"
"\n"
"@SEEALSO=COUNT,SUM"
msgstr ""
"@FUNCTION=SUBTOTAL\n"
"@SYNTAX=SUBTOTAL(işlev_no,ref1,ref2,...)\n"
"@DESCRIPTION=SUBTOTAL işlevi verilen listedeki değerlerin alt toplamını "
"hesaplar. @işlev_no alt toplamı hesaplamakta kullanılan işlevin numarasıdır. "
"Aşağıda bu işlevler ve numaraları verilmiştir:\n"
"1   AVERAGE\n"
"2   COUNT\n"
"3   COUNTA\n"
"4   MAX\n"
"5   MIN\n"
"6   PRODUCT\n"
"7   STDEV\n"
"8   STDEVP\n"
"9   SUM\n"
"10   VAR\n"
"11   VARP\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"A1, A2, ..., A5 gözeleri 23, 27, 28, 33, 39 içeriyorsa:\n"
"SUBTOTAL(1,A1:A5) eşittir 30\n"
"SUBTOTAL(6,A1:A5) eşittir 22378356\n"
"SUBTOTAL(7,A1:A5) eşittir 6.164414003\n"
"SUBTOTAL(9,A1:A5) eşittir 150\n"
"SUBTOTAL(11,A1:A5) eşittir 30.4\n"
"\n"
"Benzerleri: COUNT, SUM\n"
"@EXAMPLES=\n"
"A1, A2, ..., A5 gözeleri 23, 27, 28, 33, 39 içeriyorsa:\n"
"SUBTOTAL(1,A1:A5) eşittir 30\n"
"SUBTOTAL(6,A1:A5) eşittir 22378356\n"
"SUBTOTAL(7,A1:A5) eşittir 6.164414003\n"
"SUBTOTAL(9,A1:A5) eşittir 150\n"
"SUBTOTAL(11,A1:A5) eşittir 30.4\n"
"\n"
"@SEEALSO=COUNT,SUM"

#: ../plugins/fn-stat/functions.c:5302
msgid ""
"@FUNCTION=CRONBACH\n"
"@SYNTAX=CRONBACH(ref1,ref2,...)\n"
"@DESCRIPTION=CRONBACH returns Cronbach's alpha for the given cases.\n"
"@ref1 is a data set, @ref2 the second data set, etc..\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""

#: ../plugins/fn-stat/functions.c:5424
msgid ""
"@FUNCTION=GEOMDIST\n"
"@SYNTAX=GEOMDIST(k,p,cum)\n"
"@DESCRIPTION=GEOMDIST returns the probability p(k) of obtaining @k from a "
"geometric distribution with probability parameter @p.\n"
"\n"
"* If @k < 0 GEOMDIST returns #NUM! error.\n"
"* If @p < 0 or @p > 1 GEOMDIST returns #NUM! error.\n"
"* If @cum != TRUE and @cum != FALSE GEOMDIST returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"GEOMDIST(2,10.4,TRUE).\n"
"\n"
"@SEEALSO=RANDGEOM"
msgstr ""
"@FUNCTION=GAMMADIST\n"
"@SYNTAX=GAMMADIST(x,alfa,beta,küm)\n"
"@DESCRIPTION=GAMMADIST gamma açılımını hesaplar. @küm DOĞRU ise işlev eksik "
"gamma işlevini, aksi takdirde olasılık yığını işlevini hesaplar. @x < 0,  "
"@alfa <= 0 ya da @beta <= 0 ise işlev #SAYI! hatası ile sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"GAMMADIST(1,2,3,0) eşittir 0.07961459\n"
"\n"
"Benzeri: GAMMAINV\n"
"@EXAMPLES=\n"
"GAMMADIST(1,2,3,0) eşittir 0.07961459\n"
"\n"
"@SEEALSO=GAMMAINV"

#: ../plugins/fn-stat/functions.c:5463
msgid ""
"@FUNCTION=LOGISTIC\n"
"@SYNTAX=LOGISTIC(x,a)\n"
"@DESCRIPTION=LOGISTIC returns the probability density p(x) at @x for a "
"logistic distribution with scale parameter @a.\n"
"\n"
"@EXAMPLES=\n"
"LOGISTIC(0.4,1).\n"
"\n"
"@SEEALSO=RANDLOGISTIC"
msgstr ""
"@FUNCTION=ISLOGICAL\n"
"@SYNTAX=ISLOGICAL(değer)\n"
"@DESCRIPTION=ISLOGICAL işlevi bir mantıksal değer verilmişse DOĞRU ile "
"sonuçlanır.\n"
"İşlev Excel uyumludur.\n"
"@EXAMPLES=\n"
"ISLOGICAL(A1).\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-stat/functions.c:5502
msgid ""
"@FUNCTION=PARETO\n"
"@SYNTAX=PARETO(x,a,b)\n"
"@DESCRIPTION=PARETO returns the probability density p(x) at @x for a Pareto "
"distribution with exponent @a and scale @b.\n"
"\n"
"@EXAMPLES=\n"
"PARETO(0.6,1,2).\n"
"\n"
"@SEEALSO=RANDPARETO"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:5543
msgid ""
"@FUNCTION=RAYLEIGH\n"
"@SYNTAX=RAYLEIGH(x,sigma)\n"
"@DESCRIPTION=RAYLEIGH returns the probability density p(x) at @x for a "
"Rayleigh distribution with scale parameter @sigma.\n"
"\n"
"@EXAMPLES=\n"
"RAYLEIGH(0.4,1).\n"
"\n"
"@SEEALSO=RANDRAYLEIGH"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:5586
msgid ""
"@FUNCTION=RAYLEIGHTAIL\n"
"@SYNTAX=RAYLEIGHTAIL(x,a,sigma)\n"
"@DESCRIPTION=RAYLEIGHTAIL returns the probability density p(x) at @x for a "
"Rayleigh tail distribution with scale parameter @sigma and lower limit @a.\n"
"\n"
"@EXAMPLES=\n"
"RAYLEIGHTAIL(0.6,0.3,1).\n"
"\n"
"@SEEALSO=RANDRAYLEIGHTAIL"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:5632
msgid ""
"@FUNCTION=EXPPOWDIST\n"
"@SYNTAX=EXPPOWDIST(x,a,b)\n"
"@DESCRIPTION=EXPPOWDIST returns the probability density p(x) at @x for "
"Exponential Power distribution with scale parameter @a and exponent @b.\n"
"This distribution has been recommended for lifetime analysis when a U-shaped "
"hazard function is desired. This corresponds to rapid failure once the "
"product starts to wear out after a period of steady or even improving "
"reliability.\n"
"@EXAMPLES=\n"
"EXPPOWDIST(0.4,1,2).\n"
"\n"
"@SEEALSO=RANDEXPPOW"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-stat/functions.c:5671
msgid ""
"@FUNCTION=LAPLACE\n"
"@SYNTAX=LAPLACE(x,a)\n"
"@DESCRIPTION=LAPLACE returns the probability density p(x) at @x for Laplace "
"distribution with mean @a. \n"
"@EXAMPLES=\n"
"LAPLACE(0.4,1).\n"
"\n"
"@SEEALSO=RANDLAPLACE"
msgstr ""
"@FUNCTION=RandExp\n"
"@SYNTAX=RandExp(b)\n"
"@DESCRIPTION=RandExp işlevi bir üstel açılımlı rasgele sayı ile sonuçlanır.\n"
"\n"
"Örnek:\n"
"RandExp(0.5)\n"
"\n"
"Benzerleri: RAND, RANDBETWEEN\n"
"@EXAMPLES=\n"
"RandExp(0.5)\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-string/functions.c:61
msgid ""
"@FUNCTION=CHAR\n"
"@SYNTAX=CHAR(x)\n"
"@DESCRIPTION=CHAR returns the ASCII character represented by the number @x.\n"
"\n"
"@EXAMPLES=\n"
"CHAR(65) equals A.\n"
"\n"
"@SEEALSO=CODE"
msgstr ""
"@FUNCTION=CHAR\n"
"@SYNTAX=CHAR(sayı)\n"
"@DESCRIPTION=CHAR @sayı'ya karşılık gelen ASCII karakter ile sonuçlanır.\n"
"Örnek:\n"
"CHAR(65) eşittir A\n"
"\n"
"Benzer işlev: CODE\n"
"@EXAMPLES=\n"
"CHAR(65) eşittir A.\n"
"\n"
"@SEEALSO=CODE"

#: ../plugins/fn-string/functions.c:107
msgid ""
"@FUNCTION=UNICHAR\n"
"@SYNTAX=UNICHAR(x)\n"
"@DESCRIPTION=UNICHAR returns the Unicode character represented by the number "
"@x.\n"
"\n"
"@EXAMPLES=\n"
"UNICHAR(65) equals A.\n"
"UNICHAR(960) equals a small Greek pi.\n"
"\n"
"@SEEALSO=CHAR,UNICODE,CODE"
msgstr ""
"@FUNCTION=CHAR\n"
"@SYNTAX=CHAR(sayı)\n"
"@DESCRIPTION=CHAR @sayı'ya karşılık gelen ASCII karakter ile sonuçlanır.\n"
"Örnek:\n"
"CHAR(65) eşittir A\n"
"\n"
"Benzer işlev: CODE\n"
"@EXAMPLES=\n"
"CHAR(65) eşittir A.\n"
"\n"
"@SEEALSO=CODE"

#: ../plugins/fn-string/functions.c:142
msgid ""
"@FUNCTION=CODE\n"
"@SYNTAX=CODE(char)\n"
"@DESCRIPTION=CODE returns the ASCII number for the character @char.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CODE(\"A\") equals 65.\n"
"\n"
"@SEEALSO=CHAR"
msgstr ""
"@FUNCTION=CODE\n"
"@SYNTAX=CODE(karakter)\n"
"@DESCRIPTION=CODE @karakter'in ASCII numarası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CODE(\"A\") eşittir 65\n"
"\n"
"Benzer işlev: CHAR\n"
"@EXAMPLES=\n"
"CODE(\"A\") eşittir 65.\n"
"\n"
"@SEEALSO=CHAR"

#: ../plugins/fn-string/functions.c:190
msgid ""
"@FUNCTION=UNICODE\n"
"@SYNTAX=UNICODE(char)\n"
"@DESCRIPTION=UNICODE returns the Unicode number for the character @char.\n"
"\n"
"\n"
"@EXAMPLES=\n"
"UNICODE(\"A\") equals 65.\n"
"\n"
"@SEEALSO=UNICHAR,CODE,CHAR"
msgstr ""
"@FUNCTION=CODE\n"
"@SYNTAX=CODE(karakter)\n"
"@DESCRIPTION=CODE @karakter'in ASCII numarası ile sonuçlanır.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CODE(\"A\") eşittir 65\n"
"\n"
"Benzer işlev: CHAR\n"
"@EXAMPLES=\n"
"CODE(\"A\") eşittir 65.\n"
"\n"
"@SEEALSO=CHAR"

#: ../plugins/fn-string/functions.c:219
msgid ""
"@FUNCTION=EXACT\n"
"@SYNTAX=EXACT(string1, string2)\n"
"@DESCRIPTION=EXACT returns true if @string1 is exactly equal to @string2 "
"(this routine is case sensitive).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EXACT(\"key\",\"key\") equals TRUE.\n"
"EXACT(\"key\",\"Key\") equals FALSE.\n"
"\n"
"@SEEALSO=LEN, SEARCH, DELTA"
msgstr ""
"@FUNCTION=EXACT\n"
"@SYNTAX=EXACT(dizge1,dizge2)\n"
"@DESCRIPTION=EXACT @dizge1 ile @dizge2 aynıysa DOĞRU değilse YANLIŞ ile "
"sonuçlanır. (Harf büyüklüğüne duyarlıdır)\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"EXACT(\"key\";\"key\") eşittir DOĞRU\n"
"EXACT(\"key\";\"Key\") eşittir YANLIŞ\n"
"\n"
"Benzer işlevler: LEN, SEARCH, DELTA\n"
"@EXAMPLES=\n"
"EXACT(\"key\";\"key\") eşittir DOĞRU.\n"
"EXACT(\"key\";\"Key\") eşittir YANLIŞ.\n"
"\n"
"@SEEALSO=LEN, SEARCH, DELTA"

#: ../plugins/fn-string/functions.c:247
msgid ""
"@FUNCTION=LEN\n"
"@SYNTAX=LEN(string)\n"
"@DESCRIPTION=LEN returns the length in characters of the string @string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LEN(\"Helsinki\") equals 8.\n"
"\n"
"@SEEALSO=CHAR, CODE, LENB"
msgstr ""
"@FUNCTION=LEN\n"
"@SYNTAX=LEN(dizge)\n"
"@DESCRIPTION=LEN @dizge'nin karakter sayısını verir.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"len(\"Helsinki\") eşittir 8\n"
"\n"
"Benzer işlevler: CHAR, CODE\n"
"@EXAMPLES=\n"
"len(\"Helsinki\") eşittir 8.\n"
"\n"
"@SEEALSO=CHAR, CODE, LENB"

#: ../plugins/fn-string/functions.c:271
msgid ""
"@FUNCTION=LENB\n"
"@SYNTAX=LENB(string)\n"
"@DESCRIPTION=LENB returns the length in bytes of the string @string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LENB(\"Helsinki\") equals 8.\n"
"\n"
"@SEEALSO=CHAR, CODE, LEN"
msgstr ""

#: ../plugins/fn-string/functions.c:296
msgid ""
"@FUNCTION=LEFT\n"
"@SYNTAX=LEFT(text[,num_chars])\n"
"@DESCRIPTION=LEFT returns the leftmost @num_chars characters or the left "
"character if @num_chars is not specified.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LEFT(\"Directory\",3) equals \"Dir\".\n"
"\n"
"@SEEALSO=MID, RIGHT"
msgstr ""
"@FUNCTION=LEFT\n"
"@SYNTAX=LEFT(metin[,sayı])\n"
"@DESCRIPTION=LEFT @metin'in soldan @sayı karakterinden oluşan dizge ile "
"sonuçlanır. @sayı belirtilmezse 1 kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"Örnek:\n"
"LEFT(\"Dizin\",3) eşittir \"Diz\"\n"
"\n"
"Benzer işlevler: MID, RIGHT\n"
"@EXAMPLES=\n"
"LEFT(\"Dizin\",3) eşittir \"Diz\".\n"
"\n"
"@SEEALSO=MID, RIGHT"

#: ../plugins/fn-string/functions.c:333
msgid ""
"@FUNCTION=LOWER\n"
"@SYNTAX=LOWER(text)\n"
"@DESCRIPTION=LOWER returns a lower-case version of the string in @text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOWER(\"J. F. Kennedy\") equals \"j. f. kennedy\".\n"
"\n"
"@SEEALSO=UPPER"
msgstr ""
"@FUNCTION=LOWER\n"
"@SYNTAX=LOWER(metin)\n"
"@DESCRIPTION=LOWER @metin içindeki harfleri küçük harfe çevirir.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"LOWER(\"J. F. Kennedy\") eşittir \"j. f. kennedy\"\n"
"\n"
"Benzeri: UPPER\n"
"@EXAMPLES=\n"
"LOWER(\"J. F. Kennedy\") eşittir \"j. f. kennedy\".\n"
"\n"
"@SEEALSO=UPPER"

#: ../plugins/fn-string/functions.c:358
msgid ""
"@FUNCTION=MID\n"
"@SYNTAX=MID(string, position, length)\n"
"@DESCRIPTION=MID returns a substring from @string starting at @position for "
"@length characters.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MID(\"testing\",2,3) equals \"est\".\n"
"\n"
"@SEEALSO=LEFT, RIGHT"
msgstr ""
"@FUNCTION=MID\n"
"@SYNTAX=MID(dizge,başlangıç,uzunluk)\n"
"@DESCRIPTION=MID @dizge içindeki @başlangıç karakterinden itibaren @uzunluk "
"karakterden oluşan dizge ile sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"MID(\"testing\",2,3) eşittir \"est\"\n"
"\n"
"Benzerleri: LEFT, RIGHT\n"
"@EXAMPLES=\n"
"MID(\"testing\",2,3) eşittir \"est\".\n"
"\n"
"@SEEALSO=LEFT, RIGHT"

#: ../plugins/fn-string/functions.c:403
msgid ""
"@FUNCTION=RIGHT\n"
"@SYNTAX=RIGHT(text[,num_chars])\n"
"@DESCRIPTION=RIGHT returns the rightmost @num_chars characters or the right "
"character if @num_chars is not specified.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RIGHT(\"end\") equals \"d\".\n"
"RIGHT(\"end\",2) equals \"nd\".\n"
"\n"
"@SEEALSO=MID, LEFT"
msgstr ""
"@FUNCTION=RIGHT\n"
"@SYNTAX=RIGHT(metin[,sayı])\n"
"@DESCRIPTION=RIGHT @metin'in en sağdaki @sayı karakterinden oluşan dizge ile "
"sonuçlanır. @sayı verilmezse 1 kabul edilir.\n"
"Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"RIGHT(\"end\") eşittir \"d\"\n"
"RIGHT(\"end\";2) eşittir \"nd\"\n"
"\n"
"Benzerleri: MID, LEFT\n"
"@EXAMPLES=\n"
"RIGHT(\"end\") eşittir \"d\".\n"
"RIGHT(\"end\";2) eşittir \"nd\".\n"
"\n"
"@SEEALSO=MID, LEFT"

#: ../plugins/fn-string/functions.c:445
msgid ""
"@FUNCTION=UPPER\n"
"@SYNTAX=UPPER(text)\n"
"@DESCRIPTION=UPPER returns a upper-case version of the string in @text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"UPPER(\"cancelled\") equals \"CANCELLED\".\n"
"\n"
"@SEEALSO=LOWER"
msgstr ""
"@FUNCTION=UPPER\n"
"@SYNTAX=UPPER(metin)\n"
"@DESCRIPTION=UPPER @metin'in harflerini büyük harfe çevirir.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"UPPER(\"canceled\") eşittir \"CANCELED\"\n"
"\n"
"Benzeri: LOWER\n"
"@EXAMPLES=\n"
"UPPER(\"canceled\") eşittir \"CANCELED\"\n"
"\n"
"@SEEALSO=LOWER"

#: ../plugins/fn-string/functions.c:470
msgid ""
"@FUNCTION=CONCATENATE\n"
"@SYNTAX=CONCATENATE(string1[,string2...])\n"
"@DESCRIPTION=CONCATENATE returns the string obtained by concatenation of the "
"given strings.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CONCATENATE(\"aa\",\"bb\") equals \"aabb\".\n"
"\n"
"@SEEALSO=LEFT, MID, RIGHT"
msgstr ""
"@FUNCTION=CONCATENATE\n"
"@SYNTAX=CONCATENATE(dizge1[,dizge2...])\n"
"@DESCRIPTION=CONCATENATE verilen dizgeleri ardarda ekler.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CONCATENATE(\"aa\";\"bb\") eşittir \"aabb\"\n"
"\n"
"Benzer işlevler: LEFT, MID, RIGHT\n"
"@EXAMPLES=\n"
"CONCATENATE(\"aa\";\"bb\") eşittir \"aabb\".\n"
"\n"
"@SEEALSO=LEFT, MID, RIGHT"

#: ../plugins/fn-string/functions.c:498
msgid ""
"@FUNCTION=REPT\n"
"@SYNTAX=REPT(string,num)\n"
"@DESCRIPTION=REPT returns @num repetitions of @string.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"REPT(\".\",3) equals \"...\".\n"
"\n"
"@SEEALSO=CONCATENATE"
msgstr ""
"@FUNCTION=REPT\n"
"@SYNTAX=REPT(dizge,sayı)\n"
"@DESCRIPTION=REPT @sayı kere @dizge ile sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"REPT(\".\",3) eşittir \"...\"\n"
"\n"
"Benzeri: CONCATENATE\n"
"@EXAMPLES=\n"
"REPT(\".\",3) eşittir \"...\"\n"
"\n"
"@SEEALSO=CONCATENATE"

#: ../plugins/fn-string/functions.c:548
msgid ""
"@FUNCTION=CLEAN\n"
"@SYNTAX=CLEAN(string)\n"
"@DESCRIPTION=CLEAN removes any non-printable characters from @string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CLEAN(\"one\"\\&char(7)) equals \"one\".\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CLEAN\n"
"@SYNTAX=CLEAN(dizge)\n"
"@DESCRIPTION=CLEAN @dizge içindeki yazdırılamayan karakterleri temizler.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"CLEAN(\"bir\"\\&char(7)) eşittir \"bir\"\n"
"@EXAMPLES=\n"
"CLEAN(\"bir\"\\&char(7)) eşittir \"bir\".\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-string/functions.c:584
msgid ""
"@FUNCTION=FIND\n"
"@SYNTAX=FIND(string1,string2[,start])\n"
"@DESCRIPTION=FIND returns position of @string1 in @string2 (case-sensitive), "
"searching only from character @start onwards (assuming 1 if omitted).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FIND(\"ac\",\"Jack\") equals 2.\n"
"\n"
"@SEEALSO=EXACT, LEN, MID, SEARCH"
msgstr ""
"@FUNCTION=FIND\n"
"@SYNTAX=FIND(dizge1,dizge2[,başlangıç])\n"
"@DESCRIPTION=FIND @dizge1 içinde @dizge2'nin bulunduğu yeri verir. Arama "
"harf büyüklüğüne duyarlıdır. @başlangıç verilmezse 1 kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FIND(\"or\",\"çorba\") eşittir 2\n"
"\n"
"Benzer işlevler: EXACT, LEN, MID, SEARCH\n"
"@EXAMPLES=\n"
"FIND(\"or\",\"çorba\") eşittir 2.\n"
"\n"
"@SEEALSO=EXACT, LEN, MID, SEARCH"

#: ../plugins/fn-string/functions.c:628
msgid ""
"@FUNCTION=FIXED\n"
"@SYNTAX=FIXED(num,[decimals, no_commas])\n"
"@DESCRIPTION=FIXED returns @num as a formatted string with @decimals numbers "
"after the decimal point, omitting commas if requested by @no_commas.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FIXED(1234.567,2) equals \"1,234.57\".\n"
"\n"
"@SEEALSO=TEXT, VALUE, DOLLAR"
msgstr ""
"@FUNCTION=FIXED\n"
"@SYNTAX=FIXED(sayı,[basamak,no_commas])\n"
"@DESCRIPTION=FIXED @sayı'nın ondalık basamaklarını @basamak ile sınırlayarak "
"@sayı'yı bir dizge değeri olarak verir. @no_commas belirtilirse binler "
"ayracı konmaz.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"FIXED(1234.567,2) eşittir \"1,234.57\"\n"
"@EXAMPLES=\n"
"FIXED(1234.567,2) eşittir \"1,234.57\".\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-string/functions.c:694
msgid ""
"@FUNCTION=PROPER\n"
"@SYNTAX=PROPER(string)\n"
"@DESCRIPTION=PROPER returns @string with initial of each word capitalised.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"PROPER(\"j. f. kennedy\") equals \"J. F. Kennedy\".\n"
"\n"
"@SEEALSO=LOWER, UPPER"
msgstr ""
"@FUNCTION=PROPER\n"
"@SYNTAX=PROPER(dizge)\n"
"@DESCRIPTION=PROPER @dizge içindeki sözcüklerin baş harflerini büyütür.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"PROPER(\"f. s. mehmet\") eşittir \"F. S. Mehmet\"\n"
"\n"
"Benzerleri: LOWER, UPPER\n"
"@EXAMPLES=\n"
"PROPER(\"f. s. mehmet\") eşittir \"F. S. Mehmet\".\n"
"\n"
"@SEEALSO=LOWER, UPPER"

#: ../plugins/fn-string/functions.c:749
msgid ""
"@FUNCTION=REPLACE\n"
"@SYNTAX=REPLACE(old,start,num,new)\n"
"@DESCRIPTION=REPLACE returns @old with @new replacing @num characters from "
"@start.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"REPLACE(\"testing\",2,3,\"*****\") equals \"t*****ing\".\n"
"\n"
"@SEEALSO=MID, SEARCH, SUBSTITUTE, TRIM"
msgstr ""
"@FUNCTION=REPLACE\n"
"@SYNTAX=REPLACE(eski,başlangıç,uzunluk,yeni)\n"
"@DESCRIPTION=REPLACE @eski dizgesinin @başlangıç karakterinden itibaren "
"@uzunluk karakterini @yeni dizgesiyle değiştirir.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"REPLACE(\"testing\",2,3,\"*****\") eşittir \"t*****ing\"\n"
"\n"
"Benzerleri: MID, SEARCH, SUBSTITUTE, TRIM\n"
"@EXAMPLES=\n"
"REPLACE(\"testing\";2;3;\"*****\") eşittir \"t*****ing\".\n"
"\n"
"@SEEALSO=MID, SEARCH, SUBSTITUTE, TRIM"

#: ../plugins/fn-string/functions.c:805
msgid ""
"@FUNCTION=T\n"
"@SYNTAX=T(value)\n"
"@DESCRIPTION=T returns @value if and only if it is text, otherwise a blank "
"string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"T(\"text\") equals \"text\".\n"
"T(64) returns an empty cell.\n"
"\n"
"@SEEALSO=CELL, N, VALUE"
msgstr ""
"@FUNCTION=T\n"
"@SYNTAX=T(değer)\n"
"@DESCRIPTION=T @değer'in bir dizge olup olmadığını test eder. @değer bir "
"dizge ise @değer ile değilse boş dizge ile sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"T(\"text\") eşittir \"text\"\n"
"T(64) eşittir \"\"\n"
"\n"
"Benzerleri: CELL, N, VALUE\n"
"@EXAMPLES=\n"
"T(\"text\") eşittir \"text\"\n"
"T(64) eşittir \"\"\n"
"\n"
"@SEEALSO=CELL, N, VALUE"

#: ../plugins/fn-string/functions.c:836
msgid ""
"@FUNCTION=TEXT\n"
"@SYNTAX=TEXT(value,format_text)\n"
"@DESCRIPTION=TEXT returns @value as a string with the specified format.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TEXT(3.223,\"$0.00\") equals \"$3.22\".\n"
"TEXT(date(1999,4,15),\"mmmm, dd, yy\") equals \"April, 15, 99\".\n"
"\n"
"@SEEALSO=DOLLAR, FIXED, VALUE"
msgstr ""
"@FUNCTION=TEXT\n"
"@SYNTAX=TEXT(değer,biçem_dizgesi)\n"
"@DESCRIPTION=TEXT @biçem_dizgesi ile @değer'i biçemlendirerek bir dizge "
"olarak verir.\n"
"Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"TEXT(3.223,\"$0.00\") eşittir \"$3.22\"\n"
"TEXT(date(1999,4,15),\"dd, mmmm, yy\") eşittir \"15, Nisan, 99\"\n"
"\n"
"Benzeri: DOLLAR\n"
"@EXAMPLES=\n"
"TEXT(3.223,\"$0.00\") eşittir \"$3.22\"\n"
"TEXT(date(1999;4;15);\"dd, mmmm, yy\") eşittir \"15, Nisan, 99\"\n"
"\n"
"@SEEALSO=DOLLAR"

#: ../plugins/fn-string/functions.c:894
msgid ""
"@FUNCTION=TRIM\n"
"@SYNTAX=TRIM(text)\n"
"@DESCRIPTION=TRIM returns @text with only single spaces between words.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TRIM(\"  a bbb  cc\") equals \"a bbb cc\".\n"
"\n"
"@SEEALSO=CLEAN, MID, REPLACE, SUBSTITUTE"
msgstr ""
"@FUNCTION=TRIM\n"
"@SYNTAX=TRIM(metin)\n"
"@DESCRIPTION=TRIM @metin içindeki sözcükler arasındaki fazladan boşlukları "
"kaldırır.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"TRIM(\"  a bbb  cc\") eşittir \"a bbb cc\"\n"
"\n"
"Benzerleri: CLEAN, MID, REPLACE, SUBSTITUTE\n"
"@EXAMPLES=\n"
"TRIM(\"  a bbb  cc\") eşittir \"a bbb cc\".\n"
"\n"
"@SEEALSO=CLEAN, MID, REPLACE, SUBSTITUTE"

#: ../plugins/fn-string/functions.c:948
msgid ""
"@FUNCTION=VALUE\n"
"@SYNTAX=VALUE(text)\n"
"@DESCRIPTION=VALUE returns numeric value of @text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"VALUE(\"$1,000\") equals 1000.\n"
"\n"
"@SEEALSO=DOLLAR, FIXED, TEXT"
msgstr ""
"@FUNCTION=VALUE\n"
"@SYNTAX=VALUE(metin)\n"
"@DESCRIPTION=VALUE @metin içindeki sayıyı verir.\n"
"Excel uyumludur.\n"
"\n"
"Örnek:\n"
"VALUE(\"$1,000\") eşittir 1000.\n"
"\n"
"Benzerleri: DOLLAR, FIXED, TEXT\n"
"@EXAMPLES=\n"
"VALUE(\"$1,000\") eşittir 1000.\n"
"\n"
"@SEEALSO=DOLLAR, FIXED, TEXT"

#: ../plugins/fn-string/functions.c:988
msgid ""
"@FUNCTION=SUBSTITUTE\n"
"@SYNTAX=SUBSTITUTE(text, old, new [,num])\n"
"@DESCRIPTION=SUBSTITUTE replaces @old with @new in @text.  Substitutions are "
"only applied to instance @num of @old in @text, otherwise every one is "
"changed.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SUBSTITUTE(\"testing\",\"test\",\"wait\") equals \"waiting\".\n"
"\n"
"@SEEALSO=REPLACE, TRIM"
msgstr ""
"@FUNCTION=SUBSTITUTE\n"
"@SYNTAX=SUBSTITUTE(metin,eski,yeni[,kaçıncı])\n"
"@DESCRIPTION=SUBSTITUTE @metin içindeki @eski'nin yerine @yeni'yi "
"yerleştirir. @kaçıncı metin içindeki kaçıncı @eski'nin değiştirileceğini "
"belirtir, verilmezse değişiklik @metin içinde bulunan bütün @eski'lere "
"uygulanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"SUBSTITUTE(\"yaya\",\"ya\",\"zı\",2) eşittir \"yazı\"\n"
"SUBSTITUTE(\"deneme\",\"dene\",\"bekle\") eşittir \"bekleme\"\n"
"\n"
"Benzerleri: REPLACE, TRIM\n"
"@EXAMPLES=\n"
"SUBSTITUTE(\"yaya\",\"ya\",\"zı\",2) eşittir \"yazı\"\n"
"SUBSTITUTE(\"deneme\",\"dene\",\"bekle\") eşittir \"bekleme\"\n"
"\n"
"@SEEALSO=REPLACE, TRIM"

#: ../plugins/fn-string/functions.c:1066
msgid ""
"@FUNCTION=DOLLAR\n"
"@SYNTAX=DOLLAR(num[,decimals])\n"
"@DESCRIPTION=DOLLAR returns @num formatted as currency.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DOLLAR(12345) equals \"$12,345.00\".\n"
"\n"
"@SEEALSO=FIXED, TEXT, VALUE"
msgstr ""
"@FUNCTION=DOLLAR\n"
"@SYNTAX=DOLLAR(sayı[,basamak])\n"
"@DESCRIPTION=DOLLAR işlevi @sayı değerini para olarak biçimlendirir.Ondalık "
"@basamak sayısı verilmezse 2 kabul edilir.\n"
"Bu işlev Excel uyumludur.\n"
"\n"
"Örnek:\n"
"DOLLAR(12345) eşittir \"$12,345.00\"\n"
"\n"
"Benzer işlevler: FIXED, TEXT, VALUE\n"
"@EXAMPLES=\n"
"DOLLAR(12345) eşittir \"$12,345.00\".\n"
"\n"
"@SEEALSO=FIXED, TEXT, VALUE"

#: ../plugins/fn-string/functions.c:1144
msgid ""
"@FUNCTION=SEARCH\n"
"@SYNTAX=SEARCH(search_string,text[,start_num])\n"
"@DESCRIPTION=SEARCH returns the location of the @search_ string within "
"@text. The search starts  with the @start_num character of text @text.  If "
"@start_num is omitted, it is assumed to be one.  The search is not case "
"sensitive.\n"
"\n"
"@search_string can contain wildcard characters (*) and question marks (?). A "
"question mark matches any character and a wildcard matches any string "
"including the empty string.  If you want the actual wildcard or question "
"mark to be found, use tilde (~) before the character.\n"
"\n"
"* If @search_string is not found, SEARCH returns #VALUE! error.\n"
"* If @start_num is less than one or it is greater than the length of @text, "
"SEARCH returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SEARCH(\"c\",\"Cancel\") equals 1.\n"
"SEARCH(\"c\",\"Cancel\",2) equals 4.\n"
"\n"
"@SEEALSO=FIND"
msgstr ""
"@FUNCTION=SEARCH\n"
"@SYNTAX=SEARCH(dizge,metin[,başlangıç])\n"
"@DESCRIPTION=SEARCH bir metin içinde bir karakter ya da bir dizgenin yerini "
"bulmak için kullanılır. @dizge aranacak karakter ya da dizgedir. @metin ise "
"aramanın yapılacağı metindir. @başlangıç ise @metin içinde aramanın "
"başlangıç karakteridir. @başlangıç verilmezse 1 kabul edilir. Arama harf "
"büyüklüğüne duyarlıdır. @dizge (*) ve (?) işaretleri içerebilir. Soru "
"işareti herhangi bir karakter yerine kullanılabilir. Yıldız ise boş dizge de "
"dahil olmak üzere herhangi bir dizge olabilir. Bunlar ve diğer arama "
"karakterleri aranacaksa bunlardan önce (~) karakterini kullanın (~? soru "
"işaretini arar) @dizge bulunamazsa ya da @başlangıç birden küçük veya arama "
"yapılan metnin uzunluğundan büyükse SEARCH işlevi #DEĞER! ile sonuçlanır.\n"
"Excel uyumludur.\n"
"\n"
"Örnekler:\n"
"SEARCH(\"c\";\"Cancel\") eşittir 1\n"
"SEARCH(\"c\";\"Cancel\";2) eşittir 4\n"
"\n"
"Benzeri: FIND\n"
"@EXAMPLES=\n"
"SEARCH(\"c\";\"Cancel\") eşittir 1.\n"
"SEARCH(\"c\";\"Cancel\";2) eşittir 4.\n"
"\n"
"@SEEALSO=FIND"

#: ../plugins/fn-string/functions.c:1221
msgid ""
"@FUNCTION=ASC\n"
"@SYNTAX=ASC(string)\n"
"@DESCRIPTION=ASC a compatibility function that is meaningless in Gnumeric.  "
"In MS Excel (tm) it converts 2 byte @string into single byte text.\n"
"\n"
"@EXAMPLES=\n"
"CHAR(\"Foo\") equals \"Foo\".\n"
"\n"
"@SEEALSO="
msgstr ""

#: ../plugins/fn-tsa/functions.c:321
msgid ""
"@FUNCTION=interpolation\n"
"@SYNTAX=interpolation(abscissas,ordinates,targets[,interpolation])\n"
"@DESCRIPTION= \n"
"interpolation returns interpolated values corresponding\n"
"to the given abscissa targets as a one column matrix.\n"
"\n"
"@abscissas are the absicssas of the data to interpolate.\n"
"@ordinates are the ordinates of the data to interpolate.\n"
"* Strings and empty cells in @abscissas and @ordinates are simply ignored.\n"
"@targets are the abscissas of the interpolated data. If several data\n"
"are provided, they must be in the same column, in consecutive cells\n"
"@interpolation is the method to be used for the interpolation;\n"
"possible values are:\n"
"- 0: linear;\n"
"- 1: linear with averaging;\n"
"- 2: staircase;\n"
"- 3: staircase with averaging;\n"
"- 4: natural cubic spline;\n"
"- 5: natural cubic spline with averaging.\n"
"\n"
"If an averaging method is used, the number of returned values\n"
"is one less than the number of targets since the evaluation is made by\n"
"averaging the interpolation over the interval between two consecutive data;\n"
"in that case, the targets values must be given in increasing order."
msgstr ""

#: ../plugins/fn-tsa/functions.c:607
msgid ""
"@FUNCTION=periodogram\n"
"@SYNTAX=periodogram(ordinates,[filter,[abscissas,[interpolation,"
"[number]]]])\n"
"@DESCRIPTION= \n"
"periodogram returns the periodogram of the data\n"
"as a one column matrix.\n"
"\n"
"@ordinates are the ordinates of the data to interpolate.\n"
"@filter gives the window function to  be used. Possible values are:\n"
"- 0: no filter (rectangular window);\n"
"- 1: Bartlett (triangular window);\n"
"- 2: Hahn (cosine window);\n"
"- 3: Welch (parabolic window);\n"
"@abscissas are the absicssas of the data to interpolate. If no\n"
"abscissa is given, it is supposed that the data absicssas are regularly\n"
"spaced. Otherwise, an interpolation method will be used to evaluate\n"
"regularly spaced data.\n"
"* Strings and empty cells in @abscissas and @ordinates are simply ignored.\n"
"@interpolation is the method to be used for the interpolation;\n"
"possible values are:\n"
"- 0: linear;\n"
"- 1: linear with averaging;\n"
"- 2: staircase;\n"
"- 3: staircase with averaging;\n"
"- 4: natural cubic spline;\n"
"- 5: natural cubic spline with averaging.\n"
"@number is the number of interpolated data to be used. If not given,\n"
"a default number is automatically evaluated.\n"
msgstr ""

#: ../plugins/gda/plugin-gda.c:319
msgid ""
"@FUNCTION=EXECSQL\n"
"@SYNTAX=EXECSQL(dsn,username,password,sql)\n"
"@DESCRIPTION=The EXECSQL function lets you execute a command in a database "
"server, and show the results returned in current sheet. It uses libgda as "
"the means for accessing the databases.\n"
"For using it, you need first to set up a libgda data source.\n"
"@EXAMPLES=\n"
"To get all the data from the table \"Customers\" present in the "
"\"mydatasource\" GDA data source, you would use:\n"
"EXECSQL(\"mydatasource\",\"username\",\"password\",\"SELECT * FROM customers"
"\")\n"
"@SEEALSO=READDBTABLE"
msgstr ""
"@FUNCTION=EXECSQL\n"
"@SYNTAX=EXECSQL(i)\n"
"@DESCRIPTION=EXECSQL işlevi bir veritabanı sunucusunda bir komut "
"çalıştırmanızı sağlar ve sonuçları çizelgede gösterir.\n"
"Veritabanına erişim için libgda kullanılır.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO="

#: ../plugins/gda/plugin-gda.c:391
#, fuzzy
msgid ""
"@FUNCTION=READDBTABLE\n"
"@SYNTAX=READDBTABLE(dsn,username,password,table)\n"
"@DESCRIPTION=The READDBTABLE function lets you get the contents of a table, "
"as stored in a database. For using it, you need first to set up a libgda "
"data source.\n"
"Note that this function returns all the rows in the given table. If you want "
"to get data from more than one table or want a more precise selection "
"(conditions), use the EXECSQL function.\n"
"@EXAMPLES=\n"
"To get all the data from the table \"Customers\" present in the "
"\"mydatasource\" GDA data source, you would use:\n"
"READDBTABLE(\"mydatasource\",\"username\",\"password\",\"customers\")\n"
"@SEEALSO=EXECSQL"
msgstr ""
"@FUNCTION=EXECSQL\n"
"@SYNTAX=EXECSQL(i)\n"
"@DESCRIPTION=EXECSQL işlevi bir veritabanı sunucusunda bir komut "
"çalıştırmanızı sağlar ve sonuçları çizelgede gösterir.\n"
"Veritabanına erişim için libgda kullanılır.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO="

#: ../plugins/numtheory/numtheory.c:206
msgid ""
"@FUNCTION=NT_PHI\n"
"@SYNTAX=NT_PHI(n)\n"
"@DESCRIPTION=NT_PHI function calculates the number of integers less than or "
"equal to @n that are relatively prime to @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_SIGMA"
msgstr ""
"@FUNCTION=NT_PHI\n"
"@SYNTAX=NT_PHI(n)\n"
"@DESCRIPTION=NT_PHI işlevi @n'in asal çarpanlarından @n'e eşit ya da küçük "
"tamsayıların sayısını hesaplar. Bu işlev tek argüman alır.\n"
"\n"
"Benzeleri: NT_D, ITHPRIME, NT_SIGMA\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_SIGMA"

#. xgettext: you can translate the funny character as an 'o' if unicode is not available.
#: ../plugins/numtheory/numtheory.c:244
msgid ""
"@FUNCTION=NT_MU\n"
"@SYNTAX=NT_MU(n)\n"
"@DESCRIPTION=NT_MU function (Möbius mu function) returns \n"
"0  if @n is divisible by the square of a prime .\n"
"Otherwise it returns: \n"
"\n"
"  -1 if @n has an odd  number of different prime factors .\n"
"   1  if @n has an even number of different prime factors .\n"
"\n"
"* If @n = 1 NT_MU returns 1.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"
msgstr ""
"@FUNCTION=NT_MU\n"
"@SYNTAX=NT_MU(n)\n"
"@DESCRIPTION=NT_MU Mbius mü işlevini hesaplar.\n"
" @n bir asal sayının karesi ile bölünebiliyorsa 0,\n"
" @n tek sayıda farklı asal çarpanlara sahipse -1,\n"
" @n çift sayıda farklı asal çarpanlara sahipse ya da  @n=1 ise 1 dir.\n"
"\n"
"Benzerleri: NT_D, ITHPRIME, NT_PHI\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"

#: ../plugins/numtheory/numtheory.c:286
msgid ""
"@FUNCTION=NT_D\n"
"@SYNTAX=NT_D(n)\n"
"@DESCRIPTION=NT_D function calculates the number of divisors of @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_SIGMA"
msgstr ""
"@FUNCTION=NT_D\n"
"@SYNTAX=NT_D(n)\n"
"@DESCRIPTION=NT_D işlevi @n'in bölenlerinin sayısını hesaplar. Bu işlev tek "
"argüman alır.\n"
"\n"
"Benzerleri: ITHPRIME, NT_PHI, NT_SIGMA\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:322
msgid ""
"@FUNCTION=NT_SIGMA\n"
"@SYNTAX=NT_SIGMA(n)\n"
"@DESCRIPTION=NT_SIGMA function calculates the sum of the divisors of @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"
msgstr ""
"@FUNCTION=NT_SIGMA\n"
"@SYNTAX=NT_SIGMA(n)\n"
"@DESCRIPTION=NT_SIGMA işlevi @n'in bölenlerinin toplamını hesaplar.Bu işlev "
"tek argüman alır.\n"
"\n"
"Benzerleri: NT_D, ITHPRIME, NT_PHI\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"

#: ../plugins/numtheory/numtheory.c:359
msgid ""
"@FUNCTION=ITHPRIME\n"
"@SYNTAX=ITHPRIME(i)\n"
"@DESCRIPTION=ITHPRIME function returns the @ith prime.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, NT_SIGMA"
msgstr ""
"@FUNCTION=ITHPRIME\n"
"@SYNTAX=ITHPRIME(i)\n"
"@DESCRIPTION=ITHPRIME işlevinin sonucu @i'nci asal sayıyı verir. Bu işlev "
"tek argüman alır.\n"
"\n"
"Benzerleri: NT_D, NT_SIGMA\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:389
#, fuzzy
msgid ""
"@FUNCTION=ISPRIME\n"
"@SYNTAX=ISPRIME(i)\n"
"@DESCRIPTION=ISPRIME function returns TRUE if @i is prime and FALSE "
"otherwise.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_D, NT_SIGMA"
msgstr ""
"@FUNCTION=ISPRIME\n"
"@SYNTAX=ISPRIME(i)\n"
"@DESCRIPTION=ISPRIME işlevinin sonucu, @i bir asal sayı ise DOĞRU, değilse "
"YANLIŞtır. Bu işlev tek argüman alır.\n"
"\n"
"Benzerleri: ITHPRIME, NT_D, NT_SIGMA\n"
"@SEEALSO=ITHPRIME, NT_D, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:447
#, fuzzy
msgid ""
"@FUNCTION=PFACTOR\n"
"@SYNTAX=PFACTOR(n)\n"
"@DESCRIPTION=PFACTOR function returns the smallest prime factor of its "
"argument.\n"
"\n"
"The argument must be at least 2, or else a #VALUE! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME"
msgstr ""
"@FUNCTION=BITXOR\n"
"@SYNTAX=BITXOR(a,b)\n"
"@DESCRIPTION=BITXOR işlevi argümanlarının bit tabanında mantıksal "
"Bağdaşmayan VEYAsını verir.\n"
"\n"
"Benzer işlevler: BITOR,BITAND\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITAND"

#: ../plugins/numtheory/numtheory.c:483
#, fuzzy
msgid ""
"@FUNCTION=NT_PI\n"
"@SYNTAX=NT_PI(n)\n"
"@DESCRIPTION=NT_PI function returns the number of primes less than or equal "
"to @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_D, NT_SIGMA"
msgstr ""
"@FUNCTION=NT_PI\n"
"@SYNTAX=NT_PI(n)\n"
"@DESCRIPTION=NT_PI işlevinin sonucu, @n'e eşit ya da küçük asal sayıların "
"sayısını verir. Bu işlev tek argüman alır.\n"
"\n"
"Benzerleri: ITHPRIME, NT_PHI, NT_D, NT_SIGMA\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_D, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:518
msgid ""
"@FUNCTION=BITOR\n"
"@SYNTAX=BITOR(a,b)\n"
"@DESCRIPTION=BITOR function returns bitwise or-ing of its arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITXOR,BITAND"
msgstr ""
"@FUNCTION=BITOR\n"
"@SYNTAX=BITOR(a,b)\n"
"@DESCRIPTION=BITOR işlevi argümanlarının bit tabanında mantıksal VEYAsını "
"verir.\n"
"\n"
"Benzer işlevler: BITXOR,BITAND\n"
"@EXAMPLES=\n"
"@SEEALSO=BITXOR,BITAND"

#: ../plugins/numtheory/numtheory.c:545
msgid ""
"@FUNCTION=BITXOR\n"
"@SYNTAX=BITXOR(a,b)\n"
"@DESCRIPTION=BITXOR function returns bitwise exclusive or-ing of its "
"arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITAND"
msgstr ""
"@FUNCTION=BITXOR\n"
"@SYNTAX=BITXOR(a,b)\n"
"@DESCRIPTION=BITXOR işlevi argümanlarının bit tabanında mantıksal "
"Bağdaşmayan VEYAsını verir.\n"
"\n"
"Benzer işlevler: BITOR,BITAND\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITAND"

#: ../plugins/numtheory/numtheory.c:573
msgid ""
"@FUNCTION=BITAND\n"
"@SYNTAX=BITAND(a,b)\n"
"@DESCRIPTION=BITAND function returns bitwise and-ing of its arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITXOR"
msgstr ""
"@FUNCTION=BITAND\n"
"@SYNTAX=BITAND(a,b)\n"
"@DESCRIPTION=BITAND işlevi argümanlarının bit tabanında mantıksal VEsini "
"verir.\n"
"\n"
"Benzer işlevler: BITOR,BITXOR\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITXOR"

#: ../plugins/numtheory/numtheory.c:601
msgid ""
"@FUNCTION=BITLSHIFT\n"
"@SYNTAX=BITLSHIFT(x,n)\n"
"@DESCRIPTION=BITLSHIFT function returns @x bit-shifted left by @n bits.\n"
"\n"
"* If @n is negative, a right shift will in effect be performed.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITRSHIFT"
msgstr ""
"@FUNCTION=BITLSHIFT\n"
"@SYNTAX=BITLSHIFT(x,n)\n"
"@DESCRIPTION=BITLSHIFT işlevi @x'in @n bit sola kaydırılmış değerini verir. "
"@n negatifse @x'in @n bit sağa kaydırılmış değerini verir.\n"
"\n"
"Benzer işlev: BITRSHIFT\n"
"@EXAMPLES=\n"
"@SEEALSO=BITRSHIFT"

#: ../plugins/numtheory/numtheory.c:634
msgid ""
"@FUNCTION=BITRSHIFT\n"
"@SYNTAX=BITRSHIFT(x,n)\n"
"@DESCRIPTION=BITRSHIFT function returns @x bit-shifted right by @n bits.\n"
"\n"
"* If @n is negative, a left shift will in effect be performed.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITLSHIFT"
msgstr ""
"@FUNCTION=BITRSHIFT\n"
"@SYNTAX=BITRSHIFT(x,n)\n"
"@DESCRIPTION=The BITRSHIFT işlevi @x'in @n bit sağa kaydırılmış değerini "
"verir. @n negatifse @x'in @n bit sola kaydırılmış değerini verir.\n"
"\n"
"Benzer işlev: BITRSHIFT\n"
"@EXAMPLES=\n"
"@SEEALSO=BITRSHIFT"

#: ../plugins/sample_datasource/sample_datasource.c:272
#, no-c-format
msgid ""
"@FUNCTION=atl_last\n"
"@SYNTAX=ATL_LAST (tag)\n"
"@DESCRIPTION=ATL_LAST is a sample implemention of a real time data source. "
"It takes a string tag and monitors the named pipe /tmp/atl for changes to "
"the value of that tag.\n"
"\n"
"* This is not intended to be generally enabled and is OFF by default.\n"
"\n"
"@EXAMPLES=\n"
"ATL_LAST(\"IBM\")\n"
"@SEEALSO="
msgstr ""

#~ msgid ""
#~ "@FUNCTION=COLUMN\n"
#~ "@SYNTAX=COLUMN([reference])\n"
#~ "@DESCRIPTION=COLUMN function returns the column number of the current "
#~ "cell unless @reference is given. In that case, it returns an array of the "
#~ "column numbers of all cells in @reference. \n"
#~ "* If @reference is neither an array nor a reference nor a range, COLUMN "
#~ "returns #VALUE! error.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "COLUMN() in E1 equals 5.\n"
#~ "\n"
#~ "@SEEALSO=COLUMNS,ROW,ROWS"
#~ msgstr ""
#~ "@FUNCTION=COLUMN\n"
#~ "@SYNTAX=COLUMN([referans])\n"
#~ "@DESCRIPTION=COLUMN işlevi göze konumlarını içeren bir öntanımlı değer "
#~ "alarak bir sütun numaraları dizisi ile sonuçlanır. @referans bir dizi, "
#~ "bir aralık ya da bir başvuru değilse işlev #DEĞER! hatası ile "
#~ "sonuçlanır.\n"
#~ "\n"
#~ "Örnek:\n"
#~ "E1 içinde COLUMN() eşittir 5\n"
#~ "\n"
#~ "Benzerleri: COLUMNS, ROW, ROWS\n"
#~ "@EXAMPLES=\n"
#~ "E1 içinde COLUMN() eşittir 5\n"
#~ "\n"
#~ "@SEEALSO=COLUMNS,ROW,ROWS"

#~ msgid ""
#~ "@FUNCTION=ROW\n"
#~ "@SYNTAX=ROW([reference])\n"
#~ "@DESCRIPTION=ROW function returns an array of the row numbers taking a "
#~ "default argument of the containing cell position.\n"
#~ "\n"
#~ "* If @reference is neither an array nor a reference nor a range, ROW "
#~ "returns #VALUE! error.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "ROW() in G13 equals 13.\n"
#~ "\n"
#~ "@SEEALSO=COLUMN,COLUMNS,ROWS"
#~ msgstr ""
#~ "@FUNCTION=ROW\n"
#~ "@SYNTAX=ROW([referans])\n"
#~ "@DESCRIPTION=ROW işlevi göze konumlarını içeren bir öntanımlı değer "
#~ "alarak bir satır numaraları dizisi ile sonuçlanır. @referans bir dizi, "
#~ "bir aralık ya da bir başvuru değilse işlev #DEĞER! hatası ile "
#~ "sonuçlanır.\n"
#~ "\n"
#~ "Örnek:\n"
#~ "G13 içinde ROW() eşittir 13\n"
#~ "\n"
#~ "Benzerleri: COLUMN, COLUMNS, ROWS\n"
#~ "@EXAMPLES=\n"
#~ "G13 içinde ROW() eşittir 13\n"
#~ "\n"
#~ "@SEEALSO=COLUMN,COLUMNS,ROWS"

#~ msgid ""
#~ "@FUNCTION=FLOOR\n"
#~ "@SYNTAX=FLOOR(x[,significance])\n"
#~ "@DESCRIPTION=FLOOR function rounds @x down to the next nearest multiple "
#~ "of @significance.\n"
#~ "\n"
#~ "* @significance defaults to 1.\n"
#~ "* This function is Excel compatible.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "FLOOR(0.5) equals 0.\n"
#~ "FLOOR(5,2) equals 4.\n"
#~ "FLOOR(-5,-2) equals -4.\n"
#~ "FLOOR(-5,2) equals #NUM!.\n"
#~ "\n"
#~ "@SEEALSO=CEIL, CEILING, ABS, INT, MOD"
#~ msgstr ""
#~ "@FUNCTION=FLOOR\n"
#~ "@SYNTAX=FLOOR(x[,önem])\n"
#~ "@DESCRIPTION=FLOOR işlevi @x'i, @önem'in sonraki en yakın küçük çarpımına "
#~ "yuvarlar. @önem öntanımlı olarak 1 dir.\n"
#~ "Bu işlev Excel uyumludur.\n"
#~ "\n"
#~ "Örnekler:\n"
#~ "FLOOR(0.5) eşittir 0\n"
#~ "FLOOR(5,2) eşittir 4\n"
#~ "FLOOR(-5,-2) eşittir -4\n"
#~ "FLOOR(-5,2) eşittir #SAYI!\n"
#~ "\n"
#~ "Benzerleri: CEIL, ABS, INT\n"
#~ "@EXAMPLES=\n"
#~ "FLOOR(0.5) eşittir 0\n"
#~ "FLOOR(5,2) eşittir 4\n"
#~ "FLOOR(-5,-2) eşittir -4\n"
#~ "FLOOR(-5,2) eşittir #SAYI!\n"
#~ "\n"
#~ "@SEEALSO=CEIL, ABS, INT"

#~ msgid ""
#~ "@FUNCTION=SUMPRODUCT\n"
#~ "@SYNTAX=SUMPRODUCT(range1,range2,...)\n"
#~ "@DESCRIPTION=SUMPRODUCT function multiplies corresponding data entries in "
#~ "the given arrays or ranges, and then returns the sum of those products.  "
#~ "If an array entry is not numeric, the value zero is used instead.\n"
#~ "\n"
#~ "* If arrays or range arguments do not have the same dimensions, "
#~ "SUMPRODUCT returns #VALUE! error.\n"
#~ "* This function is Excel compatible.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, "
#~ "21, and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and "
#~ "39.  Then\n"
#~ "SUMPRODUCT(A1:A5,B1:B5) equals 3370.\n"
#~ "\n"
#~ "@SEEALSO=SUM,PRODUCT"
#~ msgstr ""
#~ "@FUNCTION=SUMPRODUCT\n"
#~ "@SYNTAX=SUMPRODUCT(dizi1,dizi2,...)\n"
#~ "@DESCRIPTION=SUMPRODUCT işlevi verilen aralıklarda aynı dizi indeksindeki "
#~ "gözelerin çarpımlarının toplamını hesaplar. Göze içeriği sayı değilse, "
#~ "sıfır kabul edilir. Dizi uzunlukları farklıysa işlev #DEĞER! hatası ile "
#~ "sonuçlanır.\n"
#~ "Bu işlev Excel uyumludur.\n"
#~ "\n"
#~ "Örnek:\n"
#~ "A1, A2 gözeleri 2, 5 ve B1, B2 gözeleri 4, 3 içeriyorsa:\n"
#~ "SUMPRODUCT(A1:A2,B1:B2) eşittir 23\n"
#~ "\n"
#~ "Benzerleri: SUM, PRODUCT\n"
#~ "@EXAMPLES=\n"
#~ "A1, A2 gözeleri 2, 5 ve B1, B2 gözeleri 4, 3 içeriyorsa:\n"
#~ "SUMPRODUCT(A1:A2,B1:B2) eşittir 23\n"
#~ "\n"
#~ "@SEEALSO=SUM,PRODUCT"
