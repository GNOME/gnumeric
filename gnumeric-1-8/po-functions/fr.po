# French translation of gnumeric.
# Copyright (C) 1998-2004 Free Software Foundation, Inc.
# This file is under the same license as the gnumeric package.
#
# Vincent Renardias <vincent@ldsol.com>, 1998-2000.
# Fabrice Bellet <Fabrice.Bellet@imag.fr>, 1999.
# Christophe Merlet (RedFox) <redfox@redfoxcenter.org>, 2000-2004.
# maintainer: Olivier Jousselin <oj@marylou.fr>, 2001-2003.
#
msgid ""
msgstr ""
"Project-Id-Version: gnumeric 1.5.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2007-12-29 14:31-0500\n"
"PO-Revision-Date: 2005-08-26 23:11+0200\n"
"Last-Translator: Christophe Merlet (RedFox) <redfox@redfoxcenter.org>\n"
"Language-Team: GNOME French Team <gnomefr@traduc.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../plugins/derivatives/options.c:174
#, no-c-format
msgid ""
"@FUNCTION=CUM_BIV_NORM_DIST\n"
"@SYNTAX=CUM_BIV_NORM_DIST(a,b,rho)\n"
"@DESCRIPTION=CUM_BIV_NORM_DIST calculates the cumulative bivariate normal "
"distribution from parameters a, b & rho.\n"
"The return value is the probability that two random variables with "
"correlation @rho are respectively each less than @a and @b.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV"
msgstr ""
"@FUNCTION=CUM_BIV_NORM_DIST\n"
"@SYNTAX=CUM_BIV_NORM_DIST(a;b;rho)\n"
"@DESCRIPTION=CUM_BIV_NORM_DIST calcule la distribution normale bivariée, "
"pour les paramètres a, b et rho.\n"
"La valeur renvoyée est la probabilité que deux variables aléatoires de "
"corrélation @rho soient respectivement inférieures à @a et à @b.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV"

#: ../plugins/derivatives/options.c:234
msgid ""
"@FUNCTION=OPT_BS\n"
"@SYNTAX=OPT_BS(call_put_flag,spot,strike,time,rate,volatility [,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS uses the Black-Scholes model to calculate the price of a "
"European option using call_put_flag, @call_put_flag, 'c' or 'p' struck at "
"@strike on an asset with spot price @spot.\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date. \n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed in the same units as @strike and "
"@spot.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BS\n"
"@SYNTAX=OPT_BS(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BS utilise le modèle de Black-Scholes pour calculer le prix "
"d'une option Européenne call ou put, selon que @call_ou_put vaut 'c' ou 'p', "
"de valeur @valeur sur un titre valant @prix.\n"
"\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:304
msgid ""
"@FUNCTION=OPT_BS_DELTA\n"
"@SYNTAX=OPT_BS_DELTA(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_DELTA uses the Black-Scholes model to calculate the "
"'delta' of a European option with call_put_flag, @call_put_flag, 'c' or 'p' "
"struck at @strike on an asset with spot price @spot.\n"
"Where @time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date. \n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed in the same units as @strike and "
"@spot.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BS_DELTA\n"
"@SYNTAX=OPT_BS_DELTA(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=Détermine le \"delta\" d'une option Européenne d'après le "
"modèle de Black-Scholes. L'option est à la valeur @valeur dans "
"@jours_avant_échéance jours, sur un titre valant @prix, d'une volatilité "
"annuelle (en pourcentage) de @volatilité. @taux est le taux d'intérêt hors "
"risque jusqu'à la date d'exercice, en pourcentage.\n"
"(Le delta d'une option est le taux de changement de son prix par rapport au "
"prix du titre sur lequel elle s'appuie).\n"
"\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée est le taux de changement de sa valeur par changement "
"unitaire de @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:359
msgid ""
"@FUNCTION=OPT_BS_GAMMA\n"
"@SYNTAX=OPT_BS_GAMMA(spot,strike,time,rate,volatility[,cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_GAMMA uses the Black-Scholes model to calculate the "
"'gamma' of a European option struck at @strike on an asset with spot price "
"@spot.\n"
"\n"
"(The gamma of an option is the second derivative of its price with respect "
"to the price of the underlying asset, and is the same for calls and puts.)\n"
"\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as the rate of change of delta per "
"unit change in @spot.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA"
msgstr ""
"@FUNCTION=OPT_BS_GAMMA\n"
"@SYNTAX=OPT_BS_GAMMA(prix;valeur;durée;taux;volatilité[;coût_de_détention])\n"
"@DESCRIPTION=Détermine le \"gamma\" d'une option Européenne d'après le "
"modèle de Black-Scholes. L'option est à la valeur @valeur, sur un titre "
"valant @prix.\n"
"\n"
"(Le gamma d'une option est la dérivée seconde de son prix par rapport au "
"prix du titre sur lequel elle s'appuie, et elle est la même pour les calls "
"et les puts).\n"
"\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée est le taux de changement de delta par changement "
"unitaire de @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_VEGA"

#: ../plugins/derivatives/options.c:429
msgid ""
"@FUNCTION=OPT_BS_THETA\n"
"@SYNTAX=OPT_BS_THETA(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_THETA uses the Black-Scholes model to calculate the "
"'theta' of a European option with call_put_flag, @call_put_flag struck at "
"@strike on an asset with spot price @spot.\n"
"\n"
"(The theta of an option is the rate of change of its price with respect to "
"time to expiry.)\n"
"\n"
"@time is the time to maturity of the option expressed in years\n"
"and @rate is the risk-free interest rate to the exercise date, in percent.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as minus the rate of change of option "
"value, per 365.25 days.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BS_THETA\n"
"@SYNTAX=OPT_BS_THETA(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=Détermine le \"theta\" d'une option Européenne, call ou put "
"selon que @call_ou_put vaut 'c' ou 'p', d'après le modèle de Black-Scholes. "
"L'option est à la valeur @valeur sur un titre valant @prix.\n"
"\n"
"(Le theta d'une option est le taux de changement de son prix par rapport au "
"temps avant expiration).\n"
"\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée est l'opposé du taux de changement de sa valeur par "
"365,25 jours.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_VEGA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:486
#, no-c-format
msgid ""
"@FUNCTION=OPT_BS_VEGA\n"
"@SYNTAX=OPT_BS_VEGA(spot,strike,time,rate,volatility[,cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_VEGA uses the Black-Scholes model to calculate the "
"'vega' of a European option struck at @strike on an asset with spot price "
"@spot.\n"
"(The vega of an option is the rate of change of its price with respect to "
"volatility, and is the same for calls and puts.)\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
" @time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% volatility.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BS_VEGA\n"
"@SYNTAX=OPT_BS_VEGA(prix;valeur;durée;taux;volatilité[;coût_de_détention])\n"
"@DESCRIPTION=Détermine le \"vega\" d'une option Européenne d'après le modèle "
"de Black-Scholes. L'option est à la valeur @valeur, sur un titre valant "
"@prix.\n"
"\n"
"(Le vega d'une option est le taux de changement de son prix par rapport à sa "
"volatilité, et elle est la même pour les calls et les puts).\n"
"\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée est le taux de changement de son prix par 100% de "
"@volatilité.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:561
#, no-c-format
msgid ""
"@FUNCTION=OPT_BS_RHO\n"
"@SYNTAX=OPT_BS_RHO(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_RHO uses the Black-Scholes model to calculate the 'rho' "
"of a European option with call_put_flag, @call_put_flag struck at @strike on "
"an asset with spot price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"\n"
"(The rho of an option is the rate of change of its price with respect to the "
"risk free interest rate.)\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% change in @rate.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BS_RHO\n"
"@SYNTAX=OPT_BS_RHO(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=Détermine le \"rho\" d'une option Européenne d'après le modèle "
"de Black-Scholes. L'option est à la valeur @valeur, sur un titre valant "
"@prix.\n"
"\n"
"(Le rho d'une option est le taux de changement de son prix par rapport au "
"taux d'intérêt hors risque).\n"
"\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée est le taux de changement de sa valeur pour 100% de "
"changement de @taux.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_THETA, OPT_BS_VEGA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:629
#, no-c-format
msgid ""
"@FUNCTION=OPT_BS_CARRYCOST\n"
"@SYNTAX=OPT_BS_CARRYCOST(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BS_CARRYCOST uses the Black-Scholes model to calculate the "
"'elasticity' of a European option struck at @strike on an asset with spot "
"price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"\n"
"(The elasticity of an option is the rate of change of its price with respect "
"to its cost of carry.)\n"
"\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.  @time is the time to maturity of the "
"option expressed in years.\n"
"@rate is the risk-free interest rate to the exercise date, in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% volatility.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BS_CARRYCOST\n"
"@SYNTAX=OPT_BS_CARRYCOST(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=Détermine l'élasticité d'une option Européenne d'après le "
"modèle de Black-Scholes. L'option est à la valeur @valeur, sur un titre "
"valant @prix.\n"
"\n"
"(L'élasticité d'une option est le taux de changement de son prix par rapport "
"à son coût de détention).\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée est le taux de changement de sa valeur par 100% de "
"@volatilité.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:701
#, no-c-format
msgid ""
"@FUNCTION=OPT_GARMAN_KOHLHAGEN\n"
"@SYNTAX=OPT_GARMAN_KOHLHAGEN(call_put_flag,spot,strike,time,domestic_rate,"
"foreign_rate,volatility[,cost_of_carry])\n"
"@DESCRIPTION=OPT_GARMAN_KOHLHAGEN values the theoretical price of a European "
"currency option struck at @strike on an asset with spot price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date. \n"
"@time the number of days to exercise.\n"
"@domestic_rate is the domestic risk-free interest rate to the exercise "
"date.\n"
"@foreign_rate is the foreign risk-free interest rate to the exercise date, "
"in percent.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"* The returned value will be expressed as the rate of change of option "
"value, per 100% volatility.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_GARMAN_KOHLHAGEN\n"
"@SYNTAX=OPT_GARMAN_KOHLHAGEN(call_ou_put;prix;valeur;jours_avant_échéance;"
"taux_domestique;taux_étranger;volatilité[;coût_de_détention])\n"
"@DESCRIPTION=OPT_GARMAN_KOHLHAGEN calcule la valeur théorique d'une option "
"call Européenne de valeur @valeur sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en années.\n"
"@taux_domestique est le taux d'intérêt domestique hors risque jusqu'à la "
"date d'exercice, en pourcentage.\n"
"@taux_étranger est le taux d'intérêt étranger hors risque jusqu'à la date "
"d'exercice, en pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:772
#, no-c-format
msgid ""
"@FUNCTION=OPT_FRENCH\n"
"@SYNTAX=OPT_FRENCH(call_put_flag,spot,strike,time,t2,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_FRENCH values the theoretical price of a European option "
"adjusted for trading day volatility, struck at @strike on an asset with spot "
"price @spot.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@volatility is the annualized volatility, in percent, of the asset for the "
"period through to the exercise date.\n"
" @time the number of calendar days to exercise divided by calendar days in "
"the year.\n"
"@t2 is the number of trading days to exercise divided by trading days in the "
"year.\n"
"@rate is the risk-free interest rate.\n"
"@cost_of_carry is the leakage in value of the underlying asset, to the "
"exercise date, in percent.\n"
"For common stocks, this would be the dividend yield.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_FRENCH\n"
"@SYNTAX=OPT_FRENCH(call_ou_put;prix;valeur;jours_avant_échéance;t2;taux;"
"volatilité[;coût_de_détention])\n"
"@DESCRIPTION=OPT_FRENCH calcule la valeur théorique d'une option call "
"Européenne, ajustée en fonction de la volatilité du jour d'opération, de "
"valeur @valeur sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' selon que l'option est un call ou un put.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital\n"
"pour la période jusqu'a la date d'exercice. @jours_avant_échéance est\n"
"le nombre de jours calendaires d'exercice, @t2 est le nombre de jours\n"
"ouvrables d'exercice, divisé par le nombre le nombre de jours\n"
"ouvrables de l'année. @taux est le taux d'intérêt hors\n"
"risque. @coût_de_détention est la perte de valeur de l'action\n"
"sous-jacente. Pour une action standard, ce serait le dividende restant\n"
"à courir, en pourcentage.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:836
#, no-c-format
msgid ""
"@FUNCTION=OPT_JUMP_DIFF\n"
"@SYNTAX=OPT_JUMP_DIFF(call_put_flag,spot,strike,time,rate,volatility,lambda,"
"gamma)\n"
"@DESCRIPTION=OPT_JUMP_DIFF models the theoretical price of an option "
"according to the Jump Diffusion process (Merton).\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price of the option.\n"
"@time is the time to maturity of the option expressed in years.\n"
"@rate is the annualized rate of interest.\n"
"@volatility is the annualized volatility of the underlying asset.\n"
"@lambda is expected number of 'jumps' per year.\n"
"@gamma is proportion of volatility explained by the 'jumps.'\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BJER_STENS\n"
"@SYNTAX=OPT_BJER_STENS(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BJER_STENS utilise l'approximation de Bjerksund et "
"Stensland pour calculer le prix d'une option Américaine de valeur @valeur "
"sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:935
#, no-c-format
msgid ""
"@FUNCTION=OPT_MILTERSEN_SCHWARTZ\n"
"@SYNTAX=OPT_MILTERSEN_SCHWARTZ(call_put_flag,p_t,f_t,x,t1,t2,v_s,v_e,v_f,"
"rho_se,rho_sf,rho_ef,kappa_e,kappa_f)\n"
"@DESCRIPTION=OPT_MILTERSEN_SCHWARTZ models the theoretical price of options "
"on commodities futures according to Miltersen & Schwartz. \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@p_t is a zero coupon bond with expiry at option maturity.\n"
"@f_t is the futures price.\n"
"@x is the strike price.\n"
"@t1 is the time to maturity of the option.\n"
"@t2 is the time to maturity of the underlying commodity futures contract.\n"
"@v_s is the volatility of the spot commodity price.\n"
"@v_e is the volatility of the future convenience yield.\n"
"@v_f is the volatility of the forward rate of interest.\n"
"@rho_se is correlation between the spot commodity price and the convenience "
"yield.\n"
"@rho_sf is correlation between the spot commodity price and the forward "
"interest rate.\n"
"@rho_ef is correlation between the forward interest rate and the convenience "
"yield.\n"
"@kappa_e is the speed of mean reversion of the convenience yield.\n"
"@kappa_f is the speed of mean reversion of the forward interest rate.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""

#: ../plugins/derivatives/options.c:1048
#, no-c-format
msgid ""
"@FUNCTION=OPT_RGW\n"
"@SYNTAX=OPT_RGW(call_put_flag,spot,strike,t1,t2,rate,d,volatility)\n"
"@DESCRIPTION=OPT_RGW models the theoretical price of an american option "
"according to the Roll-Geske-Whaley approximation where: \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@t1 is the time to the dividend payout.\n"
"@t2 is the time to option expiration.\n"
"@rate is the annualized rate of interest.\n"
"@d is the amount of the dividend to be paid.\n"
"@volatility is the annualized rate of volatility of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_RGW\n"
"@SYNTAX=OPT_RGW(call_ou_put;prix;valeur;t1;t2;taux;d;volatilité)\n"
"@DESCRIPTION=OPT_RGW calcule la valeur théorique d'une option Américaine "
"selon la méthode d'approximation de Roll Geske Whaley, où @t1 est le temps "
"avant la distribution du dividende et @t2 est le temps avant l'échéance de "
"l'option.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1105
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_put_flag,spot,strike,time,rate,cost_of_carry,"
"volatility)\n"
"@DESCRIPTION=OPT_BAW_AMER models the theoretical price of an option "
"according to the Barone Adesie & Whaley approximation. \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1291
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_BJER_STENS\n"
"@SYNTAX=OPT_BJER_STENS(call_put_flag,spot,strike,time,rate,volatility[,"
"cost_of_carry])\n"
"@DESCRIPTION=OPT_BJER_STENS models the theoretical price of american options "
"according to the Bjerksund & Stensland approximation technique.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BJER_STENS\n"
"@SYNTAX=OPT_BJER_STENS(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BJER_STENS utilise l'approximation de Bjerksund et "
"Stensland pour calculer le prix d'une option Américaine de valeur @valeur "
"sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1378
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_EXEC\n"
"@SYNTAX=OPT_EXEC(call_put_flag,spot,strike,time,rate,volatility,"
"cost_of_carry,lambda)\n"
"@DESCRIPTION=OPT_EXEC models the theoretical price of executive stock "
"options @call_put_flag is 'c' or 'p' to indicate whether the option is a "
"call or a put.\n"
"One would expect this to always be a call option.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@lambda is the jump rate for executives. The model assumes executives "
"forfeit their options if they leave the company.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_EXEC\n"
"@SYNTAX=OPT_EXEC(call_ou_put;prix;valeur;durée;taux;volatilité;"
"coût_de_détention;lambda)\n"
"@DESCRIPTION=OPT_EXEC détermine le prix théorique de stock options de valeur "
"@valeur sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option. (Normalement, "
"une stock option est toujours un call)\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"@lambda est le taux de démission des bénéficiaires. Ce modèle suppose que "
"les bénéficiaires perdent leurs options en quittant la compagnie.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1429
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_FORWARD_START\n"
"@SYNTAX=OPT_FORWARD_START(call_put_flag,spot,alpha,time1,time,rate,"
"volatility,cost_of_carry)\n"
"@DESCRIPTION=OPT_FORWARD_START models the theoretical price of forward start "
"options\n"
" @call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@alpha is a fraction that set the strike price the future date @time1.\n"
"@time1 is the number of days until the option starts.\n"
"@time is the number of days to maturity of the option.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_FORWARD_START\n"
"@SYNTAX=OPT_FORWARD_START(call_ou_put;prix;alpha;durée1;durée;taux;"
"volatilité;coût_de_détention)\n"
"@DESCRIPTION=OPT_FORWARD_START calcule le prix théorique d'une option à "
"début différé sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@alpha est la fraction qui fixera le prix de l'option après @durée1\n"
"@durée1 est la durée avant le début de l'option, exprimée en jours.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1495
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_TIME_SWITCH\n"
"@SYNTAX=OPT_TIME_SWITCH(call_put_flag,spot,strike,a,time,m,dt,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_TIME_SWITCH models the theoretical price of time switch "
"options. (Pechtl 1995)\n"
"The holder receives @a * @dt for each period dt that the asset price was "
"greater than the strike price (for a call) or below it (for a put). \n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@a is the amount received for each time period as discussed above.\n"
"@time is the maturity of the option in years.\n"
"@m is the number of time units the option has already met the condition.\n"
"@dt is the agreed upon discrete time period (often a day) expressed as a "
"fraction of a year.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1549
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_SIMPLE_CHOOSER\n"
"@SYNTAX=OPT_SIMPLE_CHOOSER(call_put_flag,spot,strike,time1,time2,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_SIMPLE_CHOOSER models the theoretical price of simple "
"chooser options.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time1 is the time in years until the holder chooses a put or a call "
"option.\n"
"@time2 is the time in years until the chosen option expires.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_ON_OPTIONS\n"
"@SYNTAX=OPT_ON_OPTIONS(type;prix;valeur1;valeur2;durée1;durée2;taux;"
"coût_de_détention;volatilité)\n"
"@DESCRIPTION=OPT_ON_OPTIONS calcule le prix théorique d'options sur des "
"options.\n"
"\n"
"@type est 'cc' pour un call sur un call, 'cp' pour un call sur un put, de "
"même pour 'pc' et 'pp'\n"
"@prix est le prix de l'action sous-jacente\n"
"@valeur1 est la valeur de l'option sur l'option\n"
"@valeur2 est la valeur de l'option de base\n"
"@durée1 est la durée avant échéance de l'option sur l'option, exprimée en "
"jours.\n"
"@durée2 est la durée avant échéance de l'option de base, exprimée en jours "
"(@durée2 >= @durée1).\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, de l'action sous-"
"jacente.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1612
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_COMPLEX_CHOOSER\n"
"@SYNTAX=OPT_COMPLEX_CHOOSER(call_put_flag,spot,strike_call,strike_put,time,"
"time_call,time_put,rate,cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_COMPLEX_CHOOSER models the theoretical price of complex "
"chooser options.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike_call is the strike price at which the option is struck, applicable "
"if exercised as a call option.\n"
"@strike_put is the strike price at which the option is struck, applicable if "
"exercised as a put option.\n"
"@time is the time in years until the holder chooses a put or a call "
"option. \n"
"@time_call is the time in years to maturity of the call option if chosen.\n"
"@time_put is the time in years  to maturity of the put option if chosen.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_ON_OPTIONS\n"
"@SYNTAX=OPT_ON_OPTIONS(type;prix;valeur1;valeur2;durée1;durée2;taux;"
"coût_de_détention;volatilité)\n"
"@DESCRIPTION=OPT_ON_OPTIONS calcule le prix théorique d'options sur des "
"options.\n"
"\n"
"@type est 'cc' pour un call sur un call, 'cp' pour un call sur un put, de "
"même pour 'pc' et 'pp'\n"
"@prix est le prix de l'action sous-jacente\n"
"@valeur1 est la valeur de l'option sur l'option\n"
"@valeur2 est la valeur de l'option de base\n"
"@durée1 est la durée avant échéance de l'option sur l'option, exprimée en "
"jours.\n"
"@durée2 est la durée avant échéance de l'option de base, exprimée en jours "
"(@durée2 >= @durée1).\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, de l'action sous-"
"jacente.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1729
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_ON_OPTIONS\n"
"@SYNTAX=OPT_ON_OPTIONS(type_flag,spot,strike1,strike2,time1,time2,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_ON_OPTIONS models the theoretical price of options on "
"options.\n"
"@type_flag is 'cc' for calls on calls, 'cp' for calls on puts, and so on for "
"'pc', and 'pp'.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike1 is the strike price at which the option being valued is struck.\n"
"@strike2 is the strike price at which the underlying option is struck.\n"
"@time1 is the time in years to maturity of the option.\n"
"@time2 is the time in years to the maturity of the underlying option.\n"
"(@time2 >= @time1).\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset of the "
"underlying option.for common stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset of "
"the underlying option.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_ON_OPTIONS\n"
"@SYNTAX=OPT_ON_OPTIONS(type;prix;valeur1;valeur2;durée1;durée2;taux;"
"coût_de_détention;volatilité)\n"
"@DESCRIPTION=OPT_ON_OPTIONS calcule le prix théorique d'options sur des "
"options.\n"
"\n"
"@type est 'cc' pour un call sur un call, 'cp' pour un call sur un put, de "
"même pour 'pc' et 'pp'\n"
"@prix est le prix de l'action sous-jacente\n"
"@valeur1 est la valeur de l'option sur l'option\n"
"@valeur2 est la valeur de l'option de base\n"
"@durée1 est la durée avant échéance de l'option sur l'option, exprimée en "
"jours.\n"
"@durée2 est la durée avant échéance de l'option de base, exprimée en jours "
"(@durée2 >= @durée1).\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, de l'action sous-"
"jacente.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1817
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_EXTENDIBLE_WRITER\n"
"@SYNTAX=OPT_EXTENDIBLE_WRITER(call_put_flag,spot,strike1,strike2,time1,time2,"
"rate,cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_EXTENDIBLE_WRITER models the theoretical price of "
"extendible writer options. These are options that can be exercised at an "
"initial period, @time1, or their maturity extended to @time2 if the option "
"is out of the money at @time1.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike1 is the strike price at which the option is struck.\n"
"@strike2 is the strike price at which the option is re-struck if out of the "
"money at @time1.\n"
"@time1 is the initial maturity of the option in years.\n"
"@time2 is the is the extended maturity in years if chosen.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1881
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_2_ASSET_CORRELATION\n"
"@SYNTAX=OPT_2_ASSET_CORRELATION(call_put_flag,spot1,spot2,strike1,strike2,"
"time,cost_of_carry1,cost_of_carry2,rate,volatility1,volatility2,rho)\n"
"@DESCRIPTION=OPT_2_ASSET_CORRELATION models the theoretical price of  "
"options on 2 assets with correlation @rho.\n"
"The payoff for a call is max(@spot2 - @strike2,0) if @spot1 > @strike1 or 0 "
"otherwise.\n"
"The payoff for a put is max (@strike2 - @spot2, 0) if @spot1 < @strike1 or 0 "
"otherwise.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot1 & @spot2 are the spot prices of the underlying assets.\n"
"@strike1 & @strike2 are the strike prices at which the option is struck.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry1 & @cost_of_carry2 are the leakage in value of the underlying "
"assets, for common stocks, this would be the dividend yield.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying assets.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1938
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_EURO_EXCHANGE\n"
"@SYNTAX=OPT_EURO_EXCHANGE(spot1,spot2,qty1,qty2,time,rate,cost_of_carry1,"
"cost_of_carry2,volatility1,volatility2,rho)\n"
"@DESCRIPTION=OPT_EURO_EXCHANGE models the theoretical price of a European "
"option to exchange one asset with quantity @qty2 and spot price @spot2 for "
"another, with quantity @qty1 and spot price @spot1.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry1 & @cost_of_carry2 are the leakage in value of the underlying "
"assets, for common stocks, this would be the dividend yield.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying assets.\n"
"@rho is the correlation between the two assets.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_AMER_EXCHANGE, OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, "
"OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:1985
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_AMER_EXCHANGE\n"
"@SYNTAX=OPT_AMER_EXCHANGE(spot1,spot2,qty1,qty2,time,rate,cost_of_carry1,"
"cost_of_carry2,volatility1, volatility2, rho)\n"
"@DESCRIPTION=OPT_AMER_EXCHANGE models the theoretical price of an American "
"option to exchange one asset with quantity @qty2 and spot price @spot2 for "
"another, with quantity @qty1 and spot price @spot1.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry1 & @cost_of_carry2 are the leakage in value of the underlying "
"assets, for common stocks, this would be the dividend yield.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying assets.\n"
"@rho is the correlation between the two assets.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_EURO_EXCHANGE, OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, "
"OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:2030
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_SPREAD_APPROX\n"
"@SYNTAX=OPT_SPREAD_APPROX(call_put_flag,fut_price1,fut_price2,strike,time, "
"rate,volatility1,volatility2,rho)\n"
"@DESCRIPTION=OPT_SPREAD_APPROX models the theoretical price of a European "
"option on the spread between two futures contracts.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@fut_price1 & @fut_price2 are the prices of the two futures contracts.\n"
"@strike is the strike price at which the option is struck \n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility1 & @volatility2 are the annualized volatility in price of the "
"underlying futures contracts.\n"
"@rho is the correlation between the two futures contracts.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BJER_STENS\n"
"@SYNTAX=OPT_BJER_STENS(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BJER_STENS utilise l'approximation de Bjerksund et "
"Stensland pour calculer le prix d'une option Américaine de valeur @valeur "
"sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:2092
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_FLOAT_STRK_LKBK\n"
"@SYNTAX=OPT_FLOAT_STRK_LKBK(call_put_flag,spot,spot_min,spot_max,time,rate,"
"cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_FLOAT_STRK_LKBK models the theoretical price of an option "
"where the holder of the option may exercise on expiry at the most favourable "
"price observed during the options life of the underlying asset.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@spot_min is the minimum spot price of the underlying asset so far "
"observed.\n"
"@spot_max is the maximum spot price of the underlying asset so far "
"observed.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:2162
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_FIXED_STRK_LKBK\n"
"@SYNTAX=OPT_FIXED_STRK_LKBK(call_put_flag,spot,spot_min,spot_max,strike,time,"
"rate,cost_of_carry,volatility)\n"
"@DESCRIPTION=OPT_FIXED_STRK_LKBK models the theoretical price of an option "
"where the holder of the option may exercise on expiry at the most favourable "
"price observed during the options life of the underlying asset.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@spot is the spot price of the underlying asset.\n"
"@spot_min is the minimum spot price of the underlying asset so far "
"observed.\n"
"@spot_max is the maximum spot price of the underlying asset so far "
"observed.\n"
"@strike is the strike prices at which the option is struck.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@cost_of_carry is the leakage in value of the underlying asset, for common "
"stocks, this would be the dividend yield.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BAW_AMER\n"
"@SYNTAX=OPT_BAW_AMER(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BAW_AMER utilise l'approximation de Barone, Adesie et "
"Whaley pour calculer le prix théorique d'une option de valeur @valeur sur un "
"titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/derivatives/options.c:2252
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=OPT_BINOMIAL\n"
"@SYNTAX=OPT_BINOMIAL(amer_euro_flag,call_put_flag,num_time_steps, spot, "
"strike, time, rate, volatility, cost_of_carry)\n"
"@DESCRIPTION=OPT_ models the theoretical price of either an American or "
"European style option using a binomial tree.\n"
"@amer_euro_flag is either 'a' or 'e' to indicate whether the option being "
"valued is an American or European style option respectively.\n"
"@call_put_flag is 'c' or 'p' to indicate whether the option is a call or a "
"put.\n"
"@num_time_steps is the number of time steps used in the valuation, a greater "
"number of time steps yields greater accuracy however is slower to "
"calculate.\n"
"@spot is the spot price of the underlying asset.\n"
"@strike is the strike price at which the option is struck.\n"
"@time is the initial maturity of the option in years.\n"
"@rate is the annualized risk-free rate of interest.\n"
"@volatility is the annualized volatility in price of the underlying asset.\n"
"@cost_of_carry is the leakage in value of the underlying asset.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"
msgstr ""
"@FUNCTION=OPT_BJER_STENS\n"
"@SYNTAX=OPT_BJER_STENS(call_ou_put;prix;valeur;durée;taux;volatilité[;"
"coût_de_détention])\n"
"@DESCRIPTION=OPT_BJER_STENS utilise l'approximation de Bjerksund et "
"Stensland pour calculer le prix d'une option Américaine de valeur @valeur "
"sur un titre valant @prix.\n"
"\n"
"@call_ou_put vaut 'c' ou 'p' pour indiquer le type d'option.\n"
"@durée est la durée avant échéance, exprimée en jours.\n"
"@taux est le taux d'intérêt hors risque jusqu'à la date d'exercice, en "
"pourcentage.\n"
"@volatilité est la volatilité annuelle, en pourcentage, du capital pour la "
"période jusqu'a la date d'exercice.\n"
"@coût_de_détention est la perte de valeur de l'action sous-jacente. Pour une "
"action normale, ce serait le dividende versé.\n"
"\n"
"* La valeur renvoyée sera dans la même unité que @valeur et @prix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=OPT_BS, OPT_BS_DELTA, OPT_BS_RHO, OPT_BS_THETA, OPT_BS_GAMMA"

#: ../plugins/fn-complex/functions.c:80
msgid ""
"@FUNCTION=COMPLEX\n"
"@SYNTAX=COMPLEX(real,im[,suffix])\n"
"@DESCRIPTION=COMPLEX returns a complex number of the form x + yi.\n"
"\n"
"@real is the real and @im is the imaginary part of the complex number.  "
"@suffix is the suffix for the imaginary part.  If it is omitted, COMPLEX "
"uses 'i' by default.\n"
"\n"
"* If @suffix is neither 'i' nor 'j', COMPLEX returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COMPLEX(1,-1) equals 1-i.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COMPLEX\n"
"@SYNTAX=COMPLEX(réel;im[;suffixe])\n"
"@DESCRIPTION=La fonction COMPLEX renvoie un nombre complexe de la forme x "
"+yi.\n"
"\n"
"@réel est la partie réelle et @im la partie imaginaire du nombre complexe.  "
"@suffixe est le suffixe de la partie imaginaire, 'i' par défaut.\n"
"\n"
"* Si @suffixe ne vaut ni 'i' ni 'j', l'erreur #VALEUR! est renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"COMPLEX(1;-1) vaut 1-i.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:122
msgid ""
"@FUNCTION=IMAGINARY\n"
"@SYNTAX=IMAGINARY(inumber)\n"
"@DESCRIPTION=IMAGINARY returns the imaginary part of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMAGINARY returns #VALUE! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMAGINARY(\"132-j\") equals -1.\n"
"\n"
"@SEEALSO=IMREAL"
msgstr ""
"@FUNCTION=IMAGINARY\n"
"@SYNTAX=IMAGINARY(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMAGINARY renvoie la partie imaginaire d'un nombre "
"complexe.\n"
"\n"
"* Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMAGINARY(\"132-j\") vaut -1.\n"
"\n"
"@SEEALSO=IMREAL"

#: ../plugins/fn-complex/functions.c:158
msgid ""
"@FUNCTION=IMABS\n"
"@SYNTAX=IMABS(inumber)\n"
"@DESCRIPTION=IMABS returns the absolute value of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMABS returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMABS(\"2-j\") equals 2.23606798.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"
msgstr ""
"@FUNCTION=IMABS\n"
"@SYNTAX=IMABS(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMABS renvoie la valeur absolue d'un nombre "
"complexe.\n"
"\n"
"* Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"IMABS(\"2-j\") = 2,23606798.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"

#: ../plugins/fn-complex/functions.c:191
msgid ""
"@FUNCTION=IMREAL\n"
"@SYNTAX=IMREAL(inumber)\n"
"@DESCRIPTION=IMREAL returns the real part of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMREAL returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"imreal(\"132-j\") equals 132.\n"
"\n"
"@SEEALSO=IMAGINARY"
msgstr ""
"@FUNCTION=IMREAL\n"
"@SYNTAX=IMREAL(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMREAL renvoie la partie réelle d'un nombre "
"complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, IMREAL renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"imreal(\"132-j\") vaut 132.\n"
"\n"
"@SEEALSO=IMAGINARY"

#: ../plugins/fn-complex/functions.c:227
msgid ""
"@FUNCTION=IMCONJUGATE\n"
"@SYNTAX=IMCONJUGATE(inumber)\n"
"@DESCRIPTION=IMCONJUGATE returns the complex conjugate of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMCONJUGATE returns #VALUE! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMCONJUGATE(\"1-j\") equals 1+j.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"
msgstr ""
"@FUNCTION=IMCONJUGATE\n"
"@SYNTAX=IMCONJUGATE(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCONJUGATE renvoie le nombre complexe conjugué de "
"@nombre_cpx.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, IMCONJUGATE renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCONJUGATE(\"1-j\") = 1+j.\n"
"\n"
"@SEEALSO=IMAGINARY,IMREAL"

#: ../plugins/fn-complex/functions.c:261
#, fuzzy
msgid ""
"@FUNCTION=IMINV\n"
"@SYNTAX=IMINV(inumber)\n"
"@DESCRIPTION=IMINV returns the inverse, or reciprocal, of the complex number "
"z (@inumber), where\n"
"\n"
"\t1/z = (x - i y)/(x^2 + y^2).\n"
"\n"
"* If @inumber is not a valid complex number, IMINV returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMINV(\"1-j\") equals 0.5+0.5j.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IMINV\n"
"@SYNTAX=IMINV(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMINV renvoie l'inverse, ou réciproque, d'un nombre "
"complexe, soit\n"
"        1/z = (x - i y)/(x^2 + y^2).\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMINV(\"1-j\") = 0.5+0.5j.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:295
msgid ""
"@FUNCTION=IMNEG\n"
"@SYNTAX=IMNEG(inumber)\n"
"@DESCRIPTION=IMNEG returns the negative of the complex number z (@inumber), "
"where\n"
"\n"
"\t-z = (-x) + i(-y).\n"
"\n"
"* If @inumber is not a valid complex number, IMNEG returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMNEG(\"1-j\") equals -1+j.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IMNEG\n"
"@SYNTAX=IMNEG(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMNEG renvoie l'opposé d'un nombre complexe.\n"
"        -z = (-x) + (-y)i.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMNEG(\"2-j\") = -2+j.\n"
"\n"
"@SEEALSO=IMLN"

#: ../plugins/fn-complex/functions.c:329
msgid ""
"@FUNCTION=IMCOS\n"
"@SYNTAX=IMCOS(inumber)\n"
"@DESCRIPTION=IMCOS returns the cosine of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMCOS returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMCOS(\"1+j\") equals 0.833730-0.988898j.\n"
"\n"
"@SEEALSO=IMSIN,IMTAN"
msgstr ""
"@FUNCTION=IMCOS\n"
"@SYNTAX=IMCOS(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCOS renvoie le cosinus d'un nombre complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCOS(\"1+j\") = 0,833730-0,988898j.\n"
"\n"
"@SEEALSO=IMSIN,IMTAN"

#: ../plugins/fn-complex/functions.c:363
msgid ""
"@FUNCTION=IMTAN\n"
"@SYNTAX=IMTAN(inumber)\n"
"@DESCRIPTION=IMTAN returns the tangent of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMTAN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMTAN(\"2-j\") equals -0.2434582-1.1667363j.\n"
"\n"
"@SEEALSO=IMSIN,IMCOS"
msgstr ""
"@FUNCTION=IMTAN\n"
"@SYNTAX=IMTAN(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMTAN renvoie la tangente d'un nombre complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=IMSIN,IMCOS"

#: ../plugins/fn-complex/functions.c:397
msgid ""
"@FUNCTION=IMSEC\n"
"@SYNTAX=IMSEC(inumber)\n"
"@DESCRIPTION=IMSEC returns the complex secant of the complex number z "
"(@inumber), where\n"
"\n"
"\tsec(z) = 1/cos(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMSEC returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMSEC(\"2-j\") equals -0.413149-0.687527j.\n"
"\n"
"@SEEALSO=IMCSC,IMCOT"
msgstr ""
"@FUNCTION=IMSEC\n"
"@SYNTAX=IMSEC(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMSEC renvoie la sécante d'un nombre complexe.\n"
"        sec(z) = 1/cos(z).\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSEC(\"2-j\") = 0,413149-0,687527.\n"
"\n"
"@SEEALSO=IMCSC,IMCOT"

#: ../plugins/fn-complex/functions.c:433
msgid ""
"@FUNCTION=IMCSC\n"
"@SYNTAX=IMCSC(inumber)\n"
"@DESCRIPTION=IMCSC returns the complex cosecant of the complex number z "
"(@inumber), where\n"
"\n"
"\tcsc(z) = 1/sin(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCSC returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCSC(\"2-j\") equals 0.635494-0.221501j.\n"
"\n"
"@SEEALSO=IMSEC,IMCOT"
msgstr ""
"@FUNCTION=IMCSC\n"
"@SYNTAX=IMCSC(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCSC renvoie la cosécante d'un nombre complexe.\n"
"        csc(z) = 1/sin(z).\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCSC(\"2-j\") = 0,635494-0,221501j.\n"
"\n"
"@SEEALSO=IMSEC,IMCOT"

#: ../plugins/fn-complex/functions.c:469
msgid ""
"@FUNCTION=IMCOT\n"
"@SYNTAX=IMCOT(inumber)\n"
"@DESCRIPTION=IMCOT returns the complex cotangent of the complex number z "
"(@inumber), where\n"
"\n"
"\tcot(z) = 1/tan(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCOT returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCOT(\"2-j\") equals -0.171384+0.821330j.\n"
"\n"
"@SEEALSO=IMSEC,IMCSC"
msgstr ""
"@FUNCTION=IMCOT\n"
"@SYNTAX=IMCOT(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCOT renvoie la cotangente d'un nombre complexe.\n"
"        z = 1/tan(z).\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCOT(\"2-j\") = -0,171384+0,821330j.\n"
"\n"
"@SEEALSO=IMSEC,IMCSC"

#: ../plugins/fn-complex/functions.c:505
msgid ""
"@FUNCTION=IMEXP\n"
"@SYNTAX=IMEXP(inumber)\n"
"@DESCRIPTION=IMEXP returns the exponential of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMEXP returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMEXP(\"2-j\") equals 3.992324-6.217676j.\n"
"\n"
"@SEEALSO=IMLN"
msgstr ""
"@FUNCTION=IMEXP\n"
"@SYNTAX=IMEXP(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMEXP renvoie l'exponentielle d'un nombre "
"complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMEXP(\"2-j\") = 3,992324-6,217676j.\n"
"\n"
"@SEEALSO=IMLN"

#: ../plugins/fn-complex/functions.c:539
msgid ""
"@FUNCTION=IMARGUMENT\n"
"@SYNTAX=IMARGUMENT(inumber)\n"
"@DESCRIPTION=IMARGUMENT returns the argument theta of a complex number, i.e. "
"the angle in radians from the real axis to the representation of the number "
"in polar coordinates.\n"
"\n"
"* If @inumber is not a valid complex number, IMARGUMENT returns #VALUE! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMARGUMENT(\"2-j\") equals -0.463647609.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IMARGUMENT\n"
"@SYNTAX=IMARGUMENT(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARGUMENT renvoie l'argument theta d'un nombre "
"complexe, c'est-a-dire l'angle en radians entre l'axe réel et la "
"représentation du nombre.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMARGUMENT(\"2-j\") = -0,463647609.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-complex/functions.c:574
msgid ""
"@FUNCTION=IMLN\n"
"@SYNTAX=IMLN(inumber)\n"
"@DESCRIPTION=IMLN returns the natural logarithm of a complex number.\n"
"\n"
"The result will have an imaginary part between -pi and +pi.  The natural "
"logarithm is not uniquely defined on complex numbers. You may need to add or "
"subtract an even multiple of pi to the imaginary part.\n"
"\n"
"* If @inumber is not a valid complex number, IMLN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMLN(\"3-j\") equals 1.15129-0.32175j.\n"
"\n"
"@SEEALSO=IMEXP,IMLOG2,IMLOG10"
msgstr ""
"@FUNCTION=IMLN\n"
"@SYNTAX=IMLN(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMLN renvoie le logarithme naturel (népérien) d'un "
"nombre complexe.\n"
"\n"
"Le résultat aura une partie imaginaire comprise entre -pi et +pi. Le "
"logarithme naturel n'est pas défini de façon unique sur les nombres "
"complexes. Il est possible d'ajouter ou de soustraire un multiple pair de pi "
"à la partie imaginaire.\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMLN(\"3-j\") = 1,15129-0,32175j.\n"
"\n"
"@SEEALSO=IMEXP,IMLOG2,IMLOG10"

#: ../plugins/fn-complex/functions.c:613
msgid ""
"@FUNCTION=IMLOG2\n"
"@SYNTAX=IMLOG2(inumber)\n"
"@DESCRIPTION=IMLOG2 returns the logarithm of a complex number in base 2.\n"
"\n"
"* If @inumber is not a valid complex number, IMLOG2 returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMLOG2(\"3-j\") equals 1.66096-0.46419j.\n"
"\n"
"@SEEALSO=IMLN,IMLOG10"
msgstr ""
"@FUNCTION=IMLOG2\n"
"@SYNTAX=IMLOG2(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMLOG2 renvoie le logarithme en base 2 d'un nombre "
"complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMLOG2(\"3-j\") = 1,66096-0,46419j.\n"
"\n"
"@SEEALSO=IMLN,IMLOG10"

#: ../plugins/fn-complex/functions.c:648
msgid ""
"@FUNCTION=IMLOG10\n"
"@SYNTAX=IMLOG10(inumber)\n"
"@DESCRIPTION=IMLOG10 returns the logarithm of a complex number in base 10.\n"
"\n"
"* If @inumber is not a valid complex number, IMLOG10 returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMLOG10(\"3-j\") equals 0.5-0.13973j.\n"
"\n"
"@SEEALSO=IMLN,IMLOG2"
msgstr ""
"@FUNCTION=IMLOG10\n"
"@SYNTAX=IMLOG10(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMLOG10 renvoie le logarithme en base 10 d'un "
"nombre complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMLOG10(\"3-j\") = 0,5-0,13973j.\n"
"\n"
"@SEEALSO=IMLN,IMLOG2"

#: ../plugins/fn-complex/functions.c:683
msgid ""
"@FUNCTION=IMPOWER\n"
"@SYNTAX=IMPOWER(inumber1,inumber2)\n"
"@DESCRIPTION=IMPOWER returns a complex number raised to a power.  @inumber1 "
"is the complex number to be raised to a power and @inumber2 is the power to "
"which you want to raise it.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMPOWER returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMPOWER(\"4-j\",2) equals 15-8j.\n"
"\n"
"@SEEALSO=IMSQRT"
msgstr ""
"@FUNCTION=IMPOWER\n"
"@SYNTAX=IMPOWER(nombre_cpx;puissance)\n"
"@DESCRIPTION=La fonction IMPOWER renvoie @nombre_cpx élevé à la puissance "
"@puissance.\n"
"Si @nombre_cpx ou @puissance ne sont pas des nombres complexes valides, la "
"fonction renvoie #VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMPOWER(\"4-j\",2) = 15-8j.\n"
"\n"
"@SEEALSO=IMSQRT"

#: ../plugins/fn-complex/functions.c:725
msgid ""
"@FUNCTION=IMDIV\n"
"@SYNTAX=IMDIV(inumber1,inumber2)\n"
"@DESCRIPTION=IMDIV returns the quotient of two complex numbers.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMDIV returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMDIV(\"2-j\",\"2+j\") equals 0.6-0.8j.\n"
"\n"
"@SEEALSO=IMPRODUCT"
msgstr ""
"@FUNCTION=IMDIV\n"
"@SYNTAX=IMDIV(nombre_cpx1;nombre_cpx2)\n"
"@DESCRIPTION=La fonction IMDIV renvoie le quotient de deux nombres "
"complexes.\n"
"Si @nombre_cpx1 ou @nombre_cpx2 ne sont pas des nombres complexes valides, "
"la fonction renvoie #VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMDIV(\"2-j\",\"2+j\") = 0,6-0,8j.\n"
"\n"
"@SEEALSO=IMPRODUCT"

#: ../plugins/fn-complex/functions.c:765
msgid ""
"@FUNCTION=IMSIN\n"
"@SYNTAX=IMSIN(inumber)\n"
"@DESCRIPTION=IMSIN returns the sine of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMSIN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSIN(\"1+j\") equals 1.29846+0.63496j.\n"
"\n"
"@SEEALSO=IMCOS,IMTAN"
msgstr ""
"@FUNCTION=IMSIN\n"
"@SYNTAX=IMSIN(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMSIN renvoie le sinus d'un nombre complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSIN(\"1+j\") = 1,29846+0,63496j.\n"
"\n"
"@SEEALSO=IMCOS,IMTAN"

#: ../plugins/fn-complex/functions.c:798
msgid ""
"@FUNCTION=IMSINH\n"
"@SYNTAX=IMSINH(inumber)\n"
"@DESCRIPTION=IMSINH returns the complex hyperbolic sine of the complex "
"number z (@inumber), where\n"
"\n"
"\tsinh(z) = (exp(z) - exp(-z))/2.\n"
"\n"
"* If @inumber is not a valid complex number, IMSINH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMSINH(\"1+j\") equals 0.63496+1.29846j.\n"
"\n"
"@SEEALSO=IMCOSH,IMTANH"
msgstr ""
"@FUNCTION=IMSINH\n"
"@SYNTAX=IMSINH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMSIN renvoie le sinus hyperbolique d'un nombre "
"complexe.\n"
"        sinh(z) = (exp(z) - exp(-z)) / 2.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSINH(\"1+j\") = 0,63496+1,29846j.\n"
"\n"
"@SEEALSO=IMCOSH,IMTANH"

#: ../plugins/fn-complex/functions.c:833
msgid ""
"@FUNCTION=IMCOSH\n"
"@SYNTAX=IMCOSH(inumber)\n"
"@DESCRIPTION=IMCOSH returns the complex hyperbolic cosine of the complex "
"number z (@inumber), where\n"
"\n"
"\tcosh(z) = (exp(z) + exp(-z))/2.\n"
"\n"
"* If @inumber is not a valid complex number, IMCOSH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCOSH(\"1+j\") equals 0.83373+0.988898j.\n"
"\n"
"@SEEALSO=IMSINH,IMTANH"
msgstr ""
"@FUNCTION=IMCOSH\n"
"@SYNTAX=IMCOSH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCOSH renvoie le cosinus hyperbolique d'un nombre "
"complexe.\n"
"        cosh(z) = (exp(z) + exp(-z)) / 2.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCOSH(\"1+j\") = 0,833730+0,988898j.\n"
"\n"
"@SEEALSO=IMSINH,IMTANH"

#: ../plugins/fn-complex/functions.c:867
msgid ""
"@FUNCTION=IMTANH\n"
"@SYNTAX=IMTANH(inumber)\n"
"@DESCRIPTION=IMTANH returns the complex hyperbolic tangent of the complex "
"number z (@inumber), where\n"
"\n"
"\ttanh(z) = sinh(z)/cosh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMTANH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMTANH(\"1+j\") equals 1.083923+0.2717526j.\n"
"\n"
"@SEEALSO=IMSINH,IMCOSH"
msgstr ""
"@FUNCTION=IMTANH\n"
"@SYNTAX=IMTANH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMTANH renvoie le sinus d'un nombre complexe.\n"
"        tanh(z) = sinh(z)/cosh(z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMTANH(\"1+j\") = 1,083923+0,2717526j.\n"
"\n"
"@SEEALSO=IMCOSH,IMSINH"

#: ../plugins/fn-complex/functions.c:901
msgid ""
"@FUNCTION=IMSECH\n"
"@SYNTAX=IMSECH(inumber)\n"
"@DESCRIPTION=IMSECH returns the complex hyperbolic secant of the complex "
"number z (@inumber), where\n"
"\n"
"\tsech(z) = 1/cosh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMSECH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMSECH(\"1+j\") equals 0.498337-0.5910838j.\n"
"\n"
"@SEEALSO=IMCSCH,IMCOTH"
msgstr ""
"@FUNCTION=IMSECH\n"
"@SYNTAX=IMSECH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMSECH renvoie la sécante hyperbolique d'un nombre "
"complexe.\n"
"        sech(z) = 1/cosh(z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSECH(\"1+j\") = 0,498337-0,5910838j.\n"
"\n"
"@SEEALSO=IMCSCH,IMCOTH"

#: ../plugins/fn-complex/functions.c:935
msgid ""
"@FUNCTION=IMCSCH\n"
"@SYNTAX=IMCSCH(inumber)\n"
"@DESCRIPTION=IMCSCH returns the complex hyperbolic cosecant of the complex "
"number z (@inumber), where\n"
"\n"
"\tcsch(z) = 1/sinh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCSCH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCSCH(\"1+j\") equals 0.303931-0.621518j.\n"
"\n"
"@SEEALSO=IMSECH,IMCOTH"
msgstr ""
"@FUNCTION=IMCSCH\n"
"@SYNTAX=IMCSCH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCSCH renvoie la cosécante hyperbolique d'un "
"nombre complexe.\n"
"        csch(z) = 1/sinh(z).\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCSCH(\"1+j\") = 0,303931-0,621518j.\n"
"\n"
"@SEEALSO=IMSECH,IMCOTH"

#: ../plugins/fn-complex/functions.c:969
msgid ""
"@FUNCTION=IMCOTH\n"
"@SYNTAX=IMCOTH(inumber)\n"
"@DESCRIPTION=IMCOTH returns the complex hyperbolic cotangent of the complex "
"number z (@inumber) where,\n"
"\n"
"\tcoth(z) = 1/tanh(z).\n"
"\n"
"* If @inumber is not a valid complex number, IMCOTH returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"IMCOTH(\"1+j\") equals 0.868014-0.217622j.\n"
"\n"
"@SEEALSO=IMSECH,IMCSCH"
msgstr ""
"@FUNCTION=IMCOTH\n"
"@SYNTAX=IMCOTH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMCOTH renvoie la cotangente hyperboliqued'un "
"nombre complexe.\n"
"        coth(z) = 1/tanh(z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMCOTH(\"1+j\") = 0,868014-0,217622j.\n"
"\n"
"@SEEALSO=IMSECH,IMCSCH"

#: ../plugins/fn-complex/functions.c:1003
msgid ""
"@FUNCTION=IMARCSIN\n"
"@SYNTAX=IMARCSIN(inumber)\n"
"@DESCRIPTION=IMARCSIN returns the complex arcsine of the complex number "
"@inumber. The branch cuts are on the real axis, less than -1 and greater "
"than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSIN returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSIN(\"1+j\") equals 0.6662394+1.061275j.\n"
"\n"
"@SEEALSO=IMARCCOS,IMARCTAN"
msgstr ""
"@FUNCTION=IMARCSIN\n"
"@SYNTAX=IMARCSIN(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCSIN renvoie l'arc sinus (sinus inverse) d'un "
"nombre complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMARCSIN(\"1+j\") = 0,6662394+1,061275j.\n"
"\n"
"@SEEALSO=IMARCCOS,IMARCTAN"

#: ../plugins/fn-complex/functions.c:1038
msgid ""
"@FUNCTION=IMARCCOS\n"
"@SYNTAX=IMARCCOS(inumber)\n"
"@DESCRIPTION=IMARCCOS returns the complex arccosine of the complex number "
"@inumber. The branch cuts are on the real axis, less than -1 and greater "
"than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOS returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOS(\"1+j\") equals 0.9045569-1.061275j.\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCTAN"
msgstr ""
"@FUNCTION=IMARCCOS\n"
"@SYNTAX=IMARCCOS(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCCOS renvoie l'arc cosinus (cosinus inverse) "
"d'un nombre complexe.\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMARCCOS(\"1+j\") = 0,9045569-1,061275j.\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCTAN"

#: ../plugins/fn-complex/functions.c:1073
msgid ""
"@FUNCTION=IMARCTAN\n"
"@SYNTAX=IMARCTAN(inumber)\n"
"@DESCRIPTION=IMARCTAN returns the complex arctangent of the complex number "
"@inumber. The branch cuts are on the imaginary axis, below -i and above i.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCTAN returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCTAN(\"1+j\") equals 1.0172220+0.4023595j.\n"
"\n"
"@SEEALSO=IMARCSIN,IMARCCOS"
msgstr ""
"@FUNCTION=IMARCTAN\n"
"@SYNTAX=IMARCTAN(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCTAN renvoie l'arc tangente (tangente inverse) "
"d'un nombre complexe.\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMARCTAN(\"1+j\") = 1,0172220+0,4023595j.\n"
"\n"
"@SEEALSO=IMARCCOS,IMARCSIN"

#: ../plugins/fn-complex/functions.c:1108
msgid ""
"@FUNCTION=IMARCSEC\n"
"@SYNTAX=IMARCSEC(inumber)\n"
"@DESCRIPTION=IMARCSEC returns the complex arcsecant of the complex number z "
"(@inumber), where\n"
"\n"
"\tarcsec(z) = arccos(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSEC returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSEC(\"1+j\") equals 1.1185179+0.5306375j.\n"
"\n"
"@SEEALSO=IMARCCSC,IMARCCOT"
msgstr ""
"@FUNCTION=IMARCSEC\n"
"@SYNTAX=IMARCSEC(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCSEC renvoie l'arc sécante d'un nombre "
"complexe.\n"
"        arcsec(z) = arccos(1/Z).\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSEC(\"1+j\") = 1,1185179+0,5306375j.\n"
"\n"
"@SEEALSO=IMARCCSC,IMARCCOT"

#: ../plugins/fn-complex/functions.c:1142
msgid ""
"@FUNCTION=IMARCCSC\n"
"@SYNTAX=IMARCCSC(inumber)\n"
"@DESCRIPTION=IMARCCSC returns the complex arccosecant of the complex number "
"z (@inumber), where\n"
"\n"
"\tarccsc(z) = arcsin(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCSC returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCSC(\"1+j\") equals 0.45227845-0.5306375j.\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCOT"
msgstr ""
"@FUNCTION=IMARCCSC\n"
"@SYNTAX=IMARCCSC(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCCSC renvoie l'arc cosécante d'un nombre "
"complexe.\n"
"        arccsc(z) = arcsin(1/z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCCSC(\"1+j\") = 0,45227845-0,5306375j.\n"
"\n"
"@SEEALSO=IMSIN,IMTAN"

#: ../plugins/fn-complex/functions.c:1176
msgid ""
"@FUNCTION=IMARCCOT\n"
"@SYNTAX=IMARCCOT(inumber)\n"
"@DESCRIPTION=IMARCCOT returns the complex arccotangent of the complex number "
"z (@inumber), where\n"
"\n"
"\tarccot(z) = arctan(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOT returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOT(\"1+j\") equals 0.553574+0.4023595j.\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCSC"
msgstr ""
"@FUNCTION=IMARCCOT\n"
"@SYNTAX=IMARCCOT(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCCOT renvoie l'arc cotangente d'un nombre "
"complexe.\n"
"        arccot(z) = arctan(1/z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCCOT(\"1+j\") = 0,553574+0,4023595j.\n"
"\n"
"@SEEALSO=IMARCSEC,IMARCCSC"

#: ../plugins/fn-complex/functions.c:1210
msgid ""
"@FUNCTION=IMARCSINH\n"
"@SYNTAX=IMARCSINH(inumber)\n"
"@DESCRIPTION=IMARCSINH returns the complex hyperbolic arcsine of the complex "
"number @inumber. The branch cuts are on the imaginary axis, below -i and "
"above i.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSINH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSINH(\"1+j\") equals 1.061275+0.6662394j.\n"
"\n"
"@SEEALSO=IMARCCOSH,IMARCTANH"
msgstr ""
"@FUNCTION=IMARCSINH\n"
"@SYNTAX=IMARCSINH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCSINH renvoie l'arc sinus hyperbolique d'un "
"nombre complexe.\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCSINH(\"1+j\") = 1,061275+0,6662394j.\n"
"\n"
"@SEEALSO=IMARCCOSH,IMARCTANH"

#: ../plugins/fn-complex/functions.c:1245
msgid ""
"@FUNCTION=IMARCCOSH\n"
"@SYNTAX=IMARCCOSH(inumber)\n"
"@DESCRIPTION=IMARCCOSH returns the complex hyperbolic arccosine of the "
"complex number @inumber. The branch cut is on the real axis, less than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOSH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOSH(\"1+j\") equals 1.06127506+0.904557j.\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCTANH"
msgstr ""
"@FUNCTION=IMARCCOSH\n"
"@SYNTAX=IMARCCOSH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCCOSH renvoie l'arc cosinus hyperbolique d'un "
"nombre complexe.\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCCOSH(\"1+j\") = 1,06127506+0,904557j.\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCTANH"

#: ../plugins/fn-complex/functions.c:1280
msgid ""
"@FUNCTION=IMARCTANH\n"
"@SYNTAX=IMARCTANH(inumber)\n"
"@DESCRIPTION=IMARCTANH returns the complex hyperbolic arctangent of the "
"complex number @inumber. The branch cuts are on the real axis, less than -1 "
"and greater than 1.\n"
"\n"
"* If @inumber is not a valid complex number, IMARCTANH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCTANH(\"1+j\") equals 0.4023595+1.0172220j.\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCCOSH"
msgstr ""
"@FUNCTION=IMARCTANH\n"
"@SYNTAX=IMARCTANH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCTANH renvoie l'arc tangente hyperbolique d'un "
"nombre complexe.\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCTANH(\"1+j\") = 0,4023595+1,0172220j.\n"
"\n"
"@SEEALSO=IMARCSINH,IMARCCOSH"

#: ../plugins/fn-complex/functions.c:1315
msgid ""
"@FUNCTION=IMARCSECH\n"
"@SYNTAX=IMARCSECH(inumber)\n"
"@DESCRIPTION=IMARCSECH returns the complex hyperbolic arcsecant of the "
"complex number z (@inumber), where\n"
"\n"
"\tarcsech(z) = arccosh(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCSECH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCSECH(\"1+j\") equals 0.5306375-1.118518j.\n"
"\n"
"@SEEALSO=IMARCCSCH,IMARCCOTH"
msgstr ""
"@FUNCTION=IMARCSECH\n"
"@SYNTAX=IMARCSECH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCSECH renvoie l'arc sécante hyperbolique d'un "
"nombre complexe.\n"
"        arcsech(z) = arccosh(1/z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCSECH(\"1+j\") = 0,5306375-1,118518j.\n"
"\n"
"@SEEALSO=IMARCCSCH,IMARCCOTH"

#: ../plugins/fn-complex/functions.c:1350
msgid ""
"@FUNCTION=IMARCCSCH\n"
"@SYNTAX=IMARCCSCH(inumber)\n"
"@DESCRIPTION=IMARCCSCH returns the complex hyperbolic arccosecant of the "
"complex number z (@inumber), where\n"
"\n"
"\tarccsch(z) = arcsinh(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCSCH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCSCH(\"1+j\") equals 0.5306375-0.452278j.\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCOTH"
msgstr ""
"@FUNCTION=IMARCCSCH\n"
"@SYNTAX=IMARCCSCH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCCSCH renvoie l'arc cosécante hyperbolique d'un "
"nombre complexe.\n"
"        arccsch(z) = arcsin(1/z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCCSCH(\"1+j\") = 0,5306375-0,452278j.\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCOTH"

#: ../plugins/fn-complex/functions.c:1384
msgid ""
"@FUNCTION=IMARCCOTH\n"
"@SYNTAX=IMARCCOTH(inumber)\n"
"@DESCRIPTION=IMARCCOTH returns the complex hyperbolic arccotangent of the "
"complex number z (@inumber), where\n"
"\n"
"\tarccoth(z) = arctanh(1/z).\n"
"\n"
"* If @inumber is not a valid complex number, IMARCCOTH returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"IMARCCOTH(\"1+j\") equals 0.40235948-0.5535744j.\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCSCH"
msgstr ""
"@FUNCTION=IMARCCOTH\n"
"@SYNTAX=IMARCCOTH(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMARCCOTH renvoie l'arc cotangetnte hyperbolique "
"d'un nombre complexe.\n"
"        arccoth(z) = arctanh(1/z).\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"@EXAMPLES=\n"
"IMARCCOTH(\"1+j\") = 0,40235948-0,5535744j.\n"
"\n"
"@SEEALSO=IMARCSECH,IMARCCSCH"

#: ../plugins/fn-complex/functions.c:1419
msgid ""
"@FUNCTION=IMSQRT\n"
"@SYNTAX=IMSQRT(inumber)\n"
"@DESCRIPTION=IMSQRT returns the square root of a complex number.\n"
"\n"
"* If @inumber is not a valid complex number, IMSQRT returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSQRT(\"1+j\") equals 1.09868+0.4550899j.\n"
"\n"
"@SEEALSO=IMPOWER"
msgstr ""
"@FUNCTION=IMSQRT\n"
"@SYNTAX=IMSQRT(nombre_cpx)\n"
"@DESCRIPTION=La fonction IMSQRT renvoie la racine carrée d'un nombre "
"complexe.\n"
"\n"
"Si @nombre_cpx n'est pas un nombre complexe valide, la fonction renvoie "
"#VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSQRT(\"1+j\") = 1,09868+0,4550899j.\n"
"\n"
"@SEEALSO=IMPOWER"

#: ../plugins/fn-complex/functions.c:1453
msgid ""
"@FUNCTION=IMSUB\n"
"@SYNTAX=IMSUB(inumber1,inumber2)\n"
"@DESCRIPTION=IMSUB returns the difference of two complex numbers.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMSUB returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSUB(\"3-j\",\"2+j\") equals 1-2j.\n"
"\n"
"@SEEALSO=IMSUM"
msgstr ""
"@FUNCTION=IMSUB\n"
"@SYNTAX=IMSUB(nombre_cpx1;nombre_cpx2)\n"
"@DESCRIPTION=La fonction IMSUB renvoie la différence de deux nombres "
"complexes.\n"
"\n"
"Si @nombre_cpx1 ou @nobmre_cpx2 ne sont pas des nombres complexes valides, "
"la fonction renvoie #VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSUB(\"3-j\";\"2+j\") = 1-2j.\n"
"\n"
"@SEEALSO=IMSUM"

#: ../plugins/fn-complex/functions.c:1490
msgid ""
"@FUNCTION=IMPRODUCT\n"
"@SYNTAX=IMPRODUCT(inumber1[,inumber2,...])\n"
"@DESCRIPTION=IMPRODUCT returns the product of given complex numbers.\n"
"\n"
"* If any of the @inumbers are not valid complex numbers, IMPRODUCT returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMPRODUCT(\"2-j\",\"4-2j\") equals 6-8j.\n"
"\n"
"@SEEALSO=IMDIV"
msgstr ""
"@FUNCTION=IMPRODUCT\n"
"@SYNTAX=IMPRODUCT(nombre_cpx1[;nombre_cpx2,...])\n"
"@DESCRIPTION=La fonction IMPRODUCT renvoie le produit des nombres complexes "
"donnés.\n"
"\n"
"Si l'un des @nombre_cpxN n'est pas un nombre complexe valide, la fonction "
"renvoie #VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMPRODUCT(\"2-j\";\"4-2j\") = 6-8j.\n"
"\n"
"@SEEALSO=IMDIV"

#: ../plugins/fn-complex/functions.c:1567
msgid ""
"@FUNCTION=IMSUM\n"
"@SYNTAX=IMSUM(inumber1,inumber2)\n"
"@DESCRIPTION=IMSUM returns the sum of two complex numbers.\n"
"\n"
"* If @inumber1 or @inumber2 are not valid complex numbers, IMSUM returns "
"#VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IMSUM(\"2-4j\",\"9-j\") equals 11-5j.\n"
"\n"
"@SEEALSO=IMSUB"
msgstr ""
"@FUNCTION=IMSUM\n"
"@SYNTAX=IMSUM(nombre_cpx1;nombre_cpx2)\n"
"@DESCRIPTION=La fonction IMSUM renvoie la somme de deux nombres complexes.\n"
"\n"
"Si @nombre_cpx1 ou @nobmre_cpx2 ne sont pas des nombres complexes valides, "
"la fonction renvoie #VALEUR!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"IMSUM(\"2-4j\";\"9-j\") = 11-5j.\n"
"\n"
"@SEEALSO=IMSUB"

#: ../plugins/fn-database/functions.c:269
msgid ""
"@FUNCTION=DAVERAGE\n"
"@SYNTAX=DAVERAGE(database,field,criteria)\n"
"@DESCRIPTION=DAVERAGE function returns the average of the values in a list "
"or database that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DAVERAGE(A1:C7, \"Salary\", A9:A11) equals 42296.3333.\n"
"DAVERAGE(A1:C7, \"Age\", A9:A11) equals 39.\n"
"DAVERAGE(A1:C7, \"Salary\", A9:B11) equals 40782.5.\n"
"DAVERAGE(A1:C7, \"Age\", A9:B11) equals 36.\n"
"\n"
"@SEEALSO=DCOUNT"
msgstr ""
"@FUNCTION=DAVERAGE\n"
"@SYNTAX=DAVERAGE(base;champ;critères)\n"
"@DESCRIPTION=La fonction DAVERAGE renvoie la moyenne des valeurs d'une liste "
"ou base de données, pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DAVERAGE(A1:C7, \"Salaire\"; A9:A11) vaut 42296,3333.\n"
"DAVERAGE(A1:C7, \"Age\"; A9:A11) vaut 39.\n"
"DAVERAGE(A1:C7, \"Salaire\"; A9:B11) vaut 40782,5.\n"
"DAVERAGE(A1:C7, \"Age\"; A9:B11) vaut 36.\n"
"\n"
"@SEEALSO=DCOUNT"

#: ../plugins/fn-database/functions.c:346
msgid ""
"@FUNCTION=DCOUNT\n"
"@SYNTAX=DCOUNT(database,field,criteria)\n"
"@DESCRIPTION=DCOUNT function counts the cells that contain numbers in a "
"database that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DCOUNT(A1:C7, \"Salary\", A9:A11) equals 3.\n"
"DCOUNT(A1:C7, \"Salary\", A9:B11) equals 2.\n"
"DCOUNT(A1:C7, \"Name\", A9:B11) equals 0.\n"
"\n"
"@SEEALSO=DAVERAGE"
msgstr ""
"@FUNCTION=DCOUNT\n"
"@SYNTAX=DCOUNT(base;champ;critères)\n"
"@DESCRIPTION=La fonction DCOUNT renvoie le nombre de cellules pour "
"lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DCOUNT(A1:C7, \"Salaire\"; A9:A11) vaut 3.\n"
"DCOUNT(A1:C7, \"Salaire\"; A9:B11) vaut 2.\n"
"DCOUNT(A1:C7, \"Nom\"; A9:B11) vaut 0.\n"
"\n"
"@SEEALSO=DAVERAGE"

#: ../plugins/fn-database/functions.c:422
msgid ""
"@FUNCTION=DCOUNTA\n"
"@SYNTAX=DCOUNTA(database,field,criteria)\n"
"@DESCRIPTION=DCOUNTA function counts the cells that contain data in a "
"database that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DCOUNTA(A1:C7, \"Salary\", A9:A11) equals 3.\n"
"DCOUNTA(A1:C7, \"Salary\", A9:B11) equals 2.\n"
"DCOUNTA(A1:C7, \"Name\", A9:B11) equals 2.\n"
"\n"
"@SEEALSO=DCOUNT"
msgstr ""
"@FUNCTION=DCOUNTA\n"
"@SYNTAX=DCOUNTA(base;champ;critères)\n"
"@DESCRIPTION=La fonction DCOUNTA renvoie le nombre de cellules non vides "
"pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DCOUNTA(A1:C7, \"Salaire\"; A9:A11) vaut 3.\n"
"DCOUNTA(A1:C7, \"Salaire\"; A9:B11) vaut 2.\n"
"DCOUNTA(A1:C7, \"Nom\"; A9:B11) vaut 2.\n"
"\n"
"@SEEALSO=DCOUNT"

#: ../plugins/fn-database/functions.c:496
msgid ""
"@FUNCTION=DGET\n"
"@SYNTAX=DGET(database,field,criteria)\n"
"@DESCRIPTION=DGET function returns a single value from a column that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"* If none of the items match the conditions, DGET returns #VALUE! error.\n"
"* If more than one items match the conditions, DGET returns #NUM! error.\n"
"\n"
"DGET(A1:C7, \"Salary\", A9:A10) equals 34323.\n"
"DGET(A1:C7, \"Name\", A9:A10) equals \"Clark\".\n"
"\n"
"@SEEALSO=DCOUNT"
msgstr ""
"@FUNCTION=DGET\n"
"@SYNTAX=DGET(base;champ;critères)\n"
"@DESCRIPTION=La fonction DGET renvoie une valeur de cellule extraite d'une "
"colonne pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, les conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DGET(A1:C7, \"Salaire\"; A9:A10) vaut 34323.\n"
"DGET(A1:C7, \"Nom\"; A9:A10) vaut \"David\".\n"
"\n"
"@SEEALSO=DCOUNT"

#: ../plugins/fn-database/functions.c:582
msgid ""
"@FUNCTION=DMAX\n"
"@SYNTAX=DMAX(database,field,criteria)\n"
"@DESCRIPTION=DMAX function returns the largest number in a column that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DMAX(A1:C7, \"Salary\", A9:A11) equals 47242.\n"
"DMAX(A1:C7, \"Age\", A9:A11) equals 45.\n"
"DMAX(A1:C7, \"Age\", A9:B11) equals 43.\n"
"\n"
"@SEEALSO=DMIN"
msgstr ""
"@FUNCTION=DMAX\n"
"@SYNTAX=DMAX(base;champ;critères)\n"
"@DESCRIPTION=La fonction DMAX renvoie la plus grande valeur d'une colonne "
"pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DMAX(A1:C7, \"Salaire\"; A9:A11) vaut 47242.\n"
"DMAX(A1:C7, \"Age\"; A9:A11) vaut 45.\n"
"DMAX(A1:C7, \"Age\"; A9:B11) vaut 43.\n"
"\n"
"@SEEALSO=DMIN"

#: ../plugins/fn-database/functions.c:660
msgid ""
"@FUNCTION=DMIN\n"
"@SYNTAX=DMIN(database,field,criteria)\n"
"@DESCRIPTION=DMIN function returns the smallest number in a column that "
"match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DMIN(A1:C7, \"Salary\", A9:B11) equals 34323.\n"
"DMIN(A1:C7, \"Age\", A9:B11) equals 29.\n"
"\n"
"@SEEALSO=DMAX"
msgstr ""
"@FUNCTION=DMIN\n"
"@SYNTAX=DMIN(base;champ;critères)\n"
"@DESCRIPTION=La fonction DMIN renvoie la plus petite valeur d'une colonne "
"pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DMIN(A1:C7, \"Salaire\"; A9:B11) vaut 34323.\n"
"DMIN(A1:C7, \"Age\"; A9:B11) vaut 29.\n"
"\n"
"@SEEALSO=DMAX"

#: ../plugins/fn-database/functions.c:735
msgid ""
"@FUNCTION=DPRODUCT\n"
"@SYNTAX=DPRODUCT(database,field,criteria)\n"
"@DESCRIPTION=DPRODUCT function returns the product of numbers in a column "
"that match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DPRODUCT(A1:C7, \"Age\", A9:B11) equals 1247.\n"
"\n"
"@SEEALSO=DSUM"
msgstr ""
"@FUNCTION=DPRODUCT\n"
"@SYNTAX=DPRODUCT(base;champ;critères)\n"
"@DESCRIPTION=La fonction DPRODUCT renvoie le produit des nombres d'une "
"colonne pour laquelle certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DPRODUCT(A1:C7, \"Age\"; A9:A11) vaut 1247.\n"
"\n"
"@SEEALSO=DSUM"

#: ../plugins/fn-database/functions.c:810
#, fuzzy
msgid ""
"@FUNCTION=DSTDEV\n"
"@SYNTAX=DSTDEV(database,field,criteria)\n"
"@DESCRIPTION=DSTDEV function returns the estimate of the standard deviation "
"of a population based on a sample. The population consists of numbers that "
"match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DSTDEV(A1:C7, \"Age\", A9:B11) equals 9.89949.\n"
"DSTDEV(A1:C7, \"Salary\", A9:B11) equals 9135.112506.\n"
"\n"
"@SEEALSO=DSTDEVP"
msgstr ""
"@FUNCTION=DSTDEV\n"
"@SYNTAX=DSTDEV(base;champ;critères)\n"
"@DESCRIPTION=La fonction DSTDEV renvoie une estimée de l'écart-type d'une "
"population, basée sur un échantillon. La population contient les colonnes "
"pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DSTDEV(A1:C7, \"Age\"; A9:B11) vaut 9,89949.\n"
"DSTDEV(A1:C7, \"Salaire\"; A9:B11) vaut 9135,112506.\n"
"\n"
"@SEEALSO=DSTDEVP"

#: ../plugins/fn-database/functions.c:886
#, fuzzy
msgid ""
"@FUNCTION=DSTDEVP\n"
"@SYNTAX=DSTDEVP(database,field,criteria)\n"
"@DESCRIPTION=DSTDEVP function returns the standard deviation of a population "
"based on the entire population. The population consists of numbers that "
"match conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DSTDEVP(A1:C7, \"Age\", A9:B11) equals 7.\n"
"DSTDEVP(A1:C7, \"Salary\", A9:B11) equals 6459.5.\n"
"\n"
"@SEEALSO=DSTDEV"
msgstr ""
"@FUNCTION=DSTDEVP\n"
"@SYNTAX=DSTDEVP(base;champ;critères)\n"
"@DESCRIPTION=La fonction DSTDEVP renvoie une estimée de l'écart-type d'une "
"population, basée sur l'ensemble de la population. La population contient "
"les colonnes pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DSTDEVP(A1:C7, \"Age\"; A9:B11) vaut 7.\n"
"DSTDEVP(A1:C7, \"Salaire\"; A9:B11) vaut 6459,5.\n"
"\n"
"@SEEALSO=DSTDEV"

#: ../plugins/fn-database/functions.c:962
msgid ""
"@FUNCTION=DSUM\n"
"@SYNTAX=DSUM(database,field,criteria)\n"
"@DESCRIPTION=DSUM function returns the sum of numbers in a column that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DSUM(A1:C7, \"Age\", A9:B11) equals 72.\n"
"DSUM(A1:C7, \"Salary\", A9:B11) equals 81565.\n"
"\n"
"@SEEALSO=DPRODUCT"
msgstr ""
"@FUNCTION=DSUM\n"
"@SYNTAX=DSUM(base;champ;critères)\n"
"@DESCRIPTION=La fonction DSUM renvoie la somme des nombres d'une colonne "
"pour laquelle certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DSUM(A1:C7, \"Age\"; A9:B11) vaut 72.\n"
"DSUM(A1:C7, \"Salaire\"; A9:B11) vaut 81565.\n"
"\n"
"@SEEALSO=DPRODUCT"

#: ../plugins/fn-database/functions.c:1038
#, fuzzy
msgid ""
"@FUNCTION=DVAR\n"
"@SYNTAX=DVAR(database,field,criteria)\n"
"@DESCRIPTION=DVAR function returns the estimate of variance of a population "
"based on a sample. The population consists of numbers that match conditions "
"specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DVAR(A1:C7, \"Age\", A9:B11) equals 98.\n"
"DVAR(A1:C7, \"Salary\", A9:B11) equals 83450280.5.\n"
"\n"
"@SEEALSO=DVARP"
msgstr ""
"@FUNCTION=DVAR\n"
"@SYNTAX=DVAR(base;champ;critères)\n"
"@DESCRIPTION=La fonction DVAR renvoie une estimée de la variance d'une "
"population, basée sur un échantillon. La population contient les colonnes "
"pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DVAR(A1:C7, \"Age\"; A9:B11) vaut 98.\n"
"DVAR(A1:C7, \"Salaire\"; A9:B11) vaut 83450280,5.\n"
"\n"
"@SEEALSO=DVARP"

#: ../plugins/fn-database/functions.c:1114
#, fuzzy
msgid ""
"@FUNCTION=DVARP\n"
"@SYNTAX=DVARP(database,field,criteria)\n"
"@DESCRIPTION=DVARP function returns the variance of a population based on "
"the entire population. The population consists of numbers that match "
"conditions specified.\n"
"\n"
"@database is a range of cells in which rows of related information are "
"records and columns of data are fields. The first row of a database contains "
"labels for each column. \n"
"\n"
"@field specifies which column is used in the function.  If @field is an "
"integer, for example 2, the second column is used. Field can also be the "
"label of a column.  For example, ``Age'' refers to the column with the label "
"``Age'' in @database range. \n"
"\n"
"@criteria is the range of cells which contains the specified conditions.  "
"The first row of a @criteria should contain the labels of the fields for "
"which the criteria are for.  Cells below the labels specify conditions, for "
"example, ``>3'' or ``<9''.  Equality condition can be given simply by "
"specifying a value, e.g. ``3'' or ``John''. \n"
"Each row in @criteria specifies a separate condition. If a row in @database "
"matches a row in @criteria, then that row is counted. Technically speaking, "
"this a boolean OR operation between the rows in @criteria.\n"
"If @criteria specifies more than one column, then each of the conditions in "
"the specified columns must be true for the row in @database to match. "
"Technically speaking, this is a boolean AND operation between the columns in "
"@criteria.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the range A1:C7 contain the following values:\n"
"Name    Age     Salary\n"
"John    34      54342\n"
"Bill    35      22343\n"
"Clark   29      34323\n"
"Bob     43      47242\n"
"Susan   37      42932\n"
"Jill    45      45324\n"
"\n"
"In addition, the cells A9:B11 contain the following values:\n"
"Age     Salary\n"
"<30\n"
">40     >46000\n"
"\n"
"DVARP(A1:C7, \"Age\", A9:B11) equals 49.\n"
"DVARP(A1:C7, \"Salary\", A9:B11) equals 41725140.25.\n"
"\n"
"@SEEALSO=DVAR"
msgstr ""
"@FUNCTION=DVARP\n"
"@SYNTAX=DVARP(base;champ;critères)\n"
"@DESCRIPTION=La fonction DVARP renvoie une estimée de la variance d'une "
"population, basée sur l'ensemble de la population. La population contient "
"les colonnes pour lesquelles certains critères sont satisfaits.\n"
"\n"
"@base est un intervalle de cellules dans lequel les lignes sont des "
"enregistrements, et les colonnes sont des champs. La première ligne contient "
"les noms des champs.\n"
"\n"
"@champ indique quelle colonne doit être utilisée pour le calcul. Si @champ "
"est un entier, par exemple 2, la deuxième colonne est utilisée. @champ peut "
"aussi être le nom d'une colonne, par exemple \"Age\".\n"
"\n"
"@critères est un intervalle de cellules contenant des conditions. La "
"première ligne de cet intervalle contient les noms des champs auxquels les "
"conditions s'appliquent. Les cellules en-dessous de chaque nom précisent des "
"conditions, par exemple \">3\" ou \"<9\". L'égalité peut être indiquée en "
"donnant juste une valeur, par exemple \"3\" ou \"Jean\". Chaque ligne "
"représente une condition distincte, donc un enregistrement de la base "
"satisfaisant à toutes les conditions d'une ligne quelconque est pris en "
"compte (ce qui revient donc à faire un OU entre les lignes). Si @critères "
"contient plus d'une colonne, en revanche, lse conditions devront être "
"vérifiées simultanément pour toutes les colonnes (ce qui revient donc à "
"faire un ET booléen entre les colonnes).\n"
"\n"
"@EXAMPLES=\n"
"Supposons que A1:C7 contiennent :\n"
"Nom    Age     Salaire\n"
"Jean    34      54342\n"
"Jacques 35      22343\n"
"David   29      34323\n"
"Robert  43      47242\n"
"Susanne 37      42932\n"
"Marie   45      45324\n"
"\n"
"De plus, A9:B11 contiennent :\n"
"Age     Salaire\n"
"<30\n"
">40     >46000\n"
"\n"
"Alors,\n"
"DVARP(A1:C7, \"Age\"; A9:B11) vaut 49.\n"
"DVARP(A1:C7, \"Salaire\"; A9:B11) vaut 41525140,25.\n"
"\n"
"@SEEALSO=DVAR"

#: ../plugins/fn-database/functions.c:1190
msgid ""
"@FUNCTION=GETPIVOTDATA\n"
"@SYNTAX=GETPIVOTDATA(pivot_table,field_name)\n"
"@DESCRIPTION=GETPIVOTDATA function fetches summary data from a pivot table. "
"@pivot_table is a cell range containing the pivot table. @field_name is the "
"name of the field of which you want the summary data.\n"
"\n"
"* If the summary data is unavailable, GETPIVOTDATA returns #REF! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=GETPIVOTDATA\n"
"@SYNTAX=GETPIVOTDATA(table_pivot;champ)\n"
"@DESCRIPTION=La fonction GETPIVOTDATA extrait un résumé d'informations d'une "
"table pivot, contenue dans l'intervalle de cellules @table_pivot. @champ est "
"le nom du champ pour lequel vous souhaitez les données.\n"
"Si le résumé d'informations est inaccessible, GETPIVOTDATA renvoie une "
"erreur #REF!.\n"
"@SEEALSO="

#: ../plugins/fn-date/functions.c:99
msgid ""
"@FUNCTION=DATE\n"
"@SYNTAX=DATE (year,month,day)\n"
"@DESCRIPTION=DATE returns the number of days since the 1st of January of 1900"
"(the date serial number) for the given year, month and day.\n"
"\n"
"* If @month < 1 or @month > 12, the year will be corrected.  A similar "
"correction takes place for days.\n"
"* The @years should be at least 1900.  If @years < 1900, it is assumed to be "
"1900 + @years.\n"
"* If the given date is not valid, DATE returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DATE(2001, 3, 30) returns 'Mar 30, 2001'.\n"
" \n"
"@SEEALSO=TODAY, NOW"
msgstr ""
"@FUNCTION=DATE\n"
"@SYNTAX=DATE (année;mois;jour)\n"
"@DESCRIPTION=Calcule le nombre de jours écoulés entre le 1er janvier de "
"l'année 1900 et la date donnée (valeur sérialisée de la date).\n"
"Si @mois est < 1 ou > 12, l'année sera corrigée. De même pour les jours.\n"
"L'@année doit être au moins égale à 1900. Si @année est < 1900, DATE lui "
"ajoutera 1900.\n"
"Si la date fournie est invalide, DATE renvoie une erreur #NUM!. Cette "
"fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DATE(2001;3;30) renvoie \"Mar 30, 2001\".\n"
"\n"
"@SEEALSO=TODAY, NOW"

#: ../plugins/fn-date/functions.c:179
msgid ""
"@FUNCTION=UNIX2DATE\n"
"@SYNTAX=UNIX2DATE(unixtime)\n"
"@DESCRIPTION=UNIX2DATE converts a unix time into a spreadsheet date and "
"time.\n"
"\n"
"A unix time is the number of seconds since midnight January 1, 1970.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NOW, DATE, DATE2UNIX"
msgstr ""
"@FUNCTION=UNIX2DATE\n"
"@SYNTAX=UNIX2DATE(date_unix)\n"
"@DESCRIPTION=UNIX2DATE convertit une date Unix, c'est-à-dire un nombre de "
"secondes depuis le 01/01/1970, en une date sérialisée au format du tableur.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NOW, DATE, DATE2UNIX"

#: ../plugins/fn-date/functions.c:213
msgid ""
"@FUNCTION=DATE2UNIX\n"
"@SYNTAX=DATE2UNIX(serial)\n"
"@DESCRIPTION=DATE2UNIX converts a spreadsheet date and time serial number "
"into a unix time.\n"
"\n"
"A unix time is the number of seconds since midnight January 1, 1970.\n"
"\n"
"@EXAMPLES=\n"
"DATE2UNIX(\"01/01/2000\") equals 946656000.\n"
"\n"
"@SEEALSO=NOW, DATE, UNIX2DATE"
msgstr ""
"@FUNCTION=DATE2UNIX\n"
"@SYNTAX=DATE2UNIX(date_sérialisée)\n"
"@DESCRIPTION=UNIX2DATE convertit une date sérialisée en une date Unix, c'est-"
"à-dire un nombre de secondes depuis le 01/01/1970.\n"
"\n"
"@EXAMPLES=\n"
"DATE2UNIX(\"01/01/2000\") vaut 946656000.<\n"
"\n"
"@SEEALSO=NOW, DATE, UNIX2DATE"

#: ../plugins/fn-date/functions.c:250
msgid ""
"@FUNCTION=DATEVALUE\n"
"@SYNTAX=DATEVALUE(date_str)\n"
"@DESCRIPTION=DATEVALUE returns the serial number of the date.  @date_str is "
"the string that contains the date. The value depends on the date "
"convention.  The MS Excel 1900 convention dates things from Jan 1 1900 while "
"the 1904 convention uses Jan 1 1904.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DATEVALUE(\"1/1/1999\") equals 36161 (in the 1900 convention).\n"
"@SEEALSO=DATE"
msgstr ""
"@FUNCTION=DATEVALUE\n"
"@SYNTAX=DATEVALUE(chaîne_date)\n"
"@DESCRIPTION=DATEVALUE renvoie la valeur sérialisée de la date.\n"
"@chaîne_date est une chaîne contenant la date. La valeur dépend de la\n"
"convention de date utilisée. La convention MS Excel 1900 compte à\n"
"partir du 1er janvier 1900, alors que la convention 1904 commence au\n"
"1er janvier 1904.\n"
"\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DATEVALUE(\"1/1/1999\") vaut 36161 (dans la convention 1900).\n"
"@SEEALSO=DATE"

#: ../plugins/fn-date/functions.c:278
msgid ""
"@FUNCTION=DATEDIF\n"
"@SYNTAX=DATEDIF(date1,date2,interval)\n"
"@DESCRIPTION=DATEDIF returns the difference between two dates.  @interval is "
"one of six possible values:  \"y\", \"m\", \"d\", \"ym\", \"md\", and \"yd"
"\".\n"
"\n"
"The first three options will return the number of complete years, months, or "
"days, respectively, between the two dates specified.\n"
"\n"
"  \"ym\" will return the number of full months between the two dates, not "
"including the difference in years.\n"
"  \"md\" will return the number of full days between the two dates, not "
"including the difference in months.\n"
"  \"yd\" will return the number of full days between the two dates, not "
"including the difference in years.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"d\") equals 1191.\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"y\") equals 3.\n"
"\n"
"@SEEALSO=DATE"
msgstr ""
"@FUNCTION=DATEDIF\n"
"@SYNTAX=DATEDIF(date1;date2;intervalle)\n"
"@DESCRIPTION=DATEDIF renvoie la différence entre deux dates.  @intervalle "
"doit avoir l'une des six valeurs suivantes :  \"y\", \"m\", \"d\", \"ym\", "
"\"md\", and \"yd\".\n"
"Les trois premières options renvoient respectivement le nombre d'années, de "
"mois ou de jours entiers entre les dates.\n"
"\"ym\" renvoie le nombre de mois entiers entre les dates, sans compter la "
"différence d'années\n"
"\"md\" renvoie le nombre de jours entiers entre les dates, sans compter la "
"différence de mois\n"
"\"yd\" renvoie le nombre de jours entiers entre les dates, sans compter la "
"différence d'années\n"
"Cette fonction est compatible avec Excel. \n"
"@EXAMPLES=\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"d\") vaut 1191.\n"
"DATEDIF(DATE(2000,4,30),DATE(2003,8,4),\"y\") vaut 3.\n"
"\n"
"@SEEALSO=DATE"

#: ../plugins/fn-date/functions.c:430
msgid ""
"@FUNCTION=EDATE\n"
"@SYNTAX=EDATE(date,months)\n"
"@DESCRIPTION=EDATE returns the serial number of the date that is the "
"specified number of months before or after a given date.  @date is the "
"serial number of the initial date and @months is the number of months before "
"(negative number) or after (positive number) the initial date.\n"
"\n"
"* If @months is not an integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EDATE(DATE(2001,12,30),2) returns 'Feb 28, 2002'.\n"
"\n"
"@SEEALSO=DATE"
msgstr ""
"@FUNCTION=EDATE\n"
"@SYNTAX=EDATE(date_sérialisée;mois)\n"
"@DESCRIPTION=EDATE renvoie la valeur sérialisée de la date, correspondant à "
"@mois avant (négatif) ou après (positif) @date_sérialisée.\n"
"Si @mois n'est pas un entier, il est tronqué.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"EDATE(DATE(2001;12;30);2 vaut Fév 28, 2002.\n"
"\n"
"@SEEALSO=DATE"

#: ../plugins/fn-date/functions.c:485
msgid ""
"@FUNCTION=TODAY\n"
"@SYNTAX=TODAY()\n"
"@DESCRIPTION=TODAY returns the serial number for today (the number of days "
"elapsed since the 1st of January of 1900).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TODAY() returns 'Nov 6, 2001' on that particular day.\n"
" \n"
"@SEEALSO=NOW"
msgstr ""
"@FUNCTION=TODAY\n"
"@SYNTAX=TODAY ()\n"
"@DESCRIPTION=Renvoie la date sérialisée d'aujourd'hui (le nombre de jours "
"écoulés depuis le 1er janvier 1900).\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TODAY() renvoie 'Déc 10, 2002', aujourd'hui du moins.\n"
"\n"
"@SEEALSO=NOW"

#: ../plugins/fn-date/functions.c:511
#, fuzzy
msgid ""
"@FUNCTION=NOW\n"
"@SYNTAX=NOW ()\n"
"@DESCRIPTION=NOW returns the serial number for the date and time at the time "
"it is evaluated.\n"
"\n"
"Serial Numbers in Gnumeric are represented as follows: The integral part is "
"the number of days since the 1st of January of 1900.  The decimal part "
"represent the fraction of the day and is mapped into hour, minutes and "
"seconds.\n"
"\n"
"For example: .0 represents the beginning of the day, and 0.5 represents "
"noon.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NOW().\n"
"\n"
"@SEEALSO=TODAY"
msgstr ""
"@FUNCTION=NOW\n"
"@SYNTAX=NOW ()\n"
"@DESCRIPTION=Renvoie une valeur sérialisée représentant le jour et l'heure "
"courants.\n"
"Les dates sérialisées dans Gnumeric sont représentées comme suit: la partie "
"entière est le nombre de jours écoulés depuis le 1er Janvier 1900. La partie "
"décimale représente la fraction de jour.\n"
"Cette fonction est compatible avec Excel.\n"
"Par exemple: .0 représente le début de la journée et 0.5 représente midi\n"
"@EXAMPLES=\n"
"NOW().\n"
"\n"
"@SEEALSO=TODAY"

#: ../plugins/fn-date/functions.c:545
msgid ""
"@FUNCTION=TIME\n"
"@SYNTAX=TIME (hours,minutes,seconds)\n"
"@DESCRIPTION=TIME returns a fraction representing the time of day.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TIME(3, 5, 23) equals 3:05AM.\n"
"\n"
"@SEEALSO=HOUR"
msgstr ""
"@FUNCTION=TIME\n"
"@SYNTAX=TIME (heures;minutes;secondes)\n"
"@DESCRIPTION=Renvoie une fraction représentant l'heure fournie en "
"paramètre.\n"
"Cette fonction est compatible avec Excel\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=HOUR"

#: ../plugins/fn-date/functions.c:577
msgid ""
"@FUNCTION=TIMEVALUE\n"
"@SYNTAX=TIMEVALUE (timetext)\n"
"@DESCRIPTION=TIMEVALUE returns a fraction representing the time of day, a "
"number between 0 and 1.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TIMEVALUE(\"3:05\") equals 0.128472.\n"
"TIMEVALUE(\"2:24:53 PM\") equals 0.600613.\n"
"\n"
"@SEEALSO=HOUR,MINUTE"
msgstr ""
"@FUNCTION=TIMEVALUE\n"
"@SYNTAX=TIMEVALUE (heure_texte)\n"
"@DESCRIPTION=Renvoie une fraction représentant l'heure @heure_texte, une "
"valeur entre 0 et 1.\n"
"@EXAMPLES=\n"
"TIMEVALUE(\"3:05\") vaut 0,128472.\n"
"TIMEVALUE(\"2:24:53 PM\") vaut 0,600613.\n"
"\n"
"@SEEALSO=HOUR,MINUTE"

#: ../plugins/fn-date/functions.c:605
msgid ""
"@FUNCTION=HOUR\n"
"@SYNTAX=HOUR (date)\n"
"@DESCRIPTION=HOUR converts a serial number to an hour.  The hour is returned "
"as an integer in the range 0 (12:00 A.M.) to 23 (11:00 P.M.).\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HOUR(0.128472) equals 3.\n"
"\n"
"@SEEALSO=MINUTE, NOW, TIME, SECOND"
msgstr ""
"@FUNCTION=HOUR\n"
"@SYNTAX=HOUR (date_sérialisée)\n"
"@DESCRIPTION=Convertit la date sérialisée en heure. L'heure est retournée "
"sous la forme d'un entier entre 0 (minuit) à 23 (23h00).\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être donnée sous forme de chaîne.\n"
"\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"HOUR(0.128472) vaut 3.\n"
"\n"
"@SEEALSO=MINUTE, NOW, TIME, SECOND"

#: ../plugins/fn-date/functions.c:642
msgid ""
"@FUNCTION=MINUTE\n"
"@SYNTAX=MINUTE (date)\n"
"@DESCRIPTION=MINUTE converts a serial number to a minute.  The minute is "
"returned as an integer in the range 0 to 59.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MINUTE(0.128472) equals 5.\n"
"\n"
"@SEEALSO=HOUR, NOW, TIME, SECOND"
msgstr ""
"@FUNCTION=MINUTE\n"
"@SYNTAX=MINUTE (date_sérialisée)\n"
"@DESCRIPTION=Convertit la date sérialisée en minute. La minute est renvoyée "
"sous la forme d'un entier entre 0 et 59.\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"MINUTE(0,128472) vaut 5.\n"
"\n"
"@SEEALSO=HOUR, NOW, TIME, SECOND"

#: ../plugins/fn-date/functions.c:679
msgid ""
"@FUNCTION=SECOND\n"
"@SYNTAX=SECOND (date)\n"
"@DESCRIPTION=SECOND converts a serial number to a second.  The second is "
"returned as an integer in the range 0 to 59.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SECOND(0.600613) equals 53.\n"
"\n"
"@SEEALSO=HOUR, MINUTE, NOW, TIME"
msgstr ""
"@FUNCTION=SECOND\n"
"@SYNTAX=SECOND (date_sérialisée)\n"
"@DESCRIPTION=Convertit la date sérialisée en secondes. La seconde est "
"renvoyée sous la forme d'un entier entre 0 et 59.\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SECOND(0,600613) vaut 53.\n"
"\n"
"@SEEALSO=HOUR, MINUTE, NOW, TIME"

#: ../plugins/fn-date/functions.c:716
msgid ""
"@FUNCTION=YEAR\n"
"@SYNTAX=YEAR (date)\n"
"@DESCRIPTION=YEAR converts a serial number to a year.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"YEAR(DATE(2003, 4, 30)) equals 2003.\n"
"\n"
"@SEEALSO=DAY, MONTH, TIME, NOW"
msgstr ""
"@FUNCTION=YEAR\n"
"@SYNTAX=YEAR (date_sérialisée)\n"
"@DESCRIPTION=Convertit la date sérialisée en année.\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"\"YEAR(DATE(2003; 4; 30)) vaut 2003.\n"
"\n"
"@SEEALSO=DAY, MONTH, NOW, TIME"

#: ../plugins/fn-date/functions.c:750
msgid ""
"@FUNCTION=MONTH\n"
"@SYNTAX=MONTH (date)\n"
"@DESCRIPTION=MONTH converts a serial number to a month.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MONTH(DATE(2003, 4, 30)) equals 4.\n"
"\n"
"@SEEALSO=DAY, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=MONTH\n"
"@SYNTAX=MONTH (date_sérialisée)\n"
"@DESCRIPTION=Convertit la date sérialisée en mois.\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"MONTH(DATE(2003; 4; 30)) vaut 4.\n"
"\n"
"@SEEALSO=YEAR, DAY, NOW, TIME"

#: ../plugins/fn-date/functions.c:784
msgid ""
"@FUNCTION=DAY\n"
"@SYNTAX=DAY (date)\n"
"@DESCRIPTION=DAY converts a serial number to a day of month.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DAY(\"10/24/1968\") equals 24.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=DAY\n"
"@SYNTAX=DAY (date_sérialisée)\n"
"@DESCRIPTION=Convertit la date sérialisée en jour.\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DAY(\"24/10/1968\") vaut 24.\n"
"\n"
"@SEEALSO=YEAR, MONTH, NOW, TIME"

#: ../plugins/fn-date/functions.c:818
msgid ""
"@FUNCTION=WEEKDAY\n"
"@SYNTAX=WEEKDAY (date[, method])\n"
"@DESCRIPTION=WEEKDAY converts a serial number to a weekday.\n"
"\n"
"This function returns an integer indicating the day of week.\n"
"@METHOD indicates the numbering system.  It defaults to 1.\n"
"\n"
"  For @METHOD=1: Sunday is 1, Monday is 2, etc.\n"
"  For @METHOD=2: Monday is 1, Tuesday is 2, etc.\n"
"  For @METHOD=3: Monday is 0, Tuesday is 1, etc.\n"
"\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"WEEKDAY(\"10/24/1968\") equals 5 (Thursday).\n"
"\n"
"@SEEALSO=DAY, MONTH, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=DAY\n"
"@SYNTAX=WEEKDAY (date_sérialisée[;méthode])\n"
"@DESCRIPTION=Convertit la date sérialisée en jour de la semaine, et renvoie "
"un entier de 0 à 6.\n"
"\n"
"@méthode indique le système de numérotation des jours, et vaut par défaut.\n"
" Pour @méthode = 1, dimanche = 1, lundi = 2, etc.\n"
" Pour @méthode = 2, lundi = 1, mardi = 2, etc.\n"
" Pour @méthode = 3, mardi = 1, mercredi = 2, etc.\n"
"\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"WEEKDAY(\"24/10/1968\") vaut 5 (jeudi).\n"
"\n"
"@SEEALSO=YEAR, DAY, MONTH, NOW, TIME"

#: ../plugins/fn-date/functions.c:872
msgid ""
"@FUNCTION=DAYS360 \n"
"@SYNTAX=DAYS360 (date1,date2,method)\n"
"@DESCRIPTION=DAYS360 returns the number of days from @date1 to @date2 "
"following a 360-day calendar in which all months are assumed to have 30 "
"days.\n"
"\n"
"* If @method is 1, the European method will be used.  In this case, if the "
"day of the month is 31 it will be considered as 30.\n"
"* If @method is 0 or omitted, the MS Excel (tm) US method will be used.  "
"This is a somewhat complicated industry standard method where the last day "
"of February is considered to be the 30th day of the month, but only for the "
"first date.\n"
"* If @method is 2, a saner version of the US method is used in which both "
"dates get the same February treatment.\n"
"* Note that Gnumeric will perform regular string to serial number conversion "
"for you, so you can enter a date as a string.\n"
"* This function is mostly Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DAYS360(DATE(2003, 2, 3), DATE(2007, 4, 2)) equals 1499.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"
msgstr ""
"@FUNCTION=DAY360 \n"
"@SYNTAX=DAYS360 (date1;date2;méthode)\n"
"@DESCRIPTION=Renvoie le nombre de jours de @date1 à @date2 d'après un "
"calendrier de 360 jours dans lequel tous les mois sont supposés avoir 30 "
"jours.\n"
"\n"
"Si @méthode vaut 1, la méthode européenne est utilisée. Dans ce cas, si le "
"jour du mois est le 31, il sera considéré comme étant le 30.\n"
"Si @méthode vaut 0 ou est omis, la méthode américaine MS Excel (tm) est "
"utilisée. C'est une méthode compliquée issue des standards de l'industrie, "
"où le dernier jour de février est considéré comme le 30ème jour du mois, "
"mais seulement pour la première date.\n"
"Si @méthode vaut 2, une version plus propre de la méthode américaine est "
"utilisée, où les deux dates sont traitées de la même façon pour février.\n"
"NB: Gnumeric fera pour vous une traduction de chaîne littérale en nombre, "
"donc la date peut être fournie sous forme de chaîne.\n"
"Cette fonction est globalement compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"DAYS360(DATE(2003; 2; 3); DATE(2007; 4; 2)) vaut 1499.\n"
"\n"
"@SEEALSO=MONTH, TIME, NOW, YEAR"

#: ../plugins/fn-date/functions.c:929
msgid ""
"@FUNCTION=EOMONTH\n"
"@SYNTAX=EOMONTH (start_date,months)\n"
"@DESCRIPTION=EOMONTH returns the last day of the month which is @months from "
"the @start_date.\n"
"\n"
"* EOMONTH returns #NUM! if @start_date or @months are invalid.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"If A1 contains 12/21/00 then EOMONTH(A1,0)=12/31/00, EOMONTH(A1,5)=5/31/01, "
"and EOMONTH(A1,2)=2/28/01\n"
"\n"
"@SEEALSO=MONTH"
msgstr ""
"@FUNCTION=EOMONTH\n"
"@SYNTAX=EOMONTH (date_départ;mois)\n"
"@DESCRIPTION=Renvoie le dernier jour du mois qui est @mois plus tard que "
"@date_départ.\n"
"Renvoie #NUM! si @date_départ ou @mois n'est pas valide.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1 contient 21/12/00, alors EOMONTH(A1;0)=31/12/00, EOMONTH(A1;5)"
"=31/5/01,\n"
"et EOMONTH(A1;2)=28/2/01\n"
"\n"
"@SEEALSO=MONTH"

#: ../plugins/fn-date/functions.c:983
msgid ""
"@FUNCTION=WORKDAY\n"
"@SYNTAX=WORKDAY (start_date,days[,holidays])\n"
"@DESCRIPTION=WORKDAY returns the date which is @days working days from the "
"@start_date.  Weekends and holidays optionally supplied in @holidays are "
"respected.\n"
"\n"
"* WORKDAY returns #NUM! if @start_date or @days are invalid.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DAY(WORKDAY(DATE(2001,1,5),30)) equals 16 and\n"
"MONTH(WORKDAY(DATE(2001,1,5),30)) equals 2.\n"
"\n"
"@SEEALSO=NETWORKDAYS"
msgstr ""
"@FUNCTION=WORKDAY\n"
"@SYNTAX=WORKDAY (date_départ;jours[;vacances])\n"
"@DESCRIPTION=Renvoie le jour situé @jours ouvrés après @date_départ. Les "
"weekends et vacances éventuellement fournies dans @vacances sont respectés.\n"
"\n"
"* Renvoie l'erreur #NUM! si @date_départ ou @jours n'est pas valide.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"WORKDAY (DATE (2001;11;8);3) vaut 37208, qui correspond au 13/11/2001.\n"
"\n"
"@SEEALSO=NETWORKDAYS"

#: ../plugins/fn-date/functions.c:1156
msgid ""
"@FUNCTION=NETWORKDAYS\n"
"@SYNTAX=NETWORKDAYS (start_date,end_date[,holidays])\n"
"@DESCRIPTION=NETWORKDAYS returns the number of non-weekend non-holidays "
"between @start_date and @end_date including these dates. Holidays are "
"optionally supplied in @holidays.\n"
"\n"
"* NETWORKDAYS returns #NUM! if @start_date or @end_date are invalid.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NETWORKDAYS(DATE(2001,1,2),DATE(2001,2,15)) equals 33.\n"
"\n"
"@SEEALSO=WORKDAY"
msgstr ""
"@FUNCTION=NETWORKDAYS\n"
"@SYNTAX=NETWORKDAYS (date_début;date_fin[;vacances])\n"
"@DESCRIPTION=Renvoie le nombre de jours ouvrés entre @date_début et "
"@date_fin. Les weekends et vacances éventuellement fournies en paramètres "
"sont respectés.\n"
"\n"
"* Renvoie l'erreur #NUM! si @date_début ou @date_fin n'est pas valide.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"NETWORKDAYS(DATE(2001;1;2);DATE(2001;2;15)) vaut 33.\n"
"\n"
"@SEEALSO=WORKDAY"

#: ../plugins/fn-date/functions.c:1279
msgid ""
"@FUNCTION=ISOWEEKNUM\n"
"@SYNTAX=ISOWEEKNUM (date)\n"
"@DESCRIPTION=ISOWEEKNUM returns the ISO 8601 week number of @date.\n"
"\n"
"An ISO 8601 week starts on Monday. Weeks are numbered from 1. A week "
"including days from two different years is assigned to the year which "
"includes the most days. This means that Dec 31 could be in week 1 of the "
"following year, and Jan 1 could be in week 52 or 53 of the previous year. "
"ISOWEEKNUM returns the week number.\n"
"\n"
"* ISOWEEKNUM returns #NUM! if date is invalid.\n"
"\n"
"@EXAMPLES=\n"
"If A1 contains 12/21/00 then ISOWEEKNUM(A1)=51\n"
"@SEEALSO=WEEKNUM, ISOYEAR"
msgstr ""
"@FUNCTION=ISOWEEKNUM\n"
"@SYNTAX=ISOWEEKNUM (date)\n"
"@DESCRIPTION=ISOWEEKNUM renvoie le numéro de semaine de @date, selon la "
"norme ISO 8601.\n"
"Une semaine ISO 8601 commence le lundi, et les semaines sont numérotées à "
"partir de 1. Si une semaine comporte des jours de différentes années, elle "
"est affectée à l'année y comportant le plus de jours. Ceci implique que le "
"31 décembre peut être dans la semaine 1 de l'année suivante, et que le 1er "
"janvier peut être dans la semaine 52 ou 53 de l'année précédente.\n"
"ISOWEEKNUM renvoie le numéro de semaine, alors que ISOYEAR renvoie l'année "
"correspondante.\n"
"\n"
"Cette fonction renvoie #NUM! si la date est invalide.\n"
"@EXAMPLES=\n"
"Si A1 contient 21/12/00 alors ISOWEEKNUM(A1)=51.\n"
"@SEEALSO=WEEKNUM,ISOYEAR"

#: ../plugins/fn-date/functions.c:1316
msgid ""
"@FUNCTION=ISOYEAR\n"
"@SYNTAX=ISOYEAR (date)\n"
"@DESCRIPTION=ISOYEAR returns the year of the ISO 8601 week number of @date.\n"
"\n"
"An ISO 8601 week starts on Monday. Weeks are numbered from 1. A week "
"including days from two different years is assigned to the year which "
"includes the most days. This means that Dec 31 could be in week 1 of the "
"following year, and Jan 1 could be in week 52 or 53 of the previous year. "
"ISOYEAR returns the year the week is assigned to.\n"
"\n"
"* ISOYEAR returns #NUM! if date is invalid.\n"
"@EXAMPLES=\n"
"If A1 contains 12/31/2001 then ISOYEAR(A1)=2002\n"
"@SEEALSO=ISOWEEKNUM"
msgstr ""
"@FUNCTION=ISOYEAR\n"
"@SYNTAX=ISOYEAR (date)\n"
"@DESCRIPTION=ISOYEAR renvoie l'année correspondant à la semaine de @date, "
"selon la norme ISO 8601.\n"
"Une semaine ISO 8601 commence le lundi, et les semaines sont numérotées à "
"partir de 1. Si une semaine comporte des jours de différentes années, elle "
"est affectée à l'année y comportant le plus de jours. Ceci implique que le "
"31 décembre peut être dans la semaine 1 de l'année suivante, et que le 1er "
"janvier peut être dans la semaine 52 ou 53 de l'année précédente.\n"
"ISOYEAR renvoie l'année correspondant à cette semaine, alors que ISOWEEKNUM "
"renvoie le numéro de semaine.\n"
"Cette fonction renvoie #NUM! si la date est invalide.\n"
"@EXAMPLES=\n"
"Si A1 contient 31/12/2001 alors ISOYEAR(A1)=2002.\n"
"@SEEALSO=ISOWEEKNUM"

#: ../plugins/fn-date/functions.c:1366
msgid ""
"@FUNCTION=WEEKNUM\n"
"@SYNTAX=WEEKNUM (date[,method])\n"
"@DESCRIPTION=WEEKNUM returns the week number of @date according to the given "
"@method.\n"
"\n"
"@method defaults to 1.\n"
"\n"
"  For @method=1, week starts on Sunday, and days before first Sunday are in "
"week 0.\n"
"  For @method=2, week starts on Monday, and days before first Monday are in "
"week 0.\n"
"  For @method=150, the ISO 8601 week number is returned.\n"
"\n"
"* WEEKNUM returns #NUM! if @date or @method is invalid.\n"
"* This function is Excel compatible, except that Excel does not support ISO "
"8601 week numbers.\n"
"\n"
"@EXAMPLES=\n"
"If A1 contains 12/21/00 then WEEKNUM(A1,2)=51\n"
"@SEEALSO=ISOWEEKNUM"
msgstr ""
"@FUNCTION=WEEKNUM\n"
"@SYNTAX=WEEKNUM (date[;méthode])\n"
"@DESCRIPTION=ISOWEEKNUM renvoie le numéro de semaine de @date, selon la "
"méthode indiquée (défaut 1).\n"
"  Si @méthode = 1, la semaine commence le dimanche, et les jours avant le "
"premier dimanche font partie de la semaine 0.\n"
"  Si @méthode = 2, la semaine commence le lundi, et les jours avant le "
"premier lundi font partie de la semaine 0.\n"
"  Si @méthode = 150, la semaine est comptée selon la norme ISO 8601.\n"
"\n"
"* WEEKNUM renvoie #NUM! si @date ou @méthode est invalide.\n"
"* Cette fonction est compatible avec Excel, mis à part qu'Excel ne supporte "
"pas les numéros de semaines ISO 8601.\n"
"\n"
"@EXAMPLES=\n"
"Si A1 contient 21/12/00 alors WEEKNUM(A1;2)=51.\n"
"@SEEALSO=ISOWEEKNUM"

#: ../plugins/fn-date/functions.c:1414
msgid ""
"@FUNCTION=YEARFRAC\n"
"@SYNTAX=YEARFRAC (start_date, end_date [,basis])\n"
"@DESCRIPTION=YEARFRAC returns the number of full days between @start_date "
"and @end_date according to the @basis.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DATEDIF"
msgstr ""
"@FUNCTION=YEARFRAC\n"
"@SYNTAX=YEARFRAC(date_début;date_fin[;base])\n"
"@DESCRIPTION=YEARFRAC renvoie le nombre de jours entre @date_début et "
"@date_fin, selon la @base.\n"
"@SEEALSO=DATEDIF"

#: ../plugins/fn-eng/functions.c:205
msgid ""
"@FUNCTION=BASE\n"
"@SYNTAX=BASE(number,base[,length])\n"
"@DESCRIPTION=BASE function converts a number to a string representing that "
"number in base @base.\n"
"\n"
"* @base must be an integer between 2 and 36.\n"
"* This function is OpenOffice.Org compatible.\n"
"* Optional argument @length specifies the minimum result length.  Leading  "
"zeroes will be added to reach this length.\n"
"\n"
"@EXAMPLES=\n"
"BASE(255,16,4) equals \"00FF\".\n"
"\n"
"@SEEALSO=DECIMAL"
msgstr ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=La fonction OCT2DEC convertit un nombre octal sous forme de "
"chaîne ou de nombre en son équivalent décimal.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") vaut 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"

#: ../plugins/fn-eng/functions.c:243
msgid ""
"@FUNCTION=BIN2DEC\n"
"@SYNTAX=BIN2DEC(x)\n"
"@DESCRIPTION=BIN2DEC function converts a binary number in string or number "
"to its decimal equivalent.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BIN2DEC(101) equals 5.\n"
"\n"
"@SEEALSO=DEC2BIN, BIN2OCT, BIN2HEX"
msgstr ""
"@FUNCTION=BIN2DEC\n"
"@SYNTAX=BIN2DEC(x)\n"
"@DESCRIPTION=La fonction BIN2DEC convertit un nombre binaire sous forme de "
"chaîne ou de nombre en son équivalent décimal.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"BIN2DEC(101) vaut 5.\n"
"\n"
"@SEEALSO=DEC2BIN, BIN2OCT, BIN2HEX"

#: ../plugins/fn-eng/functions.c:272
msgid ""
"@FUNCTION=BIN2OCT\n"
"@SYNTAX=BIN2OCT(number[,places])\n"
"@DESCRIPTION=BIN2OCT function converts a binary number to an octal number. "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BIN2OCT(110111) equals 67.\n"
"\n"
"@SEEALSO=OCT2BIN, BIN2DEC, BIN2HEX"
msgstr ""
"@FUNCTION=BIN2OCT\n"
"@SYNTAX=BIN2OCT(nombre[;taille])\n"
"@DESCRIPTION=La fonction BIN2OCT convertit un nombre binaire en nombre "
"octal. @taille est un champ optionnel, spécifiant qu'il faut ajouter des "
"zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"BIN2OCT(110111) vaut 67.\n"
"\n"
"@SEEALSO=OCT2BIN, BIN2DEC, BIN2HEX"

#: ../plugins/fn-eng/functions.c:304
msgid ""
"@FUNCTION=BIN2HEX\n"
"@SYNTAX=BIN2HEX(number[,places])\n"
"@DESCRIPTION=BIN2HEX function converts a binary number to a hexadecimal "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BIN2HEX(100111) equals 27.\n"
"\n"
"@SEEALSO=HEX2BIN, BIN2OCT, BIN2DEC"
msgstr ""
"@FUNCTION=BIN2HEX\n"
"@SYNTAX=BIN2HEX(nombre[;taille])\n"
"@DESCRIPTION=La fonction BIN2HEX convertit un @nombre binaire en nombre "
"hexadécimal. @taille est un champ optionnel, spécifiant qu'il faut ajouter "
"des zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"BIN2HEX(100111) vaut 27.\n"
"\n"
"@SEEALSO=BIN2OCT, BIN2DEC, HEX2BIN"

#: ../plugins/fn-eng/functions.c:336
msgid ""
"@FUNCTION=DEC2BIN\n"
"@SYNTAX=DEC2BIN(number[,places])\n"
"@DESCRIPTION=DEC2BIN function converts a decimal number to a binary number. "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEC2BIN(42) equals 101010.\n"
"\n"
"@SEEALSO=BIN2DEC, DEC2OCT, DEC2HEX"
msgstr ""
"@FUNCTION=DEC2BIN\n"
"@SYNTAX=DEC2BIN(nombre[;taille])\n"
"@DESCRIPTION=La fonction DEC2BIN convertit un @nombre décimal en nombre "
"binaire. @taille est un champ optionnel, spécifiant qu'il faut ajouter des "
"zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DEC2BIN(42) vaut 101010.\n"
"\n"
"@SEEALSO=BIN2DEC, DEC2OCT, DEC2HEX"

#: ../plugins/fn-eng/functions.c:368
msgid ""
"@FUNCTION=DEC2OCT\n"
"@SYNTAX=DEC2OCT(number[,places])\n"
"@DESCRIPTION=DEC2OCT function converts a decimal number to an octal number. "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEC2OCT(42) equals 52.\n"
"\n"
"@SEEALSO=OCT2DEC, DEC2BIN, DEC2HEX"
msgstr ""
"@FUNCTION=DEC2OCT\n"
"@SYNTAX=DEC2OCT(nombre[;taille])\n"
"@DESCRIPTION=La fonction DEC2OCT convertit un @nombre décimal en nombre "
"octal. @taille est un champ optionnel, spécifiant qu'il faut ajouter des "
"zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DEC2OCT(42) vaut 52.\n"
"\n"
"@SEEALSO=OCT2DEC, DEC2BIN, DEC2HEX"

#: ../plugins/fn-eng/functions.c:400
msgid ""
"@FUNCTION=DEC2HEX\n"
"@SYNTAX=DEC2HEX(number[,places])\n"
"@DESCRIPTION=DEC2HEX function converts a decimal number to a hexadecimal "
"number. @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEC2HEX(42) equals 2A.\n"
"\n"
"@SEEALSO=HEX2DEC, DEC2BIN, DEC2OCT"
msgstr ""
"@FUNCTION=DEC2HEX\n"
"@SYNTAX=DEC2HEX(nombre[;taille])\n"
"@DESCRIPTION=La fonction DEC2HEX convertit un @nombre décimal en nombre "
"hexadécimal. @taille est un champ optionnel, spécifiant qu'il faut ajouter "
"des zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DEC2HEX(42) vaut 2A.\n"
"\n"
"@SEEALSO=HEX2DEC, DEC2BIN, DEC2OCT"

#: ../plugins/fn-eng/functions.c:432
msgid ""
"@FUNCTION=DECIMAL\n"
"@SYNTAX=DECIMAL(text,base)\n"
"@DESCRIPTION=DECIMAL function converts a number in base @base to decimal.\n"
"\n"
"* @base must be an integer between 2 and 36.\n"
"* This function is OpenOffice.Org compatible.\n"
"\n"
"@EXAMPLES=\n"
"DECIMAL(\"A1\",16) equals 161.\n"
"\n"
"@SEEALSO=BASE"
msgstr ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=La fonction OCT2DEC convertit un nombre octal sous forme de "
"chaîne ou de nombre en son équivalent décimal.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") vaut 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"

#: ../plugins/fn-eng/functions.c:464
msgid ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=OCT2DEC function converts an octal number in a string or number "
"to its decimal equivalent.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") equals 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"
msgstr ""
"@FUNCTION=OCT2DEC\n"
"@SYNTAX=OCT2DEC(x)\n"
"@DESCRIPTION=La fonction OCT2DEC convertit un nombre octal sous forme de "
"chaîne ou de nombre en son équivalent décimal.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"OCT2DEC(\"124\") vaut 84.\n"
"\n"
"@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX"

#: ../plugins/fn-eng/functions.c:493
msgid ""
"@FUNCTION=OCT2BIN\n"
"@SYNTAX=OCT2BIN(number[,places])\n"
"@DESCRIPTION=OCT2BIN function converts an octal number to a binary number.  "
"@places is an optional field, specifying to zero pad to that number of "
"spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OCT2BIN(\"213\") equals 10001011.\n"
"\n"
"@SEEALSO=BIN2OCT, OCT2DEC, OCT2HEX"
msgstr ""
"@FUNCTION=OCT2BIN\n"
"@SYNTAX=OCT2BIN(nombre[;taille])\n"
"@DESCRIPTION=La fonction OCT2BIN convertit un @nombre octal en nombre "
"binaire. @taille est un champ optionnel, spécifiant qu'il faut ajouter des "
"zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"OCT2BIN(\"213\") vaut 10001011.\n"
"\n"
"@SEEALSO=BIN2OCT, OCT2DEC, OCT2HEX"

#: ../plugins/fn-eng/functions.c:525
msgid ""
"@FUNCTION=OCT2HEX\n"
"@SYNTAX=OCT2HEX(number[,places])\n"
"@DESCRIPTION=OCT2HEX function converts an octal number to a hexadecimal "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OCT2HEX(132) equals 5A.\n"
"\n"
"@SEEALSO=HEX2OCT, OCT2BIN, OCT2DEC"
msgstr ""
"@FUNCTION=OCT2HEX\n"
"@SYNTAX=OCT2HEX(nombre[;taille])\n"
"@DESCRIPTION=La fonction OCT2HEX convertit un @nombre octal en nombre "
"hexadécimal. @taille est un champ optionnel, spécifiant qu'il faut ajouter "
"des zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"OCT2HEX(132) vaut 5A.\n"
"\n"
"@SEEALSO=HEX2OCT, OCT2BIN, OCT2DEC"

#: ../plugins/fn-eng/functions.c:557
msgid ""
"@FUNCTION=HEX2BIN\n"
"@SYNTAX=HEX2BIN(number[,places])\n"
"@DESCRIPTION=HEX2BIN function converts a hexadecimal number to a binary "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HEX2BIN(\"2A\") equals 101010.\n"
"\n"
"@SEEALSO=BIN2HEX, HEX2OCT, HEX2DEC"
msgstr ""
"@FUNCTION=HEX2BIN\n"
"@SYNTAX=HEX2BIN(nombre[;taille])\n"
"@DESCRIPTION=La fonction HEX2BIN convertit un @nombre hexadécimal en nombre "
"binaire. @taille est un champ optionnel, spécifiant qu'il faut ajouter des "
"zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"HEX2BIN(\"2A\") vaut 101010.\n"
"\n"
"@SEEALSO=BIN2HEX, HEX2OCT, HEX2DEC"

#: ../plugins/fn-eng/functions.c:589
msgid ""
"@FUNCTION=HEX2OCT\n"
"@SYNTAX=HEX2OCT(number[,places])\n"
"@DESCRIPTION=HEX2OCT function converts a hexadecimal number to an octal "
"number.  @places is an optional field, specifying to zero pad to that number "
"of spaces.\n"
"\n"
"* If @places is too small or negative #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HEX2OCT(\"2A\") equals 52.\n"
"\n"
"@SEEALSO=OCT2HEX, HEX2BIN, HEX2DEC"
msgstr ""
"@FUNCTION=HEX2OCT\n"
"@SYNTAX=HEX2OCT(nombre[;taille])\n"
"@DESCRIPTION=La fonction HEX2OCT convertit un @nombre hexadécimal en nombre "
"octal. @taille est un champ optionnel, spécifiant qu'il faut ajouter des "
"zéros en tête du nombre pour qu'il ait la taille souhaitée.\n"
"Si @taille est trop petit ou négatif, l'erreur #NUM! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"HEX2OCT(\"2A\") vaut 52.\n"
"\n"
"@SEEALSO=OCT2HEX, HEX2BIN, HEX2DEC"

#: ../plugins/fn-eng/functions.c:621
msgid ""
"@FUNCTION=HEX2DEC\n"
"@SYNTAX=HEX2DEC(x)\n"
"@DESCRIPTION=HEX2DEC function converts a hexadecimal number to its decimal "
"equivalent.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HEX2DEC(\"2A\") equals 42.\n"
"\n"
"@SEEALSO=DEC2HEX, HEX2BIN, HEX2OCT"
msgstr ""
"@FUNCTION=HEX2DEC\n"
"@SYNTAX=HEX2DEC(x)\n"
"@DESCRIPTION=La fonction HEX2DEC convertit un nombre hexadécimal en nombre "
"décimal.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"HEX2DEC(\"2A\") vaut 42.\n"
"\n"
"@SEEALSO=DEC2HEX, HEX2BIN, HEX2OCT"

#: ../plugins/fn-eng/functions.c:650
msgid ""
"@FUNCTION=BESSELI\n"
"@SYNTAX=BESSELI(x,y)\n"
"@DESCRIPTION=BESSELI function returns the Neumann, Weber or Bessel "
"function.\n"
"\n"
"@x is where the function is evaluated. @y is the order of the Bessel "
"function, if non-integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELI(0.7,3) equals 0.007367374.\n"
"\n"
"@SEEALSO=BESSELJ,BESSELK,BESSELY"
msgstr ""
"@FUNCTION=BESSELI\n"
"@SYNTAX=BESSELI(x;y)\n"
"@DESCRIPTION=La fonction BESSELI renvoie la fonction de Bessel modifiée, "
"évaluée en @x. @y est l'ordre de la fonction de Bessel, tronqué s'il n'est "
"pas entier.\n"
"\n"
"* Si @x ou @y ne sont pas des valeurs numériques, l'erreur #VALEUR! est "
"renvoyée.\n"
"* Si @y < 0, l'erreur #NUM! est renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"BESSELI(0,7;3) vaut 0,007367374.\n"
"\n"
"@SEEALSO=BESSELJ,BESSELK,BESSELY"

#: ../plugins/fn-eng/functions.c:693
msgid ""
"@FUNCTION=BESSELK\n"
"@SYNTAX=BESSELK(x,y)\n"
"@DESCRIPTION=BESSELK function returns the Neumann, Weber or Bessel function. "
"@x is where the function is evaluated. @y is the order of the Bessel "
"function, if non-integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELK(3,9) equals 397.95880.\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELY"
msgstr ""
"@FUNCTION=BESSELK\n"
"@SYNTAX=BESSELK(x;y)\n"
"@DESCRIPTION=La fonction BESSELK renvoie la fonction de Bessel évaluée en "
"@x. Cette fonction est équivalente aux fonctions J et Y, pour des valeurs "
"purement imaginaires. @y est l'ordre de la fonction de Bessel, tronqué s'il "
"n'est pas entier.\n"
"\n"
"* Si @x ou @y ne sont pas des valeurs numériques, l'erreur #VALEUR! est "
"renvoyée.\n"
"* Si @y < 0, l'erreur #NUM! est renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"BESSELK(3;9) vaut 397,95880.\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELY"

#: ../plugins/fn-eng/functions.c:731
msgid ""
"@FUNCTION=BESSELJ\n"
"@SYNTAX=BESSELJ(x,y)\n"
"@DESCRIPTION=BESSELJ function returns the Bessel function with @x is where "
"the function is evaluated. @y is the order of the Bessel function, if non-"
"integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELJ(0.89,3) equals 0.013974004.\n"
"\n"
"@SEEALSO=BESSELI,BESSELK,BESSELY"
msgstr ""
"@FUNCTION=BESSELJ\n"
"@SYNTAX=BESSELJ(x;y)\n"
"@DESCRIPTION=La fonction BESSELJ renvoie la fonction de Bessel, évaluée en "
"@x. @y est l'ordre de la fonction de Bessel, tronqué s'il n'est pas entier.\n"
"\n"
"* Si @x ou @y ne sont pas des valeurs numériques, l'erreur #VALEUR! est "
"renvoyée.\n"
"* Si @y < 0, l'erreur #NUM! est renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"BESSELJ(0,89;3) vaut 0,013974004.\n"
"\n"
"@SEEALSO=BESSELI,BESSELK,BESSELY"

#: ../plugins/fn-eng/functions.c:769
msgid ""
"@FUNCTION=BESSELY\n"
"@SYNTAX=BESSELY(x,y)\n"
"@DESCRIPTION=BESSELY function returns the Neumann, Weber or Bessel "
"function.\n"
"\n"
"@x is where the function is evaluated. @y is the order of the Bessel "
"function, if non-integer it is truncated.\n"
"\n"
"* If @x or @y are not numeric a #VALUE! error is returned.\n"
"* If @y < 0 a #NUM! error is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BESSELY(4,2) equals 0.215903595.\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELK"
msgstr ""
"@FUNCTION=BESSELY\n"
"@SYNTAX=BESSELY(x;y)\n"
"@DESCRIPTION=La fonction BESSELY renvoie la fonction de Bessel, également "
"appelée fonction de Neumann ou de Weber, évaluée en @x. @y est l'ordre de la "
"fonction de Bessel, tronqué s'il n'est pas entier.\n"
"\n"
"* Si @x ou @y ne sont pas des valeurs numériques, l'erreur #VALEUR! est "
"renvoyée.\n"
"* Si @y < 0, l'erreur #NUM! est renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"BESSELY(4;2) vaut 0,215903595.\n"
"\n"
"@SEEALSO=BESSELI,BESSELJ,BESSELK"

#: ../plugins/fn-eng/functions.c:811
#, fuzzy
msgid ""
"@FUNCTION=CONVERT\n"
"@SYNTAX=CONVERT(number,from_unit,to_unit)\n"
"@DESCRIPTION=CONVERT returns a conversion from one measurement system to "
"another.  For example, you can convert a weight in pounds to a weight in "
"grams.  @number is the value you want to convert, @from_unit specifies the "
"unit of the @number, and @to_unit is the unit for the result.\n"
"\n"
"@from_unit and @to_unit can be any of the following:\n"
"\n"
"Weight and mass:\n"
"\t'g'  \t\tGram\n"
"\t'sg' \t\tSlug\n"
"\t'lbm'\t\tPound\n"
"\t'u'  \t\tU (atomic mass)\n"
"\t'ozm'\t\tOunce\n"
"\n"
"Distance:\n"
"\t'm'   \t\tMeter\n"
"\t'mi'  \t\tStatute mile\n"
"\t'Nmi' \t\tNautical mile\n"
"\t'in'  \t\tInch\n"
"\t'ft'  \t\tFoot\n"
"\t'yd'  \t\tYard\n"
"\t'ang' \t\tAngstrom\n"
"\t'Pica'\t\tPica\n"
"\n"
"Time:\n"
"\t'yr'  \t\tYear\n"
"\t'day' \t\tDay\n"
"\t'hr'  \t\tHour\n"
"\t'mn'  \t\tMinute\n"
"\t'sec' \t\tSecond\n"
"\n"
"Pressure:\n"
"\t'Pa'  \t\tPascal\n"
"\t'atm' \t\tAtmosphere\n"
"\t'mmHg'\tmm of Mercury\n"
"\n"
"Force:\n"
"\t'N'   \t\tNewton\n"
"\t'dyn' \t\tDyne\n"
"\t'lbf' \t\tPound force\n"
"\n"
"Energy:\n"
"\t'J'    \t\tJoule\n"
"\t'e'    \t\tErg\n"
"\t'c'    \t\tThermodynamic calorie\n"
"\t'cal'  \t\tIT calorie\n"
"\t'eV'   \tElectron volt\n"
"\t'HPh'  \tHorsepower-hour\n"
"\t'Wh'   \tWatt-hour\n"
"\t'flb'  \t\tFoot-pound\n"
"\t'BTU'  \tBTU\n"
"\n"
"Power:\n"
"\t'HP'   \tHorsepower\n"
"\t'W'    \tWatt\n"
"\n"
"Magnetism:\n"
"\t'T'    \t\tTesla\n"
"\t'ga'   \tGauss\n"
"\n"
"Temperature:\n"
"\t'C'    \t\tDegree Celsius\n"
"\t'F'    \t\tDegree Fahrenheit\n"
"\t'K'    \t\tDegree Kelvin\n"
"\n"
"Liquid measure:\n"
"\t'tsp'  \t\tTeaspoon\n"
"\t'tbs'  \t\tTablespoon\n"
"\t'oz'   \t\tFluid ounce\n"
"\t'cup'  \tCup\n"
"\t'pt'   \t\tPint\n"
"\t'qt'   \t\tQuart\n"
"\t'gal'  \t\tGallon\n"
"\t'l'    \t\tLiter\n"
"\n"
"For metric units any of the following prefixes can be used:\n"
"\t'Y'  \tyotta \t1E+24\n"
"\t'Z'  \tzetta \t1E+21\n"
"\t'E'  \texa   \t1E+18\n"
"\t'P'  \tpeta  \t1E+15\n"
"\t'T'  \ttera  \t\t1E+12\n"
"\t'G'  \tgiga  \t1E+09\n"
"\t'M'  \tmega  \t1E+06\n"
"\t'k'  \tkilo  \t\t1E+03\n"
"\t'h'  \thecto \t1E+02\n"
"\t'e'  \tdeka  \t1E+01\n"
"\t'd'  \tdeci  \t1E-01\n"
"\t'c'  \tcenti \t\t1E-02\n"
"\t'm'  \tmilli \t\t1E-03\n"
"\t'u'  \tmicro \t1E-06\n"
"\t'n'  \tnano  \t1E-09\n"
"\t'p'  \tpico  \t1E-12\n"
"\t'f'  \tfemto \t1E-15\n"
"\t'a'  \tatto  \t\t1E-18\n"
"\t'z'  \tzepto \t\t1E-21\n"
"\t'y'  \tyocto \t\t1E-24\n"
"\n"
"* If @from_unit and @to_unit are different types, CONVERT returns #N/A "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CONVERT(3,\"lbm\",\"g\") equals 1360.7769.\n"
"CONVERT(5.8,\"m\",\"in\") equals 228.3465.\n"
"CONVERT(7.9,\"cal\",\"J\") equals 33.07567.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CONVERT\n"
"@SYNTAX=CONVERT(nombre;unité_src;unité_dest)\n"
"@DESCRIPTION=La fonction CONVERT effectue la conversion d'un système de "
"mesure vers un autre. Par exemple, il est possible de convertir une masse en "
"livres en une masse en grammes. @nombre est la valeur à convertir, "
"@unité_src spécifie l'unité d'origine, et @unité_dest indique l'unité dans "
"laquelle on veut effectuer la conversion.\n"
"@unité_src et @unité_dest peuvent être parmi les types suivants :\n"
"\n"
"Poids et masse :\n"
"'g'    Gramme\n"
"'sg'   Slug\n"
"'lbm'  Livre\n"
"'u'    U (masse atomique)\n"
"'ozm'  Once\n"
"\n"
"Distance :\n"
"'m'    Mètre\n"
"'mi'   Mile terrestre\n"
"'Nmi'  Mile nautique\n"
"'in'   Pouce\n"
"'ft'   Pied\n"
"'yd'   Coudée (yard)\n"
"'ang'  Angström\n"
"'Pica' Pica\n"
"\n"
"Durée :\n"
"'yr'   Année\n"
"'day'  Jour\n"
"'hr'   Heure\n"
"'mn'   Minute\n"
"'sec'  Seconde\n"
"\n"
"Pression :\n"
"'Pa'   Pascal\n"
"'atm'  Atmosphère\n"
"'mmHg' mm de Mercure\n"
"\n"
"Force :\n"
"'N'    Newton\n"
"'dyn'  Dyne\n"
"'lbf'  Poids Livre\n"
"\n"
"Energie :\n"
"'J'    Joule\n"
"'e'    Erg\n"
"'c'    Calorie thermodynamique\n"
"'cal'  Calorie SI\n"
"'eV'   Electron volt\n"
"'HPh'  Cheval-Vapeur-heure\n"
"'Wh'   Watt-heure\n"
"'flb'  Livre-pied\n"
"'BTU'  BTU (British Thermal Unit)\n"
"\n"
"Puissance :\n"
"'HP'   Cheval Vapeur\n"
"'W'    Watt\n"
"Magnétisme :\n"
"'T'    Tesla\n"
"'ga'   Gauss\n"
"\n"
"Température :\n"
"'C'    Degré Celsius\n"
"'F'    Degré Fahrenheit\n"
"'K'    Kelvin\n"
"\n"
"Mesure de liquide :\n"
"'tsp'  Teaspoon\n"
"'tbs'  Tablespoon\n"
"'oz'   Once liquide\n"
"'cup'  Tasse\n"
"'pt'   Pinte\n"
"'qt'   Quart\n"
"'gal'  Gallon\n"
"'l'    Litre\n"
"\n"
"Pour les unités métriques, les préfixes suivants peuvent être utilisés :\n"
"'Y'  yotta  1E+24\n"
"'Z'  zetta  1E+21\n"
"'E'  exa    1E+18\n"
"'P'  peta   1E+15\n"
"'T'  tera   1E+12\n"
"'G'  giga   1E+09\n"
"'M'  mega   1E+06\n"
"'k'  kilo   1E+03\n"
"'h'  hecto  1E+02\n"
"'e'  deca   1E+01\n"
"'d'  deci   1E-01\n"
"'c'  centi  1E-02\n"
"'m'  milli  1E-03\n"
"'u'  micro  1E-06\n"
"'n'  nano   1E-09\n"
"'p'  pico   1E-12\n"
"'f'  femto  1E-15\n"
"'a'  atto   1E-18\n"
"'z'  zepto  1E-21\n"
"'y'  yocto  1E-24\n"
"\n"
"Si @unité_src et @unité_dest sont de types différents, CONVERT renvoie "
"l'erreur #NUM!.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CONVERT(3;\"lbm\";\"g\") = 1360,7769.\n"
"CONVERT(5.8;\"m\";\"in\") = 228,3465.\n"
"CONVERT(7.9;\"cal\";\"J\") = 33,07567.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-eng/functions.c:1228
msgid ""
"@FUNCTION=ERF\n"
"@SYNTAX=ERF([lower limit,]upper_limit)\n"
"@DESCRIPTION=ERF returns the error function.  With a single argument ERF "
"returns the error function, defined as\n"
"\n"
"\terf(x) = 2/sqrt(pi)* integral from 0 to x of exp(-t*t) dt.\n"
"\n"
"If two arguments are supplied, they are the lower and upper limits of the "
"integral.\n"
"\n"
"* If either @lower_limit or @upper_limit is not numeric a #VALUE! error is "
"returned.\n"
"* This function is upward-compatible with that in Excel. (If two arguments "
"are supplied, Excel will not allow either to be negative.)\n"
"\n"
"@EXAMPLES=\n"
"ERF(0.4) equals 0.428392355.\n"
"ERF(1.6448536269515/SQRT(2)) equals 0.90.\n"
"\n"
"The second example shows that a random variable with a normal distribution "
"has a 90 percent chance of falling within approximately 1.645 standard "
"deviations of the mean.\n"
"@SEEALSO=ERFC"
msgstr ""
"@FUNCTION=ERF\n"
"@SYNTAX=ERF([limite_inf;]limite_sup)\n"
"@DESCRIPTION=Avec un seul argument, ERF renvoie la valeur de la fonction "
"d'erreur, définie comme erf(x) = 2/racine(pi)* intégrale de 0 à x de exp(-"
"t*t) dt. Si deux arguments sont fournis, ils représentent les limites de "
"l'intégrale.\n"
"Si @limite_inf ou @limite_sup n'est pas numérique, une erreur #VALUE! est "
"renvoyée.\n"
"Cette fonction est en compatibilité ascendante avec celle d'Excel. (Avec "
"deux arguments, Excel ne permet pas qu'ils soient négatifs).\n"
"@EXAMPLES=\n"
"ERF(0,4) vaut 0,428392355.\n"
"ERF(1,6448536269515/SQRT(2)) vaut 0,90.\n"
"\n"
"Le deuxième exemple montre qu'une variable aléatoire avec une distribution "
"normale a une probabilité de 90% d'être à moins de 1,645 écart-types de la "
"moyenne.\n"
"@SEEALSO=ERFC"

#: ../plugins/fn-eng/functions.c:1279
msgid ""
"@FUNCTION=ERFC\n"
"@SYNTAX=ERFC(x)\n"
"@DESCRIPTION=ERFC function returns the complementary error function, defined "
"as\n"
"\n"
"\t1 - erf(x).\n"
"\n"
"erfc(x) is calculated more accurately than 1 - erf(x) for arguments larger "
"than about 0.5.\n"
"\n"
"* If @x is not numeric a #VALUE! error is returned.  \n"
"@EXAMPLES=\n"
"ERFC(6) equals 2.15197367e-17.\n"
"\n"
"@SEEALSO=ERF"
msgstr ""
"@FUNCTION=ERFC\n"
"@SYNTAX=ERFC(x)\n"
"@DESCRIPTION=La fonction ERFC renvoie le complémentaire de la fonction "
"d'erreur, défini comme 1 - erf(x). Cette fonction renvoie une valeur plus "
"précise que 1-erf(x) si @x est supérieur à 0.5 environ.\n"
"Si x n'est pas une valeur numérique, l'erreur #VALEUR! est renvoyée.\n"
"@EXAMPLES=\n"
"ERFC(6) = 2,15197367e-17.\n"
"\n"
"@SEEALSO=ERF"

#: ../plugins/fn-eng/functions.c:1310
msgid ""
"@FUNCTION=DELTA\n"
"@SYNTAX=DELTA(x[,y])\n"
"@DESCRIPTION=DELTA function tests for numerical equivalence of two "
"arguments, returning 1 in case of equality.\n"
"\n"
"* @y is optional, and defaults to 0.\n"
"* If either argument is non-numeric returns a #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DELTA(42.99,43) equals 0.\n"
"\n"
"@SEEALSO=EXACT,GESTEP"
msgstr ""
"@FUNCTION=DELTA\n"
"@SYNTAX=DELTA(x[;y])\n"
"@DESCRIPTION=La fonction DELTA teste l'équivalence numérique de deux "
"arguments et renvoie 1 en cas d'égalité. @y est un paramètre optionnel et "
"vaut zéro par défaut.\n"
"Si un des arguments n'est pas numérique, une erreur #VALEUR! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DELTA(42,99;43) = 0.\n"
"\n"
"@SEEALSO=EXACT,GESTEP"

#: ../plugins/fn-eng/functions.c:1342
#, fuzzy
msgid ""
"@FUNCTION=GESTEP\n"
"@SYNTAX=GESTEP(x[,y])\n"
"@DESCRIPTION=GESTEP function tests if @x is >= @y, returning 1 if it is so, "
"and 0 otherwise. @y is optional, and defaults to 0.\n"
"\n"
"* If either argument is non-numeric returns a #VALUE! error.\n"
"* This function is Excel compatible.\n"
"@EXAMPLES=\n"
"GESTEP(5,4) equals 1.\n"
"\n"
"@SEEALSO=DELTA"
msgstr ""
"@FUNCTION=GESTEP\n"
"@SYNTAX=GESTEP(x[;y])\n"
"@DESCRIPTION=La fonction GESTEP teste si @x >= @y et renvoie 1 dans ce cas, "
"0 sinon. @y est un paramètre optionnel et vaut zéro par défaut.\n"
"Si un des arguments n'est pas numérique, une erreur #VALEUR! est renvoyée.\n"
"Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"GESTEP(5;4) = 1.\n"
"\n"
"@SEEALSO=DELTA"

#: ../plugins/fn-eng/functions.c:1373
msgid ""
"@FUNCTION=INVSUMINV\n"
"@SYNTAX=INVSUMINV(x1,x2,...)\n"
"@DESCRIPTION=INVSUMINV sum calculates the inverse of the sum of inverses.\n"
"\n"
"The primary use of this is for calculating equivalent resistance for "
"parallel resistors or equivalent capacitance of a series of capacitors.\n"
"\n"
"* All arguments must be non-negative, or else a #VALUE! result is returned.\n"
"* If any argument is zero, the result is zero.\n"
"\n"
"@EXAMPLES=\n"
"INVSUMINV(2000,2000) equals 1000.\n"
"\n"
"@SEEALSO=HARMEAN"
msgstr ""

#: ../plugins/fn-erlang/functions.c:107
msgid ""
"@FUNCTION=PROBBLOCK\n"
"@SYNTAX=PROBBLOCK(traffic,circuits)\n"
"@DESCRIPTION=PROBBLOCK returns probability of blocking when a number of "
"@traffic loads into a number of @circuits (servers).\n"
"\n"
"* @traffic cannot exceed @circuits\n"
"\n"
"@EXAMPLES=\n"
"PROBBLOCK(24,30) returns 0.4012.\n"
"\n"
"@SEEALSO=OFFTRAF, DIMCIRC, OFFCAP"
msgstr ""

#: ../plugins/fn-erlang/functions.c:139
msgid ""
"@FUNCTION=OFFTRAF\n"
"@SYNTAX=OFFTRAF(traffic,circuits)\n"
"@DESCRIPTION=OFFTRAF returns a predicted number of offered traffic from a "
"number of carried @traffic (taken from measurements) on a number of "
"@circuits.\n"
"\n"
"* @traffic cannot exceed @circuits\n"
"\n"
"@EXAMPLES=\n"
"OFFTRAF(24,30) returns 25.527.\n"
"\n"
"@SEEALSO=PROBBLOCK, DIMCIRC, OFFCAP"
msgstr ""

#: ../plugins/fn-erlang/functions.c:208
msgid ""
"@FUNCTION=DIMCIRC\n"
"@SYNTAX=DIMCIRC(traffic,gos)\n"
"@DESCRIPTION=DIMCIRC returns a number of circuits required from a number of "
"@traffic loads with @gos grade of service.\n"
"\n"
"@EXAMPLES=\n"
"DIMCIRC(24,1%) returns 35.\n"
"\n"
"@SEEALSO=OFFCAP, OFFTRAF, PROBBLOCK"
msgstr ""

#: ../plugins/fn-erlang/functions.c:253
msgid ""
"@FUNCTION=OFFCAP\n"
"@SYNTAX=OFFCAP(circuits,gos)\n"
"@DESCRIPTION=OFFCAP returns a number of traffic capacity given by a number "
"of @circuits with @gos grade of service.\n"
"\n"
"@EXAMPLES=\n"
"OFFCAP(30,1%) returns 20.337.\n"
"\n"
"@SEEALSO=DIMCIRC, OFFTRAF, PROBBLOCK"
msgstr ""

#: ../plugins/fn-financial/functions.c:346
msgid ""
"@FUNCTION=ACCRINT\n"
"@SYNTAX=ACCRINT(issue,first_interest,settlement,rate,par,frequency[,basis])\n"
"@DESCRIPTION=ACCRINT calculates the accrued interest for a security that "
"pays periodic interest.\n"
"\n"
"@issue is the issue date of the security.  @first_interest is the first "
"interest date of the security.  @settlement is the settlement date of the "
"security.  The settlement date is always after the issue date (the date when "
"the security is bought). @rate is the annual rate of the security and @par "
"is the par value of the security. @frequency is the number of coupon "
"payments per year.\n"
"\n"
"Allowed frequencies are:\n"
"  1 = annual,\n"
"  2 = semi,\n"
"  4 = quarterly.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @issue date, @first_interest date, or @settlement date is not valid, "
"ACCRINT returns #NUM! error.\n"
"* The dates must be @issue < @first_interest < @settlement, or ACCRINT "
"returns #NUM! error.\n"
"* If @rate <= 0 or @par <= 0 , ACCRINT returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, ACCRINT returns #NUM! error.\n"
"* If @issue date is after @settlement date or they are the same, ACCRINT "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINTM"
msgstr ""
"@FUNCTION=ACCRINT\n"
"@SYNTAX=ACCRINT(émission;premier_coupon;règlement;taux;nominal;fréquence[;"
"base])\n"
"@DESCRIPTION=ACCRINT calcule l'intérêt couru non échu d'un titre dont "
"l'intérêt est perçu périodiquement. @émission est la date d'émission du "
"titre, @premier_coupon la date du premier coupon, @règlement est la date de "
"règlement du titre, qui est toujours après la date d'émission. @taux est le "
"taux annuel, @nominal est la valeur nominale du titre, et @fréquence indique "
"le nombre de fois par an où les coupons sont payés (1, 2 ou 4 "
"exclusivement). Enfin, @base indique le système de comptage de jours "
"utilisé :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @émission, @premier_coupon ou @règlement ne sont pas des dates valides, "
"ACCRINT renvoie l'erreur #NUM!.\n"
"* Les dates doivent respecter @émission < @premier_coupon < @règlement, "
"sinon ACCRINT renvoie #NUM!.\n"
"* Si @taux <= 0 ou @nominal <= 0 , ACCRINT renvoie #NUM! error.\n"
"* Si @base < 0 ou > 4, ACCRINT renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINTM"

#: ../plugins/fn-financial/functions.c:435
msgid ""
"@FUNCTION=ACCRINTM\n"
"@SYNTAX=ACCRINTM(issue,maturity,rate[,par,basis])\n"
"@DESCRIPTION=ACCRINTM calculates and returns the accrued interest for a "
"security from @issue to @maturity date.\n"
"\n"
"@issue is the issue date of the security.  @maturity is the maturity date of "
"the security.  @rate is the annual rate of the security and @par is the par "
"value of the security. If you omit @par, ACCRINTM applies $1,000 instead.  "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @issue date or @maturity date is not valid, ACCRINTM returns #NUM! "
"error.\n"
"* If @rate <= 0 or @par <= 0, ACCRINTM returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, ACCRINTM returns #NUM! error.\n"
"* If @issue date is after @maturity date or they are the same, ACCRINTM "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINT"
msgstr ""
"@FUNCTION=ACCRINTM\n"
"@SYNTAX=ACCRINTM(émission;échéance;taux[;nominal[;base]])\n"
"@DESCRIPTION=ACCRINT calcule l'intérêt couru non échu d'un titre dont "
"l'intérêt est perçu à l'échéance. @émission est la date d'émission du titre, "
"@échéance son échéance, @taux son taux annuel, et @nominal sa valeur "
"nominale (1000 $ par défaut). @base indique le système de comptage de jours "
"utilisé :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @émission ou @échéance ne sont pas des dates valides, ACCRINT renvoie "
"l'erreur #NUM!.\n"
"* Les dates doivent respecter @émission < @échéance, sinon ACCRINT renvoie "
"#NUM!.\n"
"* Si @taux <= 0 ou @nominal <= 0 , ACCRINT renvoie #NUM! error.\n"
"* Si @base < 0 ou > 4, ACCRINT renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ACCRINTM"

#: ../plugins/fn-financial/functions.c:493
#, fuzzy
msgid ""
"@FUNCTION=INTRATE\n"
"@SYNTAX=INTRATE(settlement,maturity,investment,redemption[,basis])\n"
"@DESCRIPTION=INTRATE calculates and returns the interest rate of a fully "
"vested security.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security. @investment is the price of the security paid "
"at @settlement date and @redemption is the amount to be received at "
"@maturity date.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, INTRATE returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, INTRATE returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, INTRATE "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"If you had a bond with a settlement date of April 15, 2000, maturity date "
"September 30, 2000, investment of $100,000, redemption value $103,525, using "
"the actual/actual basis, the bond discount rate is:\n"
"=INTRATE(36631, 36799, 100000, 103525, 1) which equals 0.0648 or 6.48%\n"
"@SEEALSO=RECEIVED, DATE"
msgstr ""
"@FUNCTION=INTRATE\n"
"@SYNTAX=INTRATE(liquidation;échéance;invest;prix_éch[;base])\n"
"@DESCRIPTION=INTRATE calcule le taux d'intérêt d'un investissement sans "
"coupons. @liquidation est la date d'achat, @échéance la date d'échéance, "
"@invest le prix payé à la date @liquidation et @prix_éch le prix de revente "
"à @échéance. @base indique le système de comptage de jours à utiliser :\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @liquidation ou @échéance ne sont pas valides, ou si @liquidation >= "
"@échéance, INTRATE renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, INTRATE renvoie l'erreur #NUM!.\n"
"@EXAMPLES=\n"
"Pour un investissement de 100 000 F réalisé le 15 avril 2000, avec une "
"valeur de 103 525 F le 30 décembre 2000, sur un système de jours réel/réel, "
"le rapport est de\n"
"=INTRATE(DATE(2000;4;15); DATE(2000;12;31); 100000; 103525; 1) soit 0.0648 "
"ou 6.48%\n"
"@SEEALSO=RECEIVED, DATE"

#: ../plugins/fn-financial/functions.c:558
msgid ""
"@FUNCTION=RECEIVED\n"
"@SYNTAX=RECEIVED(settlement,maturity,investment,rate[,basis])\n"
"@DESCRIPTION=RECEIVED calculates and returns the amount to be received at "
"maturity date for a security bond.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security.  The amount of investment is specified in "
"@investment.  @rate is the security's discount rate.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, RECEIVED returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, RECEIVED returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, RECEIVED "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=INTRATE"
msgstr ""
"@FUNCTION=RECEIVED\n"
"@SYNTAX=RECEIVED(liquidation;échéance;invest;taux[;base])\n"
"@DESCRIPTION=RECEIVED calcule le prix à échéance d'un investissement sans "
"coupons. @liquidation est la date d'achat, @échéance la date d'échéance, "
"@invest le prix payé à la date @liquidation et @taux son taux d'intérêt. "
"@base indique le système de comptage de jours à utiliser :\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @liquidation ou @échéance ne sont pas valides, ou si @liquidation >= "
"@échéance, RECEIVED renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, RECEIVED renvoie l'erreur #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RECEIVED, DATE"

#: ../plugins/fn-financial/functions.c:620
msgid ""
"@FUNCTION=PRICEDISC\n"
"@SYNTAX=PRICEDISC(settlement,maturity,discount,redemption[,basis])\n"
"@DESCRIPTION=PRICEDISC calculates and returns the price per $100 face value "
"of a security bond.  The security does not pay interest at maturity.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security.  @discount is the rate for which the security "
"is discounted.  @redemption is the amount to be received on @maturity date.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, PRICEDISC returns "
"#NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, PRICEDISC returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, "
"PRICEDISC returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEMAT"
msgstr ""
"@FUNCTION=PRICEDISC\n"
"@SYNTAX=PRICEDISC(règlement;échéance;taux;prix_éch[;base])\n"
"@DESCRIPTION=PRICEDISC calcule le prix d'un titre dont la valeur nominale "
"est 100 F et qui ne rapporte pas d'intérêts à échéance. @réglement est la "
"date de règlement du titre, qui suit la date d'émission, @échéance est sa "
"date d'échéance, @taux son taux à la date d'émission, @prix_éch sa valeur de "
"revente à l'échéance, et @base le système de comptage de jours à utiliser :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"PRICEDISC renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, PRICEDISC renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEDISC"

#: ../plugins/fn-financial/functions.c:677
msgid ""
"@FUNCTION=PRICEMAT\n"
"@SYNTAX=PRICEMAT(settlement,maturity,issue,rate,yield[,basis])\n"
"@DESCRIPTION=PRICEMAT calculates and returns the price per $100 face value "
"of a security.  The security pays interest at maturity.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security.  @issue is the issue date of the security.  "
"@rate is the discount rate of the security. @yield is the annual yield of "
"the security. @basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, PRICEMAT returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, PRICEMAT returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, PRICEMAT "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEDISC"
msgstr ""
"@FUNCTION=PRICEMAT\n"
"@SYNTAX=PRICEMAT(règlement;échéance;émission;taux;rendement[;base])\n"
"@DESCRIPTION=PRICEMAT calcule le prix d'un titre dont la valeur nominale est "
"100 F et qui rapporte des intérêts à échéance. @réglement est la date de "
"règlement du titre, qui suit la date d'émission, @échéance est sa date "
"d'échéance, @émission sa date d'émission, @taux son taux à la date "
"d'émission, @rendement son taux de rendement annuel, et @base le système de "
"comptage de jours à utiliser :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"PRICEMAT renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, PRICEMAT renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEDISC"

#: ../plugins/fn-financial/functions.c:741
msgid ""
"@FUNCTION=DISC\n"
"@SYNTAX=DISC(settlement,maturity,par,redemption[,basis])\n"
"@DESCRIPTION=DISC calculates and returns the discount rate for a security. "
"@settlement is the settlement date of the security.\n"
"\n"
"@maturity is the maturity date of the security.  @par is the price per $100 "
"face value of the security.  @redemption is the redemption value per $100 "
"face value of the security.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @settlement date or @maturity date is not valid, DISC returns #NUM! "
"error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis < 0 or @basis > 4, DISC returns #NUM! error.\n"
"* If @settlement date is after @maturity date or they are the same, DISC "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=DISC\n"
"@SYNTAX=DISC(règlement;échéance;prix;prix_éch[;base])\n"
"@DESCRIPTION=DISC calcule le taux d'un titre qui ne rapporte pas d'intérêts "
"à échéance. @réglement est la date de règlement du titre, qui suit la date "
"d'émission, @échéance est sa date d'échéance, @prix son prix à la date de "
"règlement, @prix_éch sa valeur de revente à l'échéance, et @base le système "
"de comptage de jours à utiliser :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"DISC renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, DISC renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PRICEDISC"

#: ../plugins/fn-financial/functions.c:797
msgid ""
"@FUNCTION=EFFECT\n"
"@SYNTAX=EFFECT(r,nper)\n"
"@DESCRIPTION=EFFECT calculates the effective interest rate from a given "
"nominal rate.\n"
"\n"
"Effective interest rate is calculated using this formula:\n"
"\n"
"    (1 + @r / @nper) ^ @nper - 1\n"
"\n"
"where:\n"
"\n"
"@r = nominal interest rate (stated in yearly terms)\n"
"@nper = number of periods used for compounding\n"
"\n"
"* If @rate < 0, EFFECT returns #NUM! error.\n"
"* If @nper <= 0, EFFECT returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"For example credit cards will list an APR (annual percentage rate) which is "
"a nominal interest rate.\n"
"For example if you wanted to find out how much you are actually paying "
"interest on your credit card that states an APR of 19% that is compounded "
"monthly you would type in:\n"
"=EFFECT(.19,12) and you would get .2075 or 20.75%. That is the effective "
"percentage you will pay on your loan.\n"
"@SEEALSO=NOMINAL"
msgstr ""
"@FUNCTION=EFFECT\n"
"@SYNTAX=EFFECT(r;nper)\n"
"@DESCRIPTION=La fonction EFFECT calcule le taux d'intérêt effectif pour un "
"taux d'intérêt nominal.\n"
"Le taux d'intérêt effectif est calculé en utilisant cette formule :\n"
"\n"
"          @r( 1 + @r / @nper ) ^ @nper -1\n"
"où :\n"
"\n"
"@r = le taux d'intérêt nominal (annuel)\n"
"@nper = le nombre de périodes utilisées pour le calcul\n"
"Si @taux < 0, EFFECT renvoie #NUM!\n"
"Si @nper <= 0, EFFECT renvoie #NUM!\n"
"@EXAMPLES=\n"
"Par exemple, le taux d'une carte de crédit est un taux d'intérêt nominal.\n"
"Ainsi, si vous souhaitez savoir combien vous payez vraiment d'intérêt sur "
"votre crédit défini avec un taux de 19% calculé mensuellement, vous allez "
"saisir :\n"
"=EFFECT(,19;12), et vous allez obtenir ,2075 ou 20,75%. C'est le taux réel "
"de votre crédit.\n"
"@SEEALSO=NOMINAL"

#: ../plugins/fn-financial/functions.c:847
msgid ""
"@FUNCTION=NOMINAL\n"
"@SYNTAX=NOMINAL(r,nper)\n"
"@DESCRIPTION=NOMINAL calculates the nominal interest rate from a given "
"effective rate.\n"
"\n"
"Nominal interest rate is given by a formula:\n"
"\n"
"@nper * (( 1 + @r ) ^ (1 / @nper) - 1 )\n"
"where:\n"
"\n"
"@r = effective interest rate\n"
"@nper = number of periods used for compounding\n"
"\n"
"* If @rate < 0, NOMINAL returns #NUM! error.\n"
"* If @nper <= 0, NOMINAL returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=EFFECT"
msgstr ""
"@FUNCTION=NOMINAL\n"
"@SYNTAX=NOMINAL(r;nper)\n"
"@DESCRIPTION=La fonction NOMINAL calcule le taux d'intérêt nominal pour un "
"taux d'intérêt effectif donné.\n"
"Le taux d'intérêt nominal est obtenu par la formule :\n"
"\n"
"nper * (( 1 + @r ) ^ (1/ @nper) - 1)\n"
"où :\n"
"\n"
"@r = taux d'intérêt effectif\n"
"@nper = nombre de périodes utilisées pour le calcul\n"
"\n"
"* Si @taux < 0, NOMINAL renvoie #NUM!\n"
"* Si @nper <= 0, NOMINAL renvoie #NUM!\n"
"@SEEALSO=EFFECT"

#: ../plugins/fn-financial/functions.c:888
msgid ""
"@FUNCTION=ISPMT\n"
"@SYNTAX=ISPMT(rate,per,nper,pv)\n"
"@DESCRIPTION=ISPMT function returns the interest paid on a given period.\n"
"\n"
"* If @per < 1 or @per > @nper, ISPMT returns #NUM! error. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV"
msgstr ""
"@FUNCTION=ISPMT\n"
"@SYNTAX=ISPMT(taux;per;nper;pv)\n"
"@DESCRIPTION=La fonction ISPMT renvoie le montant des intérets payés sur la "
"période donnée.\n"
"\n"
"* Si @per < 1 ou @per > @nper, alors ISPMT renvoie l'erreur #NUM!\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV"

#: ../plugins/fn-financial/functions.c:928
msgid ""
"@FUNCTION=DB\n"
"@SYNTAX=DB(cost,salvage,life,period[,month])\n"
"@DESCRIPTION=DB calculates the depreciation of an asset for a given period "
"using the fixed-declining balance method.  @cost is the initial value of the "
"asset.  @salvage is the value after the depreciation.\n"
"\n"
"@life is the number of periods overall.  @period is the period for which you "
"want the depreciation to be calculated.  @month is the number of months in "
"the first year of depreciation.\n"
"\n"
"* If @month is omitted, it is assumed to be 12.\n"
"* If @cost = 0, DB returns #NUM! error.\n"
"* If @life <= 0, DB returns #NUM! error.\n"
"* If @salvage / @cost < 0, DB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DDB,SLN,SYD"
msgstr ""
"@FUNCTION=DB\n"
"@SYNTAX=DB(coût;val_résid;durée_vie;période[;mois])\n"
"@DESCRIPTION=DB calcule l'amortissement pour la période @période, en "
"utilisant la méthode dégressive à simple taux. @coût est la valeur initiale "
"du bien, @val_résid sa valeur résiduelle après @durée_vie périodes. @mois "
"est le nombre de mois de la première année d'amortissement, 12 par défaut.\n"
"\n"
"* Si @coût = 0, DB renvoie #NUM!\n"
"* Si @life <= 0, DB renvoie #NUM!\n"
"* Si @salvage / @coût < 0, DB renvoie #NUM!\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DDB,SLN,SYD"

#: ../plugins/fn-financial/functions.c:992
msgid ""
"@FUNCTION=DDB\n"
"@SYNTAX=DDB(cost,salvage,life,period[,factor])\n"
"@DESCRIPTION=DDB returns the depreciation of an asset for a given period "
"using the double-declining balance method or some other similar method you "
"specify.\n"
"\n"
"@cost is the initial value of the asset, @salvage is the value after the "
"last period, @life is the number of periods, @period is the period for which "
"you want the depreciation to be calculated, and @factor is the factor at "
"which the balance declines.\n"
"\n"
"* If @factor is omitted, it is assumed to be two (double-declining balance "
"method).\n"
"* If @life <= 0, DDB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=SLN,SYD"
msgstr ""
"@FUNCTION=DDB\n"
"@SYNTAX=DDB(coût;val_résid;durée_vie;période[;facteur])\n"
"@DESCRIPTION=DB calcule l'amortissement pour la période @période, en "
"utilisant la méthode dégressive à taux double (ou multiple). @coût est la "
"valeur initiale du bien, @val_résid sa valeur résiduelle après @durée_vie "
"périodes. @facteur est la rapidité de diminution, 2 par défaut.\n"
"\n"
"* Si @durée_vie <= 0, DDB renvoie l'erreur #NUM!\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=SLN,SYD"

#: ../plugins/fn-financial/functions.c:1048
msgid ""
"@FUNCTION=SLN\n"
"@SYNTAX=SLN(cost,salvage_value,life)\n"
"@DESCRIPTION=SLN function will determine the straight line depreciation of "
"an asset for a single period.\n"
"\n"
"The formula is:\n"
"\n"
"Depreciation expense = ( @cost - @salvage_value ) / @life\n"
"\n"
"@cost is the cost of an asset when acquired (market value).\n"
"@salvage_value is the amount you get when asset is sold at the end of the "
"asset's useful life.\n"
"@life is the anticipated life of an asset.\n"
"\n"
"* If @life <= 0, SLN returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"For example, lets suppose your company purchases a new machine for $10,000, "
"which has a salvage value of $700 and will have a useful life of 10 years. "
"The SLN yearly depreciation is computed as follows:\n"
"=SLN(10000, 700, 10)\n"
"This will return the yearly depreciation figure of $930.\n"
"@SEEALSO=SYD"
msgstr ""
"@FUNCTION=SLN\n"
"@SYNTAX=SLN(coût;val_résid;durée_vie)\n"
"@DESCRIPTION=La fonction SLN calcule un amortissement selon la méthode "
"linéaire pour une période. Le coût du bien est @coût, il sera conservé "
"@durée_vie périodes, et vaudra encore @val_résid à l'issue.\n"
"La formule utilisée est ici is:\n"
"Amortissement = ( @coût - @val_résid ) / @vie\n"
"\n"
"* Si @durée_vie <= 0, SLN renvoie l'erreur #NUM!\n"
"\n"
"@EXAMPLES=\n"
"Supposons que votre compagnie achète une machine pour 10 000 F, et compte la "
"revendre 700 F dans 10 ans. L'amortissement linéaire annuel est alors "
"calculé par :\n"
"=SLN(10000; 700; 10), soit 930 F.\n"
"\n"
"@SEEALSO=SYD"

#: ../plugins/fn-financial/functions.c:1101
#, fuzzy
msgid ""
"@FUNCTION=SYD\n"
"@SYNTAX=SYD(cost,salvage_value,life,period)\n"
"@DESCRIPTION=SYD function calculates the sum-of-years digits depreciation "
"for an asset based on its cost, salvage value, anticipated life and a "
"particular period. This method accelerates the rate of the depreciation, so "
"that more depreciation expense occurs in earlier periods than in later ones. "
"The depreciable cost is the actual cost minus the salvage value. The useful "
"life is the number of periods (typically years) over which the asset is "
"depreciated.\n"
"\n"
"The Formula used for sum-of-years digits depreciation is:\n"
"\n"
"Depreciation expense =\n"
"\n"
"\t ( @cost - @salvage_value ) * (@life - @period + 1) * 2 / @life * (@life + "
"1).\n"
"\n"
"@cost is the cost of an asset when acquired (market value).\n"
"@salvage_value is the amount you get when asset sold at the end of its "
"useful life.\n"
"@life is the anticipated life of an asset.\n"
"@period is the period for which we need the expense.\n"
"\n"
"* If @life <= 0, SYD returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"For example say a company purchases a new computer for $5000 which has a "
"salvage value of $200, and a useful life of five years. We would use the "
"following to calculate the second year's depreciation using the SYD method:\n"
"=SYD(5000, 200, 5, 2) which returns 1,280.00.\n"
"@SEEALSO=SLN"
msgstr ""
"@FUNCTION=SYD\n"
"@SYNTAX=SYD(coût;val_résid;durée_vie;période)\n"
"@DESCRIPTION=La fonction SYD calcule un amortissement dégressif pour un "
"bien. La valeur amortissable est @coût - @val_résid, et le bien est amorti "
"sur @durée_vie périodes. @période est le numéro de la période pour laquel le "
"calcul est effectué.\n"
"La formule utilisée pour cet amortissement est celle de la méthode "
"américaine SYD, d'un amortissement dégressif à taux décroissant :\n"
"Amortissement = ( @coût - @val_résid ) * (@durée_vie - @période + 1) * 2 / "
"@durée_vie * (@durée_vie + 1).\n"
"\n"
"* Si @durée_vie <= 0, SYD renvoie l'erreur #NUM!\n"
"\n"
"@EXAMPLES=\n"
"Supposons qu'une société achète un ordinateur 5 000 Euros, et qu'elle compte "
"revendre 200 Euros dans cinq ans. L'amortissement dégressif de la deuxième "
"année sera obtenu par\n"
"=SYD(5000; 200; 5; 2), soit 1 280 Euros.\n"
"\n"
"@SEEALSO=SLN"

#: ../plugins/fn-financial/functions.c:1162
msgid ""
"@FUNCTION=DOLLARDE\n"
"@SYNTAX=DOLLARDE(fractional_dollar,fraction)\n"
"@DESCRIPTION=DOLLARDE converts a dollar price expressed as a fraction into a "
"dollar price expressed as a decimal number.\n"
"\n"
"@fractional_dollar is the fractional number to be converted. @fraction is "
"the denominator of the fraction.\n"
"\n"
"* If @fraction is non-integer it is truncated.\n"
"* If @fraction <= 0, DOLLARDE returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARFR"
msgstr ""
"@FUNCTION=DOLLARDE\n"
"@SYNTAX=DOLLARDE(fraction;dénom)\n"
"@DESCRIPTION=La fonction DOLLARDE convertit un prix exprimé par une fraction "
"en un prix exprimé sous la forme d'un nombre décimal. @fraction est le prix "
"à convertir, @dénom est le dénominateur de la fraction.\n"
"\n"
"* Si @dénom n'est pas un entier, il est tronqué.\n"
"* Si @dénom <= 0 DOLLARDE renvoie l'erreur #NUM!\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARFR"

#: ../plugins/fn-financial/functions.c:1221
msgid ""
"@FUNCTION=DOLLARFR\n"
"@SYNTAX=DOLLARFR(decimal_dollar,fraction)\n"
"@DESCRIPTION=DOLLARFR converts a decimal dollar price into a dollar price "
"expressed as a fraction.\n"
"\n"
"* If @fraction is non-integer it is truncated.\n"
"* If @fraction <= 0, DOLLARFR returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARDE"
msgstr ""
"@FUNCTION=DOLLARFR\n"
"@SYNTAX=DOLLARFR(décimal;dénom)\n"
"@DESCRIPTION=La fonction DOLLARFR convertit le prix @décimal exprimé par un "
"nombre décimal en un prix exprimé sous la forme d'une fraction de "
"dénominateur @dénom.\n"
"\n"
"* Si @dénom n'est pas un entier, il est tronqué.\n"
"* Si @dénom <= 0, DOLLARFR renvoie l'erreur #NUM!\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DOLLARDE"

#: ../plugins/fn-financial/functions.c:1275
msgid ""
"@FUNCTION=MIRR\n"
"@SYNTAX=MIRR(values,finance_rate,reinvest_rate)\n"
"@DESCRIPTION=MIRR function returns the modified internal rate of return for "
"a given periodic cash flow. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV"
msgstr ""
"@FUNCTION=MIRR\n"
"@SYNTAX=MIRR(valeurs;taux_financier;taux_réinvestissement)\n"
"@DESCRIPTION=La fonction MIRR renvoie le taux interne modifié de rapport "
"d'un flux de trésorerie périodique.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV"

#: ../plugins/fn-financial/functions.c:1338
msgid ""
"@FUNCTION=TBILLEQ\n"
"@SYNTAX=TBILLEQ(settlement,maturity,discount)\n"
"@DESCRIPTION=TBILLEQ function returns the bond-yield equivalent (BEY) for a "
"treasury bill.  TBILLEQ is equivalent to\n"
"\n"
"\t(365 * @discount) / (360 - @discount * DSM),\n"
"\n"
"where DSM is the days between @settlement and @maturity.\n"
"\n"
"* If @settlement is after @maturity or the @maturity is set to over one year "
"later than the @settlement, TBILLEQ returns #NUM! error.\n"
"* If @discount is negative, TBILLEQ returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLPRICE,TBILLYIELD"
msgstr ""
"@FUNCTION=TBILLEQ\n"
"@SYNTAX=TBILLEQ(liquidation;échéance;escompte)\n"
"@DESCRIPTION=La fonction TBILLEQ renvoie le rendement équivalent (BEY) d'un "
"bon du Trésor. @liquidation est la date de liquidation du bon, @échéance son "
"échéance, et @escompte son taux d'escompte. TBILLEQ est équivalent à (365 - "
"@escompte) / (360 - (@escompte * DLE)), où DLE est le nombre de jours entre "
"@liquidation et @échéance.\n"
"\n"
"* Si @liquidation est après @échéance ou si l'échéance est plus d'un an au-"
"delà de la liquidation, TBILLEQ renvoie #NUM!.\n"
"* Si @prix < 0, TBILLEQ renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLPRICE,TBILLYIELD"

#: ../plugins/fn-financial/functions.c:1389
msgid ""
"@FUNCTION=TBILLPRICE\n"
"@SYNTAX=TBILLPRICE(settlement,maturity,discount)\n"
"@DESCRIPTION=TBILLPRICE function returns the price per $100 value for a "
"treasury bill where @settlement is the settlement date and @maturity is the "
"maturity date of the bill.  @discount is the treasury bill's discount rate.\n"
"\n"
"* If @settlement is after @maturity or the @maturity is set to over one year "
"later than the @settlement, TBILLPRICE returns #NUM! error.\n"
"* If @discount is negative, TBILLPRICE returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLYIELD"
msgstr ""
"@FUNCTION=TBILLPRICE\n"
"@SYNTAX=TBILLPRICE(liquidation;échéance;taux_escompte)\n"
"@DESCRIPTION=La fonction TBILLPRICE renvoie le prix d'un bon du Trésor de "
"valeur nominale 100 F. @liquidation est la date de règlement du bon, "
"@échéance sa date d'échéance, et @taux_escompte son taux d'escompte.\n"
"* Si @liquidation est après @échéance ou si l'échéance est plus d'un an au-"
"delà de la liquidation, TBILLPRICE renvoie #NUM!.\n"
"* Si @taux_escompte est négatif, TBILLPRICE renvoie #NUM!. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLYIELD"

#: ../plugins/fn-financial/functions.c:1435
msgid ""
"@FUNCTION=TBILLYIELD\n"
"@SYNTAX=TBILLYIELD(settlement,maturity,pr)\n"
"@DESCRIPTION=TBILLYIELD function returns the yield for a treasury bill. "
"@settlement is the settlement date and @maturity is the maturity date of the "
"bill.  @discount is the treasury bill's discount rate.\n"
"\n"
"* If @settlement is after @maturity or the @maturity is set to over one year "
"later than the @settlement, TBILLYIELD returns #NUM! error.\n"
"* If @pr is negative, TBILLYIELD returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLPRICE"
msgstr ""
"@FUNCTION=TBILLYIELD\n"
"@SYNTAX=TBILLYIELD(liquidation;échéance;prix)\n"
"@DESCRIPTION=La fonction TBILLYIELD renvoie le rendement d'un bon du Trésor. "
"@liquidation est la date de liquidation du bon, @échéance son échéance, et "
"@prix son prix pour une valeur nominale de 100F.\n"
"\n"
"* Si @liquidation est après @échéance ou si l'échéance est plus d'un an au-"
"delà de la liquidation, TBILLYIELD renvoie #NUM!. \n"
"* Si @prix est négatif, TBILLYIELD renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TBILLEQ,TBILLPRICE"

#: ../plugins/fn-financial/functions.c:1481
#, fuzzy
msgid ""
"@FUNCTION=RATE\n"
"@SYNTAX=RATE(nper,pmt,pv[,fv,type,guess])\n"
"@DESCRIPTION=RATE calculates the rate of an investment.\n"
"\n"
"* If @pmt is ommitted it defaults to 0\n"
"* If @nper <= 0, RATE returns #NUM! error.\n"
"* If @type != 0 and @type != 1, RATE returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,FV"
msgstr ""
"@FUNCTION=RATE\n"
"@SYNTAX=RATE(nper;versement;val_pres[;val_fut;type;devine])\n"
"@DESCRIPTION=La fonction RATE calcule le taux d'un investissement. @nper est "
"le nombre de périodes, @versement indique la somme versée à chaque période, "
"@val_pre est la valeur initiale et @val_fut la valeur résiduelle de "
"l'investissement. @type indique quand les versements sont effectués : @type "
"= 1 indique un versement en debut de période, @type = 0 ou omis indique un "
"versement en fin de période.\n"
"\n"
"* Si @nper <= 0, RATE renvoie #NUM!\n"
"* Si @type ne vaut ni 0 ni 1, RATE renvoie #NUM!\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,FV,PMT"

#: ../plugins/fn-financial/functions.c:1597
msgid ""
"@FUNCTION=IRR\n"
"@SYNTAX=IRR(values[,guess])\n"
"@DESCRIPTION=IRR calculates and returns the internal rate of return of an "
"investment.  This function is closely related to the net present value "
"function (NPV).  The IRR is the interest rate for a series of cash flows "
"where the net preset value is zero.\n"
"\n"
"@values contains the series of cash flows generated by the investment.  The "
"payments should occur at regular intervals.  The optional @guess is the "
"initial value used in calculating the IRR.  You do not have to use that, it "
"is only provided for the Excel compatibility.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1:A8 contain the numbers -32432, 5324, 7432, "
"9332, 12324, 4334, 1235, -3422.  Then\n"
"IRR(A1:A8) returns 0.04375. \n"
"@SEEALSO=FV,NPV,PV"
msgstr ""
"@FUNCTION=IRR\n"
"@SYNTAX=IRR(valeurs[;devine])\n"
"@DESCRIPTION=IRR calcule et renvoie le taux d'intérêt interne d'un "
"investissement. Cette fonction est à rapprocher de NPV, qui calcule une "
"valeur initiale nette. IRR est le taux d'intérêt pour une série de flux de "
"trésorerie à partir d'une NPV nulle.\n"
"@valeurs contient les flux de trésorerie, qui doivent se produire à "
"intervalles réguliers. L'argument optionnel @devine est la valeur initiale "
"utilisée par IRR, et n'est présent que pour être compatible avec Excel.\n"
"* Cette fonction est compatible avec Excel. \n"
"@EXAMPLES=\n"
"Supposons que les cellules A1:A8 contiennent -32432, 5324, 7432, 9332, "
"12324, 4334, 1235, -3422. Alors,\n"
"IRR(A1:A8) renvoie 0,04375. \n"
"\n"
"@SEEALSO=FV,NPV,PV"

#: ../plugins/fn-financial/functions.c:1731
msgid ""
"@FUNCTION=PV\n"
"@SYNTAX=PV(rate,nper,pmt[,fv,type])\n"
"@DESCRIPTION=PV calculates the present value of an investment. @rate is the "
"periodic interest rate, @nper is the number of periods used for compounding. "
"@pmt is the payment made each period, @fv is the future value and @type is "
"when the payment is made.\n"
"\n"
"* If @type = 1 then the payment is made at the beginning of the period.\n"
"* If @type = 0 (or omitted) it is made at the end of each period.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=FV"
msgstr ""
"@FUNCTION=PV\n"
"@SYNTAX=PV(taux;nper;versement[;val_fut;type])\n"
"@DESCRIPTION=PV calcule la valeur présente (initiale) d'un investissement. "
"@taux est le taux d'intérêt par période, @nper est le nombre de périodes de "
"calcul. @versement est le montant versé à chaque période, @val_fut est la "
"valeur future (finale) et @type indique quand chaque versement est fait.\n"
"\n"
"* @type = 1 indique un versement en debut de période, @type = 0 ou omis "
"indique un versement en fin de période.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=FV"

#: ../plugins/fn-financial/functions.c:1779
msgid ""
"@FUNCTION=NPV\n"
"@SYNTAX=NPV(rate,v1,v2,...)\n"
"@DESCRIPTION=NPV calculates the net present value of an investment "
"generating periodic payments.  @rate is the periodic interest rate and @v1, "
"@v2, ... are the periodic payments.  If the schedule of the cash flows are "
"not periodic use the XNPV function. \n"
"@EXAMPLES=\n"
"NPV(0.17,-10000,3340,2941,2493,3233,1732,2932) equals 186.30673.\n"
"\n"
"@SEEALSO=PV,XNPV"
msgstr ""
"@FUNCTION=NPV\n"
"@SYNTAX=NPV(taux;v1;v2;...)\n"
"@DESCRIPTION=NPV calcule la valeur présente (initiale) nette d'un "
"investissemen rapportant des sommes à intervalles réguliers. @rate est le "
"taux d'intérêt, @v1, @v2... sont les sommes perçues. Si elles ne sont pas "
"perçues à intervalles réguliers, utilisez la fonction XNPV.\n"
"@EXAMPLES=\n"
"NPV(0,17;-10000;3340;2941;2493;3233;1732;2932) vaut 186,30673.\n"
"\n"
"@SEEALSO=PV,XNPV"

#: ../plugins/fn-financial/functions.c:1830
msgid ""
"@FUNCTION=XNPV\n"
"@SYNTAX=XNPV(rate,values,dates)\n"
"@DESCRIPTION=XNPV calculates the net present value of an investment.  The "
"schedule of the cash flows is given in @dates array.  The first date "
"indicates the beginning of the payment schedule.  @rate is the interest rate "
"and @values are the payments.\n"
"\n"
"* If @values and @dates contain unequal number of values, XNPV returns the "
"#NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV,PV"
msgstr ""
"@FUNCTION=XNPV\n"
"@SYNTAX=XNPV(taux;valeurs;dates)\n"
"@DESCRIPTION=XNPV calcule la valeur présente (initiale) nette d'un "
"investissement. @date indique les dates des flux de trésorerie, la première "
"date étant le début de l'échéancier. @taux est le taux d'intérêt et @valeurs "
"sont les flux.\n"
"\n"
"* Si @valeurs et @dates n'ont pas le même nombre de valeurs, XNPV renvoie "
"une erreur #NUM!. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=NPV,PV"

#: ../plugins/fn-financial/functions.c:1892
msgid ""
"@FUNCTION=XIRR\n"
"@SYNTAX=XIRR(values,dates[,guess])\n"
"@DESCRIPTION=XIRR calculates and returns the internal rate of return of an "
"investment that has not necessarily periodic payments.  This function is "
"closely related to the net present value function (NPV and XNPV).  The XIRR "
"is the interest rate for a series of cash flows where the XNPV is zero.\n"
"\n"
"@values contains the series of cash flows generated by the investment.  "
"@dates contains the dates of the payments.  The first date describes the "
"payment day of the initial payment and thus all the other dates should be "
"after this date. The optional @guess is the initial value used in "
"calculating the XIRR.  You do not have to use that, it is only provided for "
"the Excel compatibility.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1:A5 contain the numbers -6000, 2134, 1422, "
"1933, and 1422, and the cells B1:B5 contain the dates \"1999-01-15\", \"1999-"
"04-04\", \"1999-05-09\", \"2000-03-12\", and \"2000-05-1\". Then\n"
"XIRR(A1:A5,B1:B5) returns 0.224838. \n"
"@SEEALSO=IRR,XNPV"
msgstr ""
"@FUNCTION=XIRR\n"
"@SYNTAX=XIRR(valeurs;dates[;devine])\n"
"@DESCRIPTION=XIRR calcule le taux interne de rendement d'un investissement, "
"dont les flux de trésorerie ne sont pas nécessairement périodiques. Cette "
"fonction est associée à NPV et XNPV, puisque XIRR est le rendement d'une "
"série de flux dont le XNPV est 0.\n"
"@valeurs contient les flux de trésorerie, @dates sont leurs dates. La "
"première valeur est la date du premier versement, et donc toutes les autres "
"doivent être postérieures. @devine est la valeur initiale pour le calcul de "
"XIRR, et n'est présente que par compatibilité avec Excel.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1:A5 contiennent -6000, 2134, 1422, 1933 et 1422, et que B1:B5 "
"contiennent les dates \"15-01-1999\", \"04-04-1999\", \"09-05-1999\", \"12-"
"03-2000\", et \"1-05-2000\", alors \n"
"XIRR(A1:A5;B1:B5) renvoie 0,224838.\n"
"@SEEALSO=IRR,XNPV"

#: ../plugins/fn-financial/functions.c:2012
msgid ""
"@FUNCTION=FV\n"
"@SYNTAX=FV(rate,nper,pmt[,pv,type])\n"
"@DESCRIPTION=FV computes the future value of an investment. This is based on "
"periodic, constant payments and a constant interest rate. The interest rate "
"per period is @rate, @nper is the number of periods in an annuity, @pmt is "
"the payment made each period, @pv is the present value and @type is when the "
"payment is made.\n"
"\n"
"* If @type = 1 then the payment is made at the beginning of the period.\n"
"* If @type = 0 it is made at the end of each period.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,PMT,PPMT"
msgstr ""
"@FUNCTION=FV\n"
"@SYNTAX=FV(taux;nper;montant[;val_pres;type])\n"
"@DESCRIPTION=FV calcule la valeur future (résiduelle) d'un investissement "
"comportant des versements périodiques constants de montant @montant et un "
"taux d'intérêt @taux constant. @nper est le nombre de périodes par an, "
"@val_pres est la valeur initiale et @type indique quand le paiement "
"intervient.\n"
"\n"
"* @type = 1 indique un versement en debut de période, @type = 0 ou omis "
"indique un versement en fin de période.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PV,PMT,PPMT"

#: ../plugins/fn-financial/functions.c:2056
msgid ""
"@FUNCTION=PMT\n"
"@SYNTAX=PMT(rate,nper,pv[,fv,type])\n"
"@DESCRIPTION=PMT returns the amount of payment for a loan based on a "
"constant interest rate and constant payments (each payment is equal "
"amount).\n"
"\n"
"@rate is the constant interest rate.\n"
"@nper is the overall number of payments.\n"
"@pv is the present value.\n"
"@fv is the future value.\n"
"@type is the type of the payment: 0 means at the end of the period and 1 "
"means at the beginning of the period.\n"
"\n"
"* If @fv is omitted, Gnumeric assumes it to be zero.\n"
"* If @type is omitted, Gnumeric assumes it to be zero.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"
msgstr ""
"@FUNCTION=PV\n"
"@SYNTAX=PV(taux;nper;versement[;val_fut;type])\n"
"@DESCRIPTION=PV calcule la valeur présente (initiale) d'un investissement. "
"@taux est le taux d'intérêt par période, @nper est le nombre de périodes de "
"calcul. @versement est le montant versé à chaque période, @val_fut est la "
"valeur future (finale) (défaut 0) et @type indique quand chaque versement "
"est fait. @type = 1 indique un versement en debut de période, @type = 0 ou "
"omis indique un versement en fin de période.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=FV"

#: ../plugins/fn-financial/functions.c:2099
msgid ""
"@FUNCTION=IPMT\n"
"@SYNTAX=IPMT(rate,per,nper,pv[,fv,type])\n"
"@DESCRIPTION=IPMT calculates the amount of a payment of an annuity going "
"towards interest.\n"
"\n"
"Formula for IPMT is:\n"
"\n"
"IPMT(PER) = -PRINCIPAL(PER-1) * INTEREST_RATE\n"
"\n"
"where:\n"
"\n"
"PRINCIPAL(PER-1) = amount of the remaining principal from last period\n"
"\n"
"* If @fv is omitted, it is assumed to be 0.\n"
"* If @type is omitted, it is assumed to be 0.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"
msgstr ""
"@FUNCTION=IPMT\n"
"@SYNTAX=IPMT(taux;pér;npér;val_prés[;val_fut;type])\n"
"@DESCRIPTION=La fonction IPMT calcule la part des intérêts dus pour une "
"période @pér d'un investissement, sur la base de remboursements périodiques "
"et d'un taux d'intérêt constant @taux. @npér est le nombre total de "
"périodes, @val_prés la valeur initiale de l'investissement, @val_fut la "
"valeur finale (défaut 0), et @type indique quand les versements sont "
"effectués. @type = 1 indique un versement en debut de période, @type = 0 ou "
"omis indique un versement en fin de période.\n"
"La formule associée est\n"
"IPMT(@pér) = -capital(@pér - 1) * taux\n"
"\n"
"où capital(@pér - 1) est le capital résiduel après la période précédente.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2151
msgid ""
"@FUNCTION=PPMT\n"
"@SYNTAX=PPMT(rate,per,nper,pv[,fv,type])\n"
"@DESCRIPTION=PPMT calculates the amount of a payment of an annuity going "
"towards principal.\n"
"\n"
"Formula for it is:\n"
"PPMT(per) = PMT - IPMT(per)\n"
"where:\n"
"\n"
"PMT = Payment received on annuity\n"
"IPMT(per) = amount of interest for period @per\n"
"\n"
"* If @fv is omitted, it is assumed to be 0.\n"
"* If @type is omitted, it is assumed to be 0.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=IPMT,PV,FV"
msgstr ""
"@FUNCTION=PPMT\n"
"@SYNTAX=PPMT(taux;pér;npér;val_prés[;val_fut;type])\n"
"@DESCRIPTION=La fonction PPMT calcule la part de remboursement du principal "
"d'un investissement sur la base de remboursements périodiques et d'un taux "
"d'intérêt constant @taux. @pér est la période sur laquelle le calcul est "
"réalisé, @npér est le nombre total de périodes, @val_prés la valeur initiale "
"de l'investissement, @val_fut la valeur finale (défaut 0), et @type indique "
"quand les versements sont effectués. @type = 1 indique un versement en debut "
"de période, @type = 0 ou omis indique un versement en fin de période.\n"
"La formule est :\n"
"PPMT(@pér) = PMT - IPMT(@pér)\n"
"\n"
"où\n"
"\n"
"PMT est le remboursement total\n"
"IPMT(@pér) est la part des intérêts pour la période en cours\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=IPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2207
#, fuzzy
msgid ""
"@FUNCTION=NPER\n"
"@SYNTAX=NPER(rate,pmt,pv[,fv,type])\n"
"@DESCRIPTION=NPER calculates number of periods of an investment based on "
"periodic constant payments and a constant interest rate.\n"
"\n"
"The interest rate per period is @rate, @pmt is the payment made each period, "
"@pv is the present value, @fv is the future value and @type is when the "
"payments are due. If @type = 1, payments are due at the beginning of the "
"period, if @type = 0, payments are due at the end of the period.\n"
"\n"
"* If @rate <= 0, NPER returns #DIV0 error.\n"
"\n"
"@EXAMPLES=\n"
"For example, if you deposit $10,000 in a savings account that earns an "
"interest rate of 6%. To calculate how many years it will take to double your "
"investment use NPER as follows:\n"
"=NPER(0.06, 0, -10000, 20000,0)returns 11.895661046 which indicates that you "
"can double your money just before the end of the 12th year.\n"
"@SEEALSO=PPMT,PV,FV"
msgstr ""
"@FUNCTION=NPER\n"
"@SYNTAX=NPER(taux;montant;val_pres[;val_fut;type])\n"
"@DESCRIPTION=NPER calcule le nombre de versements d'un investissement à "
"versements périodiques constants de montant @montant, et à taux d'intérêt "
"constant @taux. @val_pres est la valeur initiale, @val_fut la valeur "
"résiduelle et @type indique quand les versements sont effectués. @type = 1 "
"indique un versement en debut de période, @type = 0 indique un versement en "
"fin de période.\n"
"\n"
"* Si @taux <= 0, NPER renvoie l'erreur #DIV0!\n"
"\n"
"@EXAMPLES=\n"
"Si vous placez 10 000 F sur un livret d'épargne à 6%, pour calculer en "
"combien de temps votre capital aura doublé, utilisez :\n"
"=NPER(0,06; 0; -10000; 20000;0) renvoie 11,895661046, indiquant que vous "
"l'aurez doublé juste avant la fin de la douzième année.\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2267
msgid ""
"@FUNCTION=DURATION\n"
"@SYNTAX=DURATION(settlement,maturity,coup,yield,frequency[,basis])\n"
"@DESCRIPTION=DURATION calculates the duration of a security.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@coup The annual coupon rate as a percentage.\n"
"@yield The annualized yield of the security as a percentage.\n"
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, DURATION returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=G_DURATION,MDURATION"
msgstr ""
"@FUNCTION=DURATION\n"
"@SYNTAX=DURATION(règlement;échéance;taux;prix;prix_fut;fréquence[;base])\n"
"@DESCRIPTION=DURATION calcule la durée d'un titre.\n"
" qui ne rapporte pas d'intérêts à échéance. @réglement est la date de "
"règlement du titre, qui suit la date d'émission, @échéance est sa date "
"d'échéance, @taux le taux d'intérêt annuel, @prix son prix à la date de "
"règlement, @prix_fut sa valeur de revente à l'échéance, @fréquence le nombre "
"de coupons par an (1, 2 ou 4), et @base le système de comptage de jours à "
"utiliser :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"DURATION renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, DURATION renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2329
msgid ""
"@FUNCTION=G_DURATION\n"
"@SYNTAX=G_DURATION(rate,pv,fv)\n"
"@DESCRIPTION=G_DURATION calculates number of periods needed for an "
"investment to attain a desired value. This function is similar to FV and PV "
"with a difference that we do not need give the direction of cash flows e.g. -"
"100 for a cash outflow and +100 for a cash inflow.\n"
"\n"
"* If @rate <= 0, G_DURATION returns #DIV0 error.\n"
"* If @fv = 0 or @pv = 0, G_DURATION returns #DIV0 error.\n"
"* If @fv / @pv < 0, G_DURATION returns #VALUE error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV,DURATION,MDURATION"
msgstr ""
"@FUNCTION=G_DURATION\n"
"@SYNTAX=G_DURATION(taux;val_pres;val_fut)\n"
"@DESCRIPTION=La fonction G_DURATION calcule le nombre de périodes "
"nécessaires pour qu'un investissement atteigne une valeur souhaitée. Cette "
"fonction est analogue à FV et PV à la différence qu'il n'est pas nécessaire "
"de donner la direction des flux de trésorerie, par exemple -100 pour un "
"débit et +100 pour un crédit.\n"
"\n"
"* Si @taux <= 0, G_DURATION renvoie #DIV0!\n"
"* Si @fv = 0 ou @pv = 0, G_DURATION renvoie #DIV0!\n"
"* Si @fv / @pv < 0, G_DURATION renvoie #VALEUR!\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=PPMT,PV,FV"

#: ../plugins/fn-financial/functions.c:2373
msgid ""
"@FUNCTION=FVSCHEDULE\n"
"@SYNTAX=FVSCHEDULE(principal,schedule)\n"
"@DESCRIPTION=FVSCHEDULE returns the future value of given initial value "
"after applying a series of compound periodic interest rates. The argument "
"@principal is the present value; @schedule is an array of interest rates to "
"apply. The @schedule argument must be a range of cells.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain interest rates 0.11, "
"0.13, 0.09, 0.17, and 0.03.  Then\n"
"FVSCHEDULE(3000,A1:A5) equals 4942.7911611.\n"
"@SEEALSO=PV,FV"
msgstr ""
"@FUNCTION=FVSCHEDULE\n"
"@SYNTAX=FVSCHEDULE(initial;échéancier)\n"
"@DESCRIPTION=FVSCHEDULE renvoie la valeur finale de @initial, après avoir "
"appliqué un certain nombre de taux d'intérêts contenus dans @échéancier, qui "
"doit être un intervalle de cellules.\n"
"@EXAMPLES=\n"
"Supposons que A1, A2,..., A5 contiennent les taux 0,11, 0,13, 0,09, 0,17, et "
"0,03.  Alors\n"
"FVSCHEDULE(3000;A1:A5) vaut 4942,7911611.\n"
"@SEEALSO=PV,FV"

#: ../plugins/fn-financial/functions.c:2420
msgid ""
"@FUNCTION=EURO\n"
"@SYNTAX=EURO(currency)\n"
"@DESCRIPTION=EURO converts one Euro to a given national currency in the "
"European monetary union.\n"
"\n"
"@currency is one of the following:\n"
"\n"
"    ATS\t(Austria)\n"
"    BEF\t(Belgium)\n"
"    DEM\t(Germany)\n"
"    ESP\t(Spain)\n"
"    EUR\t(Euro)\n"
"    FIM\t(Finland)\n"
"    FRF\t(France)\n"
"    GRD\t(Greek)\n"
"    IEP\t(Ireland)\n"
"    ITL\t(Italy)\n"
"    LUF\t(Luxembourg)\n"
"    NLG\t(Netherlands)\n"
"    PTE\t(Portugal)\n"
"\n"
"* If the given @currency is other than one of the above, EURO returns #NUM! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"EURO(\"DEM\") returns 1.95583.\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=EURO\n"
"@SYNTAX=EURO(devise)\n"
"@DESCRIPTION=EURO convertit un Euro en une devise nationale de l'Union "
"Européenne.\n"
"\n"
"@devise doit avoir l'une de ces valeurs :\n"
"\n"
"    ATS     (Autriche)\n"
"    BEF     (Belgique)\n"
"    DEM     (Allemagne)\n"
"    ESP     (Espagne)\n"
"    EUR     (Euro)\n"
"    FIM     (Finlande)\n"
"    FRF     (France)\n"
"    GRD     (Grèce)\n"
"    IEP     (Irlande)\n"
"    ITL     (Italie)\n"
"    LUF     (Luxembourg)\n"
"    NLG     (Pays-Bas)\n"
"    PTE     (Portugal)\n"
"\n"
"Toute autre valeur de @devise renvoie une erreur #NUM!.\n"
"@EXAMPLES=\n"
"EURO(\"DEM\") vaut 1,95583.\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2530
msgid ""
"@FUNCTION=EUROCONVERT\n"
"@SYNTAX=EUROCONVERT(n,source,target)\n"
"@DESCRIPTION=EUROCONVERT converts the currency value @n of @source currency "
"to a target currency @target. Both currencies are given as three-letter "
"strings using the ISO code system names.  The following currencies are "
"available:\n"
"\n"
"    ATS\t(Austria)\n"
"    BEF\t(Belgium)\n"
"    DEM\t(Germany)\n"
"    ESP\t(Spain)\n"
"    EUR\t(Euro)\n"
"    FIM\t(Finland)\n"
"    FRF\t(France)\n"
"    GRD\t(Greek)\n"
"    IEP\t(Ireland)\n"
"    ITL\t(Italy)\n"
"    LUF\t(Luxembourg)\n"
"    NLG\t(Netherlands)\n"
"    PTE\t(Portugal)\n"
"\n"
"* If the given @source or @target is other than one of the above, "
"EUROCONVERT returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"EUROCONVERT(2.1,\"DEM\",\"EUR\") returns 1.07.\n"
"@SEEALSO=EURO"
msgstr ""
"@FUNCTION=EUROCONVERT\n"
"@SYNTAX=EUROCONVERT(n;devise_source;devise_cible)\n"
"@DESCRIPTION=EUROCONVERT convertit @n unités de @devise_source en "
"@device_cible. Les deux devises doivent avoir l'une de ces valeurs :\n"
"\n"
"    ATS     (Autriche)\n"
"    BEF     (Belgique)\n"
"    DEM     (Allemagne)\n"
"    ESP     (Espagne)\n"
"    EUR     (Euro)\n"
"    FIM     (Finlande)\n"
"    FRF     (France)\n"
"    GRD     (Grèce)\n"
"    IEP     (Irlande)\n"
"    ITL     (Italie)\n"
"    LUF     (Luxembourg)\n"
"    NLG     (Pays-Bas)\n"
"    PTE     (Portugal)\n"
"\n"
"* Toute autre valeur de @devise renvoie une erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"EUROCONVERT(2,1;\"DEM\",\"EUR\") vaut 1,07.\n"
"@SEEALSO=EURO"

#: ../plugins/fn-financial/functions.c:2580
msgid ""
"@FUNCTION=PRICE\n"
"@SYNTAX=PRICE(settle,mat,rate,yield,redemption_price,[frequency,basis])\n"
"@DESCRIPTION=PRICE returns price per $100 face value of a security. This "
"method can only be used if the security pays periodic interest.\n"
"\n"
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, PRICE returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=PRICE\n"
"@SYNTAX=PRICE(règlement;échéance;taux;rendement;prix_éch[;fréquence;base])\n"
"@DESCRIPTION=PRICE renvoie le prix d'un investissement de valeur nominale "
"100 Euros. Cette fonction ne peut être utilisée que si l'investissement "
"rapporte des intérêts réguliers. @taux est le taux de l'investissement, "
"@prix_éch son prix de revente à @échéance. @fréquence est le nombre de "
"coupons par an (1, 2 ou 4 exclusivement), et @base le système de comptage de "
"jours :\n"
"\n"
"  0  30/360 US (NASD) (défaut)\n"
"  1  réel/réel\n"
"  2  réel/360\n"
"  3  réel/365\n"
"  4  30/360 Européen\n"
"\n"
"* Si @fréquence ne vaut, ni 1, ni 2, ni 4, PRICE renvoie #NUM!\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"PRICE renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence est différent de 1, 2 ou 4, PRICE "
"renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2647
msgid ""
"@FUNCTION=YIELD\n"
"@SYNTAX=YIELD(settlement,maturity,rate,price,redemption_price,frequency[,"
"basis])\n"
"@DESCRIPTION=YIELD returns the yield on a security that pays periodic "
"interest.\n"
"\n"
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, YIELD returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=YIELD\n"
"@SYNTAX=YIELD(règlement;échéance;taux;prix;prix_éch;fréquence[;base])\n"
"@DESCRIPTION=YIELD renvoie le rendement d'un investissement de valeur "
"nominale 100 F. Cette fonction ne peut être utilisée que si l'investissement "
"rapporte des intérêts réguliers. @taux est le taux de l'investissement, "
"@prix_éch son prix de revente à @échéance. @fréquence est le nombre de "
"coupons par an (1, 2 ou 4 exclusivement), et @base le système de comptage de "
"jours :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"YIELD renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence est différent de 1, 2 ou 4, YIELD "
"renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2770
msgid ""
"@FUNCTION=YIELDDISC\n"
"@SYNTAX=YIELDDISC(settlement,maturity,pr,redemption[,basis])\n"
"@DESCRIPTION=YIELDDISC calculates the annual yield of a security that is "
"discounted.\n"
"\n"
"@settlement is the settlement date of the security.  @maturity is the "
"maturity date of the security. @pr is the price per $100 face value of the "
"security. @redemption is the redemption value per $100 face value. @basis is "
"the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, YIELDDISC returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=YIELDDISC\n"
"@SYNTAX=YIELDDISC(règlement;échéance;prix;prix_fut;fréquence[;base])\n"
"@DESCRIPTION=YIELDDISC calcule le rendement d'un titre qui ne rapporte pas "
"d'intérêts à échéance. @réglement est la date de règlement du titre, qui "
"suit la date d'émission, @échéance est sa date d'échéance, @prix son prix à "
"la date de règlement, @prix_fut sa valeur de revente à l'échéance, "
"@fréquence le nombre de coupons par an (1, 2 ou 4), et @base le système de "
"comptage de jours à utiliser :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"YIELDDISC renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4 ou @fréquence != 1, 2 et 4, YIELDDISC renvoie "
"#NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:2834
#, fuzzy
msgid ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(settlement,maturity,issue,rate,pr[,basis])\n"
"@DESCRIPTION=YIELDMAT calculates the annual yield of a security for which "
"the interest is paid at maturity date.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @issue is the issue date of the security. "
"@rate is the interest rate set to the security. @pr is the price per $100 "
"face value of the security. @basis is the type of day counting system you "
"want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=YIELDMAT\n"
"@SYNTAX=YIELDMAT(règlement;échéance;émission;taux;prix[;base])\n"
"@DESCRIPTION=YIELDMAT calcule le rendement annuel d'un titre dont la valeur "
"nominale est 100 Euros et qui rapporte des intérêts à échéance. @réglement "
"est la date de règlement du titre, qui suit la date d'émission, @échéance "
"est sa date d'échéance, @émission sa date d'émission, @taux son taux à la "
"date d'émission, @prix le prix du titre, et @base le système de comptage de "
"jours à utiliser :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"YIELDMAT renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence != 1, 2 ou 4, YIELDMAT renvoie "
"#NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=YIELDDISC"

#: ../plugins/fn-financial/functions.c:2890
msgid ""
"@FUNCTION=ODDFPRICE\n"
"@SYNTAX=ODDFPRICE(settlement,maturity,issue,first_coupon,rate,yld,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDFPRICE returns the price per $100 face value of a security. "
"The security should have an odd short or long first period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @issue is the issue date of the security. "
"@frequency is the number of coupon payments per year. Allowed frequencies "
"are: 1 = annual, 2 = semi, 4 = quarterly. @basis is the type of day counting "
"system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDFPRICE returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDFPRICE\n"
"@SYNTAX=ODDFPRICE(règlement;échéance;émission;premier_coupon;taux;rendement;"
"prix_éch;fréquence[;base])\n"
"@DESCRIPTION=ODDFPRICE renvoie le prix d'un investissement de valeur "
"nominale 100 Euros, dont la première période est irrégulière (courte ou "
"longue). Cette fonction ne peut être utilisée que si l'investissement "
"rapporte des intérêts réguliers. @règlement est la date de règlement du "
"titre, qui suit la date d'émission, @échéance est sa date d'échéance, "
"@émission sa date d'émission et @premier_coupon la date du premier coupon. "
"@taux est le taux de l'investissement, @rendement le rendement annuel du "
"titre, @prix_éch son prix de revente à @échéance. @fréquence est le nombre "
"de coupons par an (1, 2 ou 4 exclusivement), et @base le système de comptage "
"de jours :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"ODDFPRICE renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence est différent de 1, 2 ou 4, "
"ODDFPRICE renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3047
msgid ""
"@FUNCTION=ODDFYIELD\n"
"@SYNTAX=ODDFYIELD(settlement,maturity,issue,first_coupon,rate,pr,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDFYIELD calculates the yield of a security having an odd "
"first period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @frequency is the number of coupon payments "
"per year. Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDFYIELD returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDFYIELD\n"
"@SYNTAX=ODDFYIELD(règlement;échéance;émission;premier_coupon;taux;prix;"
"prix_éch;fréquence[;base])\n"
"@DESCRIPTION=ODDFYIELD renvoie le rendement d'un investissement de valeur "
"nominale 100 Euros, dont la première période est irrégulière (courte ou "
"longue). Cette fonction ne peut être utilisée que si l'investissement "
"rapporte des intérêts réguliers. @règlement est la date de règlement du "
"titre, qui suit la date d'émission, @échéance est sa date d'échéance, "
"@émission sa date d'émission et @premier_coupon la date du premier coupon. "
"@taux est le taux de l'investissement, @prix le prix du titre, @prix_éch son "
"prix de revente à @échéance. @fréquence est le nombre de coupons par an (1, "
"2 ou 4 exclusivement), et @base le système de comptage de jours :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"ODDFYIELD renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence est différent de 1, 2 ou 4, "
"ODDFYIELD renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3158
msgid ""
"@FUNCTION=ODDLPRICE\n"
"@SYNTAX=ODDLPRICE(settlement,maturity,last_interest,rate,yld,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDLPRICE calculates the price per $100 face value of a "
"security that has an odd last coupon period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @frequency is the number of coupon payments "
"per year. Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDLPRICE returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDLPRICE\n"
"@SYNTAX=ODDLPRICE(règlement;échéance;dernier_coupon;taux;rendement;prix_éch;"
"fréquence[;base])\n"
"@DESCRIPTION=ODDLPRICE renvoie le prix d'un investissement de valeur "
"nominale 100 F, dont la dernière période est irrégulière (courte ou longue). "
"Cette fonction ne peut être utilisée que si l'investissement rapporte des "
"intérêts réguliers. @règlement est la date de règlement du titre, qui suit "
"la date d'émission, @échéance est sa date d'échéance, @dernier_coupon la "
"date du dernier coupon. @taux est le taux de l'investissement, @rendement le "
"rendement annuel du titre, @prix_éch son prix de revente à @échéance. "
"@fréquence est le nombre de coupons par an (1, 2 ou 4 exclusivement), et "
"@base le système de comptage de jours :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"ODDLPRICE renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence est différent de 1, 2 ou 4, "
"ODDLPRICE renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3252
msgid ""
"@FUNCTION=ODDLYIELD\n"
"@SYNTAX=ODDLYIELD(settlement,maturity,last_interest,rate,pr,redemption,"
"frequency[,basis])\n"
"@DESCRIPTION=ODDLYIELD calculates the yield of a security having an odd last "
"period.\n"
"\n"
"@settlement is the settlement date of the security. @maturity is the "
"maturity date of the security. @frequency is the number of coupon payments "
"per year. Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. "
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @frequency is other than 1, 2, or 4, ODDLYIELD returns #NUM! error.\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ODDLYIELD\n"
"@SYNTAX=ODDLYIELD(règlement;échéance;dernier_coupon;taux;prix;prix_éch;"
"fréquence[;base])\n"
"@DESCRIPTION=ODDLYIELD renvoie le rendement d'un investissement de valeur "
"nominale 100 F, dont la dernière période est irrégulière (courte ou longue). "
"Cette fonction ne peut être utilisée que si l'investissement rapporte des "
"intérêts réguliers. @règlement est la date de règlement du titre, qui suit "
"la date d'émission, @échéance est sa date d'échéance et @dernier_coupon la "
"date du dernier coupon. @taux est le taux de l'investissement, @prix le prix "
"du titre, @prix_éch son prix de revente à @échéance. @fréquence est le "
"nombre de coupons par an (1, 2 ou 4 exclusivement), et @base le système de "
"comptage de jours :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"ODDLYIELD renvoie l'erreur #NUM!.\n"
"* Si @base < 0 ou @base > 4, ou @fréquence est différent de 1, 2 ou 4, "
"ODDLYIELD renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3346
msgid ""
"@FUNCTION=AMORDEGRC\n"
"@SYNTAX=AMORDEGRC(cost,purchase_date,first_period,salvage,period,rate[,"
"basis])\n"
"@DESCRIPTION=AMORDEGRC: Calculates depreciation for each accounting period "
"using French accounting conventions.   Assets purchased in the middle of a "
"period take prorated depreciation into account.  This is similar to "
"AMORLINC, except that a depreciation coefficient is applied in the "
"calculation depending on the life of the assets.\n"
"Named for AMORtissement DEGRessif Comptabilite\n"
"\n"
"@cost The value of the asset.\n"
"@purchase_date The date the asset was purchased.\n"
"@first_period The end of the first period.\n"
"@salvage Asset value at maturity.\n"
"@period The length of accounting periods.\n"
"@rate rate of depreciation as a percentage.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"AMORDEGRC(2400,DATE(1998,8,19),DATE(1998,12,30),300,1,0.14,1) = 733\n"
"\n"
"@SEEALSO=AMORLINC"
msgstr ""
"@FUNCTION=AMORDEGRC\n"
"@SYNTAX=AMORDEGRC(coût;date_achat;première_période;résiduel;période;taux[;"
"base])\n"
"@DESCRIPTION=AMORDEGRC calcule l'amortissement dégressif pour chaque période "
"comptable, en utilisant les méthodes comptables Françaises. Les actifs "
"achetés en milieu de période, l'amortissement est calculé au pro-rata. Ceci "
"est similaire à AMORLINC, sauf qu'un coefficient de dépréciation est "
"appliqué, en fonction de la durée de vie de l'actif.\n"
"Le nom vient de AMORtissement DEGRessif Comptabilite\n"
"\n"
"@coût Le prix de l'actif\n"
"@date_achat date à laquelle il a été acquis\n"
"@première_période Date de fin de la première période\n"
"@résiduel Valeur comptable résiduelle\n"
"@période Longueur des périodes d'amortissement\n"
"@taux taux d'amortissement, en pourcentage\n"
"@base est le système de comptage de jours :\n"
"\n"
"  0  30/360 US (NASD) (défaut)\n"
"  1  réel/réel\n"
"  2  réel/360\n"
"  3  réel/365\n"
"  4  30/360 Européen\n"
"\n"
"* Si @base n'est pas entre 0 et 4, l'erreur #NUM! est renvoyée.\n"
"\n"
"@EXAMPLES=\n"
"AMORDEGRC(2400;DATE(1998;8;19);DATE(1998;12;30);300;1;0,14;1) = 733\n"
"\n"
"@SEEALSO=AMORLINC"

#: ../plugins/fn-financial/functions.c:3413
msgid ""
"@FUNCTION=AMORLINC\n"
"@SYNTAX=AMORLINC(cost,purchase_date,first_period,salvage,period,rate[,"
"basis])\n"
"@DESCRIPTION=AMORLINC: Calculates depreciation for each accounting period "
"using French accounting conventions.   Assets purchased in the middle of a "
"period take prorated depreciation into account.\n"
"Named for AMORtissement LINeaire Comptabilite.\n"
"\n"
"@cost The value of the asset.\n"
"@purchase_date The date the asset was purchased.\n"
"@first_period The end of the first period.\n"
"@salvage Asset value at maturity.\n"
"@period The length of accounting periods.\n"
"@rate rate of depreciation as a percentage.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  US 30/360\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"\n"
"* If @basis is omitted, US 30/360 is applied.\n"
"* If @basis is not in between 0 and 4, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"AMORLINC(2400,DATE(1998,8,19),DATE(1998,12,31),300,1,0.15,1) = 360\n"
"\n"
"@SEEALSO=AMORDEGRC"
msgstr ""
"@FUNCTION=AMORLINC\n"
"@SYNTAX=AMORLINC(coût;date_achat;première_période;résiduel;période;taux[;"
"base])\n"
"@DESCRIPTION=AMORLINC calcule l'amortissement linéaire pour chaque période "
"comptable, en utilisant les méthodes comptables Françaises. Les actifs "
"achetés en milieu de période, l'amortissement est calculé au pro-rata.\n"
"Le nom vient de AMORtissement LINeaire Comptabilite\n"
"\n"
"@coût Le prix de l'actif\n"
"@date_achat date à laquelle il a été acquis\n"
"@première_période Date de fin de la première période\n"
"@résiduel Valeur comptable résiduelle\n"
"@période Longueur des périodes d'amortissement\n"
"@taux taux d'amortissement, en pourcentage\n"
"@base est le système de comptage de jours :\n"
"\n"
"  0  30/360 US (NASD) (défaut)\n"
"  1  réel/réel\n"
"  2  réel/360\n"
"  3  réel/365\n"
"  4  30/360 Européen\n"
"\n"
"* Si @base n'est pas entre 0 et 4, l'erreur #NUM! est renvoyée.\n"
"\n"
"@EXAMPLES=\n"
"AMORLINC(2400;DATE(1998;8;19);DATE(1998;12;31);300;1;0,15;1) = 360\n"
"\n"
"@SEEALSO=AMORDEGRC"

#: ../plugins/fn-financial/functions.c:3475
msgid ""
"@FUNCTION=COUPDAYBS\n"
"@SYNTAX=COUPDAYBS(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPDAYBS returns the number of days from the beginning of the "
"coupon period to the settlement date.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPDAYBS returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 89\n"
"COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 0\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYBS\n"
"@SYNTAX=COUPDAYBS(date;maturité;fréquence[;base;fin_mois])\n"
"@DESCRIPTION=COUPDAYBS renvoie le nombre de jours entre le dernier "
"détachement de coupon et @date. @fréquence est le nombre de coupons payés "
"chaque année (1, 2, 4, 6 ou 12), @fin_mois traite les dates de maturité en "
"fin de mois de façon spéciale. @base indique le type de comptage de jours à "
"utiliser :\n"
"\n"
"0  30/360 US (MSRB règle G33 (e)) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"5  30/360 Européen+\n"
"\n"
"(Voyez le manuel de Gnumeric pour une description détaillée de ces bases).\n"
"\n"
"* Si @fréquence est invalide,  ou si @base n'est pas entre 0 et 5, COUPDAYBS "
"renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYBS (DATE(2002;11;29);DATE(2004;2;29);4;0) = 89\n"
"COUPDAYBS (DATE(2002;11;29);DATE(2004;2;29);4;0;FAUX) = 0\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3523
msgid ""
"@FUNCTION=COUPDAYS\n"
"@SYNTAX=COUPDAYS(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPDAYS returns the number of days in the coupon period of the "
"settlement date.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPDAYS returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 90\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 90\n"
"COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,1,FALSE) = 91\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYS\n"
"@SYNTAX=COUPDAYS(date;maturité;fréquence[;base])\n"
"@DESCRIPTION=COUPDAYS renvoie le nombre de jours dans la période de coupon "
"correpondant à @date. @fréquence est le nombre de coupons payés chaque année "
"(1, 2 ou 4). @base indique le type de comptage de jours à utiliser (défaut "
"0) :\n"
"\n"
"0  30/360 US (MSRB règle G33 (e)) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"5  30/360 Européen+\n"
"\n"
"* Si @fréquence ne vaut pas 1, 2 ou 4,  ou si @base n'est pas entre 0 et 5, "
"COUPDAYS renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYS (DATE(2002;11;29);DATE(2004;2;29);4;0) = 90\n"
"COUPDAYS (DATE(2002;11;29);DATE(2004;2;29);4;0;FAUX) = 90\n"
"COUPDAYS (DATE(2002;11;29);DATE(2004;2;29);4;1;FAUX) = 91\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3572
msgid ""
"@FUNCTION=COUPDAYSNC\n"
"@SYNTAX=COUPDAYSNC(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPDAYSNC returns the number of days from the settlement date "
"to the next coupon date.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPDAYSNC returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0) = 1\n"
"COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 89\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYNC\n"
"@SYNTAX=COUPDAYNC(date;maturité;fréquence[;base])\n"
"@DESCRIPTION=COUPDAYNC renvoie le nombre de jours entre @date et le prochain "
"détachement de coupon. @fréquence est le nombre de coupons payés chaque "
"année (1, 2 ou 4). @base indique le type de comptage de jours à utiliser "
"(défaut 0) :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"5  30/360 Européen+\n"
"\n"
"* Si @fréquence ne vaut pas 1, 2 ou 4,  ou si @base n'est pas entre 0 et 5, "
"COUPDAYNC renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"COUPDAYSNC (DATE(2002;11;29);DATE(2004;2;29);4;0) = 1\n"
"COUPDAYSNC (DATE(2002;11;29);DATE(2004;2;29);4;0;FAUX) = 89\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3620
msgid ""
"@FUNCTION=COUPNCD\n"
"@SYNTAX=COUPNCD(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPNCD returns the coupon date following settlement.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPNCD returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 30-Nov-2002\n"
"COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 28-Feb-2003\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPDAYNCD\n"
"@SYNTAX=COUPDAYNCD(date;maturité;fréquence[;base;fin_mois])\n"
"@DESCRIPTION=COUPDAYNCD renvoie la date du détachement de coupon suivant "
"immédiatement @date. @fréquence est le nombre de coupons payés chaque année "
"(1, 2 ou 4). @eom = VRAI traite spécialement la fin du mois de maturité. "
"@base indique le type de comptage de jours à utiliser (défaut 0) :\n"
"\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"5  30/360 Européen+\n"
"\n"
"(Voyez le manuel de Gnumeric pour une explication détaillée de ces bases).\n"
"\n"
"Si @fréquence ne vaut pas 1, 2 ou 4,  ou si @base n'est pas entre 0 et 5, "
"COUPDAYNCD renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"COUPNCD (DATE(2002;11;29);DATE(2004;2;29);4;0) = 30-Nov-2002\n"
"COUPNCD (DATE(2002;11;29);DATE(2004;2;29);4;0;FAUX) = 28-Fév-2003\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3669
msgid ""
"@FUNCTION=COUPPCD\n"
"@SYNTAX=COUPPCD(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPPCD returns the coupon date preceding settlement.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly, 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"(See the gnumeric manual for a detailed description of these bases).\n"
"\n"
"* If @frequency is invalid, COUPPCD returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 31-Aug-2002\n"
"COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 29-Nov-2002\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPPCD\n"
"@SYNTAX=COUPPCD(date_éch;maturité;fréquence[;base;fin_mois])\n"
"@DESCRIPTION=COUPPCD renvoie la date du détachement de coupon précédant "
"immédiatement l'échéance. @date_éch est la date d'échéance, @fréquence est "
"le nombre de coupons payés chaque année (1, 2 ou 4). @fin_mois = VRAI traite "
"différemment la fin du mois de maturité. @base indique le type de comptage "
"de jours à utiliser (défaut 0) :\n"
"\n"
"0  30/360 MSRB (G33 (e)) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"5  30/360 Européen+\n"
"\n"
"(Voyez le manuel de Gnumeric pour une explication détaillée de ces bases).\n"
"\n"
"* Si @fréquence ne vaut pas 1, 2 ou 4, 6 ou 12,  ou si @base n'est pas entre "
"0 et 5, COUPPCD renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"COUPPCD (DATE(2002;11;29);DATE(2004;2;29);4;0) = 31-Aoû-2002\n"
"COUPPCD (DATE(2002;11;29);DATE(2004;2;29);4;0;FAUX) = 29-Nov-2002\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3719
msgid ""
"@FUNCTION=COUPNUM\n"
"@SYNTAX=COUPNUM(settlement,maturity,frequency[,basis,eom])\n"
"@DESCRIPTION=COUPNUM returns the numbers of coupons to be paid between the "
"settlement and maturity dates, rounded up.\n"
"\n"
"@settlement is the settlement date of the security.\n"
"@maturity is the maturity date of the security.\n"
"@frequency is the number of coupon payments per year.\n"
"@eom = TRUE handles end of month maturity dates special.\n"
"Allowed frequencies are: 1 = annual, 2 = semi, 4 = quarterly. 6 = bimonthly, "
"12 = monthly.\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"* If @frequency is other than 1, 2, 4, 6 or 12, COUPNUM returns #NUM! "
"error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is not in between 0 and 5, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0) = 6\n"
"COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 5\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COUPNUM\n"
"@SYNTAX=COUPNUM(date;maturité;fréquence[;base;fin_mois])\n"
"@DESCRIPTION=COUPNUM renvoie le nombre de coupons entre @date et la date de "
"maturation @maturité.\n"
"@fréquence est le nombre de coupons payés chaque année (1, 2, 4, 6 ou 12).\n"
"@fin_mois = VRAI traite différemment la fin de mois de maturité.\n"
"@base indique le type de comptage de jours à utiliser (défaut 0) :\n"
"\n"
"  0  30/360 US (NASD) (défaut)\n"
"  1  réel/réel\n"
"  2  réel/360\n"
"  3  réel/365\n"
"  4  30/360 Européen\n"
"  5  30/360 Européen+\n"
"\n"
"* Si @fréquence est invalide,  ou si @base n'est pas entre 0 et 4, COUPNUM "
"renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"COUPNUM (DATE(2002;11;29);DATE(2004;2;29);4;0) = 6\n"
"COUPNUM (DATE(2002;11;29);DATE(2004;2;29);4;0;FAUX) = 5\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3763
msgid ""
"@FUNCTION=CUMIPMT\n"
"@SYNTAX=CUMIPMT(rate,nper,pv,start_period,end_period,type)\n"
"@DESCRIPTION=CUMIPMT returns the cumulative interest paid on a loan between "
"@start_period and @end_period.\n"
"\n"
"* If @rate <= 0, CUMIPMT returns #NUM! error.\n"
"* If @nper <= 0, CUMIPMT returns #NUM! error.\n"
"* If @pv <= 0, CUMIPMT returns #NUM! error.\n"
"* If @start_period < 1, CUMIPMT returns #NUM! error.\n"
"* If @end_period < @start_period, CUMIPMT returns #NUM! error.\n"
"* If @end_period > @nper, CUMIPMT returns #NUM! error.\n"
"* If @type <> 0 and @type <> 1, CUMIPMT returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CUMIPMT\n"
"@SYNTAX=CUMIPMT(taux;nper;val_pres;début_période;fin_période;type)\n"
"@DESCRIPTION=La fonction CUMIPMT renvoie le montant total d'intérets payés "
"sur\n"
"la période entre @début_période et @fin_période.\n"
"@EXAMPLES=\n"
"* Si @taux <= 0, CUMIPMT renvoie #NUM!\n"
"* Si @nper <= 0, CUMIPMT renvoie #NUM!.\n"
"* Si @val_prés <= 0, CUMIPMT renvoie #NUM!.\n"
"* Si @période_début < 1, CUMIPMT renvoie #NUM!.\n"
"* Si @période_fin < @période_début, CUMIPMT renvoie #NUM!.\n"
"* Si @période_fin > @nper, CUMIPMT renvoie #NUM!.\n"
"* Si @type <> 0 et @type <> 1, CUMIPMT renvoie #NUM!.\n"
"\n"
"@SEEALSO=PV"

#: ../plugins/fn-financial/functions.c:3816
msgid ""
"@FUNCTION=CUMPRINC\n"
"@SYNTAX=CUMPRINC(rate,nper,pv,start_period,end_period,type)\n"
"@DESCRIPTION=CUMPRINC returns the cumulative principal paid on a loan "
"between @start_period and @end_period.\n"
"\n"
"* If @rate <= 0, CUMPRINC returns #NUM! error.\n"
"* If @nper <= 0, CUMPRINC returns #NUM! error.\n"
"* If @pv <= 0, CUMPRINC returns #NUM! error.\n"
"* If @start_period < 1, CUMPRINC returns #NUM! error.\n"
"* If @end_period < @start_period, CUMPRINC returns #NUM! error.\n"
"* If @end_period > @nper, CUMPRINC returns #NUM! error.\n"
"* If @type <> 0 and @type <> 1, CUMPRINC returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CUMPRINC\n"
"@SYNTAX=CUMPRINC(taux;nper;val_prés;période_début;période_fin;type)\n"
"@DESCRIPTION=CUMPRINC renvoie le cumul du capital remboursé sur un prêt, "
"entre les périodes @période_début et @période_fin.\n"
"\n"
"* Si @taux <= 0, CUMPRINC renvoie #NUM!\n"
"* Si @nper <= 0, CUMPRINC renvoie #NUM!.\n"
"* Si @val_prés <= 0, CUMPRINC renvoie #NUM!.\n"
"* Si @période_début < 1, CUMPRINC renvoie #NUM!.\n"
"* Si @période_fin < @période_début, CUMPRINC renvoie #NUM!.\n"
"* Si @période_fin > @nper, CUMPRINC renvoie #NUM!.\n"
"* Si @type <> 0 et @type <> 1, CUMPRINC renvoie #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3869
msgid ""
"@FUNCTION=MDURATION\n"
"@SYNTAX=MDURATION(settlement,maturity,coupon,yield,frequency[,basis])\n"
"@DESCRIPTION=MDURATION returns the Macauley duration for a security with par "
"value 100.\n"
"\n"
"@basis is the type of day counting system you want to use:\n"
"\n"
"  0  MSRB 30/360 (MSRB Rule G33 (e))\n"
"  1  actual days/actual days\n"
"  2  actual days/360\n"
"  3  actual days/365\n"
"  4  European 30/360\n"
"  5  European+ 30/360\n"
"\n"
"* If @settlement or @maturity are not valid dates, MDURATION returns #NUM! "
"error.\n"
"* If @frequency is other than 1, 2, or 4, MDURATION returns #NUM! error.\n"
"* If @basis is omitted, MSRB 30/360 is applied.\n"
"* If @basis is invalid, #NUM! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DURATION,G_DURATION"
msgstr ""
"@SYNTAX=MDURATION(liquidation;échéance;taux;rendement;fréquence[;base])\n"
"@DESCRIPTION=MDURATION renvoie la durée modifiée de Macauley pour un \n"
"titre ayant une valeur nominale de 100.\n"
"@liquidation est la date de règlement du titre, @échéance son échéance, \n"
"@taux le taux d'intérêt annuel et @rendement le taux de rendement annuel, \n"
"@fréquence le nombre de coupons payés par an (1, 2 ou 4 exclusivement). \n"
"@base indique le système de comptage de jours à utiliser :\n"
"0  30/360 US (NASD) (défaut)\n"
"1  réel/réel\n"
"2  réel/360\n"
"3  réel/365\n"
"4  30/360 Européen\n"
"5  30/360 Européen+\n"
"\n"
"(Voyez le manuel de Gnumeric pour une explication détaillée de ces bases).\n"
"\n"
"* Si @règlement ou @échéance n'est pas valide, ou @règlement >= @échéance, "
"MDURATION renvoie l'erreur #NUM!.\n"
"* Si @fréquence est différent de 1, 2 et 4, MDURATION renvoie #NUM!.\n"
"* Si @base < 0 ou @base > 5, MDURATION renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-financial/functions.c:3930
msgid ""
"@FUNCTION=VDB\n"
"@SYNTAX=VDB(cost,salvage,life,start_period,end_period[,factor,switch])\n"
"@DESCRIPTION=VDB calculates the depreciation of an asset for a given period "
"or partial period using the double-declining balance method.\n"
"\n"
"* If @start_period < 0, VDB returns #NUM! error.\n"
"* If @start_period > @end_period, VDB returns #NUM! error.\n"
"* If @end_period > @life, VDB returns #NUM! error.\n"
"* If @cost < 0, VDB returns #NUM! error.\n"
"* If @salvage > @cost, VDB returns #NUM! error.\n"
"* If @factor <= 0, VDB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DB"
msgstr ""
"@FUNCTION=VDB\n"
"@SYNTAX=VDB(coût;val_résid;durée_vie;début_période;fin_période[;facteur;"
"switch])\n"
"@DESCRIPTION=VDB calcule l'amortissement d'un bien pour une période comprise "
"entre @début_période et @fin_période, en utilisant la méthode de la balance "
"à double taux.\n"
"* Si @période_début < 0, VDB renvoie #NUM!.\n"
"* Si @période_fin < @période_début, VDB renvoie #NUM!.\n"
"* Si @période_fin > @durée_vie, VDB renvoie #NUM!.\n"
"* Si @coût < 0, VDB renvoie #NUM!.\n"
"* Si @val_résid > @coût, VDB renvoie #NUM!.\n"
"* Si @facteur <= 0, VDB renvoie #NUM!\n"
"* Si @type <> 0 et @type <> 1, VDB renvoie #NUM!.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=DB"

#: ../plugins/fn-info/functions.c:69
msgid ""
"@FUNCTION=CELL\n"
"@SYNTAX=CELL(type,ref)\n"
"@DESCRIPTION=CELL returns information about the formatting, location, or "
"contents of a cell.\n"
"\n"
"@type specifies the type of information you want to obtain:\n"
"\n"
"  address    \tReturns the given cell reference as text.\n"
"  col        \t\tReturns the number of the column in @ref.\n"
"  contents   \tReturns the contents of the cell in @ref.\n"
"  format     \t\tReturns the code of the format of the cell.\n"
"  parentheses\tReturns 1 if @ref contains a negative value\n"
"             \t\tand its format displays it with parentheses.\n"
"  row        \t\tReturns the number of the row in @ref.\n"
"  width      \t\tReturns the column width.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Cell(\"format\",A1) returns the code of the format of the cell A1.\n"
"\n"
"@SEEALSO=INDIRECT"
msgstr ""
"@FUNCTION=CELL\n"
"@SYNTAX=CELL(type;réf)\n"
"@DESCRIPTION=CELL renvoie une information sur le format, l'emplacement ou le "
"contenu d'une cellule. \n"
"@type indique l'information désirée :\n"
"     address       Renvoie la référence de la cellule sous forme de texte\n"
"     col           Renvoie le numéro de colonne de @réf\n"
"     contents      Renvoie le contenu de la cellule @réf\n"
"     format        Renvoie le code de format de la cellule.\n"
"     parentheses   Renvoie 1 si @réf contient une valeur négative et que\n"
"                   son format l'affiche avec des parenthèses.\n"
"     row           Renvoie le numéro de ligne de @ref\n"
"     width         Renvoie la largeur de colonne\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CEll(\"format\",A1) renvoie le code de format de la cellule A1.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1166
msgid ""
"@FUNCTION=EXPRESSION\n"
"@SYNTAX=EXPRESSION(cell)\n"
"@DESCRIPTION=EXPRESSION returns expression in @cell as a string, or empty if "
"the cell is not an expression.\n"
"@EXAMPLES=\n"
"entering '=EXPRESSION(A3)' in A2 = empty (assuming there is nothing in A3).\n"
"entering '=EXPRESSION(A2)' in A1 = 'EXPRESSION(A3)'.\n"
"\n"
"@SEEALSO=TEXT"
msgstr ""
"@FUNCTION=EXPRESSION\n"
"@SYNTAX=EXPRESSION(cellule)\n"
"@DESCRIPTION=EXPRESSION renvoie l'expression contenue dans @cellule en tant "
"que chaîne, ou une chaîne vide si la cellule ne contient pas une "
"expression.\n"
"@EXAMPLES=\n"
"dans A1, EXPRESSION(A2) vaut 'EXPRESSION(A3)'.\n"
"dans A2, EXPRESSION(A3) est vide.\n"
"\n"
"@SEEALSO=TEXT"

#: ../plugins/fn-info/functions.c:1213
msgid ""
"@FUNCTION=COUNTBLANK\n"
"@SYNTAX=COUNTBLANK(range)\n"
"@DESCRIPTION=COUNTBLANK returns the number of blank cells in a @range.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COUNTBLANK(A1:A20) returns the number of blank cell in A1:A20.\n"
"\n"
"@SEEALSO=COUNT"
msgstr ""
"@FUNCTION=COUNTBLANK\n"
"@SYNTAX=COUNTBLANK(intervalle)\n"
"@DESCRIPTION=La fonction COUNTBLANK renvoie le nombre de cellules vides dans "
"@intervalle.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"COUNTBLANK(A1:A20) renvoie le nombre de cellules vides dans A1:A20.\n"
"\n"
"@SEEALSO=COUNT"

#: ../plugins/fn-info/functions.c:1264
msgid ""
"@FUNCTION=INFO\n"
"@SYNTAX=INFO(type)\n"
"@DESCRIPTION=INFO returns information about the current operating "
"environment. \n"
"\n"
"@type is the type of information you want to obtain:\n"
"\n"
"  memavail \tReturns the amount of memory available, bytes.\n"
"  memused  \tReturns the amount of memory used (bytes).\n"
"  numfile  \t\tReturns the number of active worksheets.\n"
"  osversion\t\tReturns the operating system version.\n"
"  recalc   \t\tReturns the recalculation mode (automatic).\n"
"  release  \t\tReturns the version of Gnumeric as text.\n"
"  system   \t\tReturns the name of the environment.\n"
"  totmem   \t\tReturns the amount of total memory available.\n"
"\n"
"* This function is Excel compatible, except that types directory and origin "
"are not implemented.\n"
"\n"
"@EXAMPLES=\n"
"INFO(\"system\") returns \"Linux\" on a Linux system.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=INFO\n"
"@SYNTAX=INFO(type)\n"
"@DESCRIPTION=INFO renvoie une information sur l'environnement de Gnumeric\n"
"@type indique l'information désirée :\n"
"    memavail        Renvoie la quantité de mémoire disponible (octets)\n"
"    memused         Renvoie la quantité de mémoire utilisée (octets)\n"
"    numfile         Renvoie le nombre de feuilles actives\n"
"    osversion       Renvoie la version du système d'exploitation\n"
"    recalc          Renvoie le mode de recalcul (automatique).\n"
"    release         Renvoie une chaîne contenant la version de Gnumeric\n"
"    system          Renvoie le nom du système d'exploitation\n"
"    totmem          Renvoie la quantité totale de mémoire (octets)\n"
"\n"
"* Cette fonction est compatible avec Excel, à ceci près que les types "
"\"directory\" et \"origin\" ne sont pas implémentés.\n"
"@EXAMPLES=\n"
"INFO(\"system\") renvoie \"Linux\" sur un système Linux.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1372
msgid ""
"@FUNCTION=ISERROR\n"
"@SYNTAX=ISERROR(value)\n"
"@DESCRIPTION=ISERROR returns a TRUE value if the expression has an error.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISERROR(NA()) equals TRUE.\n"
"\n"
"@SEEALSO=ERROR"
msgstr ""
"@FUNCTION=ISERROR\n"
"@SYNTAX=ISERROR(exp)\n"
"@DESCRIPTION=La fonction ISERROR renvoie VRAI si @exp contient une erreur.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISERROR(NA()) vaut VRAI.\n"
"\n"
"@SEEALSO=ERROR"

#: ../plugins/fn-info/functions.c:1397
msgid ""
"@FUNCTION=ISNA\n"
"@SYNTAX=ISNA(value)\n"
"@DESCRIPTION=ISNA returns TRUE if the value is the #N/A error value.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISNA(NA()) equals TRUE.\n"
"\n"
"@SEEALSO=NA"
msgstr ""
"@FUNCTION=ISNA\n"
"@SYNTAX=ISNA(valeur)\n"
"@DESCRIPTION=La fonction ISNA renvoie VRAI si @valeur est l'erreur #N/A.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISNA(NA()) vaut VRAI.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1426
msgid ""
"@FUNCTION=ISERR\n"
"@SYNTAX=ISERR(value)\n"
"@DESCRIPTION=ISERR returns TRUE if the value is any error value except #N/"
"A.\n"
"\n"
"* This function is Excel compatible. \n"
"@EXAMPLES=\n"
"ISERR(NA()) return FALSE.\n"
"\n"
"@SEEALSO=ISERROR"
msgstr ""
"@FUNCTION=ISERR\n"
"@SYNTAX=ISERR(valeur)\n"
"@DESCRIPTION=La fonction ISERR renvoie VRAI si @valeur est une erreur, mais "
"pas #N/A.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISERR(NA()) vaut FAUX.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1452
msgid ""
"@FUNCTION=ERROR.TYPE\n"
"@SYNTAX=ERROR.TYPE(value)\n"
"@DESCRIPTION=ERROR.TYPE returns an error number corresponding to the given "
"error value.  The error numbers for error values are:\n"
"\n"
"\t#DIV/0!  \t\t2\n"
"\t#VALUE!  \t3\n"
"\t#REF!    \t\t4\n"
"\t#NAME?   \t5\n"
"\t#NUM!    \t\t6\n"
"\t#N/A     \t\t7\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ERROR.TYPE(NA()) equals 7.\n"
"\n"
"@SEEALSO=ISERROR"
msgstr ""
"@FUNCTION=ERROR.TYPE\n"
"@SYNTAX=ERROR.TYPE(valeur)\n"
"@DESCRIPTION=ERROR.TYPE renvoie un code d'erreur correspondant à l'erreur "
"@valeur. Les codes possibles sont :\n"
"#DIV/0!    2\n"
"#VALEUR!    3\n"
"#REF!      4\n"
"#NOM!     5\n"
"#NUM!      6\n"
"#N/A!       7\n"
"\n"
"* Cette fonction est compatible avec Excel. \n"
"@EXAMPLES=\n"
"ERROR.TYPE(NA()) vaut 7.\n"
"\n"
"@SEEALSO=ISERROR"

#: ../plugins/fn-info/functions.c:1494
msgid ""
"@FUNCTION=NA\n"
"@SYNTAX=NA()\n"
"@DESCRIPTION=NA returns the error value #N/A.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NA() equals #N/A error.\n"
"\n"
"@SEEALSO=ISNA"
msgstr ""
"@FUNCTION=NA\n"
"@SYNTAX=NA()\n"
"@DESCRIPTION=La fonction NA renvoie la valeur d'erreur #N/A.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NA() vaut l'erreur #N/A.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1519
msgid ""
"@FUNCTION=ERROR\n"
"@SYNTAX=ERROR(text)\n"
"@DESCRIPTION=ERROR return the specified error.\n"
"\n"
"@EXAMPLES=\n"
"ERROR(\"#OWN ERROR\").\n"
"\n"
"@SEEALSO=ISERROR"
msgstr ""
"@FUNCTION=ERROR\n"
"@SYNTAX=ERROR(texte)\n"
"@DESCRIPTION=La fonction ERROR renvoie l'erreur spécifiée en paramètre\n"
"\n"
"@EXAMPLES=\n"
"ERROR(\"#MON ERREUR!\")\n"
"@SEEALSO=ISERROR"

#: ../plugins/fn-info/functions.c:1543
msgid ""
"@FUNCTION=ISBLANK\n"
"@SYNTAX=ISBLANK(value)\n"
"@DESCRIPTION=ISBLANK returns TRUE if the value is blank.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISBLANK(A1).\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISBLANK\n"
"@SYNTAX=ISBLANK(valeur)\n"
"@DESCRIPTION=La fonction ISBLANK renvoie VRAI si @valeur est vide.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISBLANK(A1)\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1568
msgid ""
"@FUNCTION=ISEVEN\n"
"@SYNTAX=ISEVEN(value)\n"
"@DESCRIPTION=ISEVEN returns TRUE if the number is even.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISEVEN(4) equals TRUE.\n"
"\n"
"@SEEALSO=ISODD"
msgstr ""
"@FUNCTION=ISEVEN\n"
"@SYNTAX=ISEVEN(nombre)\n"
"@DESCRIPTION=La fonction ISEVEN renvoie VRAI si @nombre est pair.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=ISODD"

#: ../plugins/fn-info/functions.c:1597
msgid ""
"@FUNCTION=ISLOGICAL\n"
"@SYNTAX=ISLOGICAL(value)\n"
"@DESCRIPTION=ISLOGICAL returns TRUE if the value is a logical value.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISLOGICAL(A1).\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISLOGICAL\n"
"@SYNTAX=ISLOGICAL(valeur)\n"
"@DESCRIPTION=La fonction ISLOGICAL renvoie VRAI si @valeur est une valeur "
"logique.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1622
msgid ""
"@FUNCTION=ISNONTEXT\n"
"@SYNTAX=ISNONTEXT(value)\n"
"@DESCRIPTION=ISNONTEXT Returns TRUE if the value is not text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISNONTEXT(\"text\") equals FALSE.\n"
"\n"
"@SEEALSO=ISTEXT"
msgstr ""
"@FUNCTION=ISNONTEXT\n"
"@SYNTAX=ISNONTEXT(valeur)\n"
"@DESCRIPTION=La fonction ISNONTEXT renvoie VRAI si la valeur n'est pas du "
"texte.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISNONTEXT(\"texte\") vaut FAUX.\n"
"\n"
"@SEEALSO=ISTEXT"

#: ../plugins/fn-info/functions.c:1647
msgid ""
"@FUNCTION=ISNUMBER\n"
"@SYNTAX=ISNUMBER(value)\n"
"@DESCRIPTION=ISNUMBER returns TRUE if the value is a number.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISNUMBER(\"text\") equals FALSE.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISNUMBER\n"
"@SYNTAX=ISNUMBER(valeur)\n"
"@DESCRIPTION=La fonction ISNUMBER renvoie VRAI si @valeur est un nombre.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISNUMBER(\"text\") vaut FAUX.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1672
msgid ""
"@FUNCTION=ISODD\n"
"@SYNTAX=ISODD(value)\n"
"@DESCRIPTION=ISODD returns TRUE if the number is odd.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISODD(3) equals TRUE.\n"
"\n"
"@SEEALSO=ISEVEN"
msgstr ""
"@FUNCTION=ISODD\n"
"@SYNTAX=ISODD(nombre)\n"
"@DESCRIPTION=La fonction ISODD renvoie VRAI si @nombre est impair.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISODD(3) renvoie VRAI\n"
"@SEEALSO=ISEVEN"

#: ../plugins/fn-info/functions.c:1701
msgid ""
"@FUNCTION=ISREF\n"
"@SYNTAX=ISREF(value)\n"
"@DESCRIPTION=ISREF returns TRUE if the value is a reference.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISREF(A1) equals TRUE.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ISREF\n"
"@SYNTAX=ISREF(valeur)\n"
"@DESCRIPTION=La fonction ISREF renvoie VRAI si @valeur est une référence.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISREF(A1) vaut VRAI.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1730
msgid ""
"@FUNCTION=ISTEXT\n"
"@SYNTAX=ISTEXT(value)\n"
"@DESCRIPTION=ISTEXT returns TRUE if the value is text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ISTEXT(\"text\") equals TRUE.\n"
"\n"
"@SEEALSO=ISNONTEXT"
msgstr ""
"@FUNCTION=ISTEXT\n"
"@SYNTAX=ISTEXT(valeur)\n"
"@DESCRIPTION=La fonction ISTEXT renvoie VRAI si @valeur est du texte.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ISTEXT(\"texte\") vaut VRAI.\n"
"\n"
"@SEEALSO=ISNONTEXT"

#: ../plugins/fn-info/functions.c:1755
msgid ""
"@FUNCTION=N\n"
"@SYNTAX=N(value)\n"
"@DESCRIPTION=N returns a value converted to a number.  Strings containing "
"text are converted to the zero value.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"N(\"42\") equals 42.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=N\n"
"@SYNTAX=N(valeur)\n"
"@DESCRIPTION=La fonction N convertit @valeur en nombre. Si @valeur contient "
"du texte, N renverra 0.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"N(\"42\") vaut 42.\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1795
msgid ""
"@FUNCTION=TYPE\n"
"@SYNTAX=TYPE(value)\n"
"@DESCRIPTION=TYPE returns a number indicating the data type of a value.\n"
"\n"
"1  == number\n"
"2  == text\n"
"4  == boolean\n"
"16 == error\n"
"64 == array\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TYPE(3) equals 1.\n"
"TYPE(\"text\") equals 2.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=TYPE\n"
"@SYNTAX=TYPE(valeur)\n"
"@DESCRIPTION=La fonction TYPE renvoie un nombre indiquant le type de données "
"de @valeur.\n"
"1 == nombre\n"
"2 == texte\n"
"4 == booléen\n"
"16 == erreur\n"
"64 == tableau\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TYPE (3) vaut 1\n"
"TYPE (\"texte\") vaut 2\n"
"@SEEALSO="

#: ../plugins/fn-info/functions.c:1844
msgid ""
"@FUNCTION=GETENV\n"
"@SYNTAX=GETENV(string)\n"
"@DESCRIPTION=GETENV retrieves a value from the execution environment.\n"
"\n"
"* If the variable specified by @string does not exist, #N/A! will be "
"returned.  Note, that variable names are case sensitive.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=GETENV\n"
"@SYNTAX=GETENV(chaîne)\n"
"@DESCRIPTION=GETENV va chercher la variable @chaîne dans l'environnement "
"d'exécution et renvoie sa valeur.\n"
"\n"
"* Si cette variable n'existe pas, l'erreur #N/A! est renvoyée. Notez que les "
"noms de variables sont sensibles à la casse.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-logical/functions.c:45
#, fuzzy
msgid ""
"@FUNCTION=AND\n"
"@SYNTAX=AND(b1, b2, ...)\n"
"@DESCRIPTION=AND implements the logical AND function: the result is TRUE if "
"all of the expressions evaluate to TRUE, otherwise it returns FALSE.\n"
"\n"
"@b1 through @bN are expressions that should evaluate to TRUE or FALSE.  If "
"an integer or floating point value is provided, zero is considered FALSE and "
"anything else is TRUE.\n"
"\n"
"* If the values contain strings or empty cells those values are ignored.\n"
"* If no logical values are provided, then the error #VALUE! is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"AND(TRUE,TRUE) equals TRUE.\n"
"AND(TRUE,FALSE) equals FALSE.\n"
"\n"
"Let us assume that A1 holds number five and A2 number one.  Then\n"
"AND(A1>3,A2<2) equals TRUE.\n"
"\n"
"@SEEALSO=OR, NOT"
msgstr ""
"@FUNCTION=AND\n"
"@SYNTAX=AND(b1;b2;...)\n"
"@DESCRIPTION=La fonction AND implémente la fonction logique ET : le résultat "
"est VRAI si toutes les expressions s'évaluent a VRAI, sinon FAUX est "
"renvoyé.\n"
"@b1 à @bN sont des expressions qui doivent avoir des valeurs logiques. Si "
"une valeur flottante ou entière est fournie, alors zéro est considéré comme "
"FAUX et toutes les autres valeurs comme VRAI.\n"
"* Si certaines valeurs contiennent des chaînes ou des cellules vides, celles-"
"ci sont ignorées.\n"
"* Si aucune valeur logique n'est fournie, alors l'erreur #VALUE! est "
"renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"AND(VRAI;VRAI) = VRAI.\n"
"AND(VRAI;FAUX) = FAUX.\n"
"\n"
"Si A1 contient le nombre 5 et A2 le nombre 1, alors\n"
"AND(A1>3;A2<2) = VRAI.\n"
"\n"
"@SEEALSO=OR, NOT"

#: ../plugins/fn-logical/functions.c:112
msgid ""
"@FUNCTION=NOT\n"
"@SYNTAX=NOT(number)\n"
"@DESCRIPTION=NOT implements the logical NOT function: the result is TRUE if "
"the @number is zero;  otherwise the result is FALSE.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NOT(0) equals TRUE.\n"
"NOT(TRUE) equals FALSE.\n"
"\n"
"@SEEALSO=AND, OR"
msgstr ""
"@FUNCTION=NOT\n"
"@SYNTAX=NOT(nombre)\n"
"@DESCRIPTION=Implémente la fonction logique NON : le résultat est VRAI si "
"@nombre est zéro; sinon le résultat est FAUX.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NOT(0) vaut FAUX\n"
"NOT(VRAI) vaut FAUX\n"
"\n"
"@SEEALSO=AND, OR"

#: ../plugins/fn-logical/functions.c:143
#, fuzzy
msgid ""
"@FUNCTION=OR\n"
"@SYNTAX=OR(b1, b2, ...)\n"
"@DESCRIPTION=OR implements the logical OR function: the result is TRUE if "
"any of the values evaluated to TRUE.\n"
"\n"
"@b1 through @bN are expressions that should evaluate to TRUE or FALSE. If an "
"integer or floating point value is provided, zero is considered FALSE and "
"anything else is TRUE.\n"
"\n"
"* If the values contain strings or empty cells those values are ignored.\n"
"* If no logical values are provided, then the error #VALUE! is returned.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"OR(TRUE,FALSE) equals TRUE.\n"
"OR(3>4,4<3) equals FALSE.\n"
"\n"
"@SEEALSO=AND, NOT"
msgstr ""
"@FUNCTION=OR\n"
"@SYNTAX=OR(b1;b2;...)\n"
"@DESCRIPTION=Implémente la fonction logique OU: le résultat est VRAI si une "
"ou plusieurs expressions s'évaluent a VRAI, sinon FAUX est renvoyé.\n"
"Si une valeur flottante ou entière est fournie, alors zéro est considéré "
"comme FAUX et toutes les autres valeurs comme VRAI.\n"
"* Les valeurs contenant des chaînes ou des cellules vides sont ignorées.\n"
"* Si aucune valeur logique n'est fournie, alors l'erreur #VALUE! est "
"renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"OR(VRAI;FAUX) vaut VRAI.\n"
"OR(3>4;4<3) vaut FAUX.\n"
"@SEEALSO=AND, NOT"

#: ../plugins/fn-logical/functions.c:207
#, fuzzy
msgid ""
"@FUNCTION=XOR\n"
"@SYNTAX=XOR(b1, b2, ...)\n"
"@DESCRIPTION=XOR implements the logical exclusive OR function: the result is "
"TRUE if an odd number of the values evaluated to TRUE.\n"
"\n"
"@b1 through @bN are expressions that should evaluate to TRUE or FALSE. If an "
"integer or floating point value is provided, zero is considered FALSE and "
"anything else is TRUE.\n"
"\n"
"* If the values contain strings or empty cells those values are ignored.\n"
"* If no logical values are provided, then the error #VALUE! is returned.\n"
"@EXAMPLES=\n"
"XOR(TRUE,FALSE) equals TRUE.\n"
"XOR(3>4,4<3) equals FALSE.\n"
"\n"
"@SEEALSO=OR, AND, NOT"
msgstr ""
"@FUNCTION=XOR\n"
"@SYNTAX=XOR(b1;b2;...)\n"
"@DESCRIPTION=Implémente la fonction logique OU exclusif: le résultat est "
"VRAI si un nombre impair d'expressions s'évaluent a VRAI.\n"
"Si une valeur flottante ou entière est fournie, alors zéro est considéré "
"comme FAUX et toutes les autres valeurs comme VRAI.\n"
"* Les valeurs contenant des chaînes ou des cellules vides sont ignorées.\n"
"* Si aucune valeur logique n'est fournie, alors l'erreur #VALEUR! est "
"renvoyée.\n"
"@EXAMPLES=\n"
"XOR(VRAI;FAUX) vaut VRAI.\n"
"XOR(3>4;4<3) vaut FAUX.\n"
"@SEEALSO=OR, AND, NOT"

#: ../plugins/fn-logical/functions.c:269
msgid ""
"@FUNCTION=IF\n"
"@SYNTAX=IF(condition[,if-true,if-false])\n"
"@DESCRIPTION=IF function can be used to evaluate conditionally other "
"expressions. IF evaluates @condition.  If @condition returns a non-zero "
"value the result of the IF expression is the @if-true expression, otherwise "
"IF evaluates to the value of @if-false.\n"
"\n"
"* If omitted @if-true defaults to TRUE and @if-false to FALSE.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"IF(FALSE,TRUE,FALSE) equals FALSE.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=IF\n"
"@SYNTAX=IF(condition[;si-vrai;si-faux])\n"
"@DESCRIPTION=On utilise la fonction IF pour évaluer conditionellement "
"d'autres expressions. IF évalue @condition; si elle renvoie une valeur non-"
"nulle, le résultat de l'expression sera celui de l'expression @si-vrai, "
"sinon ce sera celui de l'expression @si-faux.\n"
"\n"
"* Si @si-vrai ou @si-faux ne sont pas donnés, ils prennent respectivement "
"comme valeur par défaut VRAI et FAUX.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"IF (FAUX;VRAI;FAUX) vaut FAUX.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-logical/functions.c:310
msgid ""
"@FUNCTION=TRUE\n"
"@SYNTAX=TRUE()\n"
"@DESCRIPTION=TRUE returns boolean value true.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TRUE() equals TRUE.\n"
"\n"
"@SEEALSO=FALSE"
msgstr ""
"@FUNCTION=TRUE\n"
"@SYNTAX=TRUE()\n"
"@DESCRIPTION=TRUE renvoie la valeur logique VRAI.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TRUE() vaut VRAI.\n"
"@SEEALSO="

#: ../plugins/fn-logical/functions.c:335
msgid ""
"@FUNCTION=FALSE\n"
"@SYNTAX=FALSE()\n"
"@DESCRIPTION=FALSE returns boolean value false.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FALSE() equals FALSE.\n"
"\n"
"@SEEALSO=TRUE"
msgstr ""
"@FUNCTION=FALSE\n"
"@SYNTAX=FALSE()\n"
"@DESCRIPTION=FALSE renvoie la valeur logique FAUX.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FALSE() vaut FAUX.\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:327
msgid ""
"@FUNCTION=ADDRESS\n"
"@SYNTAX=ADDRESS(row_num,col_num[,abs_num,a1,text])\n"
"@DESCRIPTION=ADDRESS returns a cell address as text for specified row and "
"column numbers.\n"
"\n"
"@a1 is a logical value that specifies the reference style.  If @a1 is TRUE "
"or omitted, ADDRESS returns an A1-style reference, i.e. $D$4.  Otherwise "
"ADDRESS returns an R1C1-style reference, i.e. R4C4.\n"
"\n"
"@text specifies the name of the worksheet to be used as the external "
"reference.\n"
"\n"
"* If @abs_num is 1 or omitted, ADDRESS returns absolute reference.\n"
"* If @abs_num is 2 ADDRESS returns absolute row and relative column.\n"
"* If @abs_num is 3 ADDRESS returns relative row and absolute column.\n"
"* If @abs_num is 4 ADDRESS returns relative reference.\n"
"* If @abs_num is greater than 4 ADDRESS returns #VALUE! error.\n"
"* If @row_num or @col_num is less than one, ADDRESS returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"ADDRESS(5,4) equals \"$D$5\".\n"
"ADDRESS(5,4,4) equals \"D5\".\n"
"ADDRESS(5,4,3,FALSE) equals \"R[5]C4\".\n"
"\n"
"@SEEALSO=COLUMNNUMBER"
msgstr ""
"@FUNCTION=ADDRESS\n"
"@SYNTAX=ADDRESS(num_lig;num_col[;abs;a1;texte])\n"
"@DESCRIPTION=La fonction ADDRESS renvoie l'adresse d'une cellule sous forme "
"de texte à partir d'un numéro de ligne et de colonne.\n"
"@a1 est une valeur logique qui spécifie le style de référence. Si @a1 vaut "
"VRAI ou est omis, ADDRESS renvoie une référence dans le style A1, par "
"exemple $D$4. Sinon ADDRESS renvoie une référence dans le style R1C1, par "
"exemple R4C4.\n"
"@texte précise le nom de la feuille de calcul à utiliser comme référence "
"externe.\n"
"* Si @abs vaut 1 ou est omis, ADDRESS renvoie une référence absolue.\n"
"* Si @abs vaut 2, ADDRESS renvoie une ligne absolue et une colonne "
"relative.\n"
"* Si @abs vaut 3, ADDRESS renvoie une ligne relative et une colonne "
"absolue.\n"
"* Si @abs vaut 4, ADDRESS renvoie une référence relative.\n"
"* Si @abs est supérieur à 4, ADDRESS renvoie l'erreur #NUM!. \n"
"* Si @num_lig ou @num_col sont inférieurs à un, ADDRESS renvoie l'erreur "
"#NUM!. \n"
"@EXAMPLES=\n"
"ADDRESS(5;4) vaut \"$D$5\".\n"
"ADDRESS(5;4;4) vaut \"D5\".\n"
"ADDRESS(5;4;3;FAUX) vaut \"R[5]C4\".\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:429
msgid ""
"@FUNCTION=AREAS\n"
"@SYNTAX=AREAS(reference)\n"
"@DESCRIPTION=AREAS returns the number of areas in @reference. \n"
"\n"
"@EXAMPLES=\n"
"AREAS((A1,B2,C3)) equals 3.\n"
"\n"
"@SEEALSO=ADDRESS,INDEX,INDIRECT,OFFSET"
msgstr ""
"@FUNCTION=AREAS\n"
"@SYNTAX=AREAS(référence)\n"
"@DESCRIPTION=Renvoie le nombre de zones dans @référence.\n"
"@EXAMPLES=\n"
"AREAS((A1;B2;C3)) vaut 3.\n"
"\n"
"@SEEALSO=ADDRESS,INDEX,INDIRECT,OFFSET"

#: ../plugins/fn-lookup/functions.c:508
msgid ""
"@FUNCTION=CHOOSE\n"
"@SYNTAX=CHOOSE(index[,value1][,value2]...)\n"
"@DESCRIPTION=CHOOSE returns the value of index @index. @index is rounded to "
"an integer if it is not.\n"
"\n"
"* If @index < 1 or @index > number of values, CHOOSE returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"CHOOSE(3,\"Apple\",\"Orange\",\"Grape\",\"Perry\") equals \"Grape\".\n"
"\n"
"@SEEALSO=IF"
msgstr ""
"@FUNCTION=CHOOSE\n"
"@SYNTAX=CHOOSE(indice[;valeur1][;valeur2]...)\n"
"@DESCRIPTION=La fonction CHOOSE renvoie la valeur à l'indice @indice. "
"@indice est arrondi à l'entier le plus proche si nécessaire.\n"
"\n"
"* Si @indice < 1 ou si @indice > nombre de valeurs, la fonction renvoie "
"l'erreur #VAL!.\n"
"@EXAMPLES=\n"
"CHOOSE(3;\"Pomme\";\"Orange\";\"Raisin\";\"Banane\") vaut \"Raisin\".\n"
"\n"
"@SEEALSO=IF"

#: ../plugins/fn-lookup/functions.c:562
msgid ""
"@FUNCTION=VLOOKUP\n"
"@SYNTAX=VLOOKUP(value,range,column[,approximate,as_index])\n"
"@DESCRIPTION=VLOOKUP function finds the row in range that has a first column "
"similar to @value.  If @approximate is not true it finds the row with an "
"exact equivalence.  If @approximate is true, then the values must be sorted "
"in order of ascending value for correct function; in this case it finds the "
"row with value less than @value.  It returns the value in the row found at a "
"1-based offset in @column columns into the @range.  @as_index returns the 0-"
"based offset that matched rather than the value.\n"
"\n"
"* VLOOKUP returns #NUM! if @column < 0.\n"
"* VLOOKUP returns #REF! if @column falls outside @range.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=HLOOKUP"
msgstr ""
"@FUNCTION=VLOOKUP\n"
"@SYNTAX=VLOOKUP(valeur;intervalle;ligne[;approximation;indice])\n"
"@DESCRIPTION=La fonction VLOOKUP cherche la ligne dans @intervalle qui a une "
"première colonne similaire à @valeur. Si @approximation est FAUX, l'égalité "
"sera stricte ; si @approximation est VRAI, la fonction trouvera la ligne de "
"valeur immédiatement inférieure à @valeur, à condition que les données "
"soient triées. Normalement, VLOOKUP renvoie la valeur contenue à la colonne "
"@colonne de la ligne trouvée. Si @indice est VRAI, la fonction renvoie "
"l'indice de la ligne et non sa valeur.\n"
"\n"
"* La fonction renvoie #NUM! si @colonne < 0, \n"
"* La fonction renvoie #REF! si @colonne tombe en dehors de @intervalle.\n"
"@SEEALSO=HLOOKUP"

#: ../plugins/fn-lookup/functions.c:623
msgid ""
"@FUNCTION=HLOOKUP\n"
"@SYNTAX=HLOOKUP(value,range,row[,approximate,as_index])\n"
"@DESCRIPTION=HLOOKUP function finds the col in range that has a first row "
"cell similar to @value.  If @approximate is not true it finds the col with "
"an exact equivalence.  If @approximate is true, then the values must be "
"sorted in order of ascending value for correct function; in this case it "
"finds the col with value less than @value it returns the value in the col "
"found at a 1-based offset in @row rows into the @range.  @as_index returns "
"the 0-based offset that matched rather than the value.\n"
"\n"
"* HLOOKUP returns #NUM! if @row < 0.\n"
"* HLOOKUP returns #REF! if @row falls outside @range.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=VLOOKUP"
msgstr ""
"@FUNCTION=HLOOKUP\n"
"@SYNTAX=HLOOKUP(valeur;intervalle;ligne[;approximation;indice])\n"
"@DESCRIPTION=La fonction HLOOKUP cherche la colonne dans @intervalle qui a "
"une première ligne similaire à @valeur. Si @approximation est FAUX, "
"l'égalité doit être stricte ; si @approximation est VRAI, la fonction "
"trouvera la colonne de valeur immédiatement inférieure à @valeur, à "
"condition que les données soient triées. Normalement, HLOOKUP renvoie la "
"valeur contenue à la ligne @ligne de la colonne trouvée. Si @indice est "
"VRAI, la fonction renverra l'indice de cette colonne et non sa valeur.\n"
"\n"
"* La fonction renvoie #NUM! si @ligne < 0.\n"
"* Elle renvoie #REF! si @ligne tombe en dehors de @intervalle.\n"
"@SEEALSO=VLOOKUP"

#: ../plugins/fn-lookup/functions.c:685
msgid ""
"@FUNCTION=LOOKUP\n"
"@SYNTAX=LOOKUP(value,vector1[,vector2])\n"
"@DESCRIPTION=LOOKUP function finds the row index of @value in @vector1 and "
"returns the contents of @vector2 at that row index. Alternatively a single "
"array can be used for @vector1. If the area is longer than it is wide then "
"the sense of the search is rotated. \n"
"\n"
"* If LOOKUP can't find @value it uses the largest value less than @value.\n"
"* The data must be sorted.\n"
"* If @value is smaller than the first value it returns #N/A.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=VLOOKUP,HLOOKUP"
msgstr ""
"@FUNCTION=LOOKUP\n"
"@SYNTAX=LOOKUP(valeur;vecteur1[;vecteur2])\n"
"@DESCRIPTION=La fonction LOOKUP cherche le numéro de ligne de @valeur dans "
"@vecteur1 et renvoie le contenu de @vecteur2 à ce même numéro de ligne. Si "
"la zone est plus longue que large, alors le sens de la recherche est "
"inversé. Éventuellement, un tableau unique peut être utilisé.\n"
"Les données doivent être triées.\n"
"\n"
"* Si LOOKUP ne peut trouver @valeur, il utilise la plus grande valeur "
"trouvée inférieure à @valeur.\n"
"* Si @valeur est inférieur à la première valeur, la fonction renvoie #N/A\n"
"@SEEALSO=VLOOKUP,HLOOKUP"

#: ../plugins/fn-lookup/functions.c:751
msgid ""
"@FUNCTION=MATCH\n"
"@SYNTAX=MATCH(seek,vector[,type])\n"
"@DESCRIPTION=MATCH function finds the row index of @seek in @vector and "
"returns it.\n"
"\n"
"If the area is longer than it is wide then the sense of the search is "
"rotated. Alternatively a single array can be used.\n"
"\n"
"* The @type parameter, which defaults to +1, controls the search:\n"
"* If @type = 1, MATCH finds largest value <= @seek.\n"
"* If @type = 0, MATCH finds first value == @seek.\n"
"* If @type = -1, MATCH finds smallest value >= @seek.\n"
"* For @type = 0, the data can be in any order.  * For @type = -1 and @type = "
"+1, the data must be sorted.  (And in these cases, MATCH uses a binary "
"search to locate the index.)\n"
"* If @seek could not be found, #N/A is returned.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOOKUP"
msgstr ""
"@FUNCTION=MATCH\n"
"@SYNTAX=MATCH(valeur;vecteur[;type])\n"
"@DESCRIPTION=La fonction MATCH renvoie l'indice de la ligne contenant "
"@valeur dans @vecteur. Si la zone est plus longue que large, le sens de la "
"recherche est inversé. @type contrôle la recherche :\n"
"\n"
"* Si @type vaut 1, MATCH cherche la plus grande valeur <= @valeur.\n"
"* Si @type vaut 0, MATCH cherche la première valeur == @valeur.\n"
"* Si @type vaut -1, MATCH cherche la plus petite valeur >= @valeur.\n"
"* Si @type n'est pas nul, les données doivent être triées, MATCH utilisant "
"une recherche binaire.\n"
"* Si @valeur n'est pas trouvée, la fonction renvoie #N/A!\n"
"@SEEALSO=LOOKUP"

#: ../plugins/fn-lookup/functions.c:809
msgid ""
"@FUNCTION=INDIRECT\n"
"@SYNTAX=INDIRECT(ref_text[,format])\n"
"@DESCRIPTION=INDIRECT function returns the contents of the cell pointed to "
"by the @ref_text string. The string specifies a single cell reference the "
"format of which is either A1 or R1C1 style. The style is set by the @format "
"boolean, which defaults to the A1 style.\n"
"\n"
"* If @ref_text is not a valid reference returns #REF! \n"
"@EXAMPLES=\n"
"If A1 contains 3.14 and A2 contains A1, then\n"
"INDIRECT(A2) equals 3.14.\n"
"\n"
"@SEEALSO=AREAS,INDEX,CELL"
msgstr ""
"@FUNCTION=INDIRECT\n"
"@SYNTAX=INDIRECT(texte_réf[;format])\n"
"@DESCRIPTION=La fonction INDIRECT renvoie le contenu de la cellule indiquée "
"par la chaîne texte_réf. Cette chaîne doit désigner une cellule unique, sous "
"un format A1 ou R1C1 : si @format est VRAI ou omis, c'est le premier format "
"qui est utilisé.\n"
"\n"
"* Si @texte_réf ne contient pas une référence valide, la fonction renvoie "
"#REF!\n"
"\n"
"@EXAMPLES=\n"
"Si A1 contient 3,14 et que A2 contient A1, alors\n"
"INDIRECT(A2) vaut 3.14.\n"
"\n"
"@SEEALSO=AREAS,INDEX"

#: ../plugins/fn-lookup/functions.c:858
msgid ""
"@FUNCTION=INDEX\n"
"@SYNTAX=INDEX(array[,row, col, area])\n"
"@DESCRIPTION=INDEX gives a reference to a cell in the given @array.The cell "
"is pointed out by @row and @col, which count the rows and columns in the "
"array.\n"
"\n"
"* If @row and @col are omitted the are assumed to be 1.\n"
"* If the reference falls outside the range of the @array, INDEX returns a "
"#REF! error.\n"
"\n"
"@EXAMPLES=Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, "
"17.3, 21.3, 25.9, and 40.1. Then INDEX(A1:A5,4,1,1) equals 25.9\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=INDEX\n"
"@SYNTAX=INDEX(tableau[;ligne;colonne;région])\n"
"@DESCRIPTION=INDEX renvoie une référence à une cellule dans @tableau. La "
"cellule est définie par @ligne et @colonne, relativement au tableau. Si "
"elles sont omises, 1 est pris par défaut. @région doit être égal à 1, les "
"régions multiples n'étant pas encore implémentées.\n"
"\n"
"* Si la référence est en-dehors de @tableau, INDEX renvoie une erreur #REF!\n"
"\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"INDEX(A1:A5;4;1;1) vaut 25,9.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:944
msgid "COLUMN:vector of column numbers."
msgstr ""

#: ../plugins/fn-lookup/functions.c:945 ../plugins/fn-lookup/functions.c:1124
msgid "[reference]."
msgstr ""

#: ../plugins/fn-lookup/functions.c:947
msgid ""
"COLUMN function returns a Nx1 array containing the series of integers from "
"the first column to the last column of @reference.\n"
"* @reference defaults to the position of the current expression.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, returns "
"#VALUE! error.\n"
msgstr ""

#: ../plugins/fn-lookup/functions.c:954
msgid "COLUMN(A1:C4) equals {1,2,3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:955
msgid "COLUMN(A:C) equals {1,2,3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:956
msgid "COLUMN() in G13 equals 7."
msgstr ""

#: ../plugins/fn-lookup/functions.c:997
msgid ""
"@FUNCTION=COLUMNNUMBER\n"
"@SYNTAX=COLUMNNUMBER(name)\n"
"@DESCRIPTION=COLUMNNUMBER function returns an integer corresponding to the "
"column name supplied as a string.\n"
"\n"
"* If @name is invalid, COLUMNNUMBER returns the #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"COLUMNNUMBER(\"E\") equals 5.\n"
"\n"
"@SEEALSO=ADDRESS"
msgstr ""
"@FUNCTION=COLUMNNUMBER\n"
"@SYNTAX=COLUMNNUMBER(nom)\n"
"@DESCRIPTION=La fonction COLUMNNUMBER renvoie un entier correspondant au "
"numéro de colonne indiqué par la chaîne @nom.\n"
"\n"
"* Si @nom est invalide, COLUMNNUMBER renvoie l'erreur #VALEUR!\n"
"@EXAMPLES=\n"
"COLUMNNUMBER(\"E\") vaut 5.\n"
"\n"
"@SEEALSO=ADDRESS"

#: ../plugins/fn-lookup/functions.c:1032
msgid ""
"@FUNCTION=COLUMNS\n"
"@SYNTAX=COLUMNS(reference)\n"
"@DESCRIPTION=COLUMNS function returns the number of columns in area or array "
"reference.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, COLUMNS "
"returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"COLUMNS(H2:J3) equals 3.\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"
msgstr ""
"@FUNCTION=COLUMNS\n"
"@SYNTAX=COLUMNS(référence)\n"
"@DESCRIPTION=La fonction COLUMNS renvoie le nombre de colonnes dans la zone "
"ou le tableau @référence.\n"
"\n"
"* Si @référence n'est ni un tableau, ni une référence, ni un intervalle, la "
"fonction renvoie l'erreur #VALEUR!\n"
"@EXAMPLES=\n"
"COLUMNS(H2:J3) vaut 3.\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"

#: ../plugins/fn-lookup/functions.c:1060
msgid ""
"@FUNCTION=OFFSET\n"
"@SYNTAX=OFFSET(range,row,col[,height[,width]])\n"
"@DESCRIPTION=OFFSET function returns a cell range. The cell range starts at "
"offset (@row,@col) from @range, and is of height @height and width @width.\n"
"\n"
"* If @range is neither a reference nor a range, OFFSET returns #VALUE!.\n"
"* If either @height or @width is omitted, the height or width of the "
"reference is used.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=COLUMN,COLUMNS,ROWS,INDEX,INDIRECT,ADDRESS"
msgstr ""
"@FUNCTION=OFFSET\n"
"@SYNTAX=OFFSET(intervalle;ligne;colonne[;hauteur[;largeur]])\n"
"@DESCRIPTION=La fonction OFFSET renvoie un intervalle de cellules commençant "
"à l'offset (@colonne,@ligne) de @intervalle, et ayant pour dimensions "
"@hauteur et @largeur.\n"
"* Si @intervalle n'est ni une référence ni un intervalle, la fonction "
"renvoie #VALEUR!.\n"
"* Si @hauteur ou @largeur sont omis, les dimensions de la référence sont "
"utilisées.\n"
"@SEEALSO=COLUMN,COLUMNS,ROWS,INDEX,INDIRECT,ADDRESS"

#: ../plugins/fn-lookup/functions.c:1123
msgid "ROW:vector of row numbers."
msgstr ""

#: ../plugins/fn-lookup/functions.c:1126
msgid ""
"ROW function returns a 1xN array containing the series of integers from the "
"first row to the last row of @reference.\n"
"* @reference defaults to the position of the current expression.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, returns "
"#VALUE! error.\n"
msgstr ""

#: ../plugins/fn-lookup/functions.c:1133
msgid "ROW(A1:D3) equals {1;2;3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:1134
msgid "ROW(1:3) equals {1;2;3}"
msgstr ""

#: ../plugins/fn-lookup/functions.c:1135
msgid "ROW() in G13 equals 13."
msgstr ""

#: ../plugins/fn-lookup/functions.c:1176
msgid ""
"@FUNCTION=ROWS\n"
"@SYNTAX=ROWS(reference)\n"
"@DESCRIPTION=ROWS function returns the number of rows in area or array "
"reference.\n"
"\n"
"* If @reference is neither an array nor a reference nor a range, ROWS "
"returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"ROWS(H7:I13) equals 7.\n"
"\n"
"@SEEALSO=COLUMN,COLUMNS,ROW"
msgstr ""
"@FUNCTION=ROWS\n"
"@SYNTAX=ROWS(référence)\n"
"@DESCRIPTION=La fonction ROWS renvoie le nombre de lignes dans la zone ou "
"dans le tableau @référence.\n"
"\n"
"* Si @référence n'est ni un tableau, ni une référence, ni un intervalle, la "
"fonction renvoie l'erreur #VALEUR!\n"
"@EXAMPLES=\n"
"ROWS(H7:I13) vaut 7.\n"
"\n"
"@SEEALSO=COLUMN,ROW,ROWS"

#: ../plugins/fn-lookup/functions.c:1204
msgid ""
"@FUNCTION=HYPERLINK\n"
"@SYNTAX=HYPERLINK(link_location[,optional_label])\n"
"@DESCRIPTION=HYPERLINK function currently returns its 2nd argument, or if "
"that is omitted the 1st argument.\n"
"\n"
"@EXAMPLES=\n"
"HYPERLINK(\"www.gnome.org\",\"GNOME\").\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=HYPERLINK\n"
"@SYNTAX=HYPERLINK(emplacement;[ titre])\n"
"@DESCRIPTION=La fonction HYPERLINK renvoie son deuxième argument, ou bien, "
"si celui-ci est omis, son premier argument.\n"
"\n"
"@EXAMPLES=\n"
"HYPERLINK(\"www.gnome.org\",\"GNOME\").\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-lookup/functions.c:1232
msgid ""
"@FUNCTION=TRANSPOSE\n"
"@SYNTAX=TRANSPOSE(matrix)\n"
"@DESCRIPTION=TRANSPOSE function returns the transpose of the input @matrix.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT"
msgstr ""
"@FUNCTION=TRANSPOSE\n"
"@SYNTAX=TRANSPOSE(matrice)\n"
"@DESCRIPTION=La fonction TRANSPOSE renvoie la transposée de @matrice\n"
"@SEEALSO=MMULT"

#: ../plugins/fn-math/functions.c:77
msgid ""
"@FUNCTION=GCD\n"
"@SYNTAX=GCD(number1,number2,...)\n"
"@DESCRIPTION=GCD returns the greatest common divisor of given numbers.\n"
"\n"
"* If any of the arguments is less than one, GCD returns #NUM! error.\n"
"* If any of the arguments is non-integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GCD(470,770) equals 10.\n"
"GCD(470,770,1495) equals 5.\n"
"\n"
"@SEEALSO=LCM"
msgstr ""
"@FUNCTION=GCD\n"
"@SYNTAX=GCD(nombre1;nombre2;...)\n"
"@DESCRIPTION=GCD renvoie le plus grand commun diviseur (PCGD) des nombres "
"donnés. \n"
"\n"
"* Si un des arguments est inférieur à 1, GCD renvoie l'erreur #NUM!.\n"
"* Les arguments non entiers sont tronqués.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"GCD(470;770) vaut 10.\n"
"GCD(470;770;1495) vaut 5.\n"
"@SEEALSO=LCM"

#: ../plugins/fn-math/functions.c:148
#, fuzzy
msgid ""
"@FUNCTION=LCM\n"
"@SYNTAX=LCM(number1,number2,...)\n"
"@DESCRIPTION=LCM returns the least common multiple of integers.  The least "
"common multiple is the smallest positive number that is a multiple of all "
"integer arguments given.\n"
"\n"
"* If any of the arguments is less than one, LCM returns #NUM!.\n"
"* If any of the arguments is non-integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LCM(2,13) equals 26.\n"
"LCM(4,7,5) equals 140.\n"
"\n"
"@SEEALSO=GCD"
msgstr ""
"@FUNCTION=LCM\n"
"@SYNTAX=LCM(nombre1;nombre2;...)\n"
"@DESCRIPTION=LCM renvoie le plus petit commun multiple (PPCM) des\n"
"nombres donnés, c'est-à-dire le plus petit entier positif qui soit\n"
"multiple de tous les entiers donnés en argument.\n"
"\n"
"* Si un des arguments est < 1, LCM renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"LCM(2;13) vaut 26.\n"
"LCM(4;7;5) vaut 140.\n"
"@SEEALSO=GCD"

#: ../plugins/fn-math/functions.c:218
#, fuzzy
msgid ""
"@FUNCTION=HYPOT\n"
"@SYNTAX=HYPOT(number1,number2,...)\n"
"@DESCRIPTION=HYPOT returns the square root of the sum of the squares of the "
"arguments.\n"
"\n"
"@EXAMPLES=\n"
"HYPOT(3,4) equals 5.\n"
"\n"
"@SEEALSO=MIN,MAX"
msgstr ""
"@FUNCTION=ODD\n"
"@SYNTAX=ODD(nombre)\n"
"@DESCRIPTION=La fonction ODD renvoie @nombre, arrondi au nombre impair "
"immédiatement supérieur. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ODD(4,4) vaut 5.\n"
"\n"
"@SEEALSO=EVEN"

#: ../plugins/fn-math/functions.c:248
msgid ""
"@FUNCTION=ABS\n"
"@SYNTAX=ABS(b1)\n"
"@DESCRIPTION=ABS implements the Absolute Value function:  the result is to "
"drop the negative sign (if present).  This can be done for integers and "
"floating point numbers.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ABS(7) equals 7.\n"
"ABS(-3.14) equals 3.14.\n"
"\n"
"@SEEALSO=CEIL, CEILING, FLOOR, INT, MOD"
msgstr ""
"@FUNCTION=ABS\n"
"@SYNTAX=ABS(valeur)\n"
"@DESCRIPTION=Renvoie la valeur absolue de @valeur, c'est-à-dire supprime un "
"éventuel signe négatif. Cette fonction peut être utilisée pour les entiers "
"et les réels.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ABS(7) vaut 7.\n"
"ABS(-3,14) vaut 3,14.\n"
"@SEEALSO=CEIL, FLOOR"

#: ../plugins/fn-math/functions.c:276
msgid ""
"@FUNCTION=ACOS\n"
"@SYNTAX=ACOS(x)\n"
"@DESCRIPTION=ACOS function calculates the arc cosine of @x; that is the "
"value whose cosine is @x.\n"
"\n"
"* The value it returns is in radians.\n"
"* If @x falls outside the range -1 to 1, ACOS returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ACOS(0.1) equals 1.470629.\n"
"ACOS(-0.1) equals 1.670964.\n"
"\n"
"@SEEALSO=COS, SIN, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ACOS\n"
"@SYNTAX=ACOS(x)\n"
"@DESCRIPTION=La fonction ACOS calcule l'arc-cosinus de @x, c'est à dire la "
"valeur dont le cosinus vaut @x. La valeur renvoyée est en radians.\n"
"* Si @x est en dehors de l'intervalle [-1, 1], ACOS renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ACOS(0,1) vaut 1,470629.\n"
"ACOS(-0,1) vaut 1,670964.\n"
"@SEEALSO=COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:312
msgid ""
"@FUNCTION=ACOSH\n"
"@SYNTAX=ACOSH(x)\n"
"@DESCRIPTION=ACOSH  function  calculates  the inverse hyperbolic cosine of "
"@x; that is the value whose hyperbolic cosine is @x.\n"
"\n"
"* If @x is less than 1.0, ACOSH() returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"ACOSH(2) equals 1.31696.\n"
"ACOSH(5.3) equals 2.35183.\n"
"\n"
"@SEEALSO=ACOS, ASINH, DEGREES, RADIANS "
msgstr ""
"@FUNCTION=ACOSH\n"
"@SYNTAX=ACOSH(x)\n"
"@DESCRIPTION=La fonction ACOSH calcule le cosinus hyperbolique inverse de "
"@x, c'est à dire la valeur dont le cosinus hyperbolique vaut @x.\n"
"* Si @x est inférieur à 1, ACOSH renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ACOSH(2) vaut 1,31696.\n"
"ACOSH(5,3) vaut 2,35183.\n"
"@SEEALSO=ACOS, ASINH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:347
msgid ""
"@FUNCTION=ASIN\n"
"@SYNTAX=ASIN(x)\n"
"@DESCRIPTION=ASIN function calculates the arc sine of @x; that is the value "
"whose sine is @x.\n"
"\n"
"* If @x falls outside the range -1 to 1, ASIN returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ASIN(0.5) equals 0.523599.\n"
"ASIN(1) equals 1.570797.\n"
"\n"
"@SEEALSO=SIN, COS, ASINH, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ASIN\n"
"@SYNTAX=ASIN(x)\n"
"@DESCRIPTION=La fonction ASIN calcule l'arc-sinus de @x, c'est à dire la "
"valeur dont le sinus vaut @x.\n"
"* Si @x est en dehors de l'intervalle [-1, 1], ASIN renvoie #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ASIN(0,5) vaut 0,523599.\n"
"ASIN(1) vaut 1,570797.\n"
"@SEEALSO=COS, SIN, ASINH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:382
msgid ""
"@FUNCTION=ASINH\n"
"@SYNTAX=ASINH(x)\n"
"@DESCRIPTION=ASINH function calculates the inverse hyperbolic sine of @x; "
"that is the value whose hyperbolic sine is @x.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ASINH(0.5) equals 0.481212.\n"
"ASINH(1.0) equals 0.881374.\n"
"\n"
"@SEEALSO=ASIN, ACOSH, SIN, COS, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ASINH\n"
"@SYNTAX=ASINH(x)\n"
"@DESCRIPTION=La fonction ASINH calcule le sinus hyperbolique inverse de @x, "
"c'est à dire la valeur dont le sinus hyperbolique vaut @x.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ASINH(0,5) vaut 0,481212.\n"
"ASINH(1,0) vaut 0,881374.\n"
"@SEEALSO=ASIN, ACOSH, COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:409
msgid ""
"@FUNCTION=ATAN\n"
"@SYNTAX=ATAN(x)\n"
"@DESCRIPTION=ATAN function calculates the arc tangent of @x; that is the "
"value whose tangent is @x.\n"
"\n"
"* Return value is in radians.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ATAN(0.5) equals 0,463648.\n"
"ATAN(1) equals 0,785398.\n"
"\n"
"@SEEALSO=TAN, COS, SIN, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ATAN\n"
"@SYNTAX=ATAN(x)\n"
"@DESCRIPTION=La fonction ATAN calcule l'arc-tangente de @x, c'est-à-dire la "
"valeur dont la tangente vaut @x. La valeur renvoyée est en radians.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ATAN(0,5) vaut 0,463648.\n"
"ATAN(1) vaut 0,785398.\n"
"@SEEALSO=TAN, COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:437
msgid ""
"@FUNCTION=ATANH\n"
"@SYNTAX=ATANH(x)\n"
"@DESCRIPTION=ATANH function calculates the inverse hyperbolic tangent of @x; "
"that is the value whose hyperbolic tangent is @x.\n"
"\n"
"* If the absolute value of @x is greater than 1.0, ATANH returns #NUM! "
"error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ATANH(0.5) equals 0.549306.\n"
"ATANH(0.8) equals 1.098612.\n"
"\n"
"@SEEALSO=ATAN, TAN, SIN, COS, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ATANH\n"
"@SYNTAX=ATANH(x)\n"
"@DESCRIPTION=La fonction ATANH calcule la tangente hyperbolique inverse de "
"@x, c'est-à-dire la valeur dont la tangente hyperbolique vaut @x.\n"
"* Si la valeur absolue de @x est supérieure à 1, ATANH renvoie #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ATANH(0,5) equals 0,549306.\n"
"ATANH(0,8) equals 1,098612.\n"
"@SEEALSO=ATAN, TAN, COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:472
msgid ""
"@FUNCTION=ATAN2\n"
"@SYNTAX=ATAN2(b1,b2)\n"
"@DESCRIPTION=ATAN2 function calculates the arc tangent of the two variables "
"@b1 and @b2.  It is similar to calculating the arc tangent of @b2 / @b1, "
"except that the signs of both arguments are used to determine the quadrant "
"of the result.\n"
"\n"
"* The result is in radians.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ATAN2(0.5,1.0) equals 1.107149.\n"
"ATAN2(-0.5,2.0) equals 1.815775.\n"
"\n"
"@SEEALSO=ATAN, ATANH, COS, SIN, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=ATAN2\n"
"@SYNTAX=ATAN2(b1;b2)\n"
"@DESCRIPTION=La fonction ATAN2 calcule l'arc-tangente de @b2/@b1. En outre, "
"le signe des deux paramètres est utilisé pour déterminer le quadrant du "
"résultat. La valeur renvoyée est en radians.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ATAN2(0,5;1,0) vaut 1,107149.\n"
"ATAN2(-0,5;2,0) vaut 1,815775.\n"
"@SEEALSO=ATAN, ATANH, COS, SIN, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:508
msgid ""
"@FUNCTION=CEIL\n"
"@SYNTAX=CEIL(x)\n"
"@DESCRIPTION=CEIL function rounds @x up to the next nearest integer.\n"
"\n"
"\n"
"@EXAMPLES=\n"
"CEIL(0.4) equals 1.\n"
"CEIL(-1.1) equals -1.\n"
"CEIL(-2.9) equals -2.\n"
"\n"
"@SEEALSO=CEILING, FLOOR, ABS, INT, MOD"
msgstr ""
"@FUNCTION=CEIL\n"
"@SYNTAX=CEIL(x)\n"
"@DESCRIPTION=Cette fonction arrondit x à l'entier immédiatement supérieur.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CEIL(0,4) vaut 1.\n"
"CEIL(-1,1) vaut -1.\n"
"\n"
"@SEEALSO=ABS, FLOOR, INT"

#: ../plugins/fn-math/functions.c:534
msgid ""
"@FUNCTION=COUNTIF\n"
"@SYNTAX=COUNTIF(range,criteria)\n"
"@DESCRIPTION=COUNTIF function counts the number of cells in the given @range "
"that meet the given @criteria.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, "
"and 39.  Then\n"
"COUNTIF(A1:A5,\"<=28\") equals 3.\n"
"COUNTIF(A1:A5,\"<28\") equals 2.\n"
"COUNTIF(A1:A5,\"28\") equals 1.\n"
"COUNTIF(A1:A5,\">28\") equals 2.\n"
"\n"
"@SEEALSO=COUNT,SUMIF"
msgstr ""
"@FUNCTION=COUNTIF\n"
"@SYNTAX=COUNTIF(intervalle;critères)\n"
"@DESCRIPTION=La fonction COUNTIF compte le nombre de cellules dans "
"@intervalle qui satisfont @critères.\n"
"* This function is Excel compatible. \n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 23, 27, 28, 33, et 39, alors\n"
"COUNTIF(A1:A5;\"<=28\") vaut 3.\n"
"COUNTIF(A1:A5;\"<28\") vaut 2.\n"
"COUNTIF(A1:A5;\"28\") vaut 1.\n"
"COUNTIF(A1:A5;\">28\") vaut 2.\n"
"\n"
"@SEEALSO=COUNT,SUMIF"

#: ../plugins/fn-math/functions.c:612
msgid ""
"@FUNCTION=SUMIF\n"
"@SYNTAX=SUMIF(range,criteria[,actual_range])\n"
"@DESCRIPTION=SUMIF function sums the values in the given @range that meet "
"the given @criteria.  If @actual_range is given, SUMIF sums the values in "
"the @actual_range whose corresponding components in @range meet the given "
"@criteria.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, "
"and 39.  Then\n"
"SUMIF(A1:A5,\"<=28\") equals 78.\n"
"SUMIF(A1:A5,\"<28\") equals 50.\n"
"In addition, if the cells B1, B2, ..., B5 hold numbers 5, 3, 2, 6, and 7 "
"then:\n"
"SUMIF(A1:A5,\"<=27\",B1:B5) equals 8.\n"
"\n"
"@SEEALSO=COUNTIF, SUM"
msgstr ""
"@FUNCTION=SUMIF\n"
"@SYNTAX=SUMIF(intervalle;critères[;intervalle_valeurs]}\n"
"@DESCRIPTION=La fonction SUMIF renvoie la somme des valeurs de @intervalle "
"qui satisfont @critères. Si le paramètre supplémentaire @intervalle_valeurs "
"est fourni, SUMIF effectue toujours les tests de critères dans @intervalle, "
"mais la somme est calculée sur les valeurs correspondantes de "
"@intervalle_valeurs.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 23, 27, 28, 33, et 39 :\n"
"SUMIF(A1:A5;\"<=28\") vaut 78.\n"
"SUMIF(A1:A5;\"<28\") vaut 50.\n"
"De plus, si B1, B2,..., B5 contiennent 5, 3, 2, 6, et 7 :\n"
"SUMIF(A1:A5;\"<=27\";B1:B5) vaut 8.\n"
"\n"
"@SEEALSO=COUNTIF,SUM"

#: ../plugins/fn-math/functions.c:736
msgid ""
"@FUNCTION=CEILING\n"
"@SYNTAX=CEILING(x[,significance])\n"
"@DESCRIPTION=CEILING function rounds @x up to the nearest multiple of "
"@significance.\n"
"\n"
"* If @x or @significance is non-numeric CEILING returns #VALUE! error.\n"
"* If @x and @significance have different signs CEILING returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CEILING(2.43,1) equals 3.\n"
"CEILING(123.123,3) equals 126.\n"
"\n"
"@SEEALSO=CEIL, FLOOR, ABS, INT, MOD"
msgstr ""
"@FUNCTION=CEILING\n"
"@SYNTAX=CEILING(x;précision)\n"
"@DESCRIPTION=La fonction CEILING arrondit @x au multiple de @précision "
"immédiatement supérieur. \n"
"* Si @x ou @significatif ne sont pas des nombres, CEILING renvoie une erreur "
"#VALUE!.\n"
"* S'ils sont de signe différent, CEILING renvoie une erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CEILING(2,43;1) vaut 3.\n"
"CEILING(123,123;3) vaut 126.\n"
"\n"
"@SEEALSO=CEIL"

#: ../plugins/fn-math/functions.c:777
msgid ""
"@FUNCTION=COS\n"
"@SYNTAX=COS(x)\n"
"@DESCRIPTION=COS function returns the cosine of @x, where @x is given in "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COS(0.5) equals 0.877583.\n"
"COS(1) equals 0.540302.\n"
"\n"
"@SEEALSO=COSH, SIN, SINH, TAN, TANH, RADIANS, DEGREES"
msgstr ""
"@FUNCTION=COS\n"
"@SYNTAX=COS(x)\n"
"@DESCRIPTION=La fonction COS calcule le cosinus de @x, où @x est donné en "
"radians.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"COS(0,5) = 0,877583.\n"
"COS(1) = 0,540302.\n"
"\n"
"@SEEALSO=COSH, SIN, SINH, TAN, TANH, RADIANS, DEGREES"

#: ../plugins/fn-math/functions.c:804
msgid ""
"@FUNCTION=COSH\n"
"@SYNTAX=COSH(x)\n"
"@DESCRIPTION=COSH function returns the hyperbolic cosine of @x, which is "
"defined mathematically as\n"
"\n"
"\t(exp(@x) + exp(-@x)) / 2.\n"
"\n"
"* @x is in radians.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COSH(0.5) equals 1.127626.\n"
"COSH(1) equals 1.543081.\n"
"\n"
"@SEEALSO=COS, SIN, SINH, TAN, TANH, RADIANS, DEGREES, EXP"
msgstr ""
"@FUNCTION=COSH\n"
"@SYNTAX=COSH(x)\n"
"@DESCRIPTION=La fonction COSH calcule le cosinus hyperbolique de @x, qui est "
"défini par (exp(@x) + exp(-@x)) / 2. @x doit être en radians.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"COSH(0,5) vaut 1,127626\n"
"COSH(1) vaut 1,543081\n"
"@SEEALSO=COS, SIN, SINH, TAN, TANH, RADIANS, DEGREES, EXP"

#: ../plugins/fn-math/functions.c:832
msgid ""
"@FUNCTION=DEGREES\n"
"@SYNTAX=DEGREES(x)\n"
"@DESCRIPTION=DEGREES computes the number of degrees equivalent to @x "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DEGREES(2.5) equals 143.2394.\n"
"\n"
"@SEEALSO=RADIANS, PI"
msgstr ""
"@FUNCTION=DEGREES\n"
"@SYNTAX=DEGREES(x)\n"
"@DESCRIPTION=Convertit @x radians en degrés.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DEGREES(2,5) vaut 143,2394.\n"
"@SEEALSO=RADIANS, PI"

#: ../plugins/fn-math/functions.c:859
msgid ""
"@FUNCTION=EXP\n"
"@SYNTAX=EXP(x)\n"
"@DESCRIPTION=EXP computes the value of e (the base of natural logarithms) "
"raised to the power of @x.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EXP(2) equals 7.389056.\n"
"\n"
"@SEEALSO=LOG, LOG2, LOG10"
msgstr ""
"@FUNCTION=EXP\n"
"@SYNTAX=EXP(x)\n"
"@DESCRIPTION=Calcule la valeur de e (la base des logarithmes naturels) à la "
"puissance @x.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"EXP(2) vaut 7,389056\n"
"@SEEALSO=LOG, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:885
msgid ""
"@FUNCTION=EXPM1\n"
"@SYNTAX=EXPM1(x)\n"
"@DESCRIPTION=EXPM1 computes EXP(@x)-1 with higher resulting precision than "
"the direct formula.\n"
"\n"
"@EXAMPLES=\n"
"EXPM1(0.01) equals 0.01005.\n"
"\n"
"@SEEALSO=EXP, LN1P"
msgstr ""
"@FUNCTION=EXP\n"
"@SYNTAX=EXP(x)\n"
"@DESCRIPTION=Calcule la valeur de e (la base des logarithmes naturels) à la "
"puissance @x.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"EXP(2) vaut 7,389056\n"
"@SEEALSO=LOG, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:909
msgid ""
"@FUNCTION=FACT\n"
"@SYNTAX=FACT(x)\n"
"@DESCRIPTION=FACT computes the factorial of @x. ie, @x!\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FACT(3) equals 6.\n"
"FACT(9) equals 362880.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=FACT\n"
"@SYNTAX=FACT(x)\n"
"@DESCRIPTION=Calcule la factorielle de @x, c'est-à-dire @x!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FACT(3) vaut 6.\n"
"FACT(9) vaut 362880.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:948
#, fuzzy
msgid ""
"@FUNCTION=BETA\n"
"@SYNTAX=BETA(a,b)\n"
"@DESCRIPTION=BETA function returns the value of the mathematical beta "
"function extended to all real numbers except 0 and negative integers.\n"
"\n"
"* If @a, @b, or (@a + @b) are non-positive integers, BETA returns #NUM! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"BETA(2,3) equals 0.083333.\n"
"BETA(-0.5,0.5) equals #NUM!.\n"
"\n"
"@SEEALSO=BETALN,GAMMALN"
msgstr ""
"@FUNCTION=BETA\n"
"@SYNTAX=BETA(a;b)\n"
"@DESCRIPTION=La fonction BETA renvoie la valeur de la fonction beta,\n"
"définie sur tous les nombres réels sauf 0 et les entiers négatifs.<\n"
"\n"
"* Si @a, @b ou (@a + @b) est nul ou un entier négatif, BETA renvoie #NUM!\n"
"\n"
"@EXAMPLES=\n"
"BETA(2;3) vaut 0,083333.\n"
"BETA(-0,5;-0,5) vaut #NUM!\n"
"\n"
"@SEEALSO=BETALN,GAMMA"

#: ../plugins/fn-math/functions.c:981
msgid ""
"@FUNCTION=BETALN\n"
"@SYNTAX=BETALN(a,b)\n"
"@DESCRIPTION=BETALN function returns the natural logarithm of the absolute "
"value of the beta function.\n"
"\n"
"* If @a, @b, or (@a + @b) are non-positive integers, BETALN returns #NUM! \n"
"@EXAMPLES=\n"
"BETALN(2,3) equals -2.48.\n"
"BETALN(-0.5,0.5) equals #NUM!.\n"
"\n"
"@SEEALSO=BETA,GAMMALN"
msgstr ""
"@FUNCTION=BETALN\n"
"@SYNTALNX=BETALN(a;b)\n"
"@DESCRIPTION=La fonction BETALN renvoie le logarithme naturel de la valeur "
"absolue de la fonction beta.\n"
"\n"
"* Si @a, @b ou (@a + @b) est nul ou un entier négatif, BETA renvoie #NUM!\n"
"\n"
"@EXAMPLES=\n"
"BETA(2;3) vaut -2,48\n"
"BETA(-0,5;-0,5) vaut #NUM!\n"
"\n"
"@SEEALSO=BETA, GAMMALN"

#: ../plugins/fn-math/functions.c:1013
msgid ""
"@FUNCTION=COMBIN\n"
"@SYNTAX=COMBIN(n,k)\n"
"@DESCRIPTION=COMBIN computes the number of combinations.\n"
"\n"
"* Performing this function on a non-integer or a negative number returns "
"#NUM! error.\n"
"* If @n is less than @k COMBIN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"COMBIN(8,6) equals 28.\n"
"COMBIN(6,2) equals 15.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=COMBIN\n"
"@SYNTAX=COMBIN(n;k)\n"
"@DESCRIPTION=Calcule le nombre de combinaisons de @n éléments, @k par @k, C"
"(n,k).\n"
"* Avec un paramètre non-entier ou négatif, ou si @n est inférieur à @k, "
"COMBIN renvoie #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"COMBIN(8;6) vaut 28.\n"
"COMBIN(6;2) vaut 15.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:1048
msgid "FLOOR:rounds down."
msgstr ""

#: ../plugins/fn-math/functions.c:1049
msgid "x:value."
msgstr ""

#: ../plugins/fn-math/functions.c:1050
msgid "significance:base multiple (defaults to 1 for @x > 0 and -1 for @x <0)"
msgstr ""

#: ../plugins/fn-math/functions.c:1052
msgid ""
"FLOOR function rounds @x down to the next nearest multiple of @significance."
msgstr ""

#: ../plugins/fn-math/functions.c:1054
msgid "FLOOR(0.5) equals 0."
msgstr ""

#: ../plugins/fn-math/functions.c:1055
msgid "FLOOR(5,2) equals 4."
msgstr ""

#: ../plugins/fn-math/functions.c:1056
msgid "FLOOR(-5,-2) equals -4."
msgstr ""

#: ../plugins/fn-math/functions.c:1057
msgid "FLOOR(-5,2) equals #NUM!."
msgstr ""

#: ../plugins/fn-math/functions.c:1084
msgid ""
"@FUNCTION=INT\n"
"@SYNTAX=INT(a)\n"
"@DESCRIPTION=INT function returns the largest integer that is not bigger "
"than its argument.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"INT(7.2) equals 7.\n"
"INT(-5.5) equals -6.\n"
"\n"
"@SEEALSO=CEIL, CEILING, FLOOR, ABS, MOD"
msgstr ""
"@FUNCTION=INT\n"
"@SYNTAX=INT(a)\n"
"@DESCRIPTION=La fonction INT arrondit a à l'entier immédiatement inférieur "
"ou égal.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"INT(7,2) vaut 7.\n"
"INT(-5,5) vaut -6.\n"
"\n"
"@SEEALSO=FLOOR, CEIL, ABS"

#: ../plugins/fn-math/functions.c:1112
msgid ""
"@FUNCTION=LOG\n"
"@SYNTAX=LOG(x[,base])\n"
"@DESCRIPTION=LOG computes the logarithm of @x in the given base @base.  If "
"no @base is given LOG returns the logarithm in base 10. @base must be > 0. "
"and cannot equal 1.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOG(2) equals 0.30103.\n"
"LOG(8192,2) equals 13.\n"
"\n"
"@SEEALSO=LN, LOG2, LOG10"
msgstr ""
"@FUNCTION=LOG\n"
"@SYNTAX=LOG(x[;base])\n"
"@DESCRIPTION=Calcule le logarithme de @x dans la base @base (10 par "
"défaut).\n"
"@base doit être strictement supérieure à 0 et ne peut pas valoir 1.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LOG(2) vaut 0,30103.\n"
"LOG(8192;2) vaut 13.\n"
"@SEEALSO=EXP, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:1149
msgid ""
"@FUNCTION=LN\n"
"@SYNTAX=LN(x)\n"
"@DESCRIPTION=LN returns the natural logarithm of @x.\n"
"\n"
"* If @x <= 0, LN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LN(7) equals 1.94591.\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG10"
msgstr ""
"@FUNCTION=LN\n"
"@SYNTAX=LN(x)\n"
"@DESCRIPTION=LN renvoie le logarithme naturel (népérien) de @x. \n"
"Si @x est <= 0, LN renvoie #NUM!\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LN(7) vaut 1,94591.\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG10"

#: ../plugins/fn-math/functions.c:1181
msgid ""
"@FUNCTION=LN1P\n"
"@SYNTAX=LN1P(x)\n"
"@DESCRIPTION=LN1P computes LN(1+@x) with higher resulting precision than the "
"direct formula.\n"
"\n"
"* If @x <= -1, LN1P returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"LN1P(0.01) equals 0.00995.\n"
"\n"
"@SEEALSO=LN, EXPM1"
msgstr ""
"@FUNCTION=LOG2\n"
"@SYNTAX=LOG2(x)\n"
"@DESCRIPTION=Calcule le logarithme en base 2 de @x.\n"
"\n"
"* Si @x <= 0, renvoie #NUM!\n"
"@SEEALSO=EXP, LOG10, LOG"

#: ../plugins/fn-math/functions.c:1213
#, fuzzy
msgid ""
"@FUNCTION=POWER\n"
"@SYNTAX=POWER(x,y)\n"
"@DESCRIPTION=POWER returns the value of @x raised to the power @y.\n"
"\n"
"\n"
"* If both @x and @y equal 0, POWER returns #NUM! error.\n"
"* If @x = 0 and @y < 0, POWER returns #DIV/0! error.\n"
"* If @x < 0 and @y is non-integer, POWER returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"POWER(2,7) equals 128.\n"
"POWER(3,3.141) equals 31.523749.\n"
"\n"
"@SEEALSO=EXP"
msgstr ""
"@FUNCTION=POWER\n"
"@SYNTAX=POWER(x;y)\n"
"@DESCRIPTION=Renvoie la valeur de @x élevé à la puissance @y.\n"
"\n"
"* Si @x et @y sont nuls, POWER renvoie #NUM!\n"
"* Si @x = 0 et @y < 0, POWER renvoie #DIV/0!\n"
"* Si @x < 0 et @y n'est pas entier, POWER renvoie #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"POWER(2;7) vaut 128.\n"
"POWER(3;3,141) vaut 31,523749.\n"
"@SEEALSO=EXP"

#: ../plugins/fn-math/functions.c:1252
msgid ""
"@FUNCTION=LOG2\n"
"@SYNTAX=LOG2(x)\n"
"@DESCRIPTION=LOG2 computes the base-2 logarithm of @x.\n"
"\n"
"* If @x <= 0, LOG2 returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"LOG2(1024) equals 10.\n"
"\n"
"@SEEALSO=EXP, LOG10, LOG"
msgstr ""
"@FUNCTION=LOG2\n"
"@SYNTAX=LOG2(x)\n"
"@DESCRIPTION=Calcule le logarithme en base 2 de @x.\n"
"\n"
"* Si @x <= 0, renvoie #NUM!\n"
"@SEEALSO=EXP, LOG10, LOG"

#: ../plugins/fn-math/functions.c:1282
msgid ""
"@FUNCTION=LOG10\n"
"@SYNTAX=LOG10(x)\n"
"@DESCRIPTION=LOG10 computes the base-10 logarithm of @x.\n"
"\n"
"* If @x <= 0, LOG10 returns #NUM! error.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"LOG10(7) equals 0.845098.\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG"
msgstr ""
"@FUNCTION=LOG10\n"
"@SYNTAX=LOG10(x)\n"
"@DESCRIPTION=Renvoie le logarithme en base 10 de @x.\n"
"\n"
"* Si @x <= 0, renvoie #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LOG10(7) vaut 0,845098.\n"
"\n"
"@SEEALSO=EXP, LOG2, LOG"

#: ../plugins/fn-math/functions.c:1313
msgid ""
"@FUNCTION=MOD\n"
"@SYNTAX=MOD(number,divisor)\n"
"@DESCRIPTION=MOD function returns the remainder when @divisor is divided "
"into @number.\n"
"\n"
"* MOD returns #DIV/0! if @divisor is zero.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"MOD(23,7) equals 2.\n"
"\n"
"@SEEALSO=CEIL, CEILING, FLOOR, ABS, INT, ABS"
msgstr ""
"@FUNCTION=MOD\n"
"@SYNTAX=MOD(nombre;diviseur)\n"
"@DESCRIPTION=Implémente le modulo arithmétique, c'est-à-dire renvoie le "
"reste de la division de @nombre par @diviseur.\n"
"\n"
"* Renvoie #DIV/0! si @diviseur vaut zéro.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"MOD(23;7) vaut 2.\n"
"\n"
"@SEEALSO=INT,FLOOR,CEIL"

#: ../plugins/fn-math/functions.c:1366
msgid ""
"@FUNCTION=RADIANS\n"
"@SYNTAX=RADIANS(x)\n"
"@DESCRIPTION=RADIANS computes the number of radians equivalent to @x "
"degrees.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RADIANS(180) equals 3.14159.\n"
"\n"
"@SEEALSO=PI,DEGREES"
msgstr ""
"@FUNCTION=RADIANS\n"
"@SYNTAX=RADIANS(x)\n"
"@DESCRIPTION=Convertit @x degrés en radians.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"RADIANS(180) vaut 3,14159.\n"
"\n"
"@SEEALSO=PI,DEGREES"

#: ../plugins/fn-math/functions.c:1393
msgid ""
"@FUNCTION=SIN\n"
"@SYNTAX=SIN(x)\n"
"@DESCRIPTION=SIN function returns the sine of @x, where @x is given in "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SIN(0.5) equals 0.479426.\n"
"\n"
"@SEEALSO=COS, COSH, SINH, TAN, TANH, RADIANS, DEGREES"
msgstr ""
"@FUNCTION=SIN\n"
"@SYNTAX=SIN(x)\n"
"@DESCRIPTION=La fonction SIN calcule le sinus de @x, où @x est une valeur en "
"radians.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SIN(0,5) = 0,479426.\n"
"\n"
"@SEEALSO=COS, COSH, SINH, TAN, TANH, RADIANS, DEGREES"

#: ../plugins/fn-math/functions.c:1419
msgid ""
"@FUNCTION=SINH\n"
"@SYNTAX=SINH(x)\n"
"@DESCRIPTION=SINH function returns the hyperbolic sine of @x, which is "
"defined mathematically as\n"
"\n"
"\t(exp(@x) - exp(-@x)) / 2.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SINH(0.5) equals 0.521095.\n"
"\n"
"@SEEALSO=SIN, COS, COSH, TAN, TANH, DEGREES, RADIANS, EXP"
msgstr ""
"@FUNCTION=SINH\n"
"@SYNTAX=SINH(x)\n"
"@DESCRIPTION=La fonction SINH calcule le sinus hyperbolique de @x, défini "
"par (exp(@x) - exp(-@x)) / 2.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SINH(0,5) vaut 0,521095.\n"
"\n"
"@SEEALSO=SIN, COS, COSH, TAN, TANH, DEGREES, RADIANS, EXP"

#: ../plugins/fn-math/functions.c:1446
msgid ""
"@FUNCTION=SQRT\n"
"@SYNTAX=SQRT(x)\n"
"@DESCRIPTION=SQRT function returns the square root of @x.\n"
"\n"
"* If @x is negative, SQRT returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SQRT(2) equals 1.4142136.\n"
"\n"
"@SEEALSO=POWER"
msgstr ""
"@FUNCTION=SQRT\n"
"@SYNTAX=SQRT(x)\n"
"@DESCRIPTION=La fonction SQRT renvoie la racine carrée de @x.\n"
"\n"
"* Si @x est négatif, l'erreur #NUM! est renvoyée.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SQRT(2) vaut 1,4142136.\n"
"@SEEALSO=POWER"

#: ../plugins/fn-math/functions.c:1477
msgid ""
"@FUNCTION=SUMA\n"
"@SYNTAX=SUMA(value1, value2, ...)\n"
"@DESCRIPTION=SUMA computes the sum of all the values and cells referenced in "
"the argument list.  Numbers, text and logical values are included in the "
"calculation too.  If the cell contains text or the argument evaluates to "
"FALSE, it is counted as value zero (0). If the argument evaluates to TRUE, "
"it is counted as one (1).\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43.  Then\n"
"SUMA(A1:A5) equals 107.\n"
"\n"
"@SEEALSO=AVERAGE, SUM, COUNT"
msgstr ""
"@FUNCTION=SUMA\n"
"@SYNTAX=SUMA(valeur1; valeur2;...)\n"
"@DESCRIPTION=Calcule la somme des valeurs et des cellules référencées dans "
"la liste des arguments. Les nombres, le texte et les valeurs logiques sont "
"inclus dans le calcul. Si la cellule contient du texte ou bien si l'argument "
"est évalué à FAUX, il est compté comme la valeur zéro (0). Si l'argument est "
"évalué à VRAI, il est compté comme la valeur un (1). Notez que les cellules "
"vides ne sont pas comptées.\n"
"@SEEALSO=AVERAGE, SUM, COUNT"

#: ../plugins/fn-math/functions.c:1512
msgid ""
"@FUNCTION=SUMSQ\n"
"@SYNTAX=SUMSQ(value1, value2, ...)\n"
"@DESCRIPTION=SUMSQ returns the sum of the squares of all the values and "
"cells referenced in the argument list.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43.  Then\n"
"SUMSQ(A1:A5) equals 2925.\n"
"\n"
"@SEEALSO=SUM, COUNT"
msgstr ""
"@FUNCTION=SUMSQ\n"
"@SYNTAX=SUMSQ(valeur1; valeur2;...)\n"
"@DESCRIPTION=SUMSQ renvoie la somme des carrés de toutes les valeurs et "
"cellules référencées dans la liste des arguments.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11, 15, 17, 21, et 43, alors,\n"
"SUMSQ(A1:A5) vaut 2925.\n"
"@SEEALSO=SUM, COUNT"

#: ../plugins/fn-math/functions.c:1546
msgid ""
"@FUNCTION=MULTINOMIAL\n"
"@SYNTAX=MULTINOMIAL(value1, value2, ...)\n"
"@DESCRIPTION=MULTINOMIAL returns the ratio of the factorial of a sum of "
"values to the product of factorials.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"MULTINOMIAL(2,3,4) equals 1260.\n"
"\n"
"@SEEALSO=SUM"
msgstr ""
"@FUNCTION=MULTINOMIAL\n"
"@SYNTAX=MULTINOMIAL(valeur1; valeur2;...)\n"
"@DESCRIPTION=MULTINOMIAL renvoie le quotient de la factorielle de la somme "
"des valeurs par le produit des factorielles. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"MULTINOMIAL(2;3;4) vaut 1260.\n"
"\n"
"@SEEALSO=SUM"

#: ../plugins/fn-math/functions.c:1578
msgid ""
"@FUNCTION=G_PRODUCT\n"
"@SYNTAX=G_PRODUCT(value1, value2, ...)\n"
"@DESCRIPTION=G_PRODUCT returns the product of all the values and cells "
"referenced in the argument list.\n"
"\n"
"* Empty cells are ignored and the empty product is 1.\n"
"\n"
"@EXAMPLES=\n"
"G_PRODUCT(2,5,9) equals 90.\n"
"\n"
"@SEEALSO=SUM, COUNT"
msgstr ""
"@FUNCTION=G_PRODUCT\n"
"@SYNTAX=G_PRODUCT(valeur1; valeur2;...)\n"
"@DESCRIPTION=La fonction G_PRODUCT renvoie le produit de toutes les valeurs "
"et cellules référencées dans la liste de paramètres. Les cellules vides sont "
"ignorées, et un résultat vide est remplacé par 1.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"G_PRODUCT(2;5;9) vaut 90.\n"
"@SEEALSO=SUM, COUNT"

#: ../plugins/fn-math/functions.c:1609
msgid ""
"@FUNCTION=TAN\n"
"@SYNTAX=TAN(x)\n"
"@DESCRIPTION=TAN function returns the tangent of @x, where @x is given in "
"radians.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TAN(3) equals -0.1425465.\n"
"\n"
"@SEEALSO=TANH, COS, COSH, SIN, SINH, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=TAN\n"
"@SYNTAX=TAN(x)\n"
"@DESCRIPTION=La fonction TAN calcule la tangente de @x, où @x est exprimé en "
"radians. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TAN(3) vaut -0,1425465.\n"
"@SEEALSO=TANH, COS, COSH, SIN, SINH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:1635
msgid ""
"@FUNCTION=TANH\n"
"@SYNTAX=TANH(x)\n"
"@DESCRIPTION=TANH function returns the hyperbolic tangent of @x, which is "
"defined mathematically as \n"
"\n"
"\tsinh(@x) / cosh(@x).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TANH(2) equals 0.96402758.\n"
"\n"
"@SEEALSO=TAN, SIN, SINH, COS, COSH, DEGREES, RADIANS"
msgstr ""
"@FUNCTION=TANH\n"
"@SYNTAX=TANH(x)\n"
"@DESCRIPTION=La fonction TANH calcule la tangente hyperbolique de @x, "
"définie par sinh(@x) / cosh(@x). \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TANH(2) vaut 0,96402758.\n"
"@SEEALSO=TAN, SIN, SINH, COS, COSH, DEGREES, RADIANS"

#: ../plugins/fn-math/functions.c:1661
msgid ""
"@FUNCTION=PI\n"
"@SYNTAX=PI()\n"
"@DESCRIPTION=PI functions returns the value of pi.\n"
"\n"
"* This function is called with no arguments.\n"
"* This function is Excel compatible, except that it returns pi with a better "
"precision.\n"
"\n"
"@EXAMPLES=\n"
"PI() equals about 3.141593.\n"
"\n"
"@SEEALSO=SQRTPI"
msgstr ""
"@FUNCTION=PI\n"
"@SYNTAX=PI()\n"
"@DESCRIPTION=La fonction PI renvoie la valeur de pi.\n"
"\n"
"* Cette fonction ne prend aucun argument.\n"
"* Cette fonction est compatible avec Excel, avec une meilleure précision de "
"la valeur de pi.\n"
"@EXAMPLES=\n"
"PI() vaut à peu près 3,141593.\n"
"\n"
"@SEEALSO=SQRTPI"

#: ../plugins/fn-math/functions.c:1689
msgid ""
"@FUNCTION=TRUNC\n"
"@SYNTAX=TRUNC(number[,digits])\n"
"@DESCRIPTION=TRUNC function returns the value of @number truncated to the "
"number of digits specified.\n"
"\n"
"* If @digits is omitted or negative then @digits defaults to zero.\n"
"* If @digits is not an integer, it is truncated.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"TRUNC(3.12) equals 3.\n"
"TRUNC(4.15,1) equals 4.1.\n"
"\n"
"@SEEALSO=INT"
msgstr ""
"@FUNCTION=TRUNC\n"
"@SYNTAX=TRUNC(nombre[;chiffres])\n"
"@DESCRIPTION=La fonction TRUNC renvoie @nombre tronqué au nombre de chiffres "
"spécifié.\n"
"\n"
"* Si @chiffres est omis ou négatif, 0 est utilisé.\n"
"* Si @chiffres n'est pas un entier, il est tronqué.\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@EXAMPLES=\n"
"TRUNC(3,12) vaut 3.\n"
"TRUNC(4,15;1) vaut 4.1.\n"
"\n"
"@SEEALSO=INT"

#: ../plugins/fn-math/functions.c:1735
msgid ""
"@FUNCTION=EVEN\n"
"@SYNTAX=EVEN(number)\n"
"@DESCRIPTION=EVEN function returns the number rounded up to the nearest even "
"integer.  Negative numbers are rounded down.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"EVEN(5.4) equals 6.\n"
"EVEN(-5.4) equals -6.\n"
"\n"
"@SEEALSO=ODD"
msgstr ""
"@FUNCTION=EVEN\n"
"@SYNTAX=EVEN(nombre)\n"
"@DESCRIPTION=La fonction EVEN renvoie @nombre, arrondi au nombre pair "
"immédiatement supérieur.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"EVEN(5,4) vaut 6\n"
"@SEEALSO=ODD"

#: ../plugins/fn-math/functions.c:1779
msgid ""
"@FUNCTION=ODD\n"
"@SYNTAX=ODD(number)\n"
"@DESCRIPTION=ODD function returns the @number rounded up to the nearest odd "
"integer.  Negative numbers are rounded down.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"ODD(4.4) equals 5.\n"
"ODD(-4.4) equals -5.\n"
"\n"
"@SEEALSO=EVEN"
msgstr ""
"@FUNCTION=ODD\n"
"@SYNTAX=ODD(nombre)\n"
"@DESCRIPTION=La fonction ODD renvoie @nombre, arrondi au nombre impair "
"immédiatement supérieur. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ODD(4,4) vaut 5.\n"
"\n"
"@SEEALSO=EVEN"

#: ../plugins/fn-math/functions.c:1823
msgid ""
"@FUNCTION=FACTDOUBLE\n"
"@SYNTAX=FACTDOUBLE(number)\n"
"@DESCRIPTION=FACTDOUBLE function returns the double factorial of a @number, "
"i.e., x!!.\n"
"\n"
"* If @number is not an integer, it is truncated.\n"
"* If @number is negative FACTDOUBLE returns #NUM! error.\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"FACTDOUBLE(5) equals 15.\n"
"\n"
"@SEEALSO=FACT"
msgstr ""
"@FUNCTION=FACTDOUBLE\n"
"@SYNTAX=FACTDOUBLE(nombre)\n"
"@DESCRIPTION=La fonction FACTDOUBLE renvoie la double factorielle de "
"@nombre, x!!. \n"
"* Si @nombre n'est pas un entier, il est tronqué.\n"
"* S'il est négatif, FACTDOUBLE renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FACTDOUBLE(5) vaut 15.\n"
"\n"
"@SEEALSO=FACT"

#: ../plugins/fn-math/functions.c:1870
msgid ""
"@FUNCTION=FIB\n"
"@SYNTAX=FIB(number)\n"
"@DESCRIPTION=FIB function computes Fibonacci numbers.\n"
"\n"
"* If @number is not an integer, it is truncated.\n"
"* If @number is negative or zero FIB returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"FIB(12) equals 144.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=FIB\n"
"@SYNTAX=FIB(n)\n"
"@DESCRIPTION=La fonction FIB renvoie le @n-ième nombre de Fibonacci. \n"
"\n"
"* Si @n n'est pas un entier, il est tronqué.\n"
"* S'il est négatif ou nul, FIB renvoie l'erreur #NUM!. \n"
"\n"
"@EXAMPLES=\n"
"FIB(12) vaut 144.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:1921
msgid ""
"@FUNCTION=QUOTIENT\n"
"@SYNTAX=QUOTIENT(numerator,denominator)\n"
"@DESCRIPTION=QUOTIENT function returns the integer portion of a division.  "
"@numerator is the divided number and @denominator is the divisor.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"QUOTIENT(23,5) equals 4.\n"
"\n"
"@SEEALSO=MOD"
msgstr ""
"@FUNCTION=QUOTIENT\n"
"@SYNTAX=QUOTIENT(dividende;diviseur)\n"
"@DESCRIPTION=La fonction QUOTIENT renvoie la partie entière de la division "
"de @dividende par @diviseur.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"QUOTIENT(23;5) vaut 4.\n"
"@SEEALSO=MOD"

#: ../plugins/fn-math/functions.c:1954
msgid ""
"@FUNCTION=SIGN\n"
"@SYNTAX=SIGN(number)\n"
"@DESCRIPTION=SIGN function returns 1 if the @number is positive, zero if the "
"@number is 0, and -1 if the @number is negative.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"SIGN(3) equals 1.\n"
"SIGN(-3) equals -1.\n"
"SIGN(0) equals 0.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=SIGN\n"
"@SYNTAX=SIGN(nombre)\n"
"@DESCRIPTION=La foncion SIGN renvoie 1 si @nombre est positif, 0 si @nombre "
"est nul et -1 si @nombre est négatif. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SIGN(3) vaut 1.\n"
"SIGN(-3) vaut -1.\n"
"SIGN(0) vaut 0.\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:1989
msgid ""
"@FUNCTION=SQRTPI\n"
"@SYNTAX=SQRTPI(number)\n"
"@DESCRIPTION=SQRTPI function returns the square root of a @number multiplied "
"by pi.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SQRTPI(2) equals 2.506628275.\n"
"\n"
"@SEEALSO=PI"
msgstr ""
"@FUNCTION=SQRTPI\n"
"@SYNTAX=SQRTPI(nombre)\n"
"@DESCRIPTION=La fonction SQRTPI renvoie la racine carrée de @nombre "
"multipliée par pi. \n"
"Cette fonction est compatible avec Excel.\n"
"\n"
"* @EXAMPLES=\n"
"SQRTPI(2) vaut 2,506628275\n"
"\n"
"@SEEALSO=PI"

#: ../plugins/fn-math/functions.c:2020
msgid ""
"@FUNCTION=ROUNDDOWN\n"
"@SYNTAX=ROUNDDOWN(number[,digits])\n"
"@DESCRIPTION=ROUNDDOWN function rounds a given @number towards 0.\n"
"\n"
"@number is the number you want rounded toward 0 and @digits is the number of "
"digits to which you want to round that number.\n"
"\n"
"* If @digits is greater than zero, @number is rounded toward 0 to the given "
"number of digits.\n"
"* If @digits is zero or omitted, @number is rounded toward 0 to the next "
"integer.\n"
"* If @digits is less than zero, @number is rounded toward 0 to the left of "
"the decimal point.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROUNDDOWN(5.5) equals 5.\n"
"ROUNDDOWN(-3.3) equals -3.\n"
"ROUNDDOWN(1501.15,1) equals 1501.1.\n"
"ROUNDDOWN(1501.15,-2) equals 1500.0.\n"
"\n"
"@SEEALSO=ROUND,ROUNDUP"
msgstr ""
"@FUNCTION=ROUNDDOWN\n"
"@SYNTAX=ROUNDDOWN(nombre[;chiffres])\n"
"@DESCRIPTION=La fonction ROUNDDOWN arrondit @nombre vers le bas. @chiffres "
"est le nombre de chiffres auxquels on arrondit : s'il est positif, on "
"conserve @chiffres décimales. S'il est nul ou omis, @nombre est arrondi à un "
"entier. S'il est négatif, @nombre est arrondi à la dizaine, centaine... la "
"plus proche.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ROUNDDOWN(5,5) vaut 5.\n"
"ROUNDDOWN(-3,3) vaut -4.\n"
"ROUNDDOWN(1501,15;1) vaut 1501,1.\n"
"ROUNDDOWN(1501,15;-2) vaut 1500,0.\n"
"\n"
"@SEEALSO=ROUNDUP,ROUND"

#: ../plugins/fn-math/functions.c:2057
msgid ""
"@FUNCTION=ROUND\n"
"@SYNTAX=ROUND(number[,digits])\n"
"@DESCRIPTION=ROUND function rounds a given number.\n"
"\n"
"@number is the number you want rounded and @digits is the number of digits "
"to which you want to round that number.\n"
"\n"
"* If @digits is greater than zero, @number is rounded to the given number of "
"digits.\n"
"* If @digits is zero or omitted, @number is rounded to the nearest integer.\n"
"* If @digits is less than zero, @number is rounded to the left of the "
"decimal point.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROUND(5.5) equals 6.\n"
"ROUND(-3.3) equals -3.\n"
"ROUND(1501.15,1) equals 1501.2.\n"
"ROUND(1501.15,-2) equals 1500.0.\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUNDUP"
msgstr ""
"@FUNCTION=ROUND\n"
"@SYNTAX=ROUND(nombre[;chiffres])\n"
"@DESCRIPTION=La fonction ROUND arrondit @nombre. @chiffres est le nombre de "
"chiffres auxquels on arrondit : s'il est positif, on conserve @chiffres "
"décimales. S'il est nul ou omis, @nombre est arrondi à un entier. S'il est "
"négatif, @nombre est arrondi à la dizaine, centaine... la plus proche.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ROUND(5,5) vaut 6\n"
"ROUND(-3,3) vaut -3.\n"
"ROUND(1501,15;1) vaut 1501,2.\n"
"ROUND(1501,15;-2) vaut 1500,0.\n"
"\n"
"@SEEALSO=ROUNDUP,ROUNDDOWN"

#: ../plugins/fn-math/functions.c:2111
msgid ""
"@FUNCTION=ROUNDUP\n"
"@SYNTAX=ROUNDUP(number[,digits])\n"
"@DESCRIPTION=ROUNDUP function rounds a given number away from 0.\n"
"\n"
"@number is the number you want rounded away from 0 and @digits is the number "
"of digits to which you want to round that number.\n"
"\n"
"* If @digits is greater than zero, @number is rounded away from 0 to the "
"given number of digits.\n"
"* If @digits is zero or omitted, @number is rounded away from 0 to the next "
"integer.\n"
"* If @digits is less than zero, @number is rounded away from 0 to the left "
"of the decimal point.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROUNDUP(5.5) equals 6.\n"
"ROUNDUP(-3.3) equals -4.\n"
"ROUNDUP(1501.15,1) equals 1501.2.\n"
"ROUNDUP(1501.15,-2) equals 1600.0.\n"
"\n"
"@SEEALSO=ROUND,ROUNDDOWN"
msgstr ""
"@FUNCTION=ROUNDUP\n"
"@SYNTAX=ROUNDUP(nombre[;chiffres])\n"
"@DESCRIPTION=La fonction ROUNDUP arrondit @nombre vers le haut. @chiffres "
"est le nombre de chiffres auxquels on arrondit : s'il est positif, on "
"conserve @chiffres décimales. S'il est nul ou omis, @nombre est arrondi à un "
"entier. S'il est négatif, @nombre est arrondi à la dizaine, centaine... la "
"plus proche.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ROUNDUP(5,5) vaut 6.\n"
"ROUNDUP(-3,3) vaut -3.\n"
"ROUNDUP(1501,15;1) vaut 1501,2.\n"
"ROUNDUP(1501,15;-2) vaut 1600,0.\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUND"

#: ../plugins/fn-math/functions.c:2172
msgid ""
"@FUNCTION=MROUND\n"
"@SYNTAX=MROUND(number,multiple)\n"
"@DESCRIPTION=MROUND function rounds a given number to the desired multiple.\n"
"\n"
"@number is the number you want rounded and @multiple is the the multiple to "
"which you want to round the number.\n"
"\n"
"* If @number and @multiple have different sign, MROUND returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MROUND(1.7,0.2) equals 1.8.\n"
"MROUND(321.123,0.12) equals 321.12.\n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUND,ROUNDUP"
msgstr ""
"@FUNCTION=MROUND\n"
"@SYNTAX=MROUND(nombre;multiple)\n"
"@DESCRIPTION=La fonction MROUND arrondit @nombre au multiple le plus proche "
"de @multiple.\n"
"\n"
"* Si @nombre et @multiple sont de signe différent, MROUND renvoie #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"MROUND(1,7; 0,2) vaut 1,8. \n"
"\n"
"@SEEALSO=ROUNDDOWN,ROUND,ROUNDUP"

#: ../plugins/fn-math/functions.c:2229
msgid ""
"@FUNCTION=ROMAN\n"
"@SYNTAX=ROMAN(number[,type])\n"
"@DESCRIPTION=ROMAN function returns an arabic number in the roman numeral "
"style, as text. @number is the number you want to convert and @type is the "
"type of roman numeral you want.\n"
"\n"
"* If @type is 0 or it is omitted, ROMAN returns classic roman numbers.\n"
"* Type 1 is more concise than classic type, type 2 is more concise than type "
"1, and type 3 is more concise than type 2.  Type 4 is simplified type.\n"
"* If @number is negative or greater than 3999, ROMAN returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"ROMAN(999) equals CMXCIX.\n"
"ROMAN(999,1) equals LMVLIV.\n"
"ROMAN(999,2) equals XMIX.\n"
"ROMAN(999,3) equals VMIV.\n"
"ROMAN(999,4) equals IM.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=ROMAN\n"
"@SYNTAX=ROMAN(nombre[;type])\n"
"@DESCRIPTION=La fonction ROMAN convertit @nombre en nombre romain, sous "
"forme de texte. @type est le type de nombre romain souhaité : 0 ou omis, "
"ROMAN renvoie un nombre romain classique. Les types 1, 2, 3 sont de plus en "
"plus concis, et le type 4 est le type simplifié.\n"
"\n"
"* Si @nombre est négatif ou plus grand que 3999, ROMAN renvoie une erreur "
"#VALEUR!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"ROMAN(999) vaut CMXCIX.\n"
"ROMAN(999;1) vaut LMVLIV.\n"
"ROMAN(999;2) vaut XMIX.\n"
"ROMAN(999;3) vaut VMIV.\n"
"ROMAN(999;4) vaut IM.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-math/functions.c:2494
msgid ""
"@FUNCTION=SUMX2MY2\n"
"@SYNTAX=SUMX2MY2(array1,array2)\n"
"@DESCRIPTION=SUMX2MY2 function returns the sum of the difference of squares "
"of corresponding values in two arrays. @array1 is the first array or range "
"of data points and @array2 is the second array or range of data points. The "
"equation of SUMX2MY2 is SUM (x^2-y^2).\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If @array1 and @array2 have different number of data points, SUMX2MY2 "
"returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.  "
"Then\n"
"SUMX2MY2(A1:A5,B1:B5) equals -1299.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2PY2"
msgstr ""
"@FUNCTION=SUMX2MY2\n"
"@SYNTAX=SUMX2MY2(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction SUMX2MY2 renvoie la somme des différences des "
"carrés des valeurs correspondantes dans @tableau1 et @tableau2. L'équation "
"de SUMX2MY2 est SUM (x^2-y^2).\n"
"\n"
"* Les chaînes et les cellules vides sont ignorées.\n"
"* Si @tableau1 et @tableau2 ont un nombre de données différent, SUMX2MY2 "
"renvoie une erreur #N/A!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11, 15, 17, 21, et 43, et que B1, B2,..., B5 "
"contiennent 13, 22, 31, 33, et 39, alors\n"
"\n"
"SUMX2MY2(A1:A5;B1:B5) vaut -1299.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2PY2"

#: ../plugins/fn-math/functions.c:2611
msgid ""
"@FUNCTION=SUMX2PY2\n"
"@SYNTAX=SUMX2PY2(array1,array2)\n"
"@DESCRIPTION=SUMX2PY2 function returns the sum of the sum of squares of "
"corresponding values in two arrays. @array1 is the first array or range of "
"data points and @array2 is the second array or range of data points. The "
"equation of SUMX2PY2 is SUM (x^2+y^2).\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If @array1 and @array2 have different number of data points, SUMX2PY2 "
"returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.  "
"Then\n"
"SUMX2PY2(A1:A5,B1:B5) equals 7149.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2"
msgstr ""
"@FUNCTION=SUMX2PY2\n"
"@SYNTAX=SUMX2PY2(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction SUMX2PY2 renvoie la somme des sommes des carrés des "
"valeurs correspondantes dans @tableau1 et @tableau2. L'équation de SUMX2PY2 "
"est SUM (x^2+y^2). \n"
"\n"
"* Les chaînes et les cellules vides sont ignorées.\n"
"* Si @tableau1 et @tableau2 ont un nombre de données différent, SUMX2PY2 "
"renvoie une erreur #N/A!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11, 15, 17, 21, et 43, et que B1, B2,..., B5 "
"contiennent 13, 22, 31, 33, et 39, alors\n"
"SUMX2PY2(A1:A5;B1:B5) vaut 7149.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2"

#: ../plugins/fn-math/functions.c:2725
msgid ""
"@FUNCTION=SUMXMY2\n"
"@SYNTAX=SUMXMY2(array1,array2)\n"
"@DESCRIPTION=SUMXMY2 function returns the sum of squares of differences of "
"corresponding values in two arrays. @array1 is the first array or range of "
"data points and @array2 is the second array or range of data points. The "
"equation of SUMXMY2 is SUM (x-y)^2.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If @array1 and @array2 have different number of data points, SUMXMY2 "
"returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, "
"and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.  "
"Then\n"
"SUMXMY2(A1:A5,B1:B5) equals 409.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2,SUMX2PY2"
msgstr ""
"@FUNCTION=SUMXMY2\n"
"@SYNTAX=SUMXMY2(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction SUMXMY2 renvoie la somme des carrés des différences "
"des valeurs correspondantes dans @tableau1 et @tableau2. L'équation de "
"SUMXMY2 est SUM (x-y)^2. \n"
"\n"
"* Les chaînes et les cellules vides sont ignorées.\n"
"* Si @tableau1 et @tableau2 ont un nombre de données différent, SUMXMY2 "
"renvoie une erreur #N/A!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11, 15, 17, 21, et 43, et que B1, B2,..., B5 "
"contiennent 13, 22, 31, 33, et 39, alors\n"
"SUMXMY2(A1:A5;B1:B5) vaut 409.\n"
"\n"
"@SEEALSO=SUMSQ,SUMX2MY2,SUMX2PY2"

#: ../plugins/fn-math/functions.c:2841
msgid ""
"@FUNCTION=SERIESSUM\n"
"@SYNTAX=SERIESSUM(x,n,m,coefficients)\n"
"@DESCRIPTION=SERIESSUM function returns the sum of a power series.  @x is "
"the base of the power series, @n is the initial power to raise @x, @m is the "
"increment to the power for each term in the series, and @coefficients are "
"the coefficients by which each successive power of @x is multiplied.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 1.23, 2.32, "
"2.98, 3.42, and 4.33.  Then\n"
"SERIESSUM(3,1,2.23,A1:A5) equals 251416.43018.\n"
"\n"
"@SEEALSO=COUNT,SUM"
msgstr ""
"@FUNCTION=SERIESSUM\n"
"@SYNTAX=SERIESSUM(x;n;m;coefficients)\n"
"@DESCRIPTION=La fonction SERIESSUM renvoie la somme d'une série de "
"puissances. @x is la base de la série, @n est la puissance initiale à "
"laquelle il faut élever @x, @m est le pas d'incrémentation de la puissance "
"pour chaque terme de la série, et @coefficients sont les coefficients par "
"lesquels chaque puissance successive de @x est multipliée.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 1,23, 2,32,\n"
"2,98, 3,42, et 4,33 :\n"
"SERIESSUM(3;1;2,23;A1:A5) vaut 251416,43018.\n"
"\n"
"@SEEALSO=COUNT,SUM"

#: ../plugins/fn-math/functions.c:2902
msgid ""
"@FUNCTION=MINVERSE\n"
"@SYNTAX=MINVERSE(matrix)\n"
"@DESCRIPTION=MINVERSE function returns the inverse matrix of @matrix.\n"
"\n"
"* If @matrix cannot be inverted, MINVERSE returns #NUM! error.\n"
"* If @matrix does not contain equal number of columns and rows, MINVERSE "
"returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT, MDETERM"
msgstr ""
"@FUNCTION=MINVERSE\n"
"@SYNTAX=MINVERSE(matrice)\n"
"@DESCRIPTION=La fonction MINVERSE renvoie l'inverse de @matrice.\n"
"* Si elle n'est pas inversible, MINVERSE renvoie l'erreur #NUM!.\n"
"* Si elle n'est pas carrée, MINVERSE renvoie l'erreur #VALUE!.\n"
"* Cette fonction est compatible avec Excel. \n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=MMULT, MDETERM"

#: ../plugins/fn-math/functions.c:3047
msgid ""
"@FUNCTION=MMULT\n"
"@SYNTAX=MMULT(array1,array2)\n"
"@DESCRIPTION=MMULT function returns the matrix product of two arrays. The "
"result is an array with the same number of rows as @array1 and the same "
"number of columns as @array2.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=TRANSPOSE,MINVERSE"
msgstr ""
"@FUNCTION=MMULT\n"
"@SYNTAX=MMULT(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction MMULT renvoie la matrice produit des deux tableaux. "
"Le résultat est un tableau possédant le même nombre de lignes que @tableau1 "
"et le même nombre de colonnes que @tableau2.\n"
"* Cette fonction est compatible avec Excel.\n"
"@SEEALSO=TRANSPOSE,MINVERSE"

#: ../plugins/fn-math/functions.c:3123
msgid ""
"@FUNCTION=MDETERM\n"
"@SYNTAX=MDETERM(matrix)\n"
"@DESCRIPTION=MDETERM function returns the determinant of a given matrix.\n"
"\n"
"* If the @matrix does not contain equal number of columns and rows, MDETERM "
"returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that A1, ..., A4 contain numbers 2, 3, 7, and 3, B1, ..., B4 "
"4, 2, 4, and 1, C1, ..., C4 9, 4, 3, and 2, and D1, ..., D4 7, 3, 6, and 5. "
"Then\n"
"MDETERM(A1:D4) equals 148.\n"
"\n"
"@SEEALSO=MMULT, MINVERSE"
msgstr ""
"@FUNCTION=MDETERM\n"
"@SYNTAX=MDETERM(matrice)\n"
"@DESCRIPTION=La fonction MDETERM renvoie le déterminant de @matrice.\n"
"\n"
"* Si @matrice n'est pas carrée, MDETERM renvoie l'erreur #VALUE!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1,..., A4 contiennent 2, 3, 7, et 3, B1,..., B4, 4, 2, 4, et 1, C1,..., "
"C4, 9, 4, 3, et 2, et D1,..., D4, 7, 3, 6, et 5. Alors,\n"
"MDETERM(A1:D4) vaut 148.\n"
"\n"
"@SEEALSO=MMULT, MINVERSE"

#: ../plugins/fn-math/functions.c:3172
msgid "SUMPRODUCT:Multiplies components and adds the results."
msgstr ""

#: ../plugins/fn-math/functions.c:3174
msgid ""
"Multiplies corresponding data entries in the given arrays or ranges, and "
"then returns the sum of those products."
msgstr ""

#: ../plugins/fn-math/functions.c:3177
msgid "If an entry is not numeric, the value zero is used instead."
msgstr ""

#: ../plugins/fn-math/functions.c:3178
msgid ""
"If arrays or range arguments do not have the same dimensions, return #VALUE! "
"error."
msgstr ""

#: ../plugins/fn-math/functions.c:3180
msgid ""
"SUMPRODUCTs arguments are arrays or ranges. Attempting to use A1:A5>0 will "
"not work, implicit intersection will kick in. Instead use --(A1:A5>0)"
msgstr ""

#: ../plugins/fn-r/functions.c:19
msgid "R.DNORM:probability density function of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:20 ../plugins/fn-r/functions.c:45
#: ../plugins/fn-r/functions.c:99 ../plugins/fn-r/functions.c:124
#: ../plugins/fn-r/functions.c:151 ../plugins/fn-r/functions.c:178
#: ../plugins/fn-r/functions.c:203 ../plugins/fn-r/functions.c:257
#: ../plugins/fn-r/functions.c:282 ../plugins/fn-r/functions.c:336
#: ../plugins/fn-r/functions.c:359 ../plugins/fn-r/functions.c:409
#: ../plugins/fn-r/functions.c:434 ../plugins/fn-r/functions.c:461
#: ../plugins/fn-r/functions.c:488 ../plugins/fn-r/functions.c:511
#: ../plugins/fn-r/functions.c:561 ../plugins/fn-r/functions.c:586
#: ../plugins/fn-r/functions.c:640 ../plugins/fn-r/functions.c:663
#: ../plugins/fn-r/functions.c:713 ../plugins/fn-r/functions.c:736
#: ../plugins/fn-r/functions.c:786 ../plugins/fn-r/functions.c:811
#: ../plugins/fn-r/functions.c:838 ../plugins/fn-r/functions.c:865
#: ../plugins/fn-r/functions.c:890 ../plugins/fn-r/functions.c:944
#: ../plugins/fn-r/functions.c:971 ../plugins/fn-r/functions.c:1029
#: ../plugins/fn-r/functions.c:1052 ../plugins/fn-r/functions.c:1102
#: ../plugins/fn-r/functions.c:1127
msgid "x:observation."
msgstr ""

#: ../plugins/fn-r/functions.c:21 ../plugins/fn-r/functions.c:46
#: ../plugins/fn-r/functions.c:73
msgid "mu:mean of the distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:22 ../plugins/fn-r/functions.c:47
#: ../plugins/fn-r/functions.c:74
msgid "sigma:standard deviation of the distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:23 ../plugins/fn-r/functions.c:102
#: ../plugins/fn-r/functions.c:181 ../plugins/fn-r/functions.c:260
#: ../plugins/fn-r/functions.c:338 ../plugins/fn-r/functions.c:412
#: ../plugins/fn-r/functions.c:490 ../plugins/fn-r/functions.c:564
#: ../plugins/fn-r/functions.c:642 ../plugins/fn-r/functions.c:715
#: ../plugins/fn-r/functions.c:789 ../plugins/fn-r/functions.c:868
#: ../plugins/fn-r/functions.c:948 ../plugins/fn-r/functions.c:1031
#: ../plugins/fn-r/functions.c:1105
msgid ""
"give_log:if true, log of the result will be returned instead.  This is "
"useful if the result would otherwise underflow to 0.  Defaults to false."
msgstr ""

#: ../plugins/fn-r/functions.c:24
msgid ""
"This function returns the probability density function of the normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:44
msgid "R.PNORM:cumulative distribution function of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:48 ../plugins/fn-r/functions.c:75
#: ../plugins/fn-r/functions.c:127 ../plugins/fn-r/functions.c:154
#: ../plugins/fn-r/functions.c:206 ../plugins/fn-r/functions.c:233
#: ../plugins/fn-r/functions.c:285 ../plugins/fn-r/functions.c:312
#: ../plugins/fn-r/functions.c:361 ../plugins/fn-r/functions.c:386
#: ../plugins/fn-r/functions.c:437 ../plugins/fn-r/functions.c:464
#: ../plugins/fn-r/functions.c:513 ../plugins/fn-r/functions.c:538
#: ../plugins/fn-r/functions.c:589 ../plugins/fn-r/functions.c:616
#: ../plugins/fn-r/functions.c:665 ../plugins/fn-r/functions.c:690
#: ../plugins/fn-r/functions.c:738 ../plugins/fn-r/functions.c:763
#: ../plugins/fn-r/functions.c:814 ../plugins/fn-r/functions.c:841
#: ../plugins/fn-r/functions.c:893 ../plugins/fn-r/functions.c:920
#: ../plugins/fn-r/functions.c:975 ../plugins/fn-r/functions.c:1004
#: ../plugins/fn-r/functions.c:1054 ../plugins/fn-r/functions.c:1079
#: ../plugins/fn-r/functions.c:1130 ../plugins/fn-r/functions.c:1157
msgid ""
"lower_tail:if true (the default), the lower tail of the distribution is "
"considered."
msgstr ""

#: ../plugins/fn-r/functions.c:49 ../plugins/fn-r/functions.c:76
#: ../plugins/fn-r/functions.c:128 ../plugins/fn-r/functions.c:155
#: ../plugins/fn-r/functions.c:207 ../plugins/fn-r/functions.c:234
#: ../plugins/fn-r/functions.c:286 ../plugins/fn-r/functions.c:313
#: ../plugins/fn-r/functions.c:362 ../plugins/fn-r/functions.c:387
#: ../plugins/fn-r/functions.c:438 ../plugins/fn-r/functions.c:465
#: ../plugins/fn-r/functions.c:514 ../plugins/fn-r/functions.c:539
#: ../plugins/fn-r/functions.c:590 ../plugins/fn-r/functions.c:617
#: ../plugins/fn-r/functions.c:666 ../plugins/fn-r/functions.c:691
#: ../plugins/fn-r/functions.c:739 ../plugins/fn-r/functions.c:764
#: ../plugins/fn-r/functions.c:815 ../plugins/fn-r/functions.c:842
#: ../plugins/fn-r/functions.c:894 ../plugins/fn-r/functions.c:921
#: ../plugins/fn-r/functions.c:976 ../plugins/fn-r/functions.c:1005
#: ../plugins/fn-r/functions.c:1055 ../plugins/fn-r/functions.c:1080
#: ../plugins/fn-r/functions.c:1131 ../plugins/fn-r/functions.c:1158
msgid ""
"log_p:if true, log of the probability is used.  This is useful if the "
"probability would otherwise underflow to 0.  Defaults to false."
msgstr ""

#: ../plugins/fn-r/functions.c:50
msgid ""
"This function returns the cumulative distribution function of the normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:71
msgid "R.QNORM:probability quantile function of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:72 ../plugins/fn-r/functions.c:230
#: ../plugins/fn-r/functions.c:309 ../plugins/fn-r/functions.c:384
#: ../plugins/fn-r/functions.c:536 ../plugins/fn-r/functions.c:613
#: ../plugins/fn-r/functions.c:688 ../plugins/fn-r/functions.c:761
#: ../plugins/fn-r/functions.c:917 ../plugins/fn-r/functions.c:1000
#: ../plugins/fn-r/functions.c:1077 ../plugins/fn-r/functions.c:1154
msgid "p:probability."
msgstr ""

#: ../plugins/fn-r/functions.c:77
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:98
msgid "R.DLNORM:probability density function of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:100 ../plugins/fn-r/functions.c:125
#: ../plugins/fn-r/functions.c:152
msgid "logmean:mean of the underlying normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:101 ../plugins/fn-r/functions.c:126
#: ../plugins/fn-r/functions.c:153
msgid "logsd:standard deviation of the underlying normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:103
msgid ""
"This function returns the probability density function of the log-normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:123
msgid ""
"R.PLNORM:cumulative distribution function of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:129
msgid ""
"This function returns the cumulative distribution function of the log-normal "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:150
msgid "R.QLNORM:probability quantile function of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:156
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the log-normal distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:177
msgid "R.DGAMMA:probability density function of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:179 ../plugins/fn-r/functions.c:204
#: ../plugins/fn-r/functions.c:231 ../plugins/fn-r/functions.c:562
#: ../plugins/fn-r/functions.c:587 ../plugins/fn-r/functions.c:614
msgid "shape:the shape parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:180 ../plugins/fn-r/functions.c:205
#: ../plugins/fn-r/functions.c:232 ../plugins/fn-r/functions.c:563
#: ../plugins/fn-r/functions.c:588 ../plugins/fn-r/functions.c:615
#: ../plugins/fn-r/functions.c:714 ../plugins/fn-r/functions.c:737
#: ../plugins/fn-r/functions.c:762 ../plugins/fn-r/functions.c:1104
#: ../plugins/fn-r/functions.c:1129 ../plugins/fn-r/functions.c:1156
msgid "scale:the scale parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:182
msgid ""
"This function returns the probability density function of the gamma "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:202
msgid "R.PGAMMA:cumulative distribution function of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:208
msgid ""
"This function returns the cumulative distribution function of the gamma "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:229
msgid "R.QGAMMA:probability quantile function of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:235
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the gamma distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:256
msgid "R.DBETA:probability density function of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:258 ../plugins/fn-r/functions.c:283
#: ../plugins/fn-r/functions.c:310
msgid "a:the first shape parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:259 ../plugins/fn-r/functions.c:284
#: ../plugins/fn-r/functions.c:311
msgid "b:the second scale parameter of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:261
msgid ""
"This function returns the probability density function of the beta "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:281
msgid "R.PBETA:cumulative distribution function of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:287
msgid ""
"This function returns the cumulative distribution function of the beta "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:308
msgid "R.QBETA:probability quantile function of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:314
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the beta distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:335
msgid "R.DT:probability density function of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:337 ../plugins/fn-r/functions.c:360
#: ../plugins/fn-r/functions.c:385
msgid "n:the number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:339
msgid ""
"This function returns the probability density function of the Student t "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:358
msgid "R.PT:cumulative distribution function of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:363
msgid ""
"This function returns the cumulative distribution function of the Student t "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:383
msgid "R.QT:probability quantile function of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:388
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Student t distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:408
msgid "R.DF:probability density function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:410 ../plugins/fn-r/functions.c:435
#: ../plugins/fn-r/functions.c:462
msgid "n1:the first number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:411 ../plugins/fn-r/functions.c:436
#: ../plugins/fn-r/functions.c:463
msgid "n2:the second number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:413
msgid ""
"This function returns the probability density function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:433
msgid "R.PF:cumulative distribution function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:439
msgid ""
"This function returns the cumulative distribution function of the F "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:460
msgid "R.QF:probability quantile function of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:466
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the F distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:487
msgid "R.DCHISQ:probability density function of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:489 ../plugins/fn-r/functions.c:512
#: ../plugins/fn-r/functions.c:537
msgid "df:the number of degrees of freedom of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:491
msgid ""
"This function returns the probability density function of the chi-square "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:510
msgid ""
"R.PCHISQ:cumulative distribution function of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:515
msgid ""
"This function returns the cumulative distribution function of the chi-square "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:535
msgid "R.QCHISQ:probability quantile function of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:540
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the chi-square distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:560
msgid "R.DWEIBULL:probability density function of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:565
msgid ""
"This function returns the probability density function of the Weibull "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:585
msgid ""
"R.PWEIBULL:cumulative distribution function of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:591
msgid ""
"This function returns the cumulative distribution function of the Weibull "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:612
msgid "R.QWEIBULL:probability quantile function of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:618
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Weibull distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:639
msgid "R.DPOIS:probability density function of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:641 ../plugins/fn-r/functions.c:664
#: ../plugins/fn-r/functions.c:689
msgid "lambda:the mean of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:643
msgid ""
"This function returns the probability density function of the Poisson "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:662
msgid "R.PPOIS:cumulative distribution function of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:667
msgid ""
"This function returns the cumulative distribution function of the Poisson "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:687
msgid "R.QPOIS:probability quantile function of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:692
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Poisson distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:712
msgid "R.DEXP:probability density function of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:716
msgid ""
"This function returns the probability density function of the exponential "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:735
msgid ""
"R.PEXP:cumulative distribution function of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:740
msgid ""
"This function returns the cumulative distribution function of the "
"exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:760
msgid "R.QEXP:probability quantile function of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:765
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the exponential distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:785
msgid "R.DBINOM:probability density function of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:787 ../plugins/fn-r/functions.c:812
#: ../plugins/fn-r/functions.c:839 ../plugins/fn-r/functions.c:866
#: ../plugins/fn-r/functions.c:891 ../plugins/fn-r/functions.c:918
msgid "n:the number of trials"
msgstr ""

#: ../plugins/fn-r/functions.c:788 ../plugins/fn-r/functions.c:813
#: ../plugins/fn-r/functions.c:840 ../plugins/fn-r/functions.c:867
#: ../plugins/fn-r/functions.c:892 ../plugins/fn-r/functions.c:919
#: ../plugins/fn-r/functions.c:1030 ../plugins/fn-r/functions.c:1053
#: ../plugins/fn-r/functions.c:1078
msgid "psuc:the probability of success in each trial"
msgstr ""

#: ../plugins/fn-r/functions.c:790
msgid ""
"This function returns the probability density function of the binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:810
msgid "R.PBINOM:cumulative distribution function of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:816
msgid ""
"This function returns the cumulative distribution function of the binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:837
msgid "R.QBINOM:probability quantile function of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:843
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:864
msgid ""
"R.DNBINOM:probability density function of the negative binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:869
msgid ""
"This function returns the probability density function of the negative "
"binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:889
msgid ""
"R.PNBINOM:cumulative distribution function of the negative binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:895
msgid ""
"This function returns the cumulative distribution function of the negative "
"binomial distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:916
msgid ""
"R.QNBINOM:probability quantile function of the negative binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:922
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the negative binomial "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:943
msgid ""
"R.DHYPER:probability density function of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:945 ../plugins/fn-r/functions.c:972
#: ../plugins/fn-r/functions.c:1001
msgid "r:the number of red balls"
msgstr ""

#: ../plugins/fn-r/functions.c:946 ../plugins/fn-r/functions.c:973
#: ../plugins/fn-r/functions.c:1002
msgid "b:the number of black balls"
msgstr ""

#: ../plugins/fn-r/functions.c:947 ../plugins/fn-r/functions.c:974
#: ../plugins/fn-r/functions.c:1003
msgid "n:the number of balls drawn"
msgstr ""

#: ../plugins/fn-r/functions.c:949
msgid ""
"This function returns the probability density function of the hypergeometric "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:970
msgid ""
"R.PHYPER:cumulative distribution function of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:977
msgid ""
"This function returns the cumulative distribution function of the "
"hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:999
msgid ""
"R.QHYPER:probability quantile function of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1006
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the hypergeometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1028
msgid "R.DGEOM:probability density function of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1032
msgid ""
"This function returns the probability density function of the geometric "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1051
msgid "R.PGEOM:cumulative distribution function of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1056
msgid ""
"This function returns the cumulative distribution function of the geometric "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1076
msgid "R.QGEOM:probability quantile function of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1081
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the geometric distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1101
msgid "R.DCAUCHY:probability density function of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1103 ../plugins/fn-r/functions.c:1128
#: ../plugins/fn-r/functions.c:1155
msgid "location:the center of the distribution"
msgstr ""

#: ../plugins/fn-r/functions.c:1106
msgid ""
"This function returns the probability density function of the Cauchy "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1126
msgid "R.PCAUCHY:cumulative distribution function of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1132
msgid ""
"This function returns the cumulative distribution function of the Cauchy "
"distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1153
msgid "R.QCAUCHY:probability quantile function of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1159
msgid ""
"This function returns the probability quantile function, i.e., the inverse "
"of the cumulative distribution function, of the Cauchy distribution."
msgstr ""

#: ../plugins/fn-r/functions.c:1194
msgid "x,mu,sigma,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1202
msgid "x,mu,sigma,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1210
msgid "p,mu,sigma,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1218
msgid "x,logmean,logsd,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1226 ../plugins/fn-r/functions.c:1234
msgid "x,logmean,logsd,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1242 ../plugins/fn-r/functions.c:1362
msgid "x,shape,scale,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1250 ../plugins/fn-r/functions.c:1370
msgid "x,shape,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1258 ../plugins/fn-r/functions.c:1378
msgid "p,shape,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1266
msgid "x,a,b,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1274
msgid "x,a,b,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1282
msgid "p,a,b,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1290
msgid "x,n,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1298
msgid "x,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1306
msgid "p,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1314
msgid "x,n1,n2,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1322 ../plugins/fn-r/functions.c:1330
msgid "x,n1,n2,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1338
msgid "x,df,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1346
msgid "x,df,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1354
msgid "p,df,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1386
msgid "x,lambda,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1394
msgid "x,lambda,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1402
msgid "p,lambda,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1410
msgid "x,scale,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1418
msgid "x,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1426
msgid "p,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1434 ../plugins/fn-r/functions.c:1458
msgid "x,n,psuc,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1442 ../plugins/fn-r/functions.c:1450
#: ../plugins/fn-r/functions.c:1466
msgid "x,n,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1474
msgid "p,n,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1482
msgid "x,r,b,n,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1490
msgid "x,r,b,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1498
msgid "p,r,b,n,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1506
msgid "x,psuc,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1514
msgid "x,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1522
msgid "p,psuc,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1530
msgid "x,location,scale,give_log"
msgstr ""

#: ../plugins/fn-r/functions.c:1538
msgid "x,location,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-r/functions.c:1546
msgid "p,location,scale,lower_tail,log_p"
msgstr ""

#: ../plugins/fn-random/functions.c:47
msgid ""
"@FUNCTION=RAND\n"
"@SYNTAX=RAND()\n"
"@DESCRIPTION=RAND returns a random number between zero and one.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RAND() returns a random number greater than zero but less than one.\n"
"\n"
"@SEEALSO=RANDBETWEEN"
msgstr ""
"@FUNCTION=RAND\n"
"@SYNTAX=RAND()\n"
"@DESCRIPTION=Renvoie un nombre aléatoire compris entre 0 et 1.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"\n"
"@SEEALSO=RANDBETWEEN"

#: ../plugins/fn-random/functions.c:73
msgid ""
"@FUNCTION=RANDUNIFORM\n"
"@SYNTAX=RANDUNIFORM(a,b)\n"
"@DESCRIPTION=RANDUNIFORM returns a random variate from the uniform (flat) "
"distribution from a to b. The distribution is,\n"
"\n"
"\tp(x) dx = {1 over (b-a)} dx : for a <= x < b.\n"
"p(x) dx = 0 : for x < a or b <= x.\n"
"* If @a > @b RANDUNIFORM returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDUNIFORM(1.4,4.2) returns a random number greater than or equal to 1.4 "
"but less than 4.2.\n"
"\n"
"@SEEALSO=RANDBETWEEN,RAND"
msgstr ""
"@FUNCTION=RANDUNIFORM\n"
"@SYNTAX=RANDUNIFORM(a;b)\n"
"@DESCRIPTION=Renvoie une valeur aléatoire avec une distribution normale "
"(plate) entre @a et @b.\n"
"La distribution est \n"
"        p(x) dx = {1 over (b-a)} dx si @a <= x < @b et 0 sinon.\n"
"\n"
"* Si @a > @b, RANDUNIFORM renvoie #NUM!\n"
"@SEEALSO=RANDBETWEEN;RAND"

#: ../plugins/fn-random/functions.c:108
msgid ""
"@FUNCTION=RANDDISCRETE\n"
"@SYNTAX=RANDDISCRETE(val_range[,prob_range])\n"
"@DESCRIPTION=RANDDISCRETE returns one of the values in the @val_range. The "
"probabilities for each value are given in the @prob_range.\n"
"\n"
"* If @prob_range is omitted, the uniform discrete distribution is assumed.\n"
"* If the sum of all values in @prob_range is other than one, RANDDISCRETE "
"returns #NUM! error.\n"
"* If @val_range and @prob_range are not the same size, RANDDISCRETE returns "
"#NUM! error.\n"
"* If @val_range or @prob_range is not a range, RANDDISCRETE returns #VALUE! "
"error.\n"
"\n"
"@EXAMPLES=\n"
"RANDDISCRETE(A1:A6) returns one of the values in the range A1:A6.\n"
"\n"
"@SEEALSO=RANDBETWEEN,RAND"
msgstr ""
"@FUNCTION=RANDDISCRETE\n"
"@SYNTAX=RANDDISCRETE(intervalle_valeurs[;intervalle_prob])\n"
"@DESCRIPTION=RANDDISCRETE renvoie une des valeurs de @intervalle_valeurs, "
"leurs probabilités étant définies dans @intervalle_prob.\n"
"\n"
"* Si @intervalle_prob est absent, une distribution discrète unifrme est "
"utilisée.\n"
"* Si la somme des valeurs de @intervalle_prob est différente de 1, "
"RANDDISCRETE renvoie #NUM!.\n"
"* Si @intervalle_valeurs et @intervalle_prob ne sont pas de la même taille, "
"RANDDISCRETE renvoie #NUM!.\n"
"* Si @intervalle_valeurs ou @intervalle_prob ne sont psa des intervalles, "
"RANDDISCRETE renvoie #VALUE!.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDBETWEEN,RAND"

#: ../plugins/fn-random/functions.c:244
msgid ""
"@FUNCTION=RANDEXP\n"
"@SYNTAX=RANDEXP(b)\n"
"@DESCRIPTION=RANDEXP returns a exponentially-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDEXP(0.5).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDEXP\n"
"@SYNTAX=RANDEXP(b)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution "
"exponentielle.\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:270
msgid ""
"@FUNCTION=RANDPOISSON\n"
"@SYNTAX=RANDPOISSON(lambda)\n"
"@DESCRIPTION=RANDPOISSON returns a Poisson-distributed random number.\n"
"\n"
"* If @lambda < 0 RANDPOISSON returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDPOISSON(3).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDPOISSON\n"
"@SYNTAX=RANDPOISSON(lambda)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de "
"Poisson.\n"
"\n"
"* Si @lambda < 0, RANDPOISSON renvoie #NUM!.\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:301
msgid ""
"@FUNCTION=RANDBINOM\n"
"@SYNTAX=RANDBINOM(p,trials)\n"
"@DESCRIPTION=RANDBINOM returns a binomially-distributed random number.\n"
"\n"
"* If @p < 0 or @p > 1 RANDBINOM returns #NUM! error.\n"
"* If @trials < 0 RANDBINOM returns #NUM! error. \n"
"@EXAMPLES=\n"
"RANDBINOM(0.5,2).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDBINOM\n"
"@SYNTAX=RANDBINOM(p;échecs)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution "
"binÔmiale.\n"
"\n"
"* Si @p < 0 ou @p > 1, ou si @échecs < 0, renvoie #NUM!.\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:334
#, fuzzy
msgid ""
"@FUNCTION=RANDBETWEEN\n"
"@SYNTAX=RANDBETWEEN(bottom,top)\n"
"@DESCRIPTION=RANDBETWEEN function returns a random integer number between "
"and including @bottom and @top.\n"
"\n"
"* If @bottom is non-integer, it is rounded up.\n"
"* If @top is non-integer, it is rounded down.\n"
"* If @bottom > @top, RANDBETWEEN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RANDBETWEEN(3,7).\n"
"\n"
"@SEEALSO=RAND,RANDUNIFORM"
msgstr ""
"@FUNCTION=RANDBETWEEN\n"
"@SYNTAX=RANDBETWEEN(mini;maxi)\n"
"@DESCRIPTION=La fonction RANDBETWEEN renvoie un nombre entier aléatoire "
"entre @mini et @maxi. \n"
"* Si @mini ou @maxi ne sont pas entiers, ils sont tronqués.\n"
"* Si @mini > @maxi, RANDBETWEEN renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@SEEALSO=RAND,RANDUNIFORM"

#: ../plugins/fn-random/functions.c:374
msgid ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p,failures)\n"
"@DESCRIPTION=RANDNEGBINOM returns a negative binomially-distributed random "
"number.\n"
"\n"
"* If @p < 0 or @p > 1, RANDNEGBINOM returns #NUM! error.\n"
"* If @failures < 1, RANDNEGBINOM returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDNEGBINOM(0.5,2).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDNEGBINOM\n"
"@SYNTAX=RANDNEGBINOM(p;échecs)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution binômiale "
"négative.\n"
"\n"
"* Si @p < 0 ou @p > 1, ou si @échecs < 1, renvoie #NUM!.\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:408
msgid ""
"@FUNCTION=RANDBERNOULLI\n"
"@SYNTAX=RANDBERNOULLI(p)\n"
"@DESCRIPTION=RANDBERNOULLI returns a Bernoulli-distributed random number.\n"
"\n"
"* If @p < 0 or @p > 1 RANDBERNOULLI returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDBERNOULLI(0.5).\n"
"\n"
"@SEEALSO=RAND,RANDBETWEEN"
msgstr ""
"@FUNCTION=RANDBERNOULLI\n"
"@SYNTAX=RANDBERNOULLI(p)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de "
"Bernoulli.\n"
"\n"
"* Si @p < 0 ou @p > 1, RANDBERNOULLI renvoie #NUM!.\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:439
msgid ""
"@FUNCTION=RANDNORM\n"
"@SYNTAX=RANDNORM(mean,stdev)\n"
"@DESCRIPTION=RANDNORM returns a normal-distributed random number.\n"
"\n"
"* If @stdev < 0 RANDNORM returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDNORM(0,1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDNORM\n"
"@SYNTAX=RANDNORM(moyenne;écart_type)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution normale.\n"
"\n"
"* Si @écart_type < 0, RANDNORM renvoie #NUM!.\n"
"@SEEALSO=RAND,RANDBETWEEN"

#: ../plugins/fn-random/functions.c:471
msgid ""
"@FUNCTION=RANDCAUCHY\n"
"@SYNTAX=RANDCAUCHY(a)\n"
"@DESCRIPTION=RANDCAUCHY returns a Cauchy-distributed random number with "
"scale parameter a. The Cauchy distribution is also known as the Lorentz "
"distribution.\n"
"\n"
"* If @a < 0 RANDCAUCHY returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDCAUCHY(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDCAUCHY\n"
"@SYNTAX=RANDCAUCHY(a)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de Cauchy "
"(également appelée de Lorentz) ayant @a pour paramètre d'échelle.\n"
"\n"
"* Si @a < 0, RANDCAUCHY renvoie #NUM!.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:504
msgid ""
"@FUNCTION=RANDLOGNORM\n"
"@SYNTAX=RANDLOGNORM(zeta,sigma)\n"
"@DESCRIPTION=RANDLOGNORM returns a lognormal-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDLOGNORM(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDLOGNORM\n"
"@SYNTAX=RANDLOGNORM(zeta;sigma)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution log-"
"normale.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:531
msgid ""
"@FUNCTION=RANDWEIBULL\n"
"@SYNTAX=RANDWEIBULL(a,b)\n"
"@DESCRIPTION=RANDWEIBULL returns a Weibull-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDWEIBULL(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDWEIBULL\n"
"@SYNTAX=RANDWEIBULL(a;b)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de "
"Weibull.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:558
msgid ""
"@FUNCTION=RANDLAPLACE\n"
"@SYNTAX=RANDLAPLACE(a)\n"
"@DESCRIPTION=RANDLAPLACE returns a Laplace-distributed random number. "
"Laplace distribution is also known as two-sided exponential probability "
"distribution.\n"
"\n"
"@EXAMPLES=\n"
"RANDLAPLACE(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDLAPLACE\n"
"@SYNTAX=RANDLAPLACE(a)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de "
"Laplace, égalemment connue sous le nom de distribution exponentielle à deux "
"cotés.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:586
msgid ""
"@FUNCTION=RANDRAYLEIGH\n"
"@SYNTAX=RANDRAYLEIGH(sigma)\n"
"@DESCRIPTION=RANDRAYLEIGH returns a Rayleigh-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDRAYLEIGH(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDRAYLEIGH\n"
"@SYNTAX=RANDRAYLEIGH(sigma)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de "
"Rayleigh.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:612
msgid ""
"@FUNCTION=RANDRAYLEIGHTAIL\n"
"@SYNTAX=RANDRAYLEIGHTAIL(a,sigma)\n"
"@DESCRIPTION=RANDRAYLEIGHTAIL returns  a random variate from the tail of the "
"Rayleigh distribution with scale parameter sigma and a lower limit of a. The "
"distribution is,\n"
"\n"
"\tp(x) dx = {x over sigma^2} exp ((a^2 - x^2) /(2 sigma^2)) dx,\n"
"\n"
"for x > a.\n"
"\n"
"@EXAMPLES=\n"
"RANDRAYLEIGHTAIL(0.3,1).\n"
"\n"
"@SEEALSO=RAND,RANDRAYLEIGH"
msgstr ""
"@FUNCTION=RANDRAYLEIGHTAIL\n"
"@SYNTAX=RANDRAYLEIGHTAIL(a;sigma)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire de la queue d'une distribution de "
"RAyleigh, de facteur d'échelle @sigma et avec une limite inférieure de @a. "
"La distribution est :\n"
"\n"
"        p(x) dx = {x over sigma^2} exp ((a^2 - x^2) /(2 sigma^2)) dx, pour x "
"> a.\n"
"\n"
"@SEEALSO=RAND,RANDRAYLEIGH"

#: ../plugins/fn-random/functions.c:643
msgid ""
"@FUNCTION=RANDGAMMA\n"
"@SYNTAX=RANDGAMMA(a,b)\n"
"@DESCRIPTION=RANDGAMMA returns a Gamma-distributed random number.\n"
"\n"
"* If @a <= 0 RANDGAMMA returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDGAMMA(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDGAMMA\n"
"@SYNTAX=RANDGAMMA(a;b)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de Gamma.\n"
"\n"
"* Si @a < 0, RANDGAMMA renvoie #NUM!.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:675
msgid ""
"@FUNCTION=RANDPARETO\n"
"@SYNTAX=RANDPARETO(a,b)\n"
"@DESCRIPTION=RANDPARETO returns a Pareto-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDPARETO(1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDPARETO\n"
"@SYNTAX=RANDPARETO(a;b)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de "
"Pareto.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:702
msgid ""
"@FUNCTION=RANDFDIST\n"
"@SYNTAX=RANDFDIST(nu1,nu2)\n"
"@DESCRIPTION=RANDFDIST returns a F-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDFDIST(1,2).\n"
"\n"
"@SEEALSO=RAND,RANDGAMMA"
msgstr ""
"@FUNCTION=RANDFDIST\n"
"@SYNTAX=RANDFDIST(nu1;nu2)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution F..\n"
"@SEEALSO=RAND,RANDGAMMA"

#: ../plugins/fn-random/functions.c:729
msgid ""
"@FUNCTION=RANDBETA\n"
"@SYNTAX=RANDBETA(a,b)\n"
"@DESCRIPTION=RANDBETA returns a Beta-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDBETA(1,2).\n"
"\n"
"@SEEALSO=RAND,RANDGAMMA"
msgstr ""
"@FUNCTION=RANDBETA\n"
"@SYNTAX=RANDBETA(a;b)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution Beta.\n"
"@SEEALSO=RAND,RANDGAMMA"

#: ../plugins/fn-random/functions.c:756
msgid ""
"@FUNCTION=RANDLOGISTIC\n"
"@SYNTAX=RANDLOGISTIC(a)\n"
"@DESCRIPTION=RANDLOGISTIC returns a logistic-distributed random number.  The "
"distribution function is,\n"
"\n"
"\tp(x) dx = { exp(-x/a) over a (1 + exp(-x/a))^2 } dx for -infty < x < "
"+infty.\n"
"\n"
"@EXAMPLES=\n"
"RANDLOGISTIC(1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDLOGISTIC\n"
"@SYNTAX=RANDLOGISTIC(a)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution "
"logistique. La fonction de distribution est\n"
"\n"
"        p(x) dx = {exp(-x/a) over a (1 + exp(-x/a))^2 } dx pour tout x.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:785
msgid ""
"@FUNCTION=RANDGEOM\n"
"@SYNTAX=RANDGEOM(p)\n"
"@DESCRIPTION=RANDGEOM returns a geometric-distributed random number. The "
"number of independent trials with probability @p until the first success. "
"The probability distribution for geometric variates is, \n"
"\n"
"\tp(k) =  p (1-p)^(k-1), for k >= 1.\n"
"\n"
"* If @p < 0 or @p > 1 RANDGEOM returns #NUM! error. \n"
"@EXAMPLES=\n"
"RANDGEOM(0.4).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDGEOM\n"
"@SYNTAX=RANDGEOM(p)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution "
"géométrique, soit le nombre d'essais indépendants de probablité p avant le "
"premier succès. La distribution est\n"
"\n"
"        p(k) = p (1-p)^(k-1), pour k >= 1.\n"
"\n"
"* Si @p < 0 ou @p > 1, RANGEOM renvoie #NUM!.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:819
msgid ""
"@FUNCTION=RANDHYPERG\n"
"@SYNTAX=RANDHYPERG(n1,n2,t)\n"
"@DESCRIPTION=RANDHYPERG returns a hypergeometric-distributed random number. "
"The probability distribution for hypergeometric random variates is,\n"
"\n"
"\tp(k) =  C(n_1,k) C(n_2, t-k) / C(n_1 + n_2,k), \n"
"\n"
"where C(a,b) = a!/(b!(a-b)!). \n"
"\n"
"The domain of k is max(0,t-n_2), ..., max(t,n_1).\n"
"@EXAMPLES=\n"
"RANDHYPERG(21,1,9).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDHYPERG\n"
"@SYNTAX=RANDHYPERG(n1;n2;t)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution "
"hypergéométrique. La distribution de cette loi est \n"
"\n"
"        p(k) = C(@n1,k) C(@n2, @t-k) / C(@n1 + @n2, k)\n"
"\n"
"où C(a,b) = a! / (b!(a-b)!)\n"
"\n"
"Le domaine de k est max(0, @t-@n2) ... max(@t,@n1)\n"
"\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:854
msgid ""
"@FUNCTION=RANDLOG\n"
"@SYNTAX=RANDLOG(p)\n"
"@DESCRIPTION=RANDLOG returns a logarithmic-distributed random number.\n"
"\n"
"* If @p < 0 or @p > 1 RANDLOG returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDLOG(0.72).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDLOG\n"
"@SYNTAX=RANDLOG(p)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution "
"logarithmique\n"
"\n"
"* Si @p < 0 ou @p > 1, RANDLOG renvoie #NUM!.\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:885
msgid ""
"@FUNCTION=RANDCHISQ\n"
"@SYNTAX=RANDCHISQ(nu)\n"
"@DESCRIPTION=RANDCHISQ returns a Chi-Square-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDCHISQ(0.5).\n"
"\n"
"@SEEALSO=RAND,RANDGAMMA"
msgstr ""
"@FUNCTION=RANDCHISQ\n"
"@SYNTAX=RANDCHISQ(b)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution du Chi "
"carré.\n"
"@SEEALSO=RAND,RANDGAMMA"

#: ../plugins/fn-random/functions.c:911
msgid ""
"@FUNCTION=RANDTDIST\n"
"@SYNTAX=RANDTDIST(nu)\n"
"@DESCRIPTION=RANDTDIST returns a T-distributed random number.\n"
"\n"
"@EXAMPLES=\n"
"RANDTDIST(0.5).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDTDIST\n"
"@SYNTAX=RANDTDIST(nu)\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution T..\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:937
msgid ""
"@FUNCTION=RANDGUMBEL\n"
"@SYNTAX=RANDGUMBEL(a,b[,type])\n"
"@DESCRIPTION=RANDGUMBEL returns a Type I or Type II Gumbel-distributed "
"random number. @type is either 1 or 2 and specifies the type of the "
"distribution (Type I or Type II).\n"
"\n"
"* If @type is neither 1 nor 2, RANDGUMBEL returns #NUM! error.\n"
"* If @type is omitted, Type I is assumed.\n"
"\n"
"@EXAMPLES=\n"
"RANDGUMBEL(0.5,1,2).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDGUMBEL\n"
"@SYNTAX=RANDGUMBEL(a;b[;type])\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de Gumbel "
"de type I ou II, selon @type.\n"
"\n"
"* Si @type est omis, 1 est pris par défaut\n"
"* Si @type ne vaut ni 1 ni 2, RANDGUMBEL renvoie #NUM!\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:975
msgid ""
"@FUNCTION=RANDLEVY\n"
"@SYNTAX=RANDLEVY(c,alpha[,beta])\n"
"@DESCRIPTION=RANDLEVY returns a Levy-distributed random number. If @beta is "
"omitted, it is assumed to be 0.\n"
"\n"
"* For @alpha = 1, @beta=0, we get the Lorentz distribution.\n"
"* For @alpha = 2, @beta=0, we get the normal distribution.\n"
"\n"
"* If @alpha <= 0 or @alpha > 2, RANDLEVY returns #NUM! error.\n"
"* If @beta < -1 or @beta > 1, RANDLEVY returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"RANDLEVY(0.5,0.1,1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDLEVY\n"
"@SYNTAX=RANDLEVY(c;alpha[;beta])\n"
"@DESCRIPTION=Renvoie un nombre aléatoire suivant une distribution de Levy. "
"Si @beta est omis, il est pris égal à zéro.\n"
"\n"
"* Si @alpha = 1 et @beta = 0, on obtient une distribution de Lorentz.\n"
"* Si @alpha = 2 et @beta = 0, on obtient une distribution de Gauss.\n"
"* Si @alpha <= 0 ou @alpha > 2, RANDLEVY renvoie #NUM!\n"
"* Si @beta < -1 ou @beta > 1, RANDLEVY renvoie #NUM!\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:1013
msgid ""
"@FUNCTION=RANDEXPPOW\n"
"@SYNTAX=RANDEXPPOW(a,b)\n"
"@DESCRIPTION=RANDEXPPOW returns a random variate from the exponential power "
"distribution with scale parameter @a and exponent @b. The distribution is,\n"
"\n"
"\tp(x) dx = {1 over 2 a Gamma(1+1/b)} exp(-|x/a|^b) dx, for x >= 0.\n"
"\n"
"* For @b = 1 this reduces to the Laplace distribution.\n"
"* For @b = 2 it has the same form as a normal distribution with sigma = a/"
"sqrt(2).\n"
"\n"
"@EXAMPLES=\n"
"RANDEXPPOW(0.5,0.1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDEXPPOW\n"
"@SYNTAX=RANDEXPPOW(a;b)\n"
"@DESCRIPTION=RANDEXPPOW renvoie une valeur aléatoire avec une distribution "
"exponentielle, de paramètre d'échelle @a et d'exposant @b. La distribution "
"est\n"
"\n"
"\tp(x) dx = {1 over 2 @a Gamma(1+1/@b)} exp(-|x/@a|^@b) dx, si x >= 0.\n"
"\n"
"* Si b = 1, cela revient à une distribution de Laplace.\n"
"* Si b = 2, elle a la même forme qu'une distribution de Gauss, mais avec @a "
"= sqrt{2} sigma.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:1047
msgid ""
"@FUNCTION=RANDLANDAU\n"
"@SYNTAX=RANDLANDAU()\n"
"@DESCRIPTION=RANDLANDAU returns a random variate from the Landau "
"distribution. The probability distribution for Landau random variates is "
"defined analytically by the complex integral,\n"
"\n"
"\tp(x) = (1/(2 pi i)) int_{c-i infty}^{c+i infty} ds exp(s log(s) + x s).\n"
"\n"
"For numerical purposes it is more convenient to use the following equivalent "
"form of the integral,\n"
"\n"
"\tp(x) = (1/pi) int_0^ infty dt exp(-t log(t) - x t) sin(pi t).\n"
"\n"
"@EXAMPLES=\n"
"RANDLANDAU().\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDLANDAU\n"
"@SYNTAX=RANDLANDAU()\n"
"@DESCRIPTION=RANDLANDAU renvoie une valeur aléatoire selon la distribution "
"de  Landau. Cette distribution est définie par l'intégrale complexe\n"
"\n"
"\tp(x) = (1/(2 pi i)) int_{c-i infty}^{c+i infty} ds exp(s log(s) + x s).\n"
"\n"
"Pour des raisons numériques, on utilise la forme éqiuvalente suivante :\n"
"\n"
"\tp(x) = (1/pi) int_0^ infty dt exp(-t log(t) - x t) sin(pi t).\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:1078
msgid ""
"@FUNCTION=RANDNORMTAIL\n"
"@SYNTAX=RANDNORMTAIL(a,sigma)\n"
"@DESCRIPTION=RANDNORMTAIL returns a random variates from the upper tail of a "
"normal distribution with standard deviation @sigma. The values returned are "
"larger than the lower limit @a, which must be positive. The method is based "
"on Marsaglia's famous rectangle-wedge-tail algorithm (Ann Math Stat 32, 894-"
"899 (1961)), with this aspect explained in Knuth, v2, 3rd ed, p139, 586 "
"(exercise 11).\n"
"\n"
"The probability distribution for normal tail random variates is,\n"
"\n"
"\tp(x) dx = {1 over N(a;sigma)} exp (- x^2/(2 sigma^2)) dx,\n"
"\n"
"for x > a where N(a;sigma) is the normalization constant, N(a;sigma) = (1/2) "
"erfc(a / sqrt(2 sigma^2)).\n"
"\n"
"@EXAMPLES=\n"
"RANDNORMTAIL(0.5,0.1).\n"
"\n"
"@SEEALSO=RAND"
msgstr ""
"@FUNCTION=RANDNORMTAIL\n"
"@SYNTAX=RANDNORMTAIL(a;sigma)\n"
"@DESCRIPTION=RANDNORMTAIL renvoie une valeur aléatoire de la queue "
"supérieurs d'une distribution normale, d'écart-type @sigma. Les valeurs "
"renvoyées seront plus grandes que @a, qui doit être positif. La méthode est "
"basée sur le fameux algorithme de Marsaglia (Ann Math Stat 32, 894-899 "
"(1961)), cet aspect étant détaillé dans Knuth, v2, 3rd ed, p139, 586 "
"(exercice 11).\n"
"\n"
"La distribution de probabilité de la queue d'une distribution gaussienne "
"est \n"
"\n"
"\tp(x) dx = {1 over N(@a;@sigma)} exp (- x^2/(2 @sigma^2)) dx,\n"
"\n"
"pour x > a où N(a;sigma) est la constante de normalisation, N(a;sigma) = "
"(1/2) erfc(a / sqrt(2 sigma^2)).\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RAND"

#: ../plugins/fn-random/functions.c:1117
msgid ""
"@FUNCTION=SIMTABLE\n"
"@SYNTAX=SIMTABLE(d1, d2, ..., dN)\n"
"@DESCRIPTION=SIMTABLE returns one of the values in the given argument list "
"depending on the round number of the simulation tool. When the simulation "
"tool is not activated, SIMTABLE returns @d1.\n"
"\n"
"With the simulation tool and the SIMTABLE function you can test given "
"decision variables. Each SIMTABLE function contains the possible values of a "
"simulation variable. In most valid simulation models you should have the "
"same number of values @dN for all decision variables.  If the simulation is "
"run more rounds than there are values defined, SIMTABLE returns #N/A! error "
"(e.g. if A1 contains `=SIMTABLE(1)' and A2 `=SIMTABLE(1,2)', A1 yields #N/A! "
"error on the second round).\n"
"\n"
"The successive use of the simulation tool also requires that you give to the "
"tool at least one input variable having RAND() or any other "
"RAND<distribution name>() function in it. On each round, the simulation tool "
"iterates for the given number of rounds over all the input variables to "
"reevaluate them. On each iteration, the values of the output variables are "
"stored, and when the round is completed, descriptive statistical information "
"is created according to the values.\n"
"\n"
"@EXAMPLES=\n"
"SIMTABLE(TRUE,FALSE) returns TRUE on the first simulation round and FALSE on "
"the second round.\n"
"SIMTABLE(223,225,227,229) returns 227 on the simulation round #3.\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=SIMTABLE\n"
"@SYNTAX=SIMTABLE(d1; d2; ...; dN)\n"
"\n"
"@DESCRIPTION=SIMTABLE renvoie l'un de ses arguments, en fonction du numéro "
"d'itération de l'outil de simulation. Si l'outil de simulation n'est pas "
"actif, SIMTABLE renvoie @d1.\n"
"\n"
"Avec l'outil de simulation et cette fonction, vous pouvez tester des "
"variables de décision. Chaque fonction SIMTABLE contient les différentes "
"valeurs possibles pour une variable donnée. En général, le nombre de valeurs "
"@dN est le même pour toutes les variables de décision. Si ce n'est pas le "
"cas, SIMTABLE renverra #N/A! lorsqu'aucune valeur ne sera disponible.\n"
"\n"
"Pour utiliser efficacement l'outil de simulation, il faudra qu'au\n"
"moins une variable d'entrée utilise RAND ou l'une des fonctions\n"
"RAND<distribution>. A chaque séquence, le simulateur itère N fois sur\n"
"les variables en leur affectant des valeurs différentes. A chaque\n"
"itération, les valeurs des variables de sortie sont recalculées et\n"
"stockées, et à l'issue de chaque séquence, des informations\n"
"statistiques en sont extraites.\n"
"\n"
"@EXAMPLES=\n"
"SIMTABLE(VRAI;FAUX) renvoie VRAI pendant la première séquence de simulation, "
"et FAUX pendant la deuxième.\n"
"SIMTABLE(223;225;227;229) renvoie 227 pendant la séquence numéro 3.\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-stat/functions.c:65
msgid ""
"@FUNCTION=VARP\n"
"@SYNTAX=VARP(b1, b2, ...)\n"
"@DESCRIPTION=VARP calculates the variance of an entire population.\n"
"VARP is also known as the N-variance.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"VARP(A1:A5) equals 94.112.\n"
"\n"
"@SEEALSO=AVERAGE,DVAR,DVARP,STDEV,VAR"
msgstr ""
"@FUNCTION=VARP\n"
"@SYNTAX=VARP(b1; b2;...)\n"
"@DESCRIPTION=VARP calcule la variance d'un ensemble de nombres, où chaque "
"nombre est un élément d'une population, et l'ensemble correspond à la "
"population complète.\n"
"\n"
"*VARP est aussi appelé la N-variance.\n"
"@SEEALSO=STDEV,VAR,DVARP,AVERAGE,DVAR"

#: ../plugins/fn-stat/functions.c:97
msgid ""
"@FUNCTION=VAR\n"
"@SYNTAX=VAR(b1, b2, ...)\n"
"@DESCRIPTION=VAR calculates sample variance of the given sample. To get the "
"true variance of a complete population use VARP.\n"
"VAR is also known as the N-1-variance. Under reasonable conditions, it is "
"the maximum-likelihood estimator for the true variance.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"VAR(A1:A5) equals 117.64.\n"
"\n"
"@SEEALSO=VARP,STDEV"
msgstr ""
"@FUNCTION=VAR\n"
"@SYNTAX=VAR(b1; b2;...)\n"
"@DESCRIPTION=VAR estime la variance d'un échantillon de la population. Pour "
"obtenir la variance réelle de la populaton complète, utilisez @VARP.\n"
"\n"
"* VAR est aussi appelé la (N-1)-variance. Dans les conditions habituelles, "
"c'est l'estimateur de la variance réelle ayant le maximum de vraisemblance.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,... A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"VAR(A1:A5) vaut 117,64.\n"
"@SEEALSO=VARP,STDEV"

#: ../plugins/fn-stat/functions.c:134
msgid ""
"@FUNCTION=STDEV\n"
"@SYNTAX=STDEV(b1, b2, ...)\n"
"@DESCRIPTION=STDEV returns the sample standard deviation of the given "
"sample.\n"
"To obtain the population standard deviation of a whole population use "
"STDEVP.\n"
"STDEV is also known as the N-1-standard deviation.\n"
"Under reasonable conditions, it is the maximum-likelihood estimator for the "
"true population standard deviation.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"STDEV(A1:A5) equals 10.84619749.\n"
"\n"
"@SEEALSO=AVERAGE,DSTDEV,DSTDEVP,STDEVA,STDEVPA,VAR"
msgstr ""
"@FUNCTION=VAR\n"
"@SYNTAX=VAR(b1; b2;...)\n"
"@DESCRIPTION=VAR estime la variance d'un échantillon de la population. Pour "
"obtenir la variance réelle de la populaton complète, utilisez @VARP.\n"
"\n"
"* VAR est aussi appelé la (N-1)-variance. Dans les conditions habituelles, "
"c'est l'estimateur de la variance réelle ayant le maximum de vraisemblance.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,... A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"VAR(A1:A5) vaut 117,64.\n"
"@SEEALSO=VARP,STDEV"

#: ../plugins/fn-stat/functions.c:173
msgid ""
"@FUNCTION=STDEVP\n"
"@SYNTAX=STDEVP(b1, b2, ...)\n"
"@DESCRIPTION=STDEVP returns the population standard deviation of the given "
"population. \n"
"This is also known as the N-standard deviation\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"STDEVP(A1:A5) equals 9.701133954.\n"
"\n"
"@SEEALSO=STDEV,STDEVA,STDEVPA"
msgstr ""
"@FUNCTION=STDEVP\n"
"@SYNTAX=STDEVP(b1; b2;...)\n"
"@DESCRIPTION=La fonction STDEVP renvoie l'écart-type d'un ensemble de "
"nombres en considérant ces valeurs comme tous les membres d'une population.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,... A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"STDEVP(A1:A5) vaut 9,701133954.\n"
"\n"
"@SEEALSO=STDEV,STDEVA,STDEVPA"

#: ../plugins/fn-stat/functions.c:207
msgid ""
"@FUNCTION=RANK\n"
"@SYNTAX=RANK(x,ref[,order])\n"
"@DESCRIPTION=RANK returns the rank of a number in a list of numbers.  @x is "
"the number whose rank you want to find, @ref is the list of numbers, and "
"@order specifies how to rank numbers.  If @order is 0, numbers are ranked in "
"descending order, otherwise numbers are ranked in ascending order.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"RANK(17.3,A1:A5) equals 4.\n"
"\n"
"@SEEALSO=PERCENTRANK"
msgstr ""
"@FUNCTION=RANK\n"
"@SYNTAX=RANK(x;réf[;tri])\n"
"@DESCRIPTION=RANK renvoie le rang de @x dans la liste de nombres @réf. @tri "
"indique le sens dans lequel la liste est triée : 0 pour un ordre descendant, "
"non nul pour un ordre ascendant.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, and 40,1 :\n"
"RANK(17,3;A1:A5) vaut 4.\n"
"\n"
"@SEEALSO=PERCENTRANK"

#: ../plugins/fn-stat/functions.c:294
#, fuzzy
msgid ""
"@FUNCTION=TRIMMEAN\n"
"@SYNTAX=TRIMMEAN(ref,fraction)\n"
"@DESCRIPTION=TRIMMEAN returns the mean of the interior of a data set. @ref "
"is the list of numbers whose mean you want to calculate and @fraction is the "
"fraction of the data set excluded from the mean. For example, if "
"@fraction=0.2 and the data set contains 40 numbers, 8 numbers are trimmed "
"from the data set (40 x 0.2): the 4 largest and the 4 smallest.  To avoid a "
"bias, the number of points to be excluded is always rounded down to the "
"nearest even number.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"TRIMMEAN(A1:A5,0.2) equals 23.2.\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE"
msgstr ""
"@FUNCTION=TRIMMEAN\n"
"@SYNTAX=TRIMMEAN(réf;fraction)\n"
"@DESCRIPTION=TRIMMEAN renvoie la moyenne de l'intérieur d'un ensemble de "
"données. @réf est l'ensemble de données, et @fraction représente est la "
"fraction de cet ensemble que vous souhaitez exclure du calcul. Par exemple, "
"si @fraction vaut 0,2 et qu'il y a 40 valeurs dans @réf, 8 nombres seront "
"ignorés : les 4 plus grands et les 4 plus petits. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,... A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"TRIMMEAN(A1:A5;0,2) equals 23,2.\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE"

#: ../plugins/fn-stat/functions.c:356
msgid ""
"@FUNCTION=COVAR\n"
"@SYNTAX=COVAR(array1,array2)\n"
"@DESCRIPTION=COVAR returns the covariance of two data sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"COVAR(A1:A5,B1:B5) equals 65.858.\n"
"\n"
"@SEEALSO=CORREL,FISHER,FISHERINV"
msgstr ""
"@FUNCTION=COVAR\n"
"@SYNTAX=COVAR(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction COVAR renvoie la covariance des deux ensembles de "
"données @tableau1 et @tableau2.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,... A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, et que B1, B2... B5 contiennent 23,2, 25,8, 29,9, 33,5 "
"et 42,7, alors\n"
"COVAR(A1:A5;B1:B5) vaut 65,858.\n"
"@SEEALSO=CORREL,FISHER,FISHERINV"

#: ../plugins/fn-stat/functions.c:392
msgid ""
"@FUNCTION=CORREL\n"
"@SYNTAX=CORREL(array1,array2)\n"
"@DESCRIPTION=CORREL returns the correlation coefficient of two data sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"CORREL(A1:A5,B1:B5) equals 0.996124788.\n"
"\n"
"@SEEALSO=COVAR,FISHER,FISHERINV"
msgstr ""
"@FUNCTION=CORREL\n"
"@SYNTAX=CORREL(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction CORREL renvoie le coefficient de corrélation entre "
"les ensembles de données @tableau1 et @tableau2. \n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,... A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, et que B1, "
"B2... B5 contiennent 23,2, 25,8, 29,9, 33,5 et 42,7, alors\n"
"CORREL(A1:A5;B1:B5) vaut 0,996124788.\n"
"\n"
"@SEEALSO=COVAR,FISHER,FISHERINV"

#: ../plugins/fn-stat/functions.c:428
msgid ""
"@FUNCTION=NEGBINOMDIST\n"
"@SYNTAX=NEGBINOMDIST(f,t,p)\n"
"@DESCRIPTION=NEGBINOMDIST function returns the negative binomial "
"distribution. @f is the number of failures, @t is the threshold number of "
"successes, and @p is the probability of a success.\n"
"\n"
"* If @f or @t is a non-integer it is truncated.\n"
"* If (@f + @t -1) <= 0 NEGBINOMDIST returns #NUM! error.\n"
"* If @p < 0 or @p > 1 NEGBINOMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NEGBINOMDIST(2,5,0.55) equals 0.152872629.\n"
"\n"
"@SEEALSO=BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT"
msgstr ""
"@FUNCTION=NEGBINOMDIST\n"
"@SYNTAX=NEGBINOMDIST(f;t;p)\n"
"@DESCRIPTION=La fonction NEGBINOMDIST renvoie la distribution binomiale "
"négative. @f est le nombre d'échecs, @t est le nombre de succès seuil, et @p "
"est la probabilité d'un succès.\n"
"\n"
"* Si @f ou @t ne sont pas des entiers, ils sont tronqués.\n"
"* Si (@f + @t -1) <=0, , ou si p n'est pas dans l'intervalle [0;1], "
"NEGBINOMDIST renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NEGBINOMDIST(2;5;0,55) vaut 0,152872629\n"
"@SEEALSO=BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT"

#: ../plugins/fn-stat/functions.c:466
msgid ""
"@FUNCTION=NORMSDIST\n"
"@SYNTAX=NORMSDIST(x)\n"
"@DESCRIPTION=NORMSDIST function returns the standard normal cumulative "
"distribution. @x is the value for which you want the distribution.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMSDIST(2) equals 0.977249868.\n"
"\n"
"@SEEALSO=NORMDIST"
msgstr ""
"@FUNCTION=NORMSDIST\n"
"@SYNTAX=NORMSDIST(x)\n"
"@DESCRIPTION=La fonction NORMSDIST renvoie la distribution standard normale "
"cumulative. @x est la valeur pour laquelle on veut la distribution. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NORMSDIST(2) vaut 0,977249868\n"
"\n"
"@SEEALSO=NORMDIST"

#: ../plugins/fn-stat/functions.c:498
msgid ""
"@FUNCTION=NORMSINV\n"
"@SYNTAX=NORMSINV(p)\n"
"@DESCRIPTION=NORMSINV function returns the inverse of the standard normal "
"cumulative distribution. @p is the given probability corresponding to the "
"normal distribution.\n"
"\n"
"* If @p < 0 or @p > 1 NORMSINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMSINV(0.2) equals -0.841621234.\n"
"\n"
"@SEEALSO=NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST"
msgstr ""
"@FUNCTION=NORMSINV\n"
"@SYNTAX=NORMSINV(p)\n"
"@DESCRIPTION=La fonction NORMSINV renvoie la distribution standard normale "
"cumulative inverse. @p est la probabilité correspondant à la distribution "
"normale.\n"
"\n"
"* Si @p < 0 ou @p > 1, NORMSINV renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NORMSINV(0,2) vaut -0,841621234.\n"
"@SEEALSO=NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST"

#: ../plugins/fn-stat/functions.c:533
msgid ""
"@FUNCTION=LOGNORMDIST\n"
"@SYNTAX=LOGNORMDIST(x,mean,stddev)\n"
"@DESCRIPTION=LOGNORMDIST function returns the lognormal distribution. @x is "
"the value for which you want the distribution, @mean is the mean of the "
"distribution, and @stddev is the standard deviation of the distribution.\n"
"\n"
"* If @stddev = 0 LOGNORMDIST returns #DIV/0! error.\n"
"* If @x <= 0, @mean < 0 or @stddev < 0 LOGNORMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOGNORMDIST(3,1,2) equals 0.519662338.\n"
"\n"
"@SEEALSO=NORMDIST"
msgstr ""
"@FUNCTION=LOGNORMDIST\n"
"@SYNTAX=LOGNORMDIST(x;moyenne;écart_type)\n"
"@DESCRIPTION=La fonction LOGNORMDIST renvoie la distribution lognormale "
"évaluée en @x. @moyenne et @écart_type sont les éléments caractéristiques de "
"la distribution.\n"
"\n"
"* Si @écart_type = 0, LOGNORMDIST renvoie l'erreur #DIV/0!.\n"
"* Si @x<=0, @moyenne<0 ou @écart_type<0, LOGNORMDIST renvoie l'erreur "
"#NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LOGNORMDIST(3;1;2) vaut 0,519662338.\n"
"\n"
"@SEEALSO=NORMDIST"

#: ../plugins/fn-stat/functions.c:571
msgid ""
"@FUNCTION=LOGINV\n"
"@SYNTAX=LOGINV(p,mean,stddev)\n"
"@DESCRIPTION=LOGINV function returns the inverse of the lognormal cumulative "
"distribution. @p is the given probability corresponding to the normal "
"distribution, @mean is the arithmetic mean of the distribution, and @stddev "
"is the standard deviation of the distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @stddev <= 0 LOGINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOGINV(0.5,2,3) equals 7.389056099.\n"
"\n"
"@SEEALSO=EXP,LN,LOG,LOG10,LOGNORMDIST"
msgstr ""
"@FUNCTION=LOGINV\n"
"@SYNTAX=LOGINV(p;moyenne;écart_type)\n"
"@DESCRIPTION=La fonction LOGINV renvoie une distribution lognormale "
"cumulative inverse. @p est la probabilité de la distribution normale, "
"@moyenne et @écart_type en sont les éléments caractéristiques.\n"
"\n"
"* Si @écart_type <= 0 ou @p < 0 ou @p 1 >, LOGINV renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LOGINV(0,5;2;3) vaut 7,389056099.\n"
"@SEEALSO=EXP,LN,LOG,LOG10,LOGNORMDIST"

#: ../plugins/fn-stat/functions.c:611
msgid ""
"@FUNCTION=FISHERINV\n"
"@SYNTAX=FISHERINV(x)\n"
"@DESCRIPTION=FISHERINV function returns the inverse of the Fisher "
"transformation at @x.\n"
"\n"
"* If @x is non-number FISHERINV returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FISHERINV(2) equals 0.96402758.\n"
"\n"
"@SEEALSO=FISHER"
msgstr ""
"@FUNCTION=FISHERINV\n"
"@SYNTAX=FISHERINV(x)\n"
"@DESCRIPTION=La fonction FISHERINV renvoie la transformation de Fisher "
"inverse en @x.\n"
"\n"
"* Si @x n'est pas un nombre, FISHERINV renvoie l'erreur #VALEUR!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FISHERINV(2) vaut 0,96402758.\n"
"\n"
"@SEEALSO=FISHER"

#: ../plugins/fn-stat/functions.c:641
msgid ""
"@FUNCTION=MODE\n"
"@SYNTAX=MODE(n1, n2, ...)\n"
"@DESCRIPTION=MODE returns the most common number of the data set. If the "
"data set has many most common numbers MODE returns the first one of them.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If the data set does not contain any duplicates MODE returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"11.4, 25.9, and 40.1.  Then\n"
"MODE(A1:A5) equals 11.4.\n"
"\n"
"@SEEALSO=AVERAGE,MEDIAN"
msgstr ""
"@FUNCTION=MODE\n"
"@SYNTAX=MODE(n1; n2;...)\n"
"@DESCRIPTION=La fonction MODE renvoie le mode des données, c'est-à-dire le "
"nombre le plus fréquent. S'il y en a plusieurs, elle renvoie le premier "
"trouvé.\n"
"\n"
"* Les chaînes et les cellules vides sont ignorées.\n"
"* Si l'ensemble de données ne contient aucune valeur en double, MODE renvoie "
"l'erreur #N/A!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 11,4, 25,9, et 40,1, alors\n"
"MODE(A1:A5) vaut 11,4.\n"
"@SEEALSO=AVERAGE,MEDIAN"

#: ../plugins/fn-stat/functions.c:679
msgid ""
"@FUNCTION=HARMEAN\n"
"@SYNTAX=HARMEAN(b1, b2, ...)\n"
"@DESCRIPTION=HARMEAN returns the harmonic mean of the N data points (that "
"is, N divided by the sum of the inverses of the data points).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"HARMEAN(A1:A5) equals 19.529814427.\n"
"\n"
"@SEEALSO=AVERAGE,GEOMEAN,MEDIAN,MODE,TRIMMEAN"
msgstr ""
"@FUNCTION=HARMEAN\n"
"@SYNTAX=HARMEAN(b1; b2;...)\n"
"@DESCRIPTION=La fonction HARMEAN renvoie la moyenne harmonique des N "
"valeurs, c'est-à-dire N divisé par la somme des inverses des valeurs.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"HARMEAN(A1:A5) vaut 19,529814427.\n"
"@SEEALSO=GEOMEAN,MEDIAN,TRIMMEAN,MODE,AVERAGE"

#: ../plugins/fn-stat/functions.c:713
msgid ""
"@FUNCTION=GEOMEAN\n"
"@SYNTAX=GEOMEAN(b1, b2, ...)\n"
"@DESCRIPTION=GEOMEAN returns the geometric mean of the given arguments. This "
"is equal to the Nth root of the product of the terms.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"GEOMEAN(A1:A5) equals 21.279182482.\n"
"\n"
"@SEEALSO=AVERAGE,HARMEAN,MEDIAN,MODE,TRIMMEAN"
msgstr ""
"@FUNCTION=GEOMEAN\n"
"@SYNTAX=GEOMEAN(b1; b2;...)\n"
"@DESCRIPTION=La fonction GEOMEAN renvoie la moyenne géométrique des N "
"valeurs, c'est-à-dire la racine N-ième du produit des termes.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"GEOMEAN(A1:A5) vaut 21,279182482.\n"
"\n"
"@SEEALSO=HARMEAN,MEDIAN,HARMEAN,MODE,TRIMMEAN"

#: ../plugins/fn-stat/functions.c:746
msgid ""
"@FUNCTION=COUNT\n"
"@SYNTAX=COUNT(b1, b2, ...)\n"
"@DESCRIPTION=COUNT returns the total number of integer or floating point "
"arguments passed.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"COUNT(A1:A5) equals 5.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=COUNT\n"
"@SYNTAX=COUNT(b1; b2;...)\n"
"@DESCRIPTION=Renvoie le nombre de paramètres entiers ou réels passés à la "
"fonction.\n"
"\n"
"* Cette fonction est compatible avec Excel\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"COUNT(A1:A5) vaut 5.\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:791
msgid ""
"@FUNCTION=COUNTA\n"
"@SYNTAX=COUNTA(b1, b2, ...)\n"
"@DESCRIPTION=COUNTA returns the number of arguments passed not including "
"empty cells.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, \"missing\", \"missing\", 25.9, and 40.1.  Then\n"
"COUNTA(A1:A5) equals 5.\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM"
msgstr ""
"@FUNCTION=COUNTA\n"
"@SYNTAX=COUNTA(b1; b2;...)\n"
"@DESCRIPTION=Renvoie le nombre de paramètres passés à la fonction, sans "
"compter les cellules vides.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, \"vide\", \"vide\",\n"
"25,9, and 40,1, alors\n"
"COUNTA(A1:A5) vaut 5.\n"
"@SEEALSO=AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM"

#: ../plugins/fn-stat/functions.c:835
msgid ""
"@FUNCTION=AVERAGE\n"
"@SYNTAX=AVERAGE(value1, value2,...)\n"
"@DESCRIPTION=AVERAGE computes the average of all the values and cells "
"referenced in the argument list.  This is equivalent to the sum of the "
"arguments divided by the count of the arguments.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"AVERAGE(A1:A5) equals 23.2.\n"
"\n"
"@SEEALSO=SUM, COUNT"
msgstr ""
"@FUNCTION=AVERAGE\n"
"@SYNTAX=AVERAGE(valeur1; valeur2;...)\n"
"@DESCRIPTION=Calcule la moyenne des valeurs et des cellules référencées dans "
"la liste des arguments, c'est-à-dire la somme des arguments divisée par le "
"nombre d'arguments.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"AVERAGE(A1:A5) vaut 23,2.\n"
"@SEEALSO=SUM, COUNT"

#: ../plugins/fn-stat/functions.c:869
msgid ""
"@FUNCTION=MIN\n"
"@SYNTAX=MIN(b1, b2, ...)\n"
"@DESCRIPTION=MIN returns the value of the element of the values passed that "
"has the smallest value, with negative numbers considered smaller than "
"positive numbers.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"MIN(A1:A5) equals 11.4.\n"
"\n"
"@SEEALSO=MAX,ABS"
msgstr ""
"@FUNCTION=MIN\n"
"@SYNTAX=MIN(b1; b2;...)\n"
"@DESCRIPTION=MIN renvoie la plus petite valeur parmi les paramètres qui lui "
"ont été passés. Les nombres négatifs sont considérés comme plus petits que "
"les nombres positifs.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"MIN(A1:A5) vaut 11,4.\n"
"\n"
"@SEEALSO=MAX,ABS"

#: ../plugins/fn-stat/functions.c:913
msgid ""
"@FUNCTION=MAX\n"
"@SYNTAX=MAX(b1, b2, ...)\n"
"@DESCRIPTION=MAX returns the value of the element of the values passed that "
"has the largest value, with negative numbers considered smaller than "
"positive numbers.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"MAX(A1:A5) equals 40.1.\n"
"\n"
"@SEEALSO=MIN,ABS"
msgstr ""
"@FUNCTION=MAX\n"
"@SYNTAX=MAX(b1; b2;...)\n"
"@DESCRIPTION=MAX renvoie la plus grande valeur parmi les paramètres qui lui "
"ont été passés. Les nombres négatifs sont considérés comme plus petits que "
"les nombres positifs.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"MAX(A1:A5) vaut 40,1.\n"
"@SEEALSO=MIN,ABS"

#: ../plugins/fn-stat/functions.c:957
msgid ""
"@FUNCTION=SKEW\n"
"@SYNTAX=SKEW(n1, n2, ...)\n"
"@DESCRIPTION=SKEW returns an unbiased estimate for skewness of a "
"distribution.\n"
"\n"
"Note, that this is only meaningful if the underlying distribution really has "
"a third moment.  The skewness of a symmetric (e.g., normal) distribution is "
"zero.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If less than three numbers are given, SKEW returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"SKEW(A1:A5) equals 0.976798268.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEWP,KURT"
msgstr ""
"@FUNCTION=SKEW\n"
"@SYNTAX=SKEW(n1; n2;...)\n"
"@DESCRIPTION=La fonction SKEW renvoie une estimée non biaisée du skewness "
"d'un ensemble de données.\n"
"Ceci n'est significatif que si la distribution sous-jacente a un troisième "
"moment. Le skewness d'une distribution symétrique (normale, par exemple) est "
"nul.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Si moins de 3 nombres sont fournis, SKEW renvoie #DIV/0!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, and 40,1, alors\n"
"SKEW(A1:A5) vaut 0,976798268.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEWP,KURT"

#: ../plugins/fn-stat/functions.c:997
msgid ""
"@FUNCTION=SKEWP\n"
"@SYNTAX=SKEWP(n1, n2, ...)\n"
"@DESCRIPTION=SKEWP returns the population skewness of a data set.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If less than two numbers are given, SKEWP returns #DIV/0! error.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"SKEWP(A1:A5) equals 0.655256198.\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEW,KURTP"
msgstr ""
"@FUNCTION=SKEWP\n"
"@SYNTAX=SKEWP(n1; n2;...)\n"
"@DESCRIPTION=La fonction SKEW renvoie le skewness d'un ensemble de données, "
"calculé sur toute la population.\n"
"Ceci n'est significatif que si la distribution sous-javente a un troisième "
"moment. Le skewness d'une distribution symétrique (normale, par exemple) est "
"nul.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Si moins de 2 nombres sont fournis, SKEWP renvoie #DIV/0!.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEW,KURTP"

#: ../plugins/fn-stat/functions.c:1032
msgid ""
"@FUNCTION=EXPONDIST\n"
"@SYNTAX=EXPONDIST(x,y,cumulative)\n"
"@DESCRIPTION=EXPONDIST function returns the exponential distribution. If the "
"@cumulative boolean is false it will return:\n"
"\n"
"\t@y * exp (-@y*@x),\n"
"\n"
"otherwise it will return\n"
"\n"
"\t1 - exp (-@y*@x).\n"
"\n"
"* If @x < 0 or @y <= 0 this will return an error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EXPONDIST(2,4,0) equals 0.001341851.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=EXPONDIST\n"
"@SYNTAX=EXPONDIST(x;y;cumulatif)\n"
"@DESCRIPTION=La fonction EXPONDIST renvoie une distribution exponentielle. "
"Si le booléen @cumulatif est FAUX, elle renvoie : @y * exp (-@y*@x), sinon "
"elle renvoie 1 - exp (-@y*@x).\n"
"\n"
"* @x<0 ou @y<=0 provoquent une erreur.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"EXPONDIST(2;4;0) vaut 0,001341851.\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:1072
msgid ""
"@FUNCTION=BERNOULLI\n"
"@SYNTAX=BERNOULLI(k,p)\n"
"@DESCRIPTION=BERNOULLI returns the probability p(k) of obtaining @k from a "
"Bernoulli distribution with probability parameter @p.\n"
"\n"
"* If @k != 0 and @k != 1 BERNOULLI returns #NUM! error.\n"
"* If @p < 0 or @p > 1 BERNOULLI returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"BERNOULLI(0,0.5).\n"
"\n"
"@SEEALSO=RANDBERNOULLI"
msgstr ""
"@FUNCTION=BERNOULLI\n"
"@SYNTAX=BERNOULLI(k;p)\n"
"@DESCRIPTION=Renvoie la probabilité p(k) d'obtenir @k dans une distribution "
"de Bernoulli de paramètre @p.\n"
"\n"
"* Si @k != O et @k != 1, BERNOULLI renvoie #NUM!\n"
"* Si @p < O ou @p > 1, BERNOULLI renvoie #NUM!\n"
"\n"
"@SEEALSO=RANDBERNOULLI"

#: ../plugins/fn-stat/functions.c:1117
msgid ""
"@FUNCTION=GAMMALN\n"
"@SYNTAX=GAMMALN(x)\n"
"@DESCRIPTION=GAMMALN function returns the natural logarithm of the gamma "
"function.\n"
"\n"
"* If @x is non-number then GAMMALN returns #VALUE! error.\n"
"* If @x <= 0 then GAMMALN returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GAMMALN(23) equals 48.471181352.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=GAMMALN\n"
"@SYNTAX=GAMMALN(x)\n"
"@DESCRIPTION=La fonction GAMMALN renvoie le logarithme naturel de la "
"fonction gamma en @x.\n"
"\n"
"* Si @x n'est pas un nombre, GAMMALN renvoie l'erreur #VALUE!.\n"
"* Si @x <= 0, GAMMALN renvoie #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"GAMMALN(23) vaut 48,471181352.\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:1157
msgid ""
"@FUNCTION=GAMMADIST\n"
"@SYNTAX=GAMMADIST(x,alpha,beta,cum)\n"
"@DESCRIPTION=GAMMADIST function returns the gamma distribution. If @cum is "
"TRUE, GAMMADIST returns the incomplete gamma function, otherwise it returns "
"the probability mass function.\n"
"\n"
"* If @x < 0 GAMMADIST returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0, GAMMADIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GAMMADIST(1,2,3,0) equals 0.07961459.\n"
"\n"
"@SEEALSO=GAMMAINV"
msgstr ""
"@FUNCTION=GAMMADIST\n"
"@SYNTAX=GAMMADIST(x;alpha;beta;cum)\n"
"@DESCRIPTION=La fonction GAMMADIST renvoie la distribution gamma. Si @cum "
"vaut VRAI, elle renvoie la fonction gamma incomplète, sinon elle renvoie la "
"fonction de masse de probabilité.\n"
"\n"
"* Si @x < 0, @alpha <= 0 ou @beta <= 0, GAMMADIST renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"GAMMADIST(1;2;3;0) vaut 0,07961459.\n"
"\n"
"@SEEALSO=GAMMAINV"

#: ../plugins/fn-stat/functions.c:1198
msgid ""
"@FUNCTION=GAMMAINV\n"
"@SYNTAX=GAMMAINV(p,alpha,beta)\n"
"@DESCRIPTION=GAMMAINV function returns the inverse of the cumulative gamma "
"distribution.\n"
"\n"
"* If @p < 0 or @p > 1 GAMMAINV returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0 GAMMAINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"GAMMAINV(0.34,2,4) equals 4.829093908.\n"
"\n"
"@SEEALSO=GAMMADIST"
msgstr ""
"@FUNCTION=GAMMAINV\n"
"@SYNTAX=GAMMAINV(p;alpha;beta)\n"
"@DESCRIPTION=La fonction GAMMADIST renvoie l'inverse de la distribution "
"gamma cumulée.\n"
"\n"
"* Si @p < 0 ou @p > 1, @alpha <= 0 ou @beta <= 0, la fonction GAMMAINV "
"renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"GAMMAINV(0,34;2;4) vaut 4,829093908.\n"
"\n"
"@SEEALSO=GAMMADIST"

#: ../plugins/fn-stat/functions.c:1236
msgid ""
"@FUNCTION=CHIDIST\n"
"@SYNTAX=CHIDIST(x,dof)\n"
"@DESCRIPTION=CHIDIST function returns the one-tailed probability of the chi-"
"squared distribution. @dof is the number of degrees of freedom.\n"
"\n"
"* If @dof is non-integer it is truncated.\n"
"* If @dof < 1 CHIDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CHIDIST(5.3,2) equals 0.070651213.\n"
"\n"
"@SEEALSO=CHIINV,CHITEST"
msgstr ""
"@FUNCTION=CHIDIST\n"
"@SYNTAX=CHIDIST(x;ddl)\n"
"@DESCRIPTION=La fonction CHIDIST renvoie la distribution de probabilité "
"unilatérale du chi-2, évaluée en @x. @ddl est le nombre de degrés de "
"liberté.\n"
"\n"
"* Si @ddl n'est pas un entier, il est tronqué.\n"
"* Si @ddl < 1, la fonction CHIDIST renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CHIDIST(5,3;2) vaut 0,070651213.\n"
"\n"
"@SEEALSO=CHIINV;CHITEST"

#: ../plugins/fn-stat/functions.c:1272
msgid ""
"@FUNCTION=CHIINV\n"
"@SYNTAX=CHIINV(p,dof)\n"
"@DESCRIPTION=CHIINV function returns the inverse of the one-tailed "
"probability of the chi-squared distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @dof < 1 CHIINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CHIINV(0.98,7) equals 1.564293004.\n"
"\n"
"@SEEALSO=CHIDIST,CHITEST"
msgstr ""
"@FUNCTION=CHIINV\n"
"@SYNTAX=CHIINV(p;ddl)\n"
"@DESCRIPTION=La fonction CHIINV renvoie l'inverse de la distribution "
"unilatérale de probabilité du chi-2, évaluée en @p. @ddl est le nombre de "
"degrés de liberté.\n"
"\n"
"* Si @p < 0 ou @p > 1 ou si @ddl < 1, la fonction CHIINV renvoie l'erreur "
"#NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CHIINV(0,98;7) vaut 1,564293004.\n"
"\n"
"@SEEALSO=CHIDIST;CHITEST"

#: ../plugins/fn-stat/functions.c:1306
msgid ""
"@FUNCTION=CHITEST\n"
"@SYNTAX=CHITEST(actual_range,theoretical_range)\n"
"@DESCRIPTION=CHITEST function returns the test for independence of chi-"
"squared distribution.\n"
"\n"
"@actual_range is a range that contains the observed data points. "
"@theoretical_range is a range that contains the expected values of the data "
"points.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=CHIDIST,CHIINV"
msgstr ""
"@FUNCTION=CHITEST\n"
"@SYNTAX=CHITEST(interv_réel;interv_théorique)\n"
"@DESCRIPTION=La fonction CHITEST effectue un test d'indépendance de "
"distribution du chi-2.\n"
"@interv_réel contient les données observées. @interv_theorique contient les "
"valeurs espérées des données.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@SEEALSO=CHIDIST,CHIINV"

#: ../plugins/fn-stat/functions.c:1401
msgid ""
"@FUNCTION=BETADIST\n"
"@SYNTAX=BETADIST(x,alpha,beta[,a,b])\n"
"@DESCRIPTION=BETADIST function returns the cumulative beta distribution. @a "
"is the optional lower bound of @x and @b is the optional upper bound of @x.\n"
"* If @a is not given, BETADIST uses 0.\n"
"* If @b is not given, BETADIST uses 1.\n"
"* If @x < @a or @x > @b BETADIST returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0, BETADIST returns #NUM! error.\n"
"* If @a >= @b BETADIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BETADIST(0.12,2,3) equals 0.07319808.\n"
"\n"
"@SEEALSO=BETAINV"
msgstr ""
"@FUNCTION=BETADIST\n"
"@SYNTAX=BETADIST(x;alpha;beta[;a;b])\n"
"@DESCRIPTION=La fonction BETADIST renvoie la distribution beta cumulée. @a "
"(resp. @b) est la borne inférieure (resp. supérieure) optionnelle de @x, 0 "
"(resp. 1) par défaut.\n"
"\n"
"* Si @x < @a ou @x > @b, @alpha <= 0, @beta <= 0 ou @a >= @b, BETADIST "
"renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"BETADIST(0,12;2;3) vaut 0,07319808.\n"
"\n"
"@SEEALSO=BETAINV"

#: ../plugins/fn-stat/functions.c:1447
msgid ""
"@FUNCTION=BETAINV\n"
"@SYNTAX=BETAINV(p,alpha,beta[,a,b])\n"
"@DESCRIPTION=BETAINV function returns the inverse of cumulative beta "
"distribution.  @a is the optional lower bound of @x and @b is the optional "
"upper bound of @x.\n"
"\n"
"* If @a is not given, BETAINV uses 0.\n"
"* If @b is not given, BETAINV uses 1.\n"
"* If @p < 0 or @p > 1 BETAINV returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0, BETAINV returns #NUM! error.\n"
"* If @a >= @b BETAINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BETAINV(0.45,1.6,1) equals 0.607096629.\n"
"\n"
"@SEEALSO=BETADIST"
msgstr ""
"@FUNCTION=BETAINV\n"
"@SYNTAX=BETAINV(p;alpha;beta[;a;b])\n"
"@DESCRIPTION=La fonction BETAINV renvoie l'inverse de la distribution beta "
"cumulée. @a (resp. @b) est la borne inférieure (resp. supérieure) "
"optionnelle de @x, 0 (resp. 1) par défaut.\n"
"\n"
"* Si @p < 0 ou @p > 1, @alpha <= 0, @beta <= 0 ou @a >= @b, BETAINV renvoie "
"l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"BETAINV(0,45;1,6;1) vaut 0,607096629.\n"
"\n"
"@SEEALSO=BETADIST"

#: ../plugins/fn-stat/functions.c:1491
#, fuzzy
msgid ""
"@FUNCTION=TDIST\n"
"@SYNTAX=TDIST(x,dof,tails)\n"
"@DESCRIPTION=TDIST function returns the Student's t-distribution. @dof is "
"the degree of freedom and @tails is 1 or 2 depending on whether you want one-"
"tailed or two-tailed distribution.\n"
"@tails = 1 returns the size of the right tail.\n"
"\n"
"* If @dof < 1 TDIST returns #NUM! error.\n"
"* If @tails is neither 1 or 2 TDIST returns #NUM! error.\n"
"* This function is Excel compatible for non-negative @x.\n"
"\n"
"Warning: the parameterization of this function is different from what is "
"used for, e.g., NORMSDIST.  This is a common source of mistakes, but "
"necessary for compatibility.\n"
"\n"
"@EXAMPLES=\n"
"TDIST(2,5,1) equals 0.050969739.\n"
"TDIST(-2,5,1) equals 0.949030261.\n"
"TDIST(0,5,2) equals 1.\n"
"\n"
"@SEEALSO=TINV,TTEST"
msgstr ""
"@FUNCTION=TDIST\n"
"@SYNTAX=TDIST(x;ddl;cÔtés)\n"
"@DESCRIPTION=La fonction TDIST renvoie la distribution T de Student, évaluée "
"en @x. @ddl est le degré de liberté et @cÔtés vaut 1 ou 2, selon que l'on "
"désire une distribution unilatérale ou bilatérale\n"
"\n"
"* Si @ddl < 1, ou @cÔtés différent de 1 et 2, TDIST renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TDIST(2;5;1) vaut 0,050969739.\n"
"\n"
"@SEEALSO=TINV;TTEST"

#: ../plugins/fn-stat/functions.c:1536
#, fuzzy
msgid ""
"@FUNCTION=TINV\n"
"@SYNTAX=TINV(p,dof)\n"
"@DESCRIPTION=TINV function returns the inverse of the two-tailed Student's t-"
"distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @dof < 1 TINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"Warning: the parameterization of this function is different from what is "
"used for, e.g., NORMSINV.  This is a common source of mistakes, but "
"necessary for compatibility.\n"
"\n"
"@EXAMPLES=\n"
"TINV(0.4,32) equals 0.852998454.\n"
"\n"
"@SEEALSO=TDIST,TTEST"
msgstr ""
"@FUNCTION=TINV\n"
"@SYNTAX=TINV(p;ddl)\n"
"@DESCRIPTION=La fonction TINV renvoie l'inverse de la distribution T "
"bilatérale de Student.\n"
"\n"
"* Si @p < 0 ou @p > 1 ou @ddl < 1, TINV renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TINV(0,4;32) vaut 0,852998454.\n"
"\n"
"@SEEALSO=TDIST;TTEST"

#: ../plugins/fn-stat/functions.c:1580
msgid ""
"@FUNCTION=FDIST\n"
"@SYNTAX=FDIST(x,dof1,dof2)\n"
"@DESCRIPTION=FDIST function returns the F probability distribution. @dof1 is "
"the numerator degrees of freedom and @dof2 is the denominator degrees of "
"freedom.\n"
"\n"
"* If @x < 0 FDIST returns #NUM! error.\n"
"* If @dof1 < 1 or @dof2 < 1, FDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FDIST(2,5,5) equals 0.232511319.\n"
"\n"
"@SEEALSO=FINV"
msgstr ""
"@FUNCTION=FDIST\n"
"@SYNTAX=FDIST(x;ddl1;ddl2)\n"
"@DESCRIPTION=La fonction FDIST renvoie la distribution de probabilité F "
"évaluée en @x. @ddl1 est le numérateur du degré de liberté, @ddl2 le "
"dénominateur. \n"
"\n"
"* Si @x < 0, FDIST renvoie l'erreur #NUM!.\n"
"* Si @ddl1 < 1 ou @ddl2 < 1, FDIST renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FDIST(2;5;5) vaut 0,232511319.\n"
"\n"
"@SEEALSO=FINV"

#: ../plugins/fn-stat/functions.c:1617
msgid ""
"@FUNCTION=LANDAU\n"
"@SYNTAX=LANDAU(x)\n"
"@DESCRIPTION=LANDAU returns the probability density p(x) at @x for the "
"Landau distribution using an approximation method. \n"
"@EXAMPLES=\n"
"LANDAU(0.34).\n"
"\n"
"@SEEALSO=RANDLANDAU"
msgstr ""
"@FUNCTION=LANDAU\n"
"@SYNTAX=LANDAU(x)\n"
"@DESCRIPTION=Renvoie la densité de probabilité p(x) en @x pour la "
"distribution de Landau, en utilisant une méthode d'approximation.\n"
"@SEEALSO=RANDLANDAU"

#: ../plugins/fn-stat/functions.c:1762
msgid ""
"@FUNCTION=FINV\n"
"@SYNTAX=FINV(p,dof1,dof2)\n"
"@DESCRIPTION=FINV function returns the inverse of the F probability "
"distribution.\n"
"\n"
"* If @p < 0 or @p > 1 FINV returns #NUM! error.\n"
"* If @dof1 < 1 or @dof2 < 1 FINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FINV(0.2,2,4) equals 2.472135955.\n"
"\n"
"@SEEALSO=FDIST"
msgstr ""
"@FUNCTION=FINV\n"
"@SYNTAX=FINV(p;ddl1;ddl2)\n"
"@DESCRIPTION=La fonction FINV renvoie l'inverse de la distribution de "
"probabilité F. @ddl1 est le numérateur du degré de liberté, @ddl2 le "
"dénominateur.\n"
"\n"
"* Si @p < 0 ou @p > 1, FINV renvoie l'erreur #NUM!.\n"
"* Si @ddl < 1 ou @ddl2 < 1, FINV renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FINV(0,2;2;4) vaut 2,472135955.\n"
"\n"
"@SEEALSO=FDIST"

#: ../plugins/fn-stat/functions.c:1798
msgid ""
"@FUNCTION=BINOMDIST\n"
"@SYNTAX=BINOMDIST(n,trials,p,cumulative)\n"
"@DESCRIPTION=BINOMDIST function returns the binomial distribution. @n is the "
"number of successes, @trials is the total number of independent trials, @p "
"is the probability of success in trials, and @cumulative describes whether "
"to return the sum of the binomial function from 0 to @n.\n"
"\n"
"* If @n or @trials are non-integer they are truncated.\n"
"* If @n < 0 or @trials < 0 BINOMDIST returns #NUM! error.\n"
"* If @n > @trials BINOMDIST returns #NUM! error.\n"
"* If @p < 0 or @p > 1 BINOMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"BINOMDIST(3,5,0.8,0) equals 0.2048.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=BINOMDIST\n"
"@SYNTAX=BINOMDIST(n;essais;p;cumulatif)\n"
"@DESCRIPTION=La fonction BINOMDIST renvoie la distribution binÔmiale. @n est "
"le nombre de succès, @essais est le nombre total d'essais indépendants, @p "
"est la probabilité de succès d'un essai, et @cumulatif indique s'il faut "
"renvoyer la somme de la fonction binÔmiale de 0 à @n.\n"
"* Si @n ou @essais ne sont pas des valeurs entières, elles sont tronquées.\n"
"* Si @n < 0 ou @essais < 0 ou @n > @essais, BINOMDIST renvoie #NUM!.\n"
"* Si @p < 0 ou @p > 1, BINOMDIST renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"BINOMDIST(3;5;0,8;0) vaut 0,2048.\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:1843
msgid ""
"@FUNCTION=CAUCHY\n"
"@SYNTAX=CAUCHY(x,a,cum)\n"
"@DESCRIPTION=CAUCHY returns the Cauchy distribution with scale parameter @a. "
"If @cum is TRUE, CAUCHY returns the cumulative distribution.\n"
"\n"
"* If @a < 0 CAUCHY returns #NUM! error.\n"
"* If @cum != TRUE and @cum != FALSE CAUCHY returns #VALUE! error.\n"
"\n"
"@EXAMPLES=\n"
"CAUCHY(0.43,1,TRUE) returns 0.370735.\n"
"\n"
"@SEEALSO=RANDCAUCHY"
msgstr ""
"@FUNCTION=CAUCHY\n"
"@SYNTAX=CAUCHY(x;a;cum)\n"
"@DESCRIPTION=Renvoie la distribution de Cauchy en @x, avec le paramètre "
"d'échelle @a. Si @cum est VRAI, CAUCHY renvoie la distribution cumulée.\n"
"\n"
"* Si @a < 0, CAUCHY renvoie #NUM!\n"
"* Si @cum != TRUE et @cum != FALSE, CAUCHY renvoie #VALUE!\n"
"\n"
"@SEEALSO=RANDCAUCHY"

#: ../plugins/fn-stat/functions.c:1881
msgid ""
"@FUNCTION=CRITBINOM\n"
"@SYNTAX=CRITBINOM(trials,p,alpha)\n"
"@DESCRIPTION=CRITBINOM function returns the smallest value for which the "
"cumulative is greater than or equal to a given value. @n is the number of "
"trials, @p is the probability of success in trials, and @alpha is the "
"criterion value.\n"
"\n"
"* If @trials is a non-integer it is truncated.\n"
"* If @trials < 0 CRITBINOM returns #NUM! error.\n"
"* If @p < 0 or @p > 1 CRITBINOM returns #NUM! error.\n"
"* If @alpha < 0 or @alpha > 1 CRITBINOM returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CRITBINOM(10,0.5,0.75) equals 6.\n"
"\n"
"@SEEALSO=BINOMDIST"
msgstr ""
"@FUNCTION=CRITBINOM\n"
"@SYNTAX=CRITBINOM(essais;p;alpha)\n"
"@DESCRIPTION=La fonction CRITBINOM renvoie la plus petite valeur pour "
"laquelle le cumul de probabilité est supérieur ou égal à une valeur donnée. "
"@essais est le nombre d'essais, @p la probabilité de succès des essais, et "
"@alpha la valeur du critère. \n"
"\n"
"* Si @essais n'est pas une valeur entière, elle est tronquée.\n"
"* Si @essais < 0, CRITBINOM renvoie l'erreur #NUM!.\n"
"* Si @p < 0 ou @p > 1, CRITBINOM renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CRITBINOM(10;0,5;0,75) vaut 6.\n"
"\n"
"@SEEALSO=BINOMDIST"

#: ../plugins/fn-stat/functions.c:1921
msgid ""
"@FUNCTION=PERMUT\n"
"@SYNTAX=PERMUT(n,k)\n"
"@DESCRIPTION=PERMUT function returns the number of permutations. @n is the "
"number of objects, @k is the number of objects in each permutation.\n"
"\n"
"* If @n = 0 PERMUT returns #NUM! error.\n"
"* If @n < @k PERMUT returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"PERMUT(7,3) equals 210.\n"
"\n"
"@SEEALSO=COMBIN"
msgstr ""
"@FUNCTION=PERMUT\n"
"@SYNTAX=PERMUT(n;k)\n"
"@DESCRIPTION=La fonction PERMUT renvoie le nombre de permutations P(n,k). @n "
"est le nombre d'objets total, @k est le nombre d'objets dans chaque "
"permutation. \n"
"L'exécution de cette fonction sur une chaîne ou une cellule vide renvoie une "
"erreur #NUM!.\n"
"\n"
"* Si @n = 0 ou @n < @k, PERMUT renvoie l'erreur #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"PERMUT(7;3) vaut 210.\n"
"\n"
"@SEEALSO=COMBIN"

#: ../plugins/fn-stat/functions.c:1957
msgid ""
"@FUNCTION=HYPGEOMDIST\n"
"@SYNTAX=HYPGEOMDIST(x,n,M,N[,cumulative])\n"
"@DESCRIPTION=HYPGEOMDIST function returns the hypergeometric distribution. "
"@x is the number of successes in the sample, @n is the number of trials, @M "
"is the number of successes overall, and @N is the population size.\n"
"\n"
"If the optional argument @cumulative is TRUE, the cumulative left tail will "
"be returned.\n"
"\n"
"* If @x,@n,@M or @N is a non-integer it is truncated.\n"
"* If @x,@n,@M or @N < 0 HYPGEOMDIST returns #NUM! error.\n"
"* If @x > @M or @n > @N HYPGEOMDIST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"HYPGEOMDIST(1,2,3,10) equals 0.4666667.\n"
"\n"
"@SEEALSO=BINOMDIST,POISSON"
msgstr ""
"@FUNCTION=HYPGEOMDIST\n"
"@SYNTAX=HYPGEOMDIST(x;n;M;N)\n"
"@DESCRIPTION=La fonction HYPGEOMDIST renvoie la distribution hyper-"
"géométrique. @x est le nombre de succès dans l'échantillon, @n est le nombre "
"d'essais, @M est le nombre de succès total, et @N est la taille de la "
"population.\n"
"\n"
"* Les paramètres non entiers sont tronqués.\n"
"* Si un paramètre est négatif, HYPGEOMDIST renvoie #NUM!\n"
"* Si @x > @M ou @n > @N, HYPGEOMDIST renvoie #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"HYPGEOMDIST(1;2;3;10) vaut 0,4666667.\n"
"\n"
"@SEEALSO=BINOMDIST;POISSON"

#: ../plugins/fn-stat/functions.c:2004
msgid ""
"@FUNCTION=CONFIDENCE\n"
"@SYNTAX=CONFIDENCE(x,stddev,size)\n"
"@DESCRIPTION=CONFIDENCE function returns the confidence interval for a mean. "
"@x is the significance level, @stddev is the population standard deviation, "
"and @size is the size of the sample.\n"
"\n"
"* If @size is non-integer it is truncated.\n"
"* If @size < 0 CONFIDENCE returns #NUM! error.\n"
"* If @size is 0 CONFIDENCE returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CONFIDENCE(0.05,1,33) equals 0.341185936.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=CONFIDENCE\n"
"@SYNTAX=CONFIDENCE(x;écart_type;taille)\n"
"@DESCRIPTION=La fonction CONFIDENCE renvoie l'intervalle de confiance pour "
"une moyenne donnée. @x est le niveau de signification, @écart_type est "
"l'écart-type, et @taille est la taille de l'échantillon.\n"
"\n"
"* Si @taille n'est pas une valeur entière, elle est tronquée.\n"
"* Si @taille < 0, CONFIDENCE renvoie l'erreur #NUM!.\n"
"* Si @taille = 0, CONFIDENCE renvoie l'erreur #DIV/0!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CONFIDENCE(0,05;1;33) vaut 0,341185936.\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:2042
msgid ""
"@FUNCTION=STANDARDIZE\n"
"@SYNTAX=STANDARDIZE(x,mean,stddev)\n"
"@DESCRIPTION=STANDARDIZE function returns a normalized value. @x is the "
"number to be normalized, @mean is the mean of the distribution, @stddev is "
"the standard deviation of the distribution.\n"
"\n"
"* If @stddev is 0 STANDARDIZE returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"STANDARDIZE(3,2,4) equals 0.25.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=STANDARDIZE\n"
"@SYNTAX=STANDARDIZE(x;moyenne;écart_type)\n"
"@DESCRIPTION=La fonction STANDARDIZE renvoie une valeur normalisée. @x est "
"le nombre devant être normalisé, @moyenne est la moyenne de la distribution, "
"@écart_type est son écart-type.\n"
"\n"
"* Si @écart_type = 0, STANDARDIZE renvoie l'erreur #DIV/0!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"STANDARDIZE(3;2;4) vaut 0,25.\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:2079
msgid ""
"@FUNCTION=WEIBULL\n"
"@SYNTAX=WEIBULL(x,alpha,beta,cumulative)\n"
"@DESCRIPTION=WEIBULL function returns the Weibull distribution. If the "
"@cumulative boolean is true it will return:\n"
"\n"
"\t1 - exp (-(@x/@beta)^@alpha),\n"
"\n"
"otherwise it will return\n"
"\n"
"\t(@alpha/@beta^@alpha) * @x^(@alpha-1) * exp(-(@x/@beta^@alpha)).\n"
"\n"
"* If @x < 0 WEIBULL returns #NUM! error.\n"
"* If @alpha <= 0 or @beta <= 0 WEIBULL returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"WEIBULL(3,2,4,0) equals 0.213668559.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=WEIBULL\n"
"@SYNTAX=WEIBULL(x;alpha;beta;cumulatif)\n"
"@DESCRIPTION=La fonction WEIBULL renvoie une distribution de Weibull. Si le "
"booléen @cumulatif vaut VRAI, cette fonction vaut 1 - exp (-(@x/@beta)"
"^@alpha), sinon elle vaut (@alpha/@beta^@alpha) * @x^(@alpha-1) * exp(-(@x/"
"@beta^@alpha)). \n"
"\n"
"* Si @x < 0, @alpha <= 0 ou @beta <= 0, WEIBULL renvoie une erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"WEIBULL(3;2;4;0) vaut 0,213668559.\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:2121
#, fuzzy
msgid ""
"@FUNCTION=NORMDIST\n"
"@SYNTAX=NORMDIST(x,mean,stddev,cumulative)\n"
"@DESCRIPTION=The NORMDIST function returns the value of the probability "
"density function or the cumulative distribution function for the normal "
"distribution with the mean given by @mean, and the standard deviation given "
"by @stddev. If @cumulative is FALSE, NORMDIST returns the value of the "
"probability density function at the value @x. If @cumulative is TRUE, "
"NORMDIST returns the value of the cumulative distribution function at @x.\n"
"\n"
"* If @stddev is 0 NORMDIST returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMDIST(2,1,2,0) equals 0.176032663.\n"
"\n"
"@SEEALSO=POISSON"
msgstr ""
"@FUNCTION=NORMDIST\n"
"@SYNTAX=NORMDIST(x;moyenne;écart_type;cumulatif)\n"
"@DESCRIPTION=La fonction NORMSDIST renvoie la distribution normale, "
"cumulative si @cumulatif est VRAI, évaluée en @x. @moyenne et @écart-type "
"sont les caractéristiques de la distribution.\n"
"\n"
"* Si @écart_type = 0, NORMDIST renvoie l'erreur #DIV/0!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NORMDIST(2;1;2;0) vaut 0,176032663.\n"
"\n"
"@SEEALSO=POISSON"

#: ../plugins/fn-stat/functions.c:2167
msgid ""
"@FUNCTION=NORMINV\n"
"@SYNTAX=NORMINV(p,mean,stddev)\n"
"@DESCRIPTION=NORMINV function returns the inverse of the normal cumulative "
"distribution. @p is the given probability corresponding to the normal "
"distribution, @mean is the arithmetic mean of the distribution, and @stddev "
"is the standard deviation of the distribution.\n"
"\n"
"* If @p < 0 or @p > 1 or @stddev <= 0 NORMINV returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"NORMINV(0.76,2,3) equals 4.118907689.\n"
"\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST"
msgstr ""
"@FUNCTION=NORMINV\n"
"@SYNTAX=NORMINV(p;moyenne;écart_type)\n"
"@DESCRIPTION=La fonction NORMINV renvoie l'inverse de la distribution "
"normale cumulative. @p est la probabilité voulue, @moyenne et @écart_type "
"sont les caractéristiques de la distribution.\n"
"\n"
"* Si @p < 0 ou @p > 1 ou @écart_type <= 0, NORMINV renvoie l'erreur #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"NORMINV(0,76;2;3) vaut 4,118907689.?\n"
"@SEEALSO=NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST"

#: ../plugins/fn-stat/functions.c:2206
msgid ""
"@FUNCTION=KURT\n"
"@SYNTAX=KURT(n1, n2, ...)\n"
"@DESCRIPTION=KURT returns an unbiased estimate of the kurtosis of a data "
"set.\n"
"Note, that this is only meaningful if the underlying distribution really has "
"a fourth moment.  The kurtosis is offset by three such that a normal "
"distribution will have zero kurtosis.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If fewer than four numbers are given or all of them are equal KURT returns "
"#DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"KURT(A1:A5) equals 1.234546305.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEW,KURTP"
msgstr ""
"@FUNCTION=KURT\n"
"@SYNTAX=KURT(n1; n2;...)\n"
"@DESCRIPTION=La fonction KURT renvoie une estimation non biaisée du kurtosis "
"d'un ensemble de données.\n"
"Ceci n'est significatif que si la distribution sous-javente a un quatrième "
"moment. Le kurtosis est décalé de trois, si bien qu'une distribution normale "
"a un kurtosis nul.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Si moins de 4 nombres sont donnés, ou s'ils sont tous égaux, KURT renvoie "
"#DIV/0!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"KURT(A1:A5) vaut 1,234546305.\n"
"\n"
"@SEEALSO=AVERAGE,VAR,SKEW,KURTP"

#: ../plugins/fn-stat/functions.c:2247
msgid ""
"@FUNCTION=KURTP\n"
"@SYNTAX=KURTP(n1, n2, ...)\n"
"@DESCRIPTION=KURTP returns the population kurtosis of a data set.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If fewer than two numbers are given or all of them are equal KURTP returns "
"#DIV/0! error.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"KURTP(A1:A5) equals -0.691363424.\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEWP,KURT"
msgstr ""
"@FUNCTION=KURTP\n"
"@SYNTAX=KURTP(n1; n2;...)\n"
"@DESCRIPTION=La fonction KURTP renvoie le kurtosis d'un ensemble de données, "
"calculé sur toute la population.\n"
"Ceci n'est significatif que si la distribution sous-javente a un quatrième "
"moment. Le kurtosis est décalé de trois, si bien qu'une distribution normale "
"a un kurtosis nul.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Si moins de 2 nombres sont donnés, ou s'ils sont tous égaux, KURTP renvoie "
"#DIV/0!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"KURTP(A1:A5) vaut -0,691363424.\n"
"\n"
"@SEEALSO=AVERAGE,VARP,SKEW,KURT"

#: ../plugins/fn-stat/functions.c:2282
msgid ""
"@FUNCTION=AVEDEV\n"
"@SYNTAX=AVEDEV(n1, n2, ...)\n"
"@DESCRIPTION=AVEDEV returns the average of the absolute deviations of a data "
"set from their mean.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"AVEDEV(A1:A5) equals 7.84.\n"
"\n"
"@SEEALSO=STDEV"
msgstr ""
"@FUNCTION=AVEDEV\n"
"@SYNTAX=AVEDEV(n1; n2;...)\n"
"@DESCRIPTION=La fonction AVEDEV renvoie la moyenne des écarts en valeur "
"absolue d'un ensemble de données à leur moyenne. \n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"AVEDEV(A1:A5) vaut 7.,84.\n"
"\n"
"@SEEALSO=STDEV"

#: ../plugins/fn-stat/functions.c:2315
msgid ""
"@FUNCTION=DEVSQ\n"
"@SYNTAX=DEVSQ(n1, n2, ...)\n"
"@DESCRIPTION=DEVSQ returns the sum of squares of deviations of a data set "
"from the sample mean.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"DEVSQ(A1:A5) equals 470.56.\n"
"\n"
"@SEEALSO=STDEV"
msgstr ""
"@FUNCTION=DEVSQ\n"
"@SYNTAX=DEVSQ(n1; n2;...)\n"
"@DESCRIPTION=La fonction DEVSQ renvoie la somme des carrés des écarts d'un "
"ensemble de données à sa moyenne.\n"
"\n"
"* Les chaînes et les cellules vides sont ignorées.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"DEVSQ(A1:A5) vaut 470,56.\n"
"@SEEALSO=STDEV"

#: ../plugins/fn-stat/functions.c:2350
msgid ""
"@FUNCTION=FISHER\n"
"@SYNTAX=FISHER(x)\n"
"@DESCRIPTION=FISHER function returns the Fisher transformation at @x.\n"
"\n"
"* If @x is not a number, FISHER returns #VALUE! error.\n"
"* If @x <= -1 or @x >= 1, FISHER returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FISHER(0.332) equals 0.345074339.\n"
"\n"
"@SEEALSO=SKEW"
msgstr ""
"@FUNCTION=FISHER\n"
"@SYNTAX=FISHER(x)\n"
"@DESCRIPTION=La fonction FISHER renvoie la transformation de Fisher en @x.\n"
"\n"
"* Si @x n'est pas un entier, FISHER renvoie l'erreur #VALEUR!.\n"
"* Si @x <= -1 ou @x >=1 , FISHER renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FISHER(0,332) vaut 0,345074339.\n"
"\n"
"@SEEALSO=SKEW"

#: ../plugins/fn-stat/functions.c:2388
msgid ""
"@FUNCTION=POISSON\n"
"@SYNTAX=POISSON(x,mean,cumulative)\n"
"@DESCRIPTION=POISSON function returns the Poisson distribution. @x is the "
"number of events, @mean is the expected numeric value @cumulative describes "
"whether to return the sum of the Poisson function from 0 to @x.\n"
"\n"
"* If @x is a non-integer it is truncated.\n"
"* If @x < 0 POISSON returns #NUM! error.\n"
"* If @mean <= 0 POISSON returns the #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"POISSON(3,6,0) equals 0.089235078.\n"
"\n"
"@SEEALSO=NORMDIST, WEIBULL"
msgstr ""
"@FUNCTION=POISSON\n"
"@SYNTAX=POISSON(x;moyenne;cumulatif)\n"
"@DESCRIPTION=La fonction POISSON renvoie une distribution de Poisson où @x "
"est le nombre d'événements, @moyenne est la moyenne, @cumulatif définit si "
"la fonction renvoie la valeur ponctuelle ou la somme de 0 à @x de la "
"fonction de Poisson.\n"
"\n"
"* Si @x n'est pas une valeur entière, elle est tronquée.\n"
"* Si @x <= 0, POISSON renvoie l'erreur #NUM!.\n"
"* Si @moyenne <= 0, POISSON renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"POISSON(3;6;0) vaut 0,089235078.\n"
"\n"
"@SEEALSO=NORMDIST, WEIBULL"

#: ../plugins/fn-stat/functions.c:2430
msgid ""
"@FUNCTION=PEARSON\n"
"@SYNTAX=PEARSON(array1,array2)\n"
"@DESCRIPTION=PEARSON returns the Pearson correlation coefficient of two data "
"sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=INTERCEPT,LINEST,RSQ,SLOPE,STEYX"
msgstr ""
"@FUNCTION=PEARSON\n"
"@SYNTAX=PEARSON(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction PEARSON renvoie le coefficient de corrélation de "
"Pearson de deux ensembles de données.\n"
"\n"
"* Les chaînes et les cellules vides sont ignorées.\n"
"* Cette fonction est compatible avec Excel.\n"
"@SEEALSO=INTERCEPT,LINEST,RSQ,SLOPE,STEYX"

#: ../plugins/fn-stat/functions.c:2458
msgid ""
"@FUNCTION=RSQ\n"
"@SYNTAX=RSQ(array1,array2)\n"
"@DESCRIPTION=RSQ returns the square of the Pearson correlation coefficient "
"of two data sets.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=CORREL,COVAR,INTERCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND"
msgstr ""
"@FUNCTION=RSQ\n"
"@SYNTAX=RSQ(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction RSQ renvoie le carré du coefficient de corrélation "
"de Pearson des deux ensembles de données.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Cette fonction est compatible avec Excel.\n"
"@SEEALSO=CORREL,COVAR,INTERPCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND"

#: ../plugins/fn-stat/functions.c:2492
msgid ""
"@FUNCTION=MEDIAN\n"
"@SYNTAX=MEDIAN(n1, n2, ...)\n"
"@DESCRIPTION=MEDIAN returns the median of the given data set.\n"
"\n"
"* Strings and empty cells are simply ignored.\n"
"* If even numbers are given MEDIAN returns the average of the two numbers in "
"the middle.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"MEDIAN(A1:A5) equals 21.3.\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SSMEDIAN,SUM"
msgstr ""
"@FUNCTION=MEDIAN\n"
"@SYNTAX=MEDIAN(n1; n2;...)\n"
"@DESCRIPTION=La fonction MEDIAN renvoie la médiane d'un ensemble de "
"données.\n"
"\n"
"* Les chaînes et les cellules vides sont simplement ignorées.\n"
"* Si un nombre pair de valeurs est fourni, MEDIAN renvoie la moyenne des "
"deux nombres du milieu.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"MEDIAN(A1:A5) vaut 21,3.\n"
"\n"
"@SEEALSO=AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SUM"

#: ../plugins/fn-stat/functions.c:2528
msgid ""
"@FUNCTION=SSMEDIAN\n"
"@SYNTAX=SSMEDIAN(array[,interval)]\n"
"@DESCRIPTION=The SSMEDIAN function returns the median for grouped data as "
"commonly determined in the social sciences. The data points given in @array "
"are assumed to be the result of grouping data into intervals of length "
"@interval\n"
"\n"
"* If @interval is not given, SSMEDIAN uses 1.\n"
"* If @array is empty, SSMEDIAN returns #NUM! error.\n"
"* If @interval <= 0, SSMEDIAN returns #NUM! error.\n"
"* SSMEDIAN does not check whether the data points are at least @interval "
"apart.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, A3 contain numbers 7, 8, 8.  Then\n"
"SSMEDIAN(A1:A3, 1) equals 7.75.\n"
"\n"
"@SEEALSO=MEDIAN"
msgstr ""
"@FUNCTION=SSMEDIAN\n"
"@SYNTAX=SSMEDIAN(tableau[;intervalle])\n"
"\n"
"@DESCRIPTION=La fonction SSMEDIAN renvoie la médiane d'un ensemble de\n"
"données, telle qu'elle est généralement calculée en sciences\n"
"sociales. Les points de données de @tableau sont supposés résulter du\n"
"regroupement des données en intervalles de longueur @intervalle.\n"
"\n"
"* Si @tableau est vide, SSMEDIAN renvoie #NUM!.\n"
"* Si @intervalle est omis, SSMEDIAN utilise 1.\n"
"* Si @intervalle est négatif ou nul, SSMEDIAN renvoie #NUM!\n"
"* SSMEDIAN ne verifie pas si les points sont effectivement espacés de "
"@intervalle.\n"
"\n"
"@EXAMPLES=\n"
"Si A1, A2, A3 contiennent 7, 8 et 8, alors\n"
"SSMEDIAN(A1:A3;1) vaut 7,75.\n"
"\n"
"@SEEALSO=MEDIAN"

#: ../plugins/fn-stat/functions.c:2634
#, fuzzy
msgid ""
"@FUNCTION=LARGE\n"
"@SYNTAX=LARGE(n, k)\n"
"@DESCRIPTION=LARGE returns the k-th largest value in a data set.\n"
"\n"
"* If data set is empty LARGE returns #NUM! error.\n"
"* If @k <= 0 or @k is greater than the number of data items given LARGE "
"returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"LARGE(A1:A5,2) equals 25.9.\n"
"LARGE(A1:A5,4) equals 17.3.\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,SMALL"
msgstr ""
"@FUNCTION=LARGE\n"
"@SYNTAX=LARGE(n1; n2;...; k)\n"
"@DESCRIPTION=LARGE renvoie la k-ième plus grande valeur d'un ensemble de "
"données. \n"
"\n"
"* Si l'ensemble de données est vide, LARGE renvoie l'erreur #NUM!.\n"
"* Si k <= 0 ou si k est plus grand que le nombre d'éléments de l'ensemble, "
"LARGE renvoie également #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"LARGE(A1:A5;2) vaut 25,9.\n"
"LARGE(A1:A5;4) vaut 17,3.\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,SMALL"

#: ../plugins/fn-stat/functions.c:2685
#, fuzzy
msgid ""
"@FUNCTION=SMALL\n"
"@SYNTAX=SMALL(n, k)\n"
"@DESCRIPTION=SMALL returns the k-th smallest value in a data set.\n"
"\n"
"* If data set is empty SMALL returns #NUM! error.\n"
"* If @k <= 0 or @k is greater than the number of data items given SMALL "
"returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"SMALL(A1:A5,2) equals 17.3.\n"
"SMALL(A1:A5,4) equals 25.9.\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,LARGE"
msgstr ""
"@FUNCTION=SMALL\n"
"@SYNTAX=SMALL(n1; n2;...; k)\n"
"@DESCRIPTION=SMALL renvoie la k-ième plus petite valeur d'un ensemble de "
"données. \n"
"\n"
"* Si l'ensemble de données est vide, SMALL renvoie l'erreur #NUM!.\n"
"* Si k <= 0 ou si k est plus grand que le nombre d'éléments de l'ensemble, "
"SMALL renvoie également #NUM!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, alors\n"
"SMALL(A1:A5;2) vaut 17,3.\n"
"SMALL(A1:A5;4) vaut 25,9.\n"
"\n"
"@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,LARGE"

#: ../plugins/fn-stat/functions.c:2762
msgid ""
"@FUNCTION=PROB\n"
"@SYNTAX=PROB(x_range,prob_range,lower_limit[,upper_limit])\n"
"@DESCRIPTION=PROB function returns the probability that values in a range or "
"an array are between two limits. If @upper_limit is not given, PROB returns "
"the probability that values in @x_range are equal to @lower_limit.\n"
"\n"
"* If the sum of the probabilities in @prob_range is not equal to 1 PROB "
"returns #NUM! error.\n"
"* If any value in @prob_range is <=0 or > 1, PROB returns #NUM! error.\n"
"* If @x_range and @prob_range contain a different number of data entries, "
"PROB returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=BINOMDIST,CRITBINOM"
msgstr ""
"@FUNCTION=PROB\n"
"@SYNTAX=PROB(interv_x;interv_prob;limite_inf[;limite_sup])\n"
"@DESCRIPTION=La fonction PROB renvoie la probabilité que les valeurs dans un "
"intervalle ou un tableau soient situées entre deux limites. Si @limite_sup "
"n'est pas donnée, PROB renvoie la probabilité que les valeurs dans @interv_x "
"soient égales à @limite_inf.\n"
"\n"
"* Si la somme des probabilités dans @interv_prob n'est pas égale à 1, PROB "
"renvoie l'erreur #NUM!.\n"
"* Si une des valeurs de @interv_prob est <=0 ou >1, PROB renvoie l'erreur "
"#NUM!.\n"
"* Si @interv_x et @interv_prob contiennent un nombre différent de données, "
"PROB renvoie l'erreur #N/A!. \n"
"* Cette fonction est compatible avec Excel.\n"
"@SEEALSO=BINOMDIST,CRITBINOM"

#: ../plugins/fn-stat/functions.c:2857
msgid ""
"@FUNCTION=STEYX\n"
"@SYNTAX=STEYX(known_y's,known_x's)\n"
"@DESCRIPTION=STEYX function returns the standard error of the predicted y-"
"value for each x in the regression.\n"
"\n"
"* If @known_y's and @known_x's are empty or have a different number of "
"arguments then STEYX returns #N/A error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"STEYX(A1:A5,B1:B5) equals 1.101509979.\n"
"\n"
"@SEEALSO=PEARSON,RSQ,SLOPE"
msgstr ""
"@FUNCTION=STEYX\n"
"@SYNTAX=STEYX(y_connus;x_connus)\n"
"@DESCRIPTION=La fonction STEYX renvoie l'erreur moyenne dans la prédiction "
"des @y pour chaque valeur de @x dans la régression.\n"
"\n"
"* Si @y_connus et @x_connus sont vides ou possèdent un nombre différent "
"d'arguments, alors STEYX renvoie l'erreur #N/A!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"STEYX(A1:A5;B1:B5) vaut 1,101509979.\n"
"\n"
"@SEEALSO=PEARSON,RSQ,SLOPE"

#: ../plugins/fn-stat/functions.c:3015
msgid ""
"@FUNCTION=ZTEST\n"
"@SYNTAX=ZTEST(ref,x)\n"
"@DESCRIPTION=ZTEST returns the two-tailed probability of a z-test.\n"
"\n"
"@ref is the data set and @x is the value to be tested.\n"
"\n"
"* If @ref contains less than two data items ZTEST returns #DIV/0! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"ZTEST(A1:A5,20) equals 0.254717826.\n"
"\n"
"@SEEALSO=CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE"
msgstr ""
"@FUNCTION=ZTEST(ref,x)\n"
"@SYNTAX=ZTEST(réf;x)\n"
"@ESCRIPTION=La fonction ZTEST renvoie la probabilité bilatérale d'un test Z. "
"Le test Z génère une cote centrée réduite de @x pour la série de données "
"@réf, et renvoie la probabilité bilatérale de la loi normale.\n"
"\n"
"* Si @réf contient moins de deux éléments, ZTEST renvoie l'erreur #DIV/0!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"ZTEST(A1:A5;20) vaut 0,254717826.\n"
"\n"
"@SEEALSO=CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE"

#: ../plugins/fn-stat/functions.c:3071
msgid ""
"@FUNCTION=AVERAGEA\n"
"@SYNTAX=AVERAGEA(number1,number2,...)\n"
"@DESCRIPTION=AVERAGEA returns the average of the given arguments.  Numbers, "
"text and logical values are included in the calculation too. If the cell "
"contains text or the argument evaluates to FALSE, it is counted as value "
"zero (0).  If the argument evaluates to TRUE, it is counted as one (1).  "
"Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"AVERAGEA(A1:A5) equals 18.94.\n"
"\n"
"@SEEALSO=AVERAGE"
msgstr ""
"@FUNCTION=AVERAGEA\n"
"@SYNTAX=AVERAGEA(valeur1;valeur2;...)\n"
"@DESCRIPTION=La fonction AVERAGEA renvoie la moyenne de ses arguments. Les "
"nombres, le texte, et les valeurs logiques sont inclus également dans le "
"calcul. Si la cellule contient du texte, ou si l'argument est évalué à FAUX, "
"il est compté comme la valeur zéro (0). Si l'argument est évalué à VRAI, il "
"est compté comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent\n"
"11,4, 17,3, \"rien\", 25,9, et 40,1. Alors,\n"
"AVERAGEA(A1:A5) vaut 18,94.\n"
"\n"
"@SEEALSO=AVERAGE"

#: ../plugins/fn-stat/functions.c:3109
msgid ""
"@FUNCTION=MAXA\n"
"@SYNTAX=MAXA(number1,number2,...)\n"
"@DESCRIPTION=MAXA returns the largest value of the given arguments.  "
"Numbers, text and logical values are included in the calculation too. If the "
"cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"MAXA(A1:A5) equals 40.1.\n"
"\n"
"@SEEALSO=MAX,MINA"
msgstr ""
"@FUNCTION=MAXA\n"
"@SYNTAX=MAXA(valeur1;valeur2;...)\n"
"@DESCRIPTION=MAXA renvoie le maximum de ses arguments. Les nombres, le "
"texte, et les valeurs logiques sont inclus également dans le calcul. Si la "
"cellule contient du texte ou si l'argument est évalué à FAUX, il est compté "
"comme la valeur zéro (0). Si l'argument est évalué à VRAI, il est compté "
"comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent\n"
"11,4, 17,3, \"rien\", 25,9, et 40,1. Alors,\n"
"MAXA(A1:A5) vaut 40,1.\n"
"\n"
"@SEEALSO=MAX,MINA"

#: ../plugins/fn-stat/functions.c:3147
msgid ""
"@FUNCTION=MINA\n"
"@SYNTAX=MINA(number1,number2,...)\n"
"@DESCRIPTION=MINA returns the smallest value of the given arguments.  "
"Numbers, text and logical values are included in the calculation too. If the "
"cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"MINA(A1:A5) equals 0.\n"
"\n"
"@SEEALSO=MIN,MAXA"
msgstr ""
"@FUNCTION=MAXA\n"
"@SYNTAX=MAXA(valeur1;valeur2;...)\n"
"@DESCRIPTION=MAXA renvoie le maximum de ses arguments. Les nombres, le "
"texte, et les valeurs logiques sont inclus également dans le calcul. Si la "
"cellule contient du texte ou si l'argument est évalué à FAUX, il est compté "
"comme la valeur zéro (0). Si l'argument est évalué à VRAI, il est compté "
"comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent\n"
"11,4, 17,3, \"rien\", 25,9, et 40,1. Alors,\n"
"MAXA(A1:A5) vaut 40,1.\n"
"\n"
"@SEEALSO=MAX,MINA"

#: ../plugins/fn-stat/functions.c:3185
msgid ""
"@FUNCTION=VARA\n"
"@SYNTAX=VARA(number1,number2,...)\n"
"@DESCRIPTION=VARA calculates sample variance of the given sample.\n"
"To get the true variance of a complete population use VARPA.\n"
"VARA is also known as the N-1-variance.\n"
"Under reasonable conditions, it is the maximum-likelihood estimator for the "
"true variance.\n"
"Numbers, text and logical values are included in the calculation too. If the "
"cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"VARA(A1:A5) equals 228.613.\n"
"\n"
"@SEEALSO=VAR,VARPA"
msgstr ""
"$@FUNCTION=VARA\n"
"@SYNTAX=VARA(valeur1;valeur2;...)\n"
"@DESCRIPTION=VARA renvoie la variance calculée sur un échantillon. Les "
"nombres, le texte, et les valeurs logiques sont inclus également dans le "
"calcul. Si la cellule contient du texte ou si l'argument est évalué à FAUX, "
"il est compté comme la valeur zéro (0). Si l'argument est évalué à VRAI, il "
"est compté comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent\n"
"11,4, 17,3, \"rien\", 25,9, et 40,1. Alors,\n"
"VARA(A1:A5) vaut 228,613.\n"
"\n"
"@SEEALSO=VAR,VARPA"

#: ../plugins/fn-stat/functions.c:3229
msgid ""
"@FUNCTION=VARPA\n"
"@SYNTAX=VARPA(number1,number2,...)\n"
"@DESCRIPTION=VARPA calculates the variance of an entire population.\n"
"VARPA is also known as the N-variance.\n"
"Numbers, text and logical values are included in the calculation too.  If "
"the cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"VARPA(A1:A5) equals 182.8904.\n"
"\n"
"@SEEALSO=VARA,VARP"
msgstr ""
"@FUNCTION=VARPA\n"
"@SYNTAX=VARPA(valeur1;valeur2,...)\n"
"@DESCRIPTION=VARPA renvoie la variance calculée sur la population complète. "
"Les nombres, le texte, et les valeurs logiques sont inclus également dans le "
"calcul. Si la cellule contient du texte ou si l'argument est évalué à FAUX, "
"il est compté comme la valeur zéro (0). Si l'argument est évalué à VRAI, il "
"est compté comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3, \"rien\", 25,9, et "
"40,1, alors,\n"
"VARPA(A1:A5) vaut 182,8904.\n"
"\n"
"@SEEALSO=VARP"

#: ../plugins/fn-stat/functions.c:3268
msgid ""
"@FUNCTION=STDEVA\n"
"@SYNTAX=STDEVA(number1,number2,...)\n"
"@DESCRIPTION=STDEVA returns the sample standard deviation of the given "
"sample.\n"
"To obtain the population standard deviation of a whole population use "
"STDEVPA.\n"
"STDEVA is also known as the N-1-standard deviation.\n"
"Under reasonable conditions, it is the maximum-likelihood estimator for the "
"true population standard deviation.\n"
"Numbers, text and logical values are included in the calculation too.  If "
"the cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"STDEVA(A1:A5) equals 15.119953704.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"
msgstr ""
"@FUNCTION=STDEVA\n"
"@SYNTAX=STDEVA(valeur1;valeur2;...)\n"
"@DESCRIPTION=STDEVA renvoie l'écart-type calculé sur un échantillon. Les "
"nombres, le texte, et les valeurs logiques sont inclus également dans le "
"calcul. Si la cellule contient du texte ou si l'argument est évalué à FAUX, "
"il est compté comme la valeur zéro (0). Si l'argument est évalué à VRAI, il "
"est compté comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3, \"rien\", 25,9, et "
"40,1, alors,\n"
"STDEVA(A1:A5) vaut 15,119953704.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"

#: ../plugins/fn-stat/functions.c:3313
msgid ""
"@FUNCTION=STDEVPA\n"
"@SYNTAX=STDEVPA(number1,number2,...)\n"
"@DESCRIPTION=STDEVPA returns the population standard deviation of an entire "
"population.\n"
"This is also known as the N-standard deviation\n"
"Numbers, text and logical values are included in the calculation too.  If "
"the cell contains text or the argument evaluates to FALSE, it is counted as "
"value zero (0).  If the argument evaluates to TRUE, it is counted as one "
"(1).  Note that empty cells are not counted.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers and strings "
"11.4, 17.3, \"missing\", 25.9, and 40.1.  Then\n"
"STDEVPA(A1:A5) equals 13.523697719.\n"
"\n"
"@SEEALSO=STDEVA,STDEVP"
msgstr ""
"@FUNCTION=STDEVPA\n"
"@SYNTAX=STDEVPA(valeur1;valeur2;...)\n"
"@DESCRIPTION=STDEVPA renvoie l'écart-type calculé sur la population entière. "
"Les nombres, le texte, et les valeurs logiques sont inclus également dans le "
"calcul. Si la cellule contient du texte ou si l'argument est évalué à FAUX, "
"il est compté comme la valeur zéro (0). Si l'argument est évalué à VRAI, il "
"est compté comme la valeur un (1). Les cellules vides ne sont pas comptées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3, \"rien\", 25,9, et "
"40,1, alors,\n"
"STDEVPA(A1:A5) vaut 13,523697719.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"

#: ../plugins/fn-stat/functions.c:3353
msgid ""
"@FUNCTION=PERCENTRANK\n"
"@SYNTAX=PERCENTRANK(array,x[,significance])\n"
"@DESCRIPTION=PERCENTRANK function returns the rank of a data point in a data "
"set.  @array is the range of numeric values, @x is the data point which you "
"want to rank, and the optional @significance specifies the number of "
"significant digits for the returned value, truncating the remainder.  If "
"@significance is omitted, PERCENTRANK uses three digits.\n"
"\n"
"* If @array contains no data points, PERCENTRANK returns #NUM! error.\n"
"* If @significance is less than one, PERCENTRANK returns #NUM! error.\n"
"* If @x exceeds the largest value or is less than the smallest value in "
"@array, PERCENTRANK returns #NUM! error.\n"
"* If @x does not match any of the values in @array or @x matches more than "
"once, PERCENTRANK interpolates the returned value.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL"
msgstr ""
"@FUNCTION=PERCENTRANK\n"
"@SYNTAX=PERCENTRANK(tableau;x[; précision])\n"
"@DESCRIPTION=La fonction PERCENTRANK renvoie le rang d'une donnée dans un "
"ensemble de données. @tableau est l'intervalle de valeurs numériques, @x est "
"la donnée à classer, et le paramètre optionnel @précision identifie le "
"nombre de chiffres significatifs pour la valeur renvoyée (3 par défaut).\n"
"\n"
"* Si @tableau ne contient pas de données, PERCENTRANK renvoie l'erreur "
"#NUM!.\n"
"* Si @précision < 1, PERCENTRANK renvoie l'erreur #NUM!.\n"
"* Si @x est en-dehors des valeurs du tableau, PERCENTRANK renvoie #NUM!\n"
"* Si @x ne correspond à aucune des valeurs de @tableau ou bien si @x "
"correspond à plusieurs valeurs, la valeur renvoyée est une interpolation.\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL"

#: ../plugins/fn-stat/functions.c:3466
msgid ""
"@FUNCTION=PERCENTILE\n"
"@SYNTAX=PERCENTILE(array,k)\n"
"@DESCRIPTION=PERCENTILE function returns the 100*@k-th percentile of the "
"given data points (that is, a number x such that a fraction @k of the data "
"points are less than x).\n"
"\n"
"* If @array is empty, PERCENTILE returns #NUM! error.\n"
"* If @k < 0 or @k > 1, PERCENTILE returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"PERCENTILE(A1:A5,0.42) equals 20.02.\n"
"\n"
"@SEEALSO=QUARTILE"
msgstr ""
"@FUNCTION=PERCENTILE\n"
"@SYNTAX=PERCENTILE(tableau;k)\n"
"@DESCRIPTION=La fonction PERCENTILE renvoie le @k-ième centile des données "
"de @tableau, c'est-à-dire le nombre x tel que la fraction @k des points de "
"@tableau sont inférieurs à x.\n"
"\n"
"* Si @tableau est vide, PERCENTILE renvoie #NUM!.\n"
"* Si @k < 0 ou @k > 1, PERCENTILE renvoie #NUM!\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, alors\n"
"PERCENTILE(A1:A5;0,42) vaut 20,02.\n"
"\n"
"@SEEALSO=QUARTILE"

#: ../plugins/fn-stat/functions.c:3518
msgid ""
"@FUNCTION=QUARTILE\n"
"@SYNTAX=QUARTILE(array,quart)\n"
"@DESCRIPTION=QUARTILE function returns the quartile of the given data "
"points.\n"
"\n"
"If @quart is equal to: QUARTILE returns:\n"
"0                      the smallest value of @array.\n"
"1                      the first quartile\n"
"2                      the second quartile\n"
"3                      the third quartile\n"
"4                      the largest value of @array.\n"
"\n"
"* If @array is empty, QUARTILE returns #NUM! error.\n"
"* If @quart < 0 or @quart > 4, QUARTILE returns #NUM! error.\n"
"* If @quart is not an integer, it is truncated.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1.  Then\n"
"QUARTILE(A1:A5,1) equals 17.3.\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,SMALL"
msgstr ""
"@FUNCTION=QUARTILE\n"
"@SYNTAX=QUARTILE(tableau;quart)\n"
"@DESCRIPTION=La fonction QUARTILE renvoie le quartile d'une série de "
"données.\n"
"Si @quart vaut:        QUARTILE renvoie:\n"
"0                      la valeur minimale de @tableau\n"
"1                      le premier quartile (25ème centile)\n"
"2                      le deuxième quartile (50ème centile)\n"
"3                      le troisième quartile (75ème centile)\n"
"4                      la valeur maximale de @tableau\n"
"\n"
"* Si @tableau est vide, QUARTILE renvoie #NUM!.\n"
"* Si @quart < 0 ou @quart > 4, QUARTILE renvoie #NUM!.\n"
"* Si @quart n'est pas entier, il est tronqué.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1 :\n"
"QUARTILE(A1:A5;1) vaut 17.3.\n"
"\n"
"@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,SMALL"

#: ../plugins/fn-stat/functions.c:3577
msgid ""
"@FUNCTION=FTEST\n"
"@SYNTAX=FTEST(array1,array2)\n"
"@DESCRIPTION=FTEST function returns the two-tailed probability that the "
"variances in the given two data sets are not significantly different.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"FTEST(A1:A5,B1:B5) equals 0.510815017.\n"
"\n"
"@SEEALSO=FDIST,FINV"
msgstr ""
"@FUNCTION=FTEST\n"
"@SYNTAX=FTEST(tableau1;tableau2)\n"
"@DESCRIPTION=La fonction FTEST renvoie la probabilité, dans une distribution "
"F bilatérale, que les variances dans les deux différents ensembles de "
"données ne soient pas significativement différentes.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, et que B1, "
"B2,... B5 contiennent 23,2, 25,8, 29,9, 33,5, et 42,7, alors\n"
"FTEST(A1:A5;B1:B5) vaut 0,510815017.\n"
"@SEEALSO=FDIST,FINV"

#: ../plugins/fn-stat/functions.c:3642
msgid ""
"@FUNCTION=TTEST\n"
"@SYNTAX=TTEST(array1,array2,tails,type)\n"
"@DESCRIPTION=TTEST function returns the probability of a Student's t-Test. \n"
"@array1 is the first data set and @array2 is the second data set.  If @tails "
"is one, TTEST uses the one-tailed distribution and if @tails is two, TTEST "
"uses the two-tailed distribution.  @type determines the kind of the test:\n"
"\n"
"\t1  Paired test\n"
"\t2  Two-sample equal variance\n"
"\t3  Two-sample unequal variance\n"
"\n"
"* If the data sets contain a different number of data points and the test is "
"paired (@type one), TTEST returns the #N/A error.\n"
"* @tails and @type are truncated to integers.\n"
"* If @tails is not one or two, TTEST returns #NUM! error.\n"
"* If @type is any other than one, two, or three, TTEST returns #NUM! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"TTEST(A1:A5,B1:B5,1,1) equals 0.003127619.\n"
"TTEST(A1:A5,B1:B5,2,1) equals 0.006255239.\n"
"TTEST(A1:A5,B1:B5,1,2) equals 0.111804322.\n"
"TTEST(A1:A5,B1:B5,1,3) equals 0.113821797.\n"
"\n"
"@SEEALSO=FDIST,FINV"
msgstr ""
"@FUNCTION=TTEST\n"
"@SYNTAX=TTEST(tableau1;tableau2;cÔtés;type)\n"
"@DESCRIPTION=La fonction TTEST renvoie la probabilité associée à un test T "
"de Student. \n"
"@tableau1 est le premier ensemble de données, @tableau2 le second. Si @cÔtés "
"vaut un, TTEST utilise une distribution unilatérale, et s'il vaut deux, une "
"distribution bilatérale. @type détermine le type de test :\n"
"\n"
"1 Sur des observations pairées\n"
"2 Sur deux échantillons de variance égale (homoscédastique)\n"
"3 Sur deux échantillons de variance différente (hétéroscédastique)\n"
"\n"
"* Si les échantillons contiennent un nombre de données différent et si "
"@type=1, TTEST renvoie l'erreur #N/A!.\n"
"* @cÔtés et @type sont tronqués en entiers.\n"
"* Si @cÔtés ne vaut ni un ni deux, TTEST renvoie l'erreur #NUM!.\n"
"* Si @type ne vaut pas 1, 2 ou 3, TTEST renvoie l'erreur #NUM!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 11,4, 17,3, 21,3, 25,9, et 40,1, et que B1, "
"B2,... B5 contiennent 23,2, 25,8, 29,9, 33,5, et 42,7, alors\n"
"TTEST(A1:A5;B1:B5;1;1) vaut 0,003127619.\n"
"TTEST(A1:A5;B1:B5;2;1) vaut 0,006255239.\n"
"TTEST(A1:A5;B1:B5;1;2) vaut 0,111804322.\n"
"TTEST(A1:A5;B1:B5;1;3) vaut 0,113821797.\n"
"@SEEALSO=FDIST,FINV"

#: ../plugins/fn-stat/functions.c:3826
msgid ""
"@FUNCTION=FREQUENCY\n"
"@SYNTAX=FREQUENCY(data_array,bins_array)\n"
"@DESCRIPTION=FREQUENCY function counts how often given values occur within a "
"range of values.  The results are given as an array.\n"
"\n"
"@data_array is a data array for which you want to count the frequencies.  "
"@bin_array is an array containing the intervals into which you want to group "
"the values in data_array.  If the @bin_array is empty, FREQUENCY returns the "
"number of data points in @data_array.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=FREQUENCY\n"
"@SYNTAX=FREQUENCY(données;valeurs)\n"
"@DESCRIPTION=La fonction FREQUENCY compte combien de fois les @données se "
"trouvent dans les intervalles de @valeurs. Le résultat est donné sousorme "
"d'un tableau.\n"
"@données est le tableau de données dont vous souhaitez connaître la "
"fréquence. @valeurs contient les intervalles dans lesquels vous voulez les "
"dénombrer. S'il est vide, FREQUENCY renvoie le nombre de données dans "
"@données.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"@SEEALSO="

#: ../plugins/fn-stat/functions.c:3906
#, fuzzy
msgid ""
"@FUNCTION=LINEST\n"
"@SYNTAX=LINEST(known_y's[,known_x's[,const[,stat]]])\n"
"@DESCRIPTION=LINEST function calculates the ``least squares'' line that best "
"fit to your data in @known_y's.  @known_x's contains the corresponding x's "
"where y=mx+b.\n"
"\n"
"LINEST returns an array having two columns and one row.  The slope (m) of "
"the regression line y=mx+b is given in the first column and the y-intercept "
"(b) in the second.\n"
"\n"
"If @stat is TRUE, extra statistical information will be returned. Extra "
"statistical information is written below the regression line coefficients in "
"the result array.  Extra statistical information consists of four rows of "
"data.  In the first row the standard error values for the coefficients m1, "
"(m2, ...), b are represented.  The second row contains the square of R and "
"the standard error for the y estimate.  The third row contains the F-"
"observed value and the degrees of freedom.  The last row contains the "
"regression sum of squares and the residual sum of squares.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used.\n"
"* If @known_y's and @known_x's have unequal number of data points, LINEST "
"returns #NUM! error.\n"
"* If @const is FALSE, the line will be forced to go through the origin, i."
"e., b will be zero. The default is TRUE.\n"
"* The default of @stat is FALSE.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"
msgstr ""
"@FUNCTION=LINEST\n"
"@SYNTAX=LINEST(y_connus[;x_connus[;const[;stat]]])\n"
"@DESCRIPTION=La fonction LINEST applique la méthode des moindres carrés pour "
"trouver la droite la plus proche de vos données @y_connus, sous la forme y = "
"mx+b\n"
"\n"
"LINEST renvoie un tableau d'une ligne et deux colonnes : { m, b }.\n"
"\n"
"Si @stat est VRAI (il est FAUX par défaut), des informations statistiques "
"supplémentaires seront renvoyées dans le tableau, en-dessous des lignes "
"contenant les coefficients. Ces informations contiennent quatre lignes de "
"données :\n"
"- les valeurs d'erreur standard pour m et b\n"
"- le carré de R et l'erreur standard pour l'estimée de y\n"
"- la valeur observée de F et les degrés de liberté\n"
"- la somme de régression des carrés et leur somme résiduelle.\n"
"\n"
"* Si @x_connus est absent, le tableau {1, 2, 3,...} est utilisé.\n"
"* Si @y_connus et @x_connus n'ont pas le même nombre de valeurs, LINEST "
"renvoie l'erreur #NUM!.\n"
"* Si @const est FAUX, la courbe passera obligatoirement par l'origine, donc "
"b vaudra 0. Par défaut, il vaut VRAI.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"

#: ../plugins/fn-stat/functions.c:4169
msgid ""
"@FUNCTION=LOGREG\n"
"@SYNTAX=LOGREG(known_y's[,known_x's[,const[,stat]]])\n"
"@DESCRIPTION=LOGREG function transforms your x's to z=ln(x) and applies the "
"``least squares'' method to fit the linear equation\n"
"y = m * z + b \n"
"to your y's and z's --- equivalent to fitting the equation\n"
"y = m * ln(x) + b \n"
"to y's and x's. \n"
"\n"
"If @known_x's is omitted, an array {1, 2, 3, ...} is used. LOGREG returns an "
"array having two columns and one row. m is given in the first column and b "
"in the second. \n"
"\n"
"If @known_y's and @known_x's have unequal number of data points, LOGREG "
"returns #NUM! error.\n"
"\n"
"If @const is FALSE, the curve will be forced to go through [1; 0], i.e., b "
"will be zero. The default is TRUE.\n"
"\n"
"If @stat is TRUE, extra statistical information will be returned which "
"applies to the state AFTER transformation to z. Extra statistical "
"information is written below m and b in the result array.  Extra statistical "
"information consists of four rows of data.  In the first row the standard "
"error values for the coefficients m, b are represented.  The second row "
"contains the square of R and the standard error for the y estimate. The "
"third row contains the F-observed value and the degrees of freedom.  The "
"last row contains the regression sum of squares and the residual sum of "
"squares.The default of @stat is FALSE.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGFIT,LINEST,LOGEST"
msgstr ""
"@FUNCTION=LOGREG\n"
"@SYNTAX=LOGREG(y_connus[;x_connus;const;stat])\n"
"@DESCRIPTION=La fonction LOGREG transforme les x en z=ln(x), puis applique "
"la méthode des moindres carrés pour trouver l'équation linéaire y = mz+b "
"approximant le mieux ces valeurs.\n"
"\n"
"* Si @x_connus est absent, le tableau {1, 2, 3,...} est utilisé.\n"
"* LOGREG renvoie un tableau d'une ligne et deux colonnes { m, b }.\n"
"* Si @y_connus et @x_connus n'ont pas le même nombre de valeurs, LOGREG "
"renvoie l'erreur #NUM!.\n"
"* Si @const est FAUX, la courbe passera obligatoirement par (0,1), donc b "
"vaudra 0. Par défaut, il vaut VRAI.\n"
"\n"
"Si @stat est VRAI (il est FAUX par défaut), des informations statistiques "
"supplémentaires seront renvoyées dans le tableau, en-dessous des lignes "
"contenant les coefficients. Ces informations contiennent quatre lignes de "
"données concernant les valeurs transformées z :\n"
"- les valeurs d'erreur standard pour m et b\n"
"- le carré de R et l'erreur standard pour l'estimée de y\n"
"- la valeur observée de F et les degrés de liberté\n"
"- la somme de régression des carrés et leur somme résiduelle.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LINEST,LOGFIT,LOGEST"

#: ../plugins/fn-stat/functions.c:4439
msgid ""
"@FUNCTION=LOGFIT\n"
"@SYNTAX=LOGFIT(known_y's,known_x's)\n"
"@DESCRIPTION=LOGFIT function applies the ``least squares'' method to fit the "
"logarithmic equation\n"
"y = a + b * ln(sign * (x - c)) ,   sign = +1 or -1 \n"
"to your data. The graph of the equation is a logarithmic curve moved "
"horizontally by c and possibly mirrored across the y-axis (if sign = -1).\n"
"\n"
"LOGFIT returns an array having five columns and one row. `Sign' is given in "
"the first column, `a', `b', and `c' are given in columns 2 to 4. Column 5 "
"holds the sum of squared residuals.\n"
"\n"
"An error is returned when there are less than 3 different x's or y's, or "
"when the shape of the point cloud is too different from a ``logarithmic'' "
"one.\n"
"\n"
"You can use the above formula \n"
"= a + b * ln(sign * (x - c)) \n"
"or rearrange it to \n"
"= (exp((y - a) / b)) / sign + c \n"
"to compute unknown y's or x's, respectively. \n"
"\n"
"Technically, this is non-linear fitting by trial-and-error. The accuracy of "
"`c' is: width of x-range -> rounded to the next smaller (10^integer), times "
"0.000001. There might be cases in which the returned fit is not the best "
"possible.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGREG,LINEST,LOGEST"
msgstr ""
"@FUNCTION=LOGFIT\n"
"@SYNTAX=LOGFIT(y_connus,x_connus)\n"
"@DESCRIPTION=La fonction LOGFIT applique la méthode des moindres carrés pour "
"approximer vos données par une courbe logarithmique, d'équation\n"
"y = a + b * ln(signe * (x - c)) ,   signe = +1 ou -1 \n"
"\n"
"Le graphe de l'équation est une courbe logarithmique décalée horizontalement "
"de c, et éventuellement transformée par symétrie autour de l'axe des y (si "
"signe = -1).\n"
"\n"
"LOGFIT renvoie un tableau d'une ligne et 5 colonnes : 'signe' est dans la "
"première colonne, a, b, et c dans les 3 suivantes, et la cinquième contient "
"le résidu quadratique.\n"
"\n"
"Une erreur est renvoyée lorsqu'il y a moins de 3 x ou y différents, ou "
"lorsque la forme des données est trop éloignée d'une forme logarithmique.\n"
"\n"
"Pour calculer de nouveaux y, vous pouvez utiliser\n"
"        y = a + b * ln(signe * (x - c)) \n"
"et, pour de nouveaux x :\n"
"        x = (exp((y - a) / b)) / signe + c \n"
"\n"
"Techniquement, l'approximation est non-linéaire, par essai-erreur. La "
"précision de c est la largeur de l'intervalle en x, arrondi à la dizaine "
"entière par excès, multipliée par 10^(-6). Dans certains cas, "
"l'approximation renvoyée 'est pas la meilleure possible.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGREG,LINEST,LOGEST"

#: ../plugins/fn-stat/functions.c:4542
msgid ""
"@FUNCTION=TREND\n"
"@SYNTAX=TREND(known_y's[,known_x's[,new_x's[,const]]])\n"
"@DESCRIPTION=TREND function estimates future values of a given data set "
"using the ``least squares'' line that best fit to your data. @known_y's is "
"the y-values where y=mx+b and @known_x's contains the corresponding x-"
"values.  @new_x's contains the x-values for which you want to estimate the y-"
"values. If @const is FALSE, the line will be forced to go through the "
"origin, i.e., b will be zero.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used.\n"
"* If @new_x's is omitted, it is assumed to be the same as @known_x's.\n"
"* If @const is omitted, it is assumed to be TRUE.\n"
"* If @known_y's and @known_x's have unequal number of data points, TREND "
"returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"TREND(A1:A5,B1:B5) equals {12.1, 15.7, 21.6, 26.7, 39.7}.\n"
"\n"
"@SEEALSO=LINEST"
msgstr ""
"@FUNCTION=TREND\n"
"@SYNTAX=TREND(y_connus[;x_connus[;x_nouveaux[;const]]])\n"
"@DESCRIPTION=La fonction TREND estime des valeurs de données futures en "
"utilisant la droite des moindres carrés. @y_connus sont les valeurs de y=mx"
"+b, pour x dans @x_connus. @x_nouveaux sont les valeurs pour lesquelles on "
"souhaite obtenir des estimées de y. Si @const est FAUX (defaut : VRAI), la "
"droite passera par l'origine, donc b vaudra 0.\n"
"\n"
"* Si @x_connus est omis, le tableau {1, 2, 3...} est utilisé.\n"
"* Si @x_nouveaux est omis, il est pris égal à @x_connus.\n"
"* Si @y_connus et @x_connus n'ont pas le même nombre de valeurs, TREND "
"renvoie l'erreur #NUM!.\n"
"\n"
"@EXAMPLES=\n"
"Si A1, A2, ..., A5 contiennent 11,4, 17,3, \n"
"21,3, 25,9, et 40,1, et B1, B2, ... B5, 23,2, 25,8, 29,9, 33,5, \n"
"and 42,7.  Alors\n"
"TREND(A1:A5;B1:B5) vaut {12.1, 15.7, 21.6, 26.7, 39.7}.\n"
"\n"
"@SEEALSO=LINEST"

#: ../plugins/fn-stat/functions.c:4660
#, fuzzy
msgid ""
"@FUNCTION=LOGEST\n"
"@SYNTAX=LOGEST(known_y's[,known_x's,const,stat])\n"
"@DESCRIPTION=LOGEST function applies the ``least squares'' method to fit an "
"exponential curve of the form\n"
"\n"
"\ty = b * m{1}^x{1} * m{2}^x{2}... to your data.\n"
"\n"
"If @stat is TRUE, extra statistical information will be returned. Extra "
"statistical information is written below the regression line coefficients in "
"the result array.  Extra statistical information consists of four rows of "
"data.  In the first row the standard error values for the coefficients m1, "
"(m2, ...), b are represented.  The second row contains the square of R and "
"the standard error for the y estimate.  The third row contains the F-"
"observed value and the degrees of freedom.  The last row contains the "
"regression sum of squares and the residual sum of squares.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used. LOGEST returns "
"an array { m{n},m{n-1}, ...,m{1},b }.\n"
"* If @known_y's and @known_x's have unequal number of data points, LOGEST "
"returns #NUM! error.\n"
"* If @const is FALSE, the line will be forced to go through (0,1),i.e., b "
"will be one.  The default is TRUE.\n"
"* The default of @stat is FALSE.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=GROWTH,TREND"
msgstr ""
"@FUNCTION=LOGEST\n"
"@SYNTAX=LOGEST(y_connus[;x_connus[;const[;stat]]])\n"
"@DESCRIPTION=La fonction LOGEST applique la méthode des moindres carrés pour "
"trouver la courbe exponentielle la plus proche de vos données, sous la "
"forme\n"
"\n"
"        y = b * m{1}^x{1} * m{2}^x{2}...\n"
"\n"
"LOGEST renvoie un tableau d'une ligne et N+1 colonnes : { m{n}, m{n-1} ..., "
"b }.\n"
"\n"
"Si @stat est VRAI (il est FAUX par défaut), des informations statistiques "
"supplémentaires seront renvoyées dans le tableau, en-dessous des lignes "
"contenant les coefficients. Ces informations contiennent quatre lignes de "
"données :\n"
"- les valeurs d'erreur standard pour m1, m2 ... b\n"
"- le carré de R et l'erreur standard pour l'estimée de y\n"
"- la valeur observée de F et les degrés de liberté\n"
"- la somme de régression des carrés et leur somme résiduelle.\n"
"\n"
"* Si @x_connus est absent, le tableau {1, 2, 3,...} est utilisé.\n"
"* Si @y_connus et @x_connus n'ont pas le même nombre de valeurs, LOGEST "
"renvoie l'erreur #NUM!.\n"
"* Si @const est FAUX, la courbe passera obligatoirement par (0,1), donc b "
"vaudra 1. Par défaut, il vaut VRAI.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,GROWTH,TREND"

#: ../plugins/fn-stat/functions.c:4905
msgid ""
"@FUNCTION=GROWTH\n"
"@SYNTAX=GROWTH(known_y's[,known_x's,new_x's,const])\n"
"@DESCRIPTION=GROWTH function applies the ``least squares'' method to fit an "
"exponential curve to your data and predicts the exponential growth by using "
"this curve. \n"
"GROWTH returns an array having one column and a row for each data point in "
"@new_x.\n"
"\n"
"* If @known_x's is omitted, an array {1, 2, 3, ...} is used.\n"
"* If @new_x's is omitted, it is assumed to be the same as @known_x's.\n"
"* If @known_y's and @known_x's have unequal number of data points, GROWTH "
"returns #NUM! error.\n"
"* If @const is FALSE, the line will be forced to go through the origin, i."
"e., b will be zero. The default is TRUE.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,GROWTH,TREND"
msgstr ""
"@FUNCTION=GROWTH\n"
"@SYNTAX=GROWTH(y_connus[;x_connus;x_nouveaux;const])\n"
"@DESCRIPTION=La fonction GROWTH applique la méthode des moindres carrés pour "
"trouver l'exponentielle la plus proche des données, et en déduit leur "
"croissance exponentielle.\n"
"GROWTH renvoie un tableau d'une seule colonne avec une ligne pour chaque "
"point de @x_nouveaux.\n"
"\n"
"* Si @x_connus est absent, le tableau {1, 2, 3,...} est utilisé.\n"
"* Si @x_nouveaux est absent, il est considéré égal à @x_connus.\n"
"* Si @y_connus et @x_connus n'ont pas le même nombre de valeurs, GROWTH "
"renvoie l'erreur #NUM!.\n"
"* Si @const est FAUX, la courbe passera obligatoirement par l'origine, donc "
"b vaudra 0. Par défaut, il vaut VRAI.\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=LOGEST,TREND"

#: ../plugins/fn-stat/functions.c:5020
msgid ""
"@FUNCTION=FORECAST\n"
"@SYNTAX=FORECAST(x,known_y's,known_x's)\n"
"@DESCRIPTION=FORECAST function estimates a future value according to "
"existing values using simple linear regression.  The estimated future value "
"is a y-value for a given x-value (@x).\n"
"\n"
"* If @known_x or @known_y contains no data entries or different number of "
"data entries, FORECAST returns #N/A error.\n"
"* If the variance of the @known_x is zero, FORECAST returns #DIV/0 error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"FORECAST(7,A1:A5,B1:B5) equals -10.859397661.\n"
"\n"
"@SEEALSO=INTERCEPT,TREND"
msgstr ""
"@FUNCTION=FORECAST\n"
"@SYNTAX=FORECAST(x;y_connus;x_connus)\n"
"@DESCRIPTION=La fonction FORECAST estime une valeur future en fonction des "
"valeurs existantes en utilisant une régression linéaire simple. La valeur "
"estimée est une valeur y pour la valeur @x de x.\n"
"\n"
"* Si @x_connus ou @y_connus ne contiennent pas de données ou un nombre "
"différent de données, FORECAST renvoie l'erreur #N/A!.\n"
"* Si la variance de @x_connus est zéro, FORECAST renvoie l'erreur #DIV/0. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, et les cellules B1, B2,... B5 23,2, 25,8, 29,9, 33,5,\n"
"et 42,7. Alors,\n"
"FORECAST(7;A1:A5;B1:B5) vaut -10,859397661.\n"
"\n"
"@SEEALSO=INTERCEPT,TREND"

#: ../plugins/fn-stat/functions.c:5094
msgid ""
"@FUNCTION=INTERCEPT\n"
"@SYNTAX=INTERCEPT(known_y's,known_x's)\n"
"@DESCRIPTION=INTERCEPT function calculates the point where the linear "
"regression line intersects the y-axis.\n"
"\n"
"* If @known_x or @known_y contains no data entries or different number of "
"data entries, INTERCEPT returns #N/A error.\n"
"* If the variance of the @known_x is zero, INTERCEPT returns #DIV/0 error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"INTERCEPT(A1:A5,B1:B5) equals -20.785117212.\n"
"\n"
"@SEEALSO=FORECAST,TREND"
msgstr ""
"@FUNCTION=INTERCEPT\n"
"@SYNTAX=INTERCEPT(y_connus;x_connus)\n"
"@DESCRIPTION=La fonction INTERCEPT calcule le point d'intersection de la "
"droite de régression linéaire avec l'axe des ordonnées (y).\n"
"\n"
"* Si @x_connus ou @y_connus ne contiennent pas de données ou un nombre "
"différent de données, INTERCEPT renvoie l'erreur #N/A!.\n"
"* Si la variance de @x_connus est zéro, INTERCEPT renvoie l'erreur #DIV/0. \n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, et les cellules B1, B2,... B5 23,2, 25,8, 29,9, 33,5,\n"
"et 42,7. Alors,\n"
"INTERCEPT(A1:A5;B1:B5) vaut -20,785117212.\n"
"\n"
"@SEEALSO=FORECAST,TREND"

#: ../plugins/fn-stat/functions.c:5148
msgid ""
"@FUNCTION=SLOPE\n"
"@SYNTAX=SLOPE(known_y's,known_x's)\n"
"@DESCRIPTION=SLOPE returns the slope of the linear regression line.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, "
"21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, "
"and 42.7.  Then\n"
"SLOPE(A1:A5,B1:B5) equals 1.417959936.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"
msgstr ""
"@FUNCTION=SLOPE\n"
"@SYNTAX=SLOPE(y_connus;x_connus)\n"
"@DESCRIPTION=La fonction SLOPE renvoie la pente de la droite de régression "
"linéaire pour @x_connus et @y_connus.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si les cellules A1, A2,..., A5 contiennent 11,4, 17,3,\n"
"21,3, 25,9, et 40,1, et les cellules B1, B2,... B5 23,2, 25,8, 29,9, 33,5,\n"
"et 42,7. Alors,\n"
"SLOPE(A1:A5;B1:B5) vaut 1,417959936.\n"
"\n"
"@SEEALSO=STDEV,STDEVPA"

#: ../plugins/fn-stat/functions.c:5196
msgid ""
"@FUNCTION=SUBTOTAL\n"
"@SYNTAX=SUBTOTAL(function_nbr,ref1,ref2,...)\n"
"@DESCRIPTION=SUBTOTAL function returns a subtotal of given list of "
"arguments. @function_nbr is the number that specifies which function to use "
"in calculating the subtotal.\n"
"\n"
"The following functions are available:\n"
"\n"
"\t1   AVERAGE\n"
"\t2   COUNT\n"
"\t3   COUNTA\n"
"\t4   MAX\n"
"\t5   MIN\n"
"\t6   PRODUCT\n"
"\t7   STDEV\n"
"\t8   STDEVP\n"
"\t9   SUM\n"
"\t10   VAR\n"
"\t11   VARP\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, "
"and 39.  Then\n"
"SUBTOTAL(1,A1:A5) equals 30.\n"
"SUBTOTAL(6,A1:A5) equals 22378356.\n"
"SUBTOTAL(7,A1:A5) equals 6.164414003.\n"
"SUBTOTAL(9,A1:A5) equals 150.\n"
"SUBTOTAL(11,A1:A5) equals 30.4.\n"
"\n"
"@SEEALSO=COUNT,SUM"
msgstr ""
"@FUNCTION=SUBTOTAL\n"
"@SYNTAX=SUBTOTAL(num_fonction;réf1;réf2;...)\n"
"@DESCRIPTION=La fonction SUBTOTAL renvoie un sous-total de la liste de ses "
"arguments. @num_fonction indique la fonction à utiliser pour le calcul du "
"sous total. Les fonctions suivantes sont disponibles :\n"
"1   AVERAGE\n"
"2   COUNT\n"
"3   COUNTA\n"
"4   MAX\n"
"5   MIN\n"
"6   PRODUCT\n"
"7   STDEV\n"
"8   STDEVP\n"
"9   SUM\n"
"10  VAR\n"
"11  VARP\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"Si A1, A2,..., A5 contiennent 23, 27, 28, 33, et 39 :\n"
"SUBTOTAL(1;A1:A5) vaut 30.\n"
"SUBTOTAL(6;A1:A5) vaut 22378356.\n"
"SUBTOTAL(7;A1:A5) vaut 6,164414003.\n"
"SUBTOTAL(9;A1:A5) vaut 150.\n"
"SUBTOTAL(11;A1:A5) vaut 30,4.\n"
"\n"
"@SEEALSO=COUNT,SUM"

#: ../plugins/fn-stat/functions.c:5302
msgid ""
"@FUNCTION=CRONBACH\n"
"@SYNTAX=CRONBACH(ref1,ref2,...)\n"
"@DESCRIPTION=CRONBACH returns Cronbach's alpha for the given cases.\n"
"@ref1 is a data set, @ref2 the second data set, etc..\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CRONBACH\n"
"@SYNTAX=CRONBACH(réf1;réf2;...)\n"
"@DESCRIPTION=CRONBACH renvoie la valeur alpha de Cronbach pour les cas "
"fournis.\n"
"@réf1 est un enesmble de données, @réf2 un deuxième ensemble, etc..\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-stat/functions.c:5424
msgid ""
"@FUNCTION=GEOMDIST\n"
"@SYNTAX=GEOMDIST(k,p,cum)\n"
"@DESCRIPTION=GEOMDIST returns the probability p(k) of obtaining @k from a "
"geometric distribution with probability parameter @p.\n"
"\n"
"* If @k < 0 GEOMDIST returns #NUM! error.\n"
"* If @p < 0 or @p > 1 GEOMDIST returns #NUM! error.\n"
"* If @cum != TRUE and @cum != FALSE GEOMDIST returns #NUM! error.\n"
"\n"
"@EXAMPLES=\n"
"GEOMDIST(2,10.4,TRUE).\n"
"\n"
"@SEEALSO=RANDGEOM"
msgstr ""
"@FUNCTION=GEOMDIST\n"
"@SYNTAX=GEOMDIST(k;p;cumul)\n"
"@DESCRIPTION=La fonction GEOMDIST renvoie la probabilité p(k) d'obtenir @k "
"dans une distribution géométrique de probabilité @p. \n"
"\n"
"* Si @k < 0, GEOMDIST renvoie l'erreur #NUM!.\n"
"* Si @p < 0 ou @p > 1, GEOMDIST renvoie l'erreur #NUM!.\n"
"* Si @cumul est différent de VRAI et de FAUX, GEOMDIST renvoie l'erreur "
"#NUM!.\n"
"\n"
"@EXAMPLES=\n"
"GEOMDIST(1;2;3;0) vaut 0,07961459.\n"
"\n"
"@SEEALSO=RANDGEOM"

#: ../plugins/fn-stat/functions.c:5463
msgid ""
"@FUNCTION=LOGISTIC\n"
"@SYNTAX=LOGISTIC(x,a)\n"
"@DESCRIPTION=LOGISTIC returns the probability density p(x) at @x for a "
"logistic distribution with scale parameter @a.\n"
"\n"
"@EXAMPLES=\n"
"LOGISTIC(0.4,1).\n"
"\n"
"@SEEALSO=RANDLOGISTIC"
msgstr ""
"@FUNCTION=LOGISTIC\n"
"@SYNTAX=LOGISTIC(x;a)\n"
"@DESCRIPTION=La fonction LOGISTIC renvoie la densité de probabilité p(a) en "
"@x, pour une distribution logistique de paramètre d'échelle @a.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-stat/functions.c:5502
msgid ""
"@FUNCTION=PARETO\n"
"@SYNTAX=PARETO(x,a,b)\n"
"@DESCRIPTION=PARETO returns the probability density p(x) at @x for a Pareto "
"distribution with exponent @a and scale @b.\n"
"\n"
"@EXAMPLES=\n"
"PARETO(0.6,1,2).\n"
"\n"
"@SEEALSO=RANDPARETO"
msgstr ""
"@FUNCTION=PARETO\n"
"@SYNTAX=PARETO(x;a;b)\n"
"@DESCRIPTION=La fonction PARETO renvoie la densité de probabilité p(x) en "
"@x, pour une distribution de Pareto d'exposant @a et d'échelle @b.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDPARETO"

#: ../plugins/fn-stat/functions.c:5543
msgid ""
"@FUNCTION=RAYLEIGH\n"
"@SYNTAX=RAYLEIGH(x,sigma)\n"
"@DESCRIPTION=RAYLEIGH returns the probability density p(x) at @x for a "
"Rayleigh distribution with scale parameter @sigma.\n"
"\n"
"@EXAMPLES=\n"
"RAYLEIGH(0.4,1).\n"
"\n"
"@SEEALSO=RANDRAYLEIGH"
msgstr ""
"@FUNCTION=RAYLEIGH\n"
"@SYNTAX=RAYLEIGH(x;sigma)\n"
"@DESCRIPTION=La fonction RAYLEIGH renvoie la densité de probabilité p(x) en "
"@x, pour une distribution de Rayleigh de paramètre d'échelle @sigma.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDRAYLEIGH"

#: ../plugins/fn-stat/functions.c:5586
msgid ""
"@FUNCTION=RAYLEIGHTAIL\n"
"@SYNTAX=RAYLEIGHTAIL(x,a,sigma)\n"
"@DESCRIPTION=RAYLEIGHTAIL returns the probability density p(x) at @x for a "
"Rayleigh tail distribution with scale parameter @sigma and lower limit @a.\n"
"\n"
"@EXAMPLES=\n"
"RAYLEIGHTAIL(0.6,0.3,1).\n"
"\n"
"@SEEALSO=RANDRAYLEIGHTAIL"
msgstr ""
"@FUNCTION=RAYLEIGHTAIL\n"
"@SYNTAX=RAYLEIGHTAIL(x;a;sigma)\n"
"@DESCRIPTION=La fonction RAYLEIGHTAIL renvoie la densité de probabilité p(x) "
"en @x, pour une queue de distribution de Rayleigh de paramètre d'échelle "
"@sigma et de limite inférieure @a.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDRAYLEIGHTAIL"

#: ../plugins/fn-stat/functions.c:5632
msgid ""
"@FUNCTION=EXPPOWDIST\n"
"@SYNTAX=EXPPOWDIST(x,a,b)\n"
"@DESCRIPTION=EXPPOWDIST returns the probability density p(x) at @x for "
"Exponential Power distribution with scale parameter @a and exponent @b.\n"
"This distribution has been recommended for lifetime analysis when a U-shaped "
"hazard function is desired. This corresponds to rapid failure once the "
"product starts to wear out after a period of steady or even improving "
"reliability.\n"
"@EXAMPLES=\n"
"EXPPOWDIST(0.4,1,2).\n"
"\n"
"@SEEALSO=RANDEXPPOW"
msgstr ""
"@FUNCTION=EXPPOWDIST\n"
"@SYNTAX=EXPPOWDIST(x;a;b)\n"
"@DESCRIPTION=La fonction EXPPOWDIST renvoie la densité de probabilité p(x) "
"en @x, pour une distribution exponentielle d'échelle @a et d'exposant @b.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDEXPPOW"

#: ../plugins/fn-stat/functions.c:5671
msgid ""
"@FUNCTION=LAPLACE\n"
"@SYNTAX=LAPLACE(x,a)\n"
"@DESCRIPTION=LAPLACE returns the probability density p(x) at @x for Laplace "
"distribution with mean @a. \n"
"@EXAMPLES=\n"
"LAPLACE(0.4,1).\n"
"\n"
"@SEEALSO=RANDLAPLACE"
msgstr ""
"@FUNCTION=LAPLACE\n"
"@SYNTAX=LAPLACE(x;a)\n"
"@DESCRIPTION=La fonction LAPLACE renvoie la densité de probabilité p(x) en "
"@x, pour une distribution de Laplace de moyenne @a.\n"
"\n"
"@EXAMPLES=\n"
"\n"
"@SEEALSO=RANDLAPLACE"

#: ../plugins/fn-string/functions.c:61
msgid ""
"@FUNCTION=CHAR\n"
"@SYNTAX=CHAR(x)\n"
"@DESCRIPTION=CHAR returns the ASCII character represented by the number @x.\n"
"\n"
"@EXAMPLES=\n"
"CHAR(65) equals A.\n"
"\n"
"@SEEALSO=CODE"
msgstr ""
"@FUNCTION=CHAR\n"
"@SYNTAX=CHAR(x)\n"
"@DESCRIPTION=Renvoie le caractère ASCII représenté par le nombre @x.\n"
"@EXAMPLES=\n"
"CHAR(65) vaut A.\n"
"\n"
"@SEEALSO=CODE"

#: ../plugins/fn-string/functions.c:107
msgid ""
"@FUNCTION=UNICHAR\n"
"@SYNTAX=UNICHAR(x)\n"
"@DESCRIPTION=UNICHAR returns the Unicode character represented by the number "
"@x.\n"
"\n"
"@EXAMPLES=\n"
"UNICHAR(65) equals A.\n"
"UNICHAR(960) equals a small Greek pi.\n"
"\n"
"@SEEALSO=CHAR,UNICODE,CODE"
msgstr ""
"@FUNCTION=UNICHAR\n"
"@SYNTAX=UNICHAR(x)\n"
"@DESCRIPTION=Renvoie le caractère UNICODE représenté par le nombre @x.\n"
"\n"
"@EXAMPLES=\n"
"UNICHAR(65) vaut A.\n"
"UNICHAR(960) est la lettre grecque pi minuscule.\n"
"\n"
"@SEEALSO=CHAR,UNICODE,CODE"

#: ../plugins/fn-string/functions.c:142
msgid ""
"@FUNCTION=CODE\n"
"@SYNTAX=CODE(char)\n"
"@DESCRIPTION=CODE returns the ASCII number for the character @char.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CODE(\"A\") equals 65.\n"
"\n"
"@SEEALSO=CHAR"
msgstr ""
"@FUNCTION=CODE\n"
"@SYNTAX=CODE(car)\n"
"@DESCRIPTION=Renvoie le code ASCII pour le caractère @car.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CODE(\"A\") vaut 65.\n"
"\n"
"@SEEALSO=CHAR"

#: ../plugins/fn-string/functions.c:190
msgid ""
"@FUNCTION=UNICODE\n"
"@SYNTAX=UNICODE(char)\n"
"@DESCRIPTION=UNICODE returns the Unicode number for the character @char.\n"
"\n"
"\n"
"@EXAMPLES=\n"
"UNICODE(\"A\") equals 65.\n"
"\n"
"@SEEALSO=UNICHAR,CODE,CHAR"
msgstr ""
"@FUNCTION=UNICODE\n"
"@SYNTAX=UNICODE(car)\n"
"@DESCRIPTION=Renvoie le nombre UNICODE pour le caractère @car.\n"
"\n"
"\n"
"@EXAMPLES=\n"
"UNICODE(\"A\") vaut 65.\n"
"\n"
"@SEEALSO=UNICHAR,CODE,CHAR"

#: ../plugins/fn-string/functions.c:219
msgid ""
"@FUNCTION=EXACT\n"
"@SYNTAX=EXACT(string1, string2)\n"
"@DESCRIPTION=EXACT returns true if @string1 is exactly equal to @string2 "
"(this routine is case sensitive).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"EXACT(\"key\",\"key\") equals TRUE.\n"
"EXACT(\"key\",\"Key\") equals FALSE.\n"
"\n"
"@SEEALSO=LEN, SEARCH, DELTA"
msgstr ""
"@FUNCTION=EXACT\n"
"@SYNTAX=EXACT(chaîne1; chaîne2)\n"
"@DESCRIPTION=Renvoie VRAI si @chaîne1 est exactement égale à @chaîne2. Cette "
"fonction est sensible à la casse.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"EXACT(\"mot\";\"mot\") vaut VRAI.\n"
"EXACT(\"mot\";\"Mot\") vaut FAUX.\n"
"@SEEALSO=LEN"

#: ../plugins/fn-string/functions.c:247
msgid ""
"@FUNCTION=LEN\n"
"@SYNTAX=LEN(string)\n"
"@DESCRIPTION=LEN returns the length in characters of the string @string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LEN(\"Helsinki\") equals 8.\n"
"\n"
"@SEEALSO=CHAR, CODE, LENB"
msgstr ""
"@FUNCTION=LEN\n"
"@SYNTAX=LEN(chaîne)\n"
"@DESCRIPTION=Renvoie la longueur en caractères de @chaîne.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LEN(\"Helsinki\") vaut 8.\n"
"\n"
"@SEEALSO=CHAR, CODE, LENB"

#: ../plugins/fn-string/functions.c:271
msgid ""
"@FUNCTION=LENB\n"
"@SYNTAX=LENB(string)\n"
"@DESCRIPTION=LENB returns the length in bytes of the string @string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LENB(\"Helsinki\") equals 8.\n"
"\n"
"@SEEALSO=CHAR, CODE, LEN"
msgstr ""

#: ../plugins/fn-string/functions.c:296
msgid ""
"@FUNCTION=LEFT\n"
"@SYNTAX=LEFT(text[,num_chars])\n"
"@DESCRIPTION=LEFT returns the leftmost @num_chars characters or the left "
"character if @num_chars is not specified.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LEFT(\"Directory\",3) equals \"Dir\".\n"
"\n"
"@SEEALSO=MID, RIGHT"
msgstr ""
"@FUNCTION=LEFT\n"
"@SYNTAX=LEFT(texte[;num_cars])\n"
"@DESCRIPTION=Renvoie les @num_cars (1 par défaut) caractères les plus à "
"gauche de la chaîne @texte.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LEFT(\"Répertoire\";3) vaut \"Rép\".\n"
"\n"
"@SEEALSO=MID, RIGHT"

#: ../plugins/fn-string/functions.c:333
msgid ""
"@FUNCTION=LOWER\n"
"@SYNTAX=LOWER(text)\n"
"@DESCRIPTION=LOWER returns a lower-case version of the string in @text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"LOWER(\"J. F. Kennedy\") equals \"j. f. kennedy\".\n"
"\n"
"@SEEALSO=UPPER"
msgstr ""
"@FUNCTION=LOWER\n"
"@SYNTAX=LOWER (texte)\n"
"@DESCRIPTION=Renvoie une version en minuscules de la chaîne @texte\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"LOWER(\"J. F. Kennedy\") vaut \"j. f. kennedy\".\n"
"\n"
"@SEEALSO=UPPER"

#: ../plugins/fn-string/functions.c:358
msgid ""
"@FUNCTION=MID\n"
"@SYNTAX=MID(string, position, length)\n"
"@DESCRIPTION=MID returns a substring from @string starting at @position for "
"@length characters.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"MID(\"testing\",2,3) equals \"est\".\n"
"\n"
"@SEEALSO=LEFT, RIGHT"
msgstr ""
"@FUNCTION=MID\n"
"@SYNTAX=MID(chaîne; position; longueur)\n"
"@DESCRIPTION=Renvoie une sous-chaîne de @chaîne commençant à @position et "
"contenant @longueur caractères.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"MID(\"tester\";2;3) vaut \"est\".\n"
"\n"
"@SEEALSO=LEFT, RIGHT"

#: ../plugins/fn-string/functions.c:403
msgid ""
"@FUNCTION=RIGHT\n"
"@SYNTAX=RIGHT(text[,num_chars])\n"
"@DESCRIPTION=RIGHT returns the rightmost @num_chars characters or the right "
"character if @num_chars is not specified.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"RIGHT(\"end\") equals \"d\".\n"
"RIGHT(\"end\",2) equals \"nd\".\n"
"\n"
"@SEEALSO=MID, LEFT"
msgstr ""
"@FUNCTION=RIGHT\n"
"@SYNTAX=RIGHT(texte[;num_cars])\n"
"@DESCRIPTION=Renvoie les @num_cars (1 par défaut) caractères les plus à "
"droite de la chaîne @texte.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"RIGHT(\"end\") vaut \"d\".\n"
"RIGHT(\"end\",2) vaut \"nd\".\n"
"\n"
"@SEEALSO=MID, LEFT"

#: ../plugins/fn-string/functions.c:445
msgid ""
"@FUNCTION=UPPER\n"
"@SYNTAX=UPPER(text)\n"
"@DESCRIPTION=UPPER returns a upper-case version of the string in @text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"UPPER(\"cancelled\") equals \"CANCELLED\".\n"
"\n"
"@SEEALSO=LOWER"
msgstr ""
"@FUNCTION=UPPER\n"
"@SYNTAX=UPPER(texte)\n"
"@DESCRIPTION=Renvoie une version en majuscules de la chaîne @texte.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"UPPER(\"annulé\") vaut \"ANNULÉ\".\n"
"\n"
"@SEEALSO=LOWER"

#: ../plugins/fn-string/functions.c:470
msgid ""
"@FUNCTION=CONCATENATE\n"
"@SYNTAX=CONCATENATE(string1[,string2...])\n"
"@DESCRIPTION=CONCATENATE returns the string obtained by concatenation of the "
"given strings.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CONCATENATE(\"aa\",\"bb\") equals \"aabb\".\n"
"\n"
"@SEEALSO=LEFT, MID, RIGHT"
msgstr ""
"@FUNCTION=CONCATENATE\n"
"@SYNTAX=CONCATENATE(chaîne1[;chaîne2...])\n"
"@DESCRIPTION=Renvoie la concaténation des chaînes de caractères passées en "
"paramètre.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CONCATENATE(\"aa\";\"bb\") vaut \"aabb\".\n"
"\n"
"@SEEALSO=LEFT, MID, RIGHT"

#: ../plugins/fn-string/functions.c:498
msgid ""
"@FUNCTION=REPT\n"
"@SYNTAX=REPT(string,num)\n"
"@DESCRIPTION=REPT returns @num repetitions of @string.\n"
"\n"
"* This function is Excel compatible.\n"
" \n"
"@EXAMPLES=\n"
"REPT(\".\",3) equals \"...\".\n"
"\n"
"@SEEALSO=CONCATENATE"
msgstr ""
"@FUNCTION=REPT\n"
"@SYNTAX=REPT(chaîne;nombre)\n"
"@DESCRIPTION=Renvoie @chaîne répétée @nombre fois.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"REPT(\".\";3) renvoie \"...\".\n"
"\n"
"@SEEALSO=CONCATENATE"

#: ../plugins/fn-string/functions.c:548
msgid ""
"@FUNCTION=CLEAN\n"
"@SYNTAX=CLEAN(string)\n"
"@DESCRIPTION=CLEAN removes any non-printable characters from @string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"CLEAN(\"one\"\\&char(7)) equals \"one\".\n"
"\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=CLEAN\n"
"@SYNTAX=CLEAN(chaîne)\n"
"@DESCRIPTION=Enlève tous les caractères non affichables de la chaîne.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"CLEAN(\"un\" & char(7)) renvoie \"un\".\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-string/functions.c:584
msgid ""
"@FUNCTION=FIND\n"
"@SYNTAX=FIND(string1,string2[,start])\n"
"@DESCRIPTION=FIND returns position of @string1 in @string2 (case-sensitive), "
"searching only from character @start onwards (assuming 1 if omitted).\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FIND(\"ac\",\"Jack\") equals 2.\n"
"\n"
"@SEEALSO=EXACT, LEN, MID, SEARCH"
msgstr ""
"@FUNCTION=FIND\n"
"@SYNTAX=FIND(chaîne1,chaîne2[,début])\n"
"@DESCRIPTION=Renvoie la position de @chaîne1 dans @chaîne2 (sensible à la "
"casse), en cherchant à partir du début ou du caractère @début si ce "
"paramètre est présent.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FIND(\"ac\";\"Jacques\") vaut 2.\n"
"\n"
"@SEEALSO=EXACT, LEN, MID, SEARCH"

#: ../plugins/fn-string/functions.c:628
msgid ""
"@FUNCTION=FIXED\n"
"@SYNTAX=FIXED(num,[decimals, no_commas])\n"
"@DESCRIPTION=FIXED returns @num as a formatted string with @decimals numbers "
"after the decimal point, omitting commas if requested by @no_commas.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"FIXED(1234.567,2) equals \"1,234.57\".\n"
"\n"
"@SEEALSO=TEXT, VALUE, DOLLAR"
msgstr ""
"@FUNCTION=FIXED\n"
"@SYNTAX=FIXED(nombre[;décimales;pas_de_séparateur])\n"
"@DESCRIPTION=Renvoie @nombre sous forme de chaîne formatée avec @décimales, "
"en omettant les séparateurs de milliers si le paramètre @pas_de_séparateur "
"est VRAI.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"FIXED(1234,567;2) vaut \"1 234,57\".\n"
"\n"
"@SEEALSO="

#: ../plugins/fn-string/functions.c:694
msgid ""
"@FUNCTION=PROPER\n"
"@SYNTAX=PROPER(string)\n"
"@DESCRIPTION=PROPER returns @string with initial of each word capitalised.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"PROPER(\"j. f. kennedy\") equals \"J. F. Kennedy\".\n"
"\n"
"@SEEALSO=LOWER, UPPER"
msgstr ""
"@FUNCTION=PROPER\n"
"@SYNTAX=PROPER(chaîne)\n"
"@DESCRIPTION=Renvoie @chaîne avec la première lettre de chaque mot en "
"majuscule.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"PROPER(\"j. f. kennedy\") renvoie \"J. F. Kennedy\".\n"
"\n"
"@SEEALSO=LOWER, UPPER"

#: ../plugins/fn-string/functions.c:749
msgid ""
"@FUNCTION=REPLACE\n"
"@SYNTAX=REPLACE(old,start,num,new)\n"
"@DESCRIPTION=REPLACE returns @old with @new replacing @num characters from "
"@start.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"REPLACE(\"testing\",2,3,\"*****\") equals \"t*****ing\".\n"
"\n"
"@SEEALSO=MID, SEARCH, SUBSTITUTE, TRIM"
msgstr ""
"@FUNCTION=REPLACE\n"
"@SYNTAX=REPLACE(ancien;début;nombre;nouveau)\n"
"@DESCRIPTION=Renvoie le texte @ancien, dans lequel les @nombre caractères "
"commençant à @start ont été remplacés par @nouveau.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"REPLACE(\"tester\";2;3;\"ABCDE \"tABCDEer\".\n"
"\n"
"@SEEALSO=MID, SEARCH, SUBSTITUTE, TRIM"

#: ../plugins/fn-string/functions.c:805
msgid ""
"@FUNCTION=T\n"
"@SYNTAX=T(value)\n"
"@DESCRIPTION=T returns @value if and only if it is text, otherwise a blank "
"string.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"T(\"text\") equals \"text\".\n"
"T(64) returns an empty cell.\n"
"\n"
"@SEEALSO=CELL, N, VALUE"
msgstr ""
"@FUNCTION=T\n"
"@SYNTAX=T(valeur)\n"
"@DESCRIPTION=Renvoie @valeur si et seulement s'il s'agit de texte, sinon "
"renvoie une chaîne vide.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"T(\"texte\") vaut \"texte\".\n"
"T(64) renvoie une cellule vide.\n"
"@SEEALSO=CELL, N, VALUE"

#: ../plugins/fn-string/functions.c:836
msgid ""
"@FUNCTION=TEXT\n"
"@SYNTAX=TEXT(value,format_text)\n"
"@DESCRIPTION=TEXT returns @value as a string with the specified format.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TEXT(3.223,\"$0.00\") equals \"$3.22\".\n"
"TEXT(date(1999,4,15),\"mmmm, dd, yy\") equals \"April, 15, 99\".\n"
"\n"
"@SEEALSO=DOLLAR, FIXED, VALUE"
msgstr ""
"@FUNCTION=TEXT\n"
"@SYNTAX=TEXT(valeur;format)\n"
"@DESCRIPTION=Renvoie @valeur sous la forme d'une chaîne avec le format "
"spécifié.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TEXT(3,223;\"$0.00\") = \"$3,22\".\n"
"TEXT(date(1999;4;15),\"mmmm, dd, yy\") = \"Avril, 15, 99\".\n"
"\n"
"@SEEALSO=DOLLAR"

#: ../plugins/fn-string/functions.c:894
msgid ""
"@FUNCTION=TRIM\n"
"@SYNTAX=TRIM(text)\n"
"@DESCRIPTION=TRIM returns @text with only single spaces between words.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"TRIM(\"  a bbb  cc\") equals \"a bbb cc\".\n"
"\n"
"@SEEALSO=CLEAN, MID, REPLACE, SUBSTITUTE"
msgstr ""
"@FUNCTION=TRIM\n"
"@SYNTAX=TRIM(texte)\n"
"@DESCRIPTION=Renvoie @texte avec un seul espace entre chaque mot\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"TRIM(\"  a bbb  cc\") = \"a bbb cc\".\n"
"\n"
"@SEEALSO=CLEAN, MID, REPLACE, SUBSTITUTE"

#: ../plugins/fn-string/functions.c:948
msgid ""
"@FUNCTION=VALUE\n"
"@SYNTAX=VALUE(text)\n"
"@DESCRIPTION=VALUE returns numeric value of @text.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"VALUE(\"$1,000\") equals 1000.\n"
"\n"
"@SEEALSO=DOLLAR, FIXED, TEXT"
msgstr ""
"@FUNCTION=VALUE\n"
"@SYNTAX=VALUE(texte)\n"
"@DESCRIPTION=Renvoie la valeur numérique de @texte.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"VALUE(\"$1,000\") = 1000.\n"
"\n"
"@SEEALSO=DOLLAR, FIXED, TEXT"

#: ../plugins/fn-string/functions.c:988
msgid ""
"@FUNCTION=SUBSTITUTE\n"
"@SYNTAX=SUBSTITUTE(text, old, new [,num])\n"
"@DESCRIPTION=SUBSTITUTE replaces @old with @new in @text.  Substitutions are "
"only applied to instance @num of @old in @text, otherwise every one is "
"changed.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SUBSTITUTE(\"testing\",\"test\",\"wait\") equals \"waiting\".\n"
"\n"
"@SEEALSO=REPLACE, TRIM"
msgstr ""
"@FUNCTION=SUBSTITUTE\n"
"@SYNTAX=SUBSTITUTE(texte;ancien;nouveau[;num])\n"
"@DESCRIPTION=Remplace @ancien par @nouveau dans @texte. Si @num est présent, "
"la substitution est uniquement appliquée à l'occurrence @num de @ancien dans "
"@texte, sinon toutes les occurrences sont remplacées.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SUBSTITUTE(\"tester\";\"test\";\"annul\") = \"annuler\".\n"
"\n"
"@SEEALSO=REPLACE, TRIM"

#: ../plugins/fn-string/functions.c:1066
msgid ""
"@FUNCTION=DOLLAR\n"
"@SYNTAX=DOLLAR(num[,decimals])\n"
"@DESCRIPTION=DOLLAR returns @num formatted as currency.\n"
"\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"DOLLAR(12345) equals \"$12,345.00\".\n"
"\n"
"@SEEALSO=FIXED, TEXT, VALUE"
msgstr ""
"@FUNCTION=DOLLAR\n"
"@SYNTAX=DOLLAR(nombre[;décimales])\n"
"@DESCRIPTION=Renvoie @nombre formaté comme une devise.\n"
"\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"DOLLAR(12345) = \"12 345,00 F\".\n"
"\n"
"@SEEALSO=FIXED, TEXT, VALUE"

#: ../plugins/fn-string/functions.c:1144
msgid ""
"@FUNCTION=SEARCH\n"
"@SYNTAX=SEARCH(search_string,text[,start_num])\n"
"@DESCRIPTION=SEARCH returns the location of the @search_ string within "
"@text. The search starts  with the @start_num character of text @text.  If "
"@start_num is omitted, it is assumed to be one.  The search is not case "
"sensitive.\n"
"\n"
"@search_string can contain wildcard characters (*) and question marks (?). A "
"question mark matches any character and a wildcard matches any string "
"including the empty string.  If you want the actual wildcard or question "
"mark to be found, use tilde (~) before the character.\n"
"\n"
"* If @search_string is not found, SEARCH returns #VALUE! error.\n"
"* If @start_num is less than one or it is greater than the length of @text, "
"SEARCH returns #VALUE! error.\n"
"* This function is Excel compatible.\n"
"\n"
"@EXAMPLES=\n"
"SEARCH(\"c\",\"Cancel\") equals 1.\n"
"SEARCH(\"c\",\"Cancel\",2) equals 4.\n"
"\n"
"@SEEALSO=FIND"
msgstr ""
"@FUNCTION=SEARCH\n"
"@SYNTAX=SEARCH(texte;cible[;départ])\n"
"@DESCRIPTION=Renvoie l'emplacement d'un caractère ou d'une chaîne de texte à "
"l'intérieur d'une autre chaîne. @texte est la chaîne de caractères à "
"rechercher. @cible est la chaîne de caractères dans laquelle doit se faire "
"la recherche. @départ est la position de départ de la recherche dans @cible. "
"Si @départ est omis, la valeur 1 est utilisée à la place. La recherche n'est "
"pas sensible à la casse. \n"
"@texte peut contenir des caractères jokers (*) et (?) afin de contrôler la "
"recherche. Un point d'interrogation se substituera à tout caractère, et une "
"étoile se substituera à toute chaîne de caractères, y compris la chaîne "
"vide. Si ces deux caractères spéciaux sont eux-mêmes l'objet de la "
"recherche, il faut les faire précéder d'un tilde (~). \n"
"\n"
"* Si @texte ne peut pas être trouvé, SEARCH renvoie l'erreur #VALEUR!.\n"
"* Si @départ est inférieur à un ou plus grand que la longueur de @cible, "
"SEARCH renvoie l'erreur #VALEUR!.\n"
"* Cette fonction est compatible avec Excel.\n"
"@EXAMPLES=\n"
"SEARCH(\"c\";\"Cancel\") = 1.\n"
"SEARCH(\"c\";\"Cancel\";2) = 4.\n"
"\n"
"@SEEALSO=FIND"

#: ../plugins/fn-string/functions.c:1221
msgid ""
"@FUNCTION=ASC\n"
"@SYNTAX=ASC(string)\n"
"@DESCRIPTION=ASC a compatibility function that is meaningless in Gnumeric.  "
"In MS Excel (tm) it converts 2 byte @string into single byte text.\n"
"\n"
"@EXAMPLES=\n"
"CHAR(\"Foo\") equals \"Foo\".\n"
"\n"
"@SEEALSO="
msgstr ""

#: ../plugins/fn-tsa/functions.c:321
msgid ""
"@FUNCTION=interpolation\n"
"@SYNTAX=interpolation(abscissas,ordinates,targets[,interpolation])\n"
"@DESCRIPTION= \n"
"interpolation returns interpolated values corresponding\n"
"to the given abscissa targets as a one column matrix.\n"
"\n"
"@abscissas are the absicssas of the data to interpolate.\n"
"@ordinates are the ordinates of the data to interpolate.\n"
"* Strings and empty cells in @abscissas and @ordinates are simply ignored.\n"
"@targets are the abscissas of the interpolated data. If several data\n"
"are provided, they must be in the same column, in consecutive cells\n"
"@interpolation is the method to be used for the interpolation;\n"
"possible values are:\n"
"- 0: linear;\n"
"- 1: linear with averaging;\n"
"- 2: staircase;\n"
"- 3: staircase with averaging;\n"
"- 4: natural cubic spline;\n"
"- 5: natural cubic spline with averaging.\n"
"\n"
"If an averaging method is used, the number of returned values\n"
"is one less than the number of targets since the evaluation is made by\n"
"averaging the interpolation over the interval between two consecutive data;\n"
"in that case, the targets values must be given in increasing order."
msgstr ""

#: ../plugins/fn-tsa/functions.c:607
msgid ""
"@FUNCTION=periodogram\n"
"@SYNTAX=periodogram(ordinates,[filter,[abscissas,[interpolation,"
"[number]]]])\n"
"@DESCRIPTION= \n"
"periodogram returns the periodogram of the data\n"
"as a one column matrix.\n"
"\n"
"@ordinates are the ordinates of the data to interpolate.\n"
"@filter gives the window function to  be used. Possible values are:\n"
"- 0: no filter (rectangular window);\n"
"- 1: Bartlett (triangular window);\n"
"- 2: Hahn (cosine window);\n"
"- 3: Welch (parabolic window);\n"
"@abscissas are the absicssas of the data to interpolate. If no\n"
"abscissa is given, it is supposed that the data absicssas are regularly\n"
"spaced. Otherwise, an interpolation method will be used to evaluate\n"
"regularly spaced data.\n"
"* Strings and empty cells in @abscissas and @ordinates are simply ignored.\n"
"@interpolation is the method to be used for the interpolation;\n"
"possible values are:\n"
"- 0: linear;\n"
"- 1: linear with averaging;\n"
"- 2: staircase;\n"
"- 3: staircase with averaging;\n"
"- 4: natural cubic spline;\n"
"- 5: natural cubic spline with averaging.\n"
"@number is the number of interpolated data to be used. If not given,\n"
"a default number is automatically evaluated.\n"
msgstr ""

#: ../plugins/gda/plugin-gda.c:319
msgid ""
"@FUNCTION=EXECSQL\n"
"@SYNTAX=EXECSQL(dsn,username,password,sql)\n"
"@DESCRIPTION=The EXECSQL function lets you execute a command in a database "
"server, and show the results returned in current sheet. It uses libgda as "
"the means for accessing the databases.\n"
"For using it, you need first to set up a libgda data source.\n"
"@EXAMPLES=\n"
"To get all the data from the table \"Customers\" present in the "
"\"mydatasource\" GDA data source, you would use:\n"
"EXECSQL(\"mydatasource\",\"username\",\"password\",\"SELECT * FROM customers"
"\")\n"
"@SEEALSO=READDBTABLE"
msgstr ""
"@FUNCTION=EXECSQL\n"
"@SYNTAX=EXECSQL(dsn,identifiant,motdepasse,sql)\n"
"@DESCRIPTION=La fonction EXECSQL vous permet d'exécuter une commande sur un\n"
"serveur de base de données, et d'afficher les résultats dans la feuille\n"
"courante. Elle utilise libgda comme moyen d'accès aux bases de données.\n"
"\n"
"@EXAMPLES=\n"
"Pour obtenir toutes les données de la table \"clients\" présente dans la "
"source de données GDA \"mydatasource\", vous devrez utiliser :\n"
"EXECSQL(\"mydatasource\",\"identifiant\",\"motdepasse\",\"SELECT * FROM "
"clients\")\n"
"@SEEALSO=READDBTABLE"

#: ../plugins/gda/plugin-gda.c:391
#, fuzzy
msgid ""
"@FUNCTION=READDBTABLE\n"
"@SYNTAX=READDBTABLE(dsn,username,password,table)\n"
"@DESCRIPTION=The READDBTABLE function lets you get the contents of a table, "
"as stored in a database. For using it, you need first to set up a libgda "
"data source.\n"
"Note that this function returns all the rows in the given table. If you want "
"to get data from more than one table or want a more precise selection "
"(conditions), use the EXECSQL function.\n"
"@EXAMPLES=\n"
"To get all the data from the table \"Customers\" present in the "
"\"mydatasource\" GDA data source, you would use:\n"
"READDBTABLE(\"mydatasource\",\"username\",\"password\",\"customers\")\n"
"@SEEALSO=EXECSQL"
msgstr ""
"@FUNCTION=READDBTABLE\n"
"@SYNTAX=READDBTABLE(dsn,identifiant,motdepasse,table)\n"
"@DESCRIPTION=La fonction READDBTABLE vous permets d'obtenir le contenu d'une "
"table tel que stockée dans une base de données. Pour l'utiliser, vous devez "
"d'abord définir une source de données GDA.\n"
"Notez que cette fonction retourne toutes les lignes d'une table donnée. Si "
"vous voulez obtenir les données de plus d'une table ou une sélection plus "
"précise (conditionnel), utilisez la fonction EXECSQL.\n"
"@EXAMPLES=\n"
"Pour obtenir toute les données de la table \"clients\" présente dans la "
"source de données GDA \"mydatasource\", vous devez utiliser :\n"
"READDBTABLE(\"mydatasource\",\"identifiant\",\"motdepasse\",\"clients\")\n"
"@SEEALSO=EXECSQL"

#: ../plugins/numtheory/numtheory.c:206
msgid ""
"@FUNCTION=NT_PHI\n"
"@SYNTAX=NT_PHI(n)\n"
"@DESCRIPTION=NT_PHI function calculates the number of integers less than or "
"equal to @n that are relatively prime to @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_SIGMA"
msgstr ""
"@FUNCTION=NT_PHI\n"
"@SYNTAX=NT_PHI(n)\n"
"@DESCRIPTION=La fonction NT_PHI calcule le nombre d'entiers inférieurs ou "
"égaux à @n qui sont premiers avec @n.\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_SIGMA"

#. xgettext: you can translate the funny character as an 'o' if unicode is not available.
#: ../plugins/numtheory/numtheory.c:244
msgid ""
"@FUNCTION=NT_MU\n"
"@SYNTAX=NT_MU(n)\n"
"@DESCRIPTION=NT_MU function (Möbius mu function) returns \n"
"0  if @n is divisible by the square of a prime .\n"
"Otherwise it returns: \n"
"\n"
"  -1 if @n has an odd  number of different prime factors .\n"
"   1  if @n has an even number of different prime factors .\n"
"\n"
"* If @n = 1 NT_MU returns 1.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"
msgstr ""
"@FUNCTION=NT_MU\n"
"@SYNTAX=NT_MU(n)\n"
"@DESCRIPTION=La fonction NT_MU (fonction mu de Möbius) renvoie 0 si @n est "
"divisible par le carré d'un nombre premier.\n"
"Autrement elle renvoie :\n"
"-1 si @n a un nombre impair de facteurs premiers.\n"
"1  si @n a un nombre pair de facteurs premiers.\n"
"\n"
"* Si @n = 1 elle renvoie 1\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"

#: ../plugins/numtheory/numtheory.c:286
msgid ""
"@FUNCTION=NT_D\n"
"@SYNTAX=NT_D(n)\n"
"@DESCRIPTION=NT_D function calculates the number of divisors of @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_SIGMA"
msgstr ""
"@FUNCTION=NT_D\n"
"@SYNTAX=NT_D(n)\n"
"@DESCRIPTION=La fonction NT_D calcule le nombre de diviseurs de @n.\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:322
msgid ""
"@FUNCTION=NT_SIGMA\n"
"@SYNTAX=NT_SIGMA(n)\n"
"@DESCRIPTION=NT_SIGMA function calculates the sum of the divisors of @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"
msgstr ""
"@FUNCTION=NT_SIGMA\n"
"@SYNTAX=NT_SIGMA(n)\n"
"@DESCRIPTION=La fonction NT_SIGMA calcule la somme des diviseurs de @n.\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, ITHPRIME, NT_PHI"

#: ../plugins/numtheory/numtheory.c:359
msgid ""
"@FUNCTION=ITHPRIME\n"
"@SYNTAX=ITHPRIME(i)\n"
"@DESCRIPTION=ITHPRIME function returns the @ith prime.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, NT_SIGMA"
msgstr ""
"@FUNCTION=ITHPRIME\n"
"@SYNTAX=ITHPRIME(i)\n"
"@DESCRIPTION=La fonction ITHPRIME renvoie le @ième nombre premier.\n"
"@EXAMPLES=\n"
"@SEEALSO=NT_D, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:389
msgid ""
"@FUNCTION=ISPRIME\n"
"@SYNTAX=ISPRIME(i)\n"
"@DESCRIPTION=ISPRIME function returns TRUE if @i is prime and FALSE "
"otherwise.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_D, NT_SIGMA"
msgstr ""
"@FUNCTION=ISPRIME\n"
"@SYNTAX=ISPRIME(i)\n"
"@DESCRIPTION=La fonction ISPRIME renvoie TRUE si @i est premier et FALSE "
"sinon.\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_D, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:447
msgid ""
"@FUNCTION=PFACTOR\n"
"@SYNTAX=PFACTOR(n)\n"
"@DESCRIPTION=PFACTOR function returns the smallest prime factor of its "
"argument.\n"
"\n"
"The argument must be at least 2, or else a #VALUE! error is returned.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME"
msgstr ""

#: ../plugins/numtheory/numtheory.c:483
msgid ""
"@FUNCTION=NT_PI\n"
"@SYNTAX=NT_PI(n)\n"
"@DESCRIPTION=NT_PI function returns the number of primes less than or equal "
"to @n.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_D, NT_SIGMA"
msgstr ""
"@FUNCTION=NT_PI\n"
"@SYNTAX=NT_PI(n)\n"
"@DESCRIPTION=La fonction NT_PI renvoie le nombre de nombres premiers "
"inférieurs ou égaux à @n.\n"
"@EXAMPLES=\n"
"@SEEALSO=ITHPRIME, NT_PHI, NT_D, NT_SIGMA"

#: ../plugins/numtheory/numtheory.c:518
msgid ""
"@FUNCTION=BITOR\n"
"@SYNTAX=BITOR(a,b)\n"
"@DESCRIPTION=BITOR function returns bitwise or-ing of its arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITXOR,BITAND"
msgstr ""
"@FUNCTION=BITOR\n"
"@SYNTAX=BITOR(a;b)\n"
"@DESCRIPTION=La fonction BITOR renvoie le résultat d'un OU bit-à-bit sur ses "
"arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITXOR,BITAND"

#: ../plugins/numtheory/numtheory.c:545
msgid ""
"@FUNCTION=BITXOR\n"
"@SYNTAX=BITXOR(a,b)\n"
"@DESCRIPTION=BITXOR function returns bitwise exclusive or-ing of its "
"arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITAND"
msgstr ""
"@FUNCTION=BITXOR\n"
"@SYNTAX=BITXOR(a;b)\n"
"@DESCRIPTION=La fonction BITXOR renvoie le résultat d'un OU EXCLUSIF bit-à-"
"bit sur ses arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITAND"

#: ../plugins/numtheory/numtheory.c:573
msgid ""
"@FUNCTION=BITAND\n"
"@SYNTAX=BITAND(a,b)\n"
"@DESCRIPTION=BITAND function returns bitwise and-ing of its arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITXOR"
msgstr ""
"@FUNCTION=BITAND\n"
"@SYNTAX=BITAND(a;b)\n"
"@DESCRIPTION=La fonction BITAND renvoie le résultat d'un ET bit-à-bit sur "
"ses arguments.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITOR,BITXOR"

#: ../plugins/numtheory/numtheory.c:601
msgid ""
"@FUNCTION=BITLSHIFT\n"
"@SYNTAX=BITLSHIFT(x,n)\n"
"@DESCRIPTION=BITLSHIFT function returns @x bit-shifted left by @n bits.\n"
"\n"
"* If @n is negative, a right shift will in effect be performed.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITRSHIFT"
msgstr ""
"@FUNCTION=BITLSHIFT\n"
"@SYNTAX=BITLSHIFT(x,n)\n"
"@DESCRIPTION=La fonction BITLSHIFT renvoie @x décalé à gauche de @n bits.\n"
"\n"
"* Si @n est négatif, @x sera décalé vers la droite.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITRSHIFT"

#: ../plugins/numtheory/numtheory.c:634
msgid ""
"@FUNCTION=BITRSHIFT\n"
"@SYNTAX=BITRSHIFT(x,n)\n"
"@DESCRIPTION=BITRSHIFT function returns @x bit-shifted right by @n bits.\n"
"\n"
"* If @n is negative, a left shift will in effect be performed.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITLSHIFT"
msgstr ""
"@FUNCTION=BITRSHIFT\n"
"@SYNTAX=BITRSHIFT(x,n)\n"
"@DESCRIPTION=La fonction BITRSHIFT renvoie @x décalé à droite de @n bits.\n"
"\n"
"* Si @n est négatif, @x sera décalé vers la gauche.\n"
"\n"
"@EXAMPLES=\n"
"@SEEALSO=BITRSHIFT"

#: ../plugins/sample_datasource/sample_datasource.c:272
#, fuzzy, no-c-format
msgid ""
"@FUNCTION=atl_last\n"
"@SYNTAX=ATL_LAST (tag)\n"
"@DESCRIPTION=ATL_LAST is a sample implemention of a real time data source. "
"It takes a string tag and monitors the named pipe /tmp/atl for changes to "
"the value of that tag.\n"
"\n"
"* This is not intended to be generally enabled and is OFF by default.\n"
"\n"
"@EXAMPLES=\n"
"ATL_LAST(\"IBM\")\n"
"@SEEALSO="
msgstr ""
"@FUNCTION=atl_last\n"
"@SYNTAX=ATL_LAST (tag)\n"
"@DESCRIPTION=ATL_LAST est une tentative d'implémentation d'une source de "
"donées en temps réel. Il surveille le tube nommé /tmp/atl pour détecter les "
"changements de valeur de l'étiquette @tag.\n"
"\n"
"* Ceci n'est pas supposé être utilisé, et est désactivé par défaut.\n"
"\n"
"@EXAMPLES=\n"
"ATL_LAST(\"IBM\")\n"
"@SEEALSO="

#~ msgid ""
#~ "@FUNCTION=COLUMN\n"
#~ "@SYNTAX=COLUMN([reference])\n"
#~ "@DESCRIPTION=COLUMN function returns the column number of the current "
#~ "cell unless @reference is given. In that case, it returns an array of the "
#~ "column numbers of all cells in @reference. \n"
#~ "* If @reference is neither an array nor a reference nor a range, COLUMN "
#~ "returns #VALUE! error.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "COLUMN() in E1 equals 5.\n"
#~ "\n"
#~ "@SEEALSO=COLUMNS,ROW,ROWS"
#~ msgstr ""
#~ "@FUNCTION=COLUMN\n"
#~ "@SYNTAX=COLUMN([référence])\n"
#~ "@DESCRIPTION=La fonction COLUMN renvoie le numéro de colonne de la "
#~ "cellule courante. Si @référence est présent, COLUMN renvoie un tableau "
#~ "des numéros de colonnes des cellules contenues dans @reference.\n"
#~ "\n"
#~ "* Si @référence n'est ni un tableau, ni une référence, ni un intervalle, "
#~ "la fonction renvoie l'erreur #VALEUR!\n"
#~ "@EXAMPLES=\n"
#~ "COLUMN() en E1 vaut 5.\n"
#~ "\n"
#~ "@SEEALSO=COLUMNS,ROW,ROWS"

#~ msgid ""
#~ "@FUNCTION=ROW\n"
#~ "@SYNTAX=ROW([reference])\n"
#~ "@DESCRIPTION=ROW function returns an array of the row numbers taking a "
#~ "default argument of the containing cell position.\n"
#~ "\n"
#~ "* If @reference is neither an array nor a reference nor a range, ROW "
#~ "returns #VALUE! error.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "ROW() in G13 equals 13.\n"
#~ "\n"
#~ "@SEEALSO=COLUMN,COLUMNS,ROWS"
#~ msgstr ""
#~ "@FUNCTION=ROW\n"
#~ "@SYNTAX=ROW([référence])\n"
#~ "@DESCRIPTION=La fonction ROW renvoie un tableau de numéros de ligne en "
#~ "prenant comme argument par défaut les positions de cellules contenues "
#~ "dans @référence.\n"
#~ "\n"
#~ "* Si @référence n'est ni un tableau, ni une référence, ni un intervalle, "
#~ "la fonction renvoie l'erreur #VALEUR!\n"
#~ "@EXAMPLES=\n"
#~ "ROW() en G13 vaut 13.\n"
#~ "\n"
#~ "@SEEALSO=COLUMN,COLUMNS,ROWS"

#~ msgid ""
#~ "@FUNCTION=FLOOR\n"
#~ "@SYNTAX=FLOOR(x[,significance])\n"
#~ "@DESCRIPTION=FLOOR function rounds @x down to the next nearest multiple "
#~ "of @significance.\n"
#~ "\n"
#~ "* @significance defaults to 1.\n"
#~ "* This function is Excel compatible.\n"
#~ "\n"
#~ "@EXAMPLES=\n"
#~ "FLOOR(0.5) equals 0.\n"
#~ "FLOOR(5,2) equals 4.\n"
#~ "FLOOR(-5,-2) equals -4.\n"
#~ "FLOOR(-5,2) equals #NUM!.\n"
#~ "\n"
#~ "@SEEALSO=CEIL, CEILING, ABS, INT, MOD"
#~ msgstr ""
#~ "@FUNCTION=FLOOR\n"
#~ "@SYNTAX=FLOOR(x[;précision])\n"
#~ "@DESCRIPTION=La fonction FLOOR arrondit @x au multiple de @précision "
#~ "immédiatement inférieur, ou à l'entier immédiatement inférieur si "
#~ "@précision est omis.\n"
#~ "* Cette fonction est compatible avec Excel.\n"
#~ "@EXAMPLES=\n"
#~ "FLOOR(0,5) vaut 0.\n"
#~ "FLOOR(5;2) vaut 4.\n"
#~ "FLOOR(-5;-2) vaut -4.\n"
#~ "FLOOR(-5;2) vaut #NUM!.\n"
#~ "\n"
#~ "@SEEALSO=CEIL, ABS, INT"
