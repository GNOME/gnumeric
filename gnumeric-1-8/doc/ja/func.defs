@FUNCTION=ABS
@SYNTAX=ABS(b1)
@DESCRIPTION=ABS 関数は絶対値関数を実行します。この結果は(もしあれば)負の符号を切り落とします。この関数は整数および実数にのみ有効です。
この関数は Excel 互換です。
@EXAMPLES=
ABS(7) = 7 です。
ABS(-3.14) = 3.14 です。

@SEEALSO=CEIL, FLOOR

@FUNCTION=ACCRINT
@SYNTAX=ACCRINT(発行日,最初の利払い日,受領日,利率,額面,頻度[,基準])
@DESCRIPTION=ACCRINT 関数は定期的に利息が支払われる証券の未収利息額を返します。@利率 には証券の年利率、@額面 には証券の額面価格を指定します。@基準 には日数の計算方法を数値で指定します:
0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@発行日、@最初の利払い日、@受領日 に無効な日付を指定すると #NUM! エラーが返されます。@利率、@額面 に 0(ゼロ)または負の数を指定すると、#NUM! エラーが返されます。@基準 に上記以外の数値を指定すると、#NUM! エラーが返されます。@発行日 が @受領日と同じか、より後の日付に指定されると #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=ACCRINTM

@FUNCTION=ACCRINTM
@SYNTAX=ACCRINTM(発行日,受領日,利率,[額面,基準])
@DESCRIPTION=ACCRINTM 関数は満期日に利息が支払われる証券の未収利息額を返します。@利率 には証券の年利率、@額面 には証券の額面価格を指定します。@額面 を省略した場合には、デフォルトとして$1,000が適用されます。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@発行日、@満期日 に無効な日付を指定すると #NUM! エラーが返されます。@利率、@額面 に 0(ゼロ)または負の数を指定すると、#NUM! エラーが返されます。@基準 に上記以外の数値を指定すると、#NUM! エラーが返されます。@発行日 が @満期日 と同じか、より後の日付に指定されると #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=ACCRINT

@FUNCTION=ACOS
@SYNTAX=ACOS(x)
@DESCRIPTION=ACOS 関数は @x の逆余弦を求めます。つまり、結果の値の余弦は x になります。もし @x が -1 から 1 の範囲外なら、ACOS は失敗し、NUM! エラーを返します。返り値はラジアンで返されます。
この関数は Excel 互換です。
@EXAMPLES=
ACOS(0.1) = 1.470629 です。
ACOS(-0.1) = 1.670964 です。

@SEEALSO=COS, SIN, DEGREES, RADIANS

@FUNCTION=ACOSH
@SYNTAX=ACOSH(x)
@DESCRIPTION=ACOSH 関数は @x の逆双曲線余弦を計算します。つまり、結果の値の双曲線余弦(cosh)が @x となります。もし @x が 1.0 以下なら、acosh() は NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
ACOSH(2) = 1.31696 です。
ACOSH(5.3) = 2.35183 です。

@SEEALSO=ACOS, ASINH, DEGREES, RADIANS 

@FUNCTION=ADDRESS
@SYNTAX=ADDRESS(行番号,列番号[,セル参照の型1,セル参照の型2,ワークシート名])
@DESCRIPTION=ADDRESS 関数は指定された行および列の番号に対するセルのアドレスを文字列として返します。
@セル参照の型1 が 1 あるいは省略されている場合、絶対参照を返します。@セル参照の型1 が 2 の場合、行が絶対参照、列が相対参照になります。@セル参照の型1 が 3 の場合、行が相対参照、列が絶対参照になります。@セル参照の型1 が 4 の場合、相対参照を返します。@セル参照の型1 が 4 より大きいと #NUM! エラーを返します。
@セル参照の型2 は論理値で、TRUE が指定されるか、省略された場合は、A1 形式でセル参照を返します(例: $D$4)。FALSE の場合には R1C1 形式でセル参照を返します(例: R4C4)。
@ワークシート名 には外部参照で使用するワークシート名を指定します。
@行番号、@列番号 に 1 より小さい値を指定すると、#NUM! エラーが返されます。
@EXAMPLES=
ADDRESS(5,4) = "$D$5" です。
ADDRESS(5,4,4) = "D5" です。
ADDRESS(5,4,3,FALSE) = "R[5]C4" です。

@SEEALSO=

@FUNCTION=AMORDEGRC
@SYNTAX=AMORDEGRC(取得価額,購入日,開始期,残存価額,期,率[,年の基準])
@DESCRIPTION=AMORGEGRC 関数は各会計期における減価償却費を返します。@取得価額 は資産を購入した時点での価格です。@購入日 は資産を購入した日付です。@年の基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると AMORGEGRC 関数は #NUM! エラーを返します。@年の基準 が省略された場合には、30日/360日(米国方式) が適用されます。@年の基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=AMORLINC
@SYNTAX=AMORLINC(取得価額,購入日,開始期,残存価額,期,率[,年の基準])
@DESCRIPTION=AMORLINC 関数は各会計期における減価償却費を返します。@取得価額 は資産を購入した時点での価格です。@購入日 は資産を購入した日付です。@年の基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると AMORLINC 関数は #NUM! エラーを返します。@年の基準 が省略された場合には、30日/360日(米国方式) が適用されます。@年の基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=AND
@SYNTAX=AND(b1, b2, ...)
@DESCRIPTION=AND 関数は論理積関数です。この結果が TRUE になるのは、全ての式の評価が TRUE の場合で、それ以外は FALSE を返します。
@b1 から @bN は、評価が TRUE か FALSE になる式です。もし整数か実数が与えられた場合、0 が FALSE とみなされ、それ以外は TRUE とみなされます。
もしこの値に文字列や空白のセルが含まれているとこれらの値は無視されます。もし一つも論理値が指定されないと、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
AND(TRUE,TRUE) = TRUE です。
AND(TRUE,FALSE) = FALSE です。

A1 が 5 で、A2 が 1 の場合
AND(A1>3,A2<2) = TRUE です。

@SEEALSO=OR, NOT

@FUNCTION=ASIN
@SYNTAX=ASIN(x)
@DESCRIPTION=ASIN 関数は @x の逆正弦を計算します。つまり、結果の正弦が @x になります。もし @x が -1 から 1 の範囲外だと、ASIN は失敗し、#NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
ASIN(0.5) = 0.523599 です。
ASIN(1) = 1.570797 です。

@SEEALSO=SIN, COS, ASINH, DEGREES, RADIANS

@FUNCTION=ASINH
@SYNTAX=ASINH(x)
@DESCRIPTION=ASIN 関数は @x の逆双曲線正弦を計算します。つまり、結果の双曲線正弦(sinh)が @x になります。
この関数は Excel 互換です。
@EXAMPLES=
ASINH(0.5) = 0.481212 です。
ASINH(1.0) = 0.881374 です。

@SEEALSO=ASIN, ACOSH, SIN, COS, DEGREES, RADIANS

@FUNCTION=ATAN
@SYNTAX=ATAN(x)
@DESCRIPTION=ATAN 関数は @x の逆正接を計算します。すなわち、結果の正接が @x なります。返り値はラジアンで返されます。
この関数は Excel 互換です。
@EXAMPLES=
ATAN(0.5) = 0,463648 です。
ATAN(1) = 0,785398 です。

@SEEALSO=TAN, COS, SIN, DEGREES, RADIANS

@FUNCTION=ATAN2
@SYNTAX=ATAN2(b1,b2)
@DESCRIPTION=ATAN2 関数は二つの変数 @b1 と @b2 の逆正接を計算します。これは @b2 / @b1 の逆正接を求めるのに似ていますが、この結果の象限を決定するために両引数の符号が使われる点が違います。結果はラジアンで返されます。
この関数は Excel 互換です。
@EXAMPLES=
ATAN2(0.5,1.0) = 1.107149 です。
ATAN2(-0.5,2.0) = 1.815775 です。

@SEEALSO=ATAN, ATANH, COS, SIN, DEGREES, RADIANS

@FUNCTION=ATANH
@SYNTAX=ATANH(x)
@DESCRIPTION=ATANH 関数は @x の逆双曲線正接を計算します。すなわち結果の双曲線正接(tanh)が @x となります。もし @x の絶対値が 1.0 より大きいと、ATANH は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
ATANH(0.5) = 0.549306 です。
ATANH(0.8) = 1.098612 です。

@SEEALSO=ATAN, TAN, SIN, COS, DEGREES, RADIANS

@FUNCTION=AVEDEV
@SYNTAX=AVEDEV(数値1, 数値2, ...)
@DESCRIPTION=AVEDEV 関数はデータ全体の平均偏差を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
AVEDEV(A1:A5) = 7.84 です。

@SEEALSO=STDEV

@FUNCTION=AVERAGE
@SYNTAX=AVERAGE(数値1, 数値2,...)
@DESCRIPTION=AVERAGE 関数は全ての値や引数に与えられたセルの参照の平均を返します。これは引数の総和を引数の個数で割ったものです。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
AVERAGE(A1:A5) = 23.2 です。

@SEEALSO=SUM, COUNT

@FUNCTION=AVERAGEA
@SYNTAX=AVERAGEA(値1, 値2,...)
@DESCRIPTION=全ての値および引数リストで参照されているセルの平均を計算します。数値, 文字列, 論理値も計算に含まれます。セルの内容が文字列または論理値 FALSEの場合には 0(ゼロ) として計算され、論理値 TRUE は 1 として計算されます。空のセルは計算には含まれません。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
AVERAGEA(A1:A5) = 18.94 です。

@SEEALSO=AVERAGE

@FUNCTION=BESSELI
@SYNTAX=BESSELI(x,y)
@DESCRIPTION=BESSELI 関数はノイマン, ウェーバー, またはベッセル関数を返します。@x 関数に代入する変数です。@y はベッセル関数の次数を指定します。@y に整数以外の値を指定すると、小数点以下が切り捨てられます。
@x または @y に数値以外の値を指定すると #VALUE! が返されます。@y に負の値をを指定すると、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
BESSELI(0.7,3) = 0.007367374 です。

@SEEALSO=BESSELJ,BESSELK,BESSELY

@FUNCTION=BESSELJ
@SYNTAX=BESSELJ(x,y)
@DESCRIPTION=BESSELJ 関数はベッセル関数を返します。@x は関数に代入する変数です。@y はベッセル関数の次数を指定します。@y に整数以外の値を指定すると小数点以下が切り捨てられます。
@x または @y に数値以外の値を指定すると、#VALUE! エラーが返されます。@y に負の値を指定すると #NUM!エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
BESSELJ(0.89,3) = 0.013974004 です。

@SEEALSO=BESSELJ,BESSELK,BESSELY

@FUNCTION=BESSELK
@SYNTAX=BESSELK(x,y)
@DESCRIPTION=BESSELK 関数はウェーバー, ノイマン, またはベッセル関数を返します。@x は関数に代入する値を指定します。@y はベッセル関数の次数を指定します。@y に整数以外の値を指定すると小数点以下が切り捨てられます。
@x あるいは @y に数値以外の値を指定すると#VALUE!エラーが返されます。@yに負の値を指定すると #NUM!エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
BESSELK(3,9) = 397.95880 です。

@SEEALSO=BESSELI,BESSELJ,BESSELY

@FUNCTION=BESSELY
@SYNTAX=BESSELY(x,y)
@DESCRIPTION=BESSELY 関数はウェーバー, ノイマン, またはベッセル関数を返します。@x は関数に代入する値を指定します。@y はベッセル関数の次数を指定します。@y に整数以外の値を指定すると小数点以下が切り捨てられます。
@x あるいは @y に数値以外の値を指定すると#VALUE!エラーが返されます。@yに負の値を指定すると #NUM!エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
BESSELY(4,2) = 0.215903595 です。

@SEEALSO=BESSELJ,BESSELK,BESSELY

@FUNCTION=BETADIST
@SYNTAX=BETADIST(x,α,β[,a,b])
@DESCRIPTION=BETADIST 関数は累積β確率密度関数の値を返します。@a は @x の区間の下限で、@b は @x の区間の上限でそれぞれオプションです。@a が指定されなかった場合 BETADIST 関数は 0 を使用します。@b が指定されなかった場合 BETADIST 関数は 1 を使用します。
@x < @a または @x > @b の場合 BETADIST 関数は #NUM! エラーを返します。@α <= 0 または @β <= 0 の場合 BETADIST 関数は #NUM! エラーを返します。 @a >= @b の場合 BETADIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
BETADIST(0.12,2,3) = 0.07319808 です。

@SEEALSO=BETAINV

@FUNCTION=BETAINV
@SYNTAX=BETAINV(確率,α,β[,a,b])
@DESCRIPTION=BETAINV 関数は累積β確率密度関数の逆関数の値を返します。@a は @x の区間の下限で、@b は @x の区間の上限でそれぞれオプションです。@a が指定されなかった場合 BETAINV 関数は 0 を使用します。@b が指定されなかった場合 BETAINV 関数は 1 を使用します。
@確率 < 0 または @確率 > 1 の場合 BETAINV 関数は #NUM! エラーを返します。@α <= 0 または @β <= 0 の場合 BETAINV 関数は #NUM! エラーを返します。 @a >= @b の場合 BETAINV 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
BETAINV(0.45,1.6,1) = 0.607096629 です。

@SEEALSO=BETADIST

@FUNCTION=BIN2DEC
@SYNTAX=BIN2DEC(x)
@DESCRIPTION=BIN2DEC 関数は2進数を対応する文字列あるいは10進数に変換します。
この関数は Excel 互換です。
@EXAMPLES=
BIN2DEC(101) = 5 です。

@SEEALSO=DEC2BIN, BIN2OCT, BIN2HEX

@FUNCTION=BIN2HEX
@SYNTAX=BIN2HEX(数値[,列数])
@DESCRIPTION=BIN2HEX 関数は2進数を文字列あるいは対応する16進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせてゼロを埋めることができます。
@列数 が小さすぎたり負数であると #NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
BIN2HEX(100111) = 27 です。

@SEEALSO=HEX2BIN, BIN2OCT, BIN2DEC

@FUNCTION=BIN2OCT
@SYNTAX=BIN2OCT(数値[,列数])
@DESCRIPTION=BIN2OCT 関数は2進数を対応する文字列あるいは8進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせてゼロを埋めることができます。
@列数 が小さすぎたり負数であると #NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
BIN2OCT(110111) = 67 です。

@SEEALSO=OCT2BIN, BIN2DEC, BIN2HEX

@FUNCTION=BINOMDIST
@SYNTAX=BINOMDIST(成功数,試行回数,成功率,関数形式)
@DESCRIPTION=BINOMDIST 関数は二項分布の確率を返します。@成功数 は成功の回数で、@試行回数 は独立試行の回数で、@成功率 は一回の試行が成功する確率で、@関数形式 は @成功数 の以下の成功が得られる確率 (累積分布) または @成功数 の成功が得られる確率 (確率密度) のどちらかを指定します。
@成功数 または @試行回数 が整数でない場合は切り捨てられれます。@成功数 < 0 または @試行回数 < 0 の場合 BINOMDIST 関数は #NUM! エラーを返します。@成功数 > @試行数 の場合 BINOMDIST 関数は #NUM! エラーを返します。@成功率 < 0 または @成功率 > 1 の場合 BINOMDIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
BINOMDIST(3,5,0.8,0) = 0.2048 です。

@SEEALSO=POISSON

@FUNCTION=CEIL
@SYNTAX=CEIL(x)
@DESCRIPTION=CEIL 関数は @x を一番近い次の整数に切り上げます。
この関数は Excel 互換です。
@EXAMPLES=
CEIL(0.4) = 1
CEIL(-1.1) = -1
CEIL(-2.9) = -2

@SEEALSO=ABS, FLOOR, INT

@FUNCTION=CEILING
@SYNTAX=CEILING(数値,基準)
@DESCRIPTION=CEILING 関数は @数値 を @基準 の倍数のうち0から遠いほうで最も近い値に丸めます。
@数値 または @基準 が数値以外の場合には、#VALUE! エラーが返されます。@数値 と @基準 の符号が異なる場合、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
CEILING(2.43,1) = 3 です。
CEILING(123.123,3) = 126 です。

@SEEALSO=CEIL

@FUNCTION=CELL
@SYNTAX=CELL(検査の種類,対象範囲)
@DESCRIPTION=CELL 関数は @対象範囲 の左上隅にあるセルの書式、位置、内容に関する情報を返します。
@検査の種類 には取得したい次の情報の種類を文字列で指定して下さい:
     address       @対象範囲 の左上隅にあるセルの参照を表す文字列を返します。
     col           @対象範囲 の左上隅にあるせるの列番号を返します。
     contents      @対象範囲 の左上隅にあるセルの内容を返します。
     format        セルの表示形式に対する文字列定数を返します。
     parentheses   @対象範囲 が正の数あるいは全ての値をカッコで囲む書式が
                   セルに設定されていれば 1 を返します。
     row           @対象範囲 の左上隅にあるセルの行番号を返します。
     width         小数点以下を切り捨てた整数のセル幅を返します。

この関数は Excel 互換です。
@EXAMPLES=
CEll("format",A1) はセル A1 の表示形式に対する文字列を返します。

@SEEALSO=

@FUNCTION=CHAR
@SYNTAX=CHAR(x)
@DESCRIPTION=CHAR 関数は数値 @x で表現される ASCII 文字を返します。
@EXAMPLES=
CHAR(65) = A です。

@SEEALSO=CODE

@FUNCTION=CHIDIST
@SYNTAX=CHIDIST(x,自由度)
@DESCRIPTION=CHIDIST 関数は片側カイ二乗分布の確率を返します。@自由度 は自由度の数値です。
@自由度 が整数でない場合は切り捨てられます。@自由度 < 1 の場合 CHIDIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
CHIDIST(5.3,2) = 0.070651213 です。

@SEEALSO=CHIINV,CHITEST

@FUNCTION=CHIINV
@SYNTAX=CHIINV(確率,自由度)
@DESCRIPTION=CHIINV 関数は片側カイ二乗分布の逆関数の値を返します。
@確率 < 0 または @確率 > 1 または @自由度 < 1 の場合 CHIINV 関数は #NUM! を返します。
この関数は Excel 互換です。
@EXAMPLES=
CHIINV(0.98,7) = 1.564293004 です。

@SEEALSO=CHIDIST,CHITEST

@FUNCTION=CHITEST
@SYNTAX=CHITEST(実測値範囲,期待値範囲)
@DESCRIPTION=CHITEST 関数はカイ二乗検定による適合度検定の結果を返します。
@実測値範囲 は期待値に対する検定の実測値が入力されているデータ範囲です。@期待値範囲 は期待値が入力されているデータ範囲です。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=CHIDIST,CHIINV

@FUNCTION=CHOOSE
@SYNTAX=CHOOSE(インデックス[,値1][,値2]...)
@DESCRIPTION=CHOOSE 関数は @インデックス に該当する値をリストから選択します。@インデックス が整数以外の数値の場合、まるめられます。
@インデックス が 1 より小さい、あるいは@値の引数の数より大きい場合、#VAL!エラーが返されます。
@EXAMPLES=
CHOOSE(3,"Apple","Orange","Grape","Perry") = "Grape" です。

@SEEALSO=IF

@FUNCTION=CLEAN
SYNTAX=CLEAN(文字列)
@DESCRIPTION=CLEAN 関数は印刷できない文字列(プリンタ制御文字など)を削除します。
この関数は Excel 互換です。
@EXAMPLES=
CLEAN("one"\&char(7)) = "one" です。

@SEEALSO=

@FUNCTION=CODE
@SYNTAX=CODE(char)
@DESCRIPTION=CODE 関数は文字 @char に対する ASCII コードを返します。
この関数は Excel 互換です。
@EXAMPLES=
CODE("A") = 65 です。

@SEEALSO=CHAR

@FUNCTION=COLUMN
@SYNTAX=COLUMN([参照文字列])
@DESCRIPTION=COLUMN 関数はセル位置を含むデフォルト引数をとる列番号の配列を返します。
@参照文字 が配列でも参照文字列でも範囲でもなければ、#VALUE! を返します。
@EXAMPLES=
セル E1 の COLUMN() = 5 です。

@SEEALSO=COLUMNS,ROW,ROWS

@FUNCTION=COLUMNS
@SYNTAX=COLUMNS(参照文字列)
@DESCRIPTION=COLUMNS 関数は範囲あるいは配列参照の中の列番号を返します。
@参照文字列 が配列でも参照文字列でも範囲でもなければ、#VALUE! を返します。
@EXAMPLES=
COLUMNS(H2:J3) = 3 です。
 
@SEEALSO=COLUMN,ROW,ROWS

@FUNCTION=COMBIN
@SYNTAX=COMBIN(n,k)
@DESCRIPTION=COMBIN 関数は組合せ(nCk)の計算を行います。
整数や負の数値が指定されるとエラーが返されます。また、@n が @k より小さな値の場合もエラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
COMBIN(8,6) = 28 です。
COMBIN(6,2) = 15 です。

@SEEALSO=

@FUNCTION=COMPLEX
@SYNTAX=COMPLEX(実数,虚数[,虚数単位])
@DESCRIPTION=COMPLEX は 'x + yi' の形式の複素数を返します。@実数には複素数の実数係数を、@虚数には虚数係数を指定します。@虚数単位には虚数の単位として使う文字を指定します。省略した場合には'i' をデフォルトとして使用します。
@虚数単位が 'i' でも 'j' でもない場合、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
COMPLEX(1,-1) = 1-i です。

@SEEALSO=

@FUNCTION=CONCATENATE
@SYNTAX=CONCATENATE(文字列1[,文字列2...])
@DESCRIPTION=CONCATENATE 関数は引数の文字列を連結した文字列を返します。
この関数は Excel 互換です。
@EXAMPLES=
CONCATENATE("aa","bb") = "aabb" です。

@SEEALSO=LEFT, MID, RIGHT

@FUNCTION=CONFIDENCE
@SYNTAX=CONFIDENCE(x,標準偏差,標本数)
@DESCRIPTION=CONFIDENCE 関数は母集団の平均値に対する信頼区間を返します。@x は信頼度を計算するための有意水準で、@標準偏差 は母集団の標準偏差で、@標本数 は標本の総数です。
@標本数 が整数でない場合は切り捨てられます。@標本数 < 0 の場合 CONFIDENCE 関数は #NUM! エラーを返します。@標本数 = 0 の場合 CONFIDENCE 関数は #DIV/0! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
CONFIDENCE(0.05,1,33) = 0.341185936 です。

@SEEALSO=AVERAGE

@FUNCTION=CONVERT
@SYNTAX=CONVERT(数値,変換前単位,変換後単位)
@DESCRIPTION=CONVERT 関数はある単位から別の単位への変換結果を返します。例えば、重さの値をポンドからグラムに変換することができます。@数値 には変換したい数値、@変換前単位 には変換前の単位、@変換後単位 には変換したい単位を指定します。
@変換前単位 および @変換前単位に 使用できる単位は以下のとおりです:

重さおよび質量:
'g'    グラム
'sg'   スラグ
'lbm'  ポンド (常衡)
'u'    U (原子質量単位)
'ozm'  オンス (常衡)

距離:
'm'    メートル
'mi'   マイル
'Nmi'  海里
'in'   インチ
'ft'   フィート
'yd'   ヤード
'ang'  オングストローム
'Pica' パイカ (1/72 インチ)

時間:
'yr'   年
'day'  日
'hr'   時
'mn'   分
'sec'  秒

Pressure:
'Pa'   パスカル
'atm'  気圧
'mmHg' mmHg

力:
'N'    ニュートン
'dyn'  ダイン
'lbf'  ポンド力

エネルギー:
'J'    ジュール
'e'    エルグ
'c'    カロリー (物理化学的熱量)
'cal'  カロリー (生理学的代謝熱量)
'eV'   エレクトロンボルト
'HPh'  馬力/h
'Wh'   ワット/h
'flb'  フィートポンド
'BTU'  BTU (英国熱量単位)

出力:
'HP'   馬力
'W'    ワット
磁力:
'T'    テスラ
'ga'   ガウス

温度:
'C'    摂氏
'F'    華氏
'K'    絶対温度

液量単位:
'tsp'  ティースプーン
'tbs'  テーブルスプーン
'oz'   オンス
'cup'  カップ
'pt'   パイント
'qt'   クォート
'gal'  ガロン
'l'    リットル

メートル法では以下の単位を前につけることができます:
'E'  エクサ   1E+18
'P'  ペタ     1E+15
'T'  テラ     1E+12
'G'  ギガ     1E+09
'M'  メガ     1E+06
'k'  キロ     1E+03
'h'  ヘクト   1E+02
'e'  デカ     1E+01
'd'  デシ     1E-01
'c'  センチ   1E-02
'm'  ミリ     1E-03
'u'  マイクロ 1E-06
'n'  ナノ     1E-09
'p'  ピコ     1E-12
'f'  フェムト 1E-15
'a'  アト     1E-18

@変換前単位 と @変換後単位 に違うタイプが指定された場合、#NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
CONVERT(3,"lbm","g") = 1360.7769 です。
CONVERT(5.8,"m","in") = 228.3465 です。
CONVERT(7.9,"cal","J") = 33.07567 です。

@SEEALSO=

@FUNCTION=CORREL
@SYNTAX=CORREL(配列1,配列2)
@DESCRIPTION=CORREL 関数は二つのデータセットの相関係数を返します。
文字列と空セルは無視されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ..., B5 の値がそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると、
CORREL(A1:A5,B1:B5) = 0.996124788 です。

@SEEALSO=COVAR,FISHER,FISHERINV

@FUNCTION=COS
@SYNTAX=COS(x)
@DESCRIPTION=COS 関数は x の余弦を返します。この x はラジアンで与えられます。
この関数は Excel 互換です。
@EXAMPLES=
COS(0.5) = 0.877583 です。
COS(1) = 0.540302 です。

@SEEALSO=COSH, SIN, SINH, TAN, TANH, RADIANS, DEGREES

@FUNCTION=COSH
@SYNTAX=COSH(x)
@DESCRIPTION=COSH 関数は x の双曲線余弦を返します。数学的には (exp(x) + exp(-x)) / 2 として定義されます。x はラジアンを用います。
この関数は Excel 互換です。
@EXAMPLES=
COSH(0.5) = 1.127626 です。
COSH(1) = 1.543081 です。

@SEEALSO=COS, SIN, SINH, TAN, TANH, RADIANS, DEGREES, EXP

@FUNCTION=COUNT
@SYNTAX=COUNT(数値1, 数値2, ...)
@DESCRIPTION=COUNT 関数は引数に含まれる数値や論理値などの個数を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
COUNT(A1:A5) = 5 です。

@SEEALSO=AVERAGE

@FUNCTION=COUNTA
@SYNTAX=COUNTA(数値1, 数値2, ...)
@DESCRIPTION=COUNTA 関数は引数に含まれる数値や論理値、文字列の個数を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値、文字列がそれぞれ 11.4, "missing", "missing", 25.9, 40.1 とすると
COUNTA(A1:A5) = 5 です。

@SEEALSO=AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM

@FUNCTION=COUNTBLANK
@SYNTAX=COUNTBLANK(範囲)
@DESCRIPTION=COUNTBLANK 関数は指定された @範囲 の空白セルの数を返します。
この関数は Execl 互換です。
@EXAMPLES=
COUNTBLANK(A1:A20) はセル A1:A20 の空白セルの数を返します。

@SEEALSO=COUNT

@FUNCTION=COUNTIF
@SYNTAX=COUNTIF(範囲,条件)
@DESCRIPTION=COUNTIF 関数は @条件 に合致する @範囲 内のセルの数を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 23, 27, 28, 33, 39 とすると
COUNTIF(A1:A5,"<=28") = 3 です。
COUNTIF(A1:A5,"<28") = 2 です。
COUNTIF(A1:A5,"28") = 1 です。
COUNTIF(A1:A5,">28") = 2 です。

@SEEALSO=COUNT,SUMIF

@FUNCTION=COUPDAYBS
@SYNTAX=COUPDAYBS(受領日,満期日,頻度[,基準,月末])
@DESCRIPTION=COUPDAYBS 関数は利札期の第一日目から受領日までの日数を返します。
@受領日 は証券の受領日です。
@満期日 は証券の満期日です。
@頻度 は年間の利息支払い回数です。
@月末 を TRUE にすると月末の満期日を特別に扱います。
有効な @頻度 は次のとおりです: 1 = 年一回、2 = 年二回、4 = 四半期、@月末 が TRUE の場合は 6 = 隔月、12 = 毎月
@基準 には日数の計算方法を数値で指定します:

0  30日/360日(MSRB G33 (e)方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)
5  30日/360日(欧州+方式)
(これらの基準について、詳細は gnumeric のマニュアルをご覧下さい)

@頻度 に 1,2,4 以外を指定すると COUPDAYBS 関数は #NUM! エラーを返します。
@基準 が省略された場合には、30日/360日 (MSRB G33 (e)方式) が適用されます。
@基準 が正しくない場合はに #NUM! エラーが返されます。

@EXAMPLES=
COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 89 です。
COUPDAYBS (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 0 です。
@SEEALSO=

@FUNCTION=COUPDAYBS
@SYNTAX=COUPDAYBS(受領日,満期日,頻度[,基準,月末])
@DESCRIPTION=COUPDAYBS 関数は利札期の第一日目から受領日までの日数を返します。
@受領日 は証券の受領日です。
@満期日 は証券の満期日です。
@頻度 は年間の利息支払い回数です。
@月末 を TRUE にすると月末の満期日を特別に扱います。
有効な @頻度 は次のとおりです: 1 = 年一回、2 = 年二回、4 = 四半期、@月末 が TRUE の場合は 6 = 隔月、12 = 毎月
@基準 には日数の計算方法を数値で指定します:

0  30日/360日(MSRB G33 (e)方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)
5  30日/360日(欧州+方式)
(これらの基準について、詳細は gnumeric のマニュアルをご覧下さい)

@頻度 に 1,2,4 以外を指定すると COUPDAYBS 関数は #NUM! エラーを返します。
@基準 が省略された場合には、30日/360日 (MSRB G33 (e)方式) が適用されます。
@基準 が正しくない場合はに #NUM! エラーが返されます。

@EXAMPLES=
COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0) = 90 です。
COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 90 です。
COUPDAYS (DATE(2002,11,29),DATE(2004,2,29),4,1,FALSE) = 91 です。
@SEEALSO=

@FUNCTION=COUPDAYSYNC
@SYNTAX=COUPDAYSNC(受領日,満期日,頻度[,基準,月末])
@DESCRIPTION=COUPDAYSNC 関数は受領日から次の利息支払日までの日数を返します。
@受領日 は証券の受領日です。
@満期日 は証券の満期日です。
@頻度 は年間の利息支払い回数です。
@月末 を TRUE にすると月末の満期日を特別に扱います。
有効な @頻度 は次のとおりです: 1 = 年一回、2 = 年二回、4 = 四半期、@月末 が TRUE の場合 6 = 隔月、12 = 毎月
@基準 には日数の計算方法を数値で指定します

0  30日/360日(MSRB G33 (e)方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)
5  30日/360日(欧州+方式)
(これらの基準について、詳細は gnumeric のマニュアルをご覧下さい)

@頻度 に 1,2,4 以外を指定すると COUPDAYSNC 関数は #NUM! エラーを返します。
@基準 が省略された場合には、30日/360日(MSRB G33 (e)方式) が適用されます。
@基準 が正しくない場合はに #NUM! エラーが返されます。

@EXAMPLES=
COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0) = 1 です。
COUPDAYSNC (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 89 です。
@SEEALSO=

@FUNCTION=COUPNCD
@SYNTAX=COUPNCD(受領日,満期日,頻度[,基準,月末])
@DESCRIPTION=COUPNCD 関数は受領日の直後の利息支払日を返します。
@受領日 は証券の受領日です。
@満期日 は証券の満期日です。
@頻度 は年間の利息支払い回数です。
@月末 を TRUE にすると月末の満期日を特別に扱います。
有効な @頻度 は次のとおりです: 1 = 年一回、2 = 年二回、4 = 四半期、@月末 が TRUE の場合 6 = 隔月、12 = 毎月
@基準 には日数の計算方法を数値で指定します

0  30日/360日(MSRB G33 (e)方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)
5  30日/360日(欧州+方式)
(これらの基準について、詳細は gnumeric のマニュアルをご覧下さい)

@頻度 に 1,2,4 以外を指定すると COUPNCD 関数は #NUM! エラーを返します。
@基準 が省略された場合には、30日/360日(MSRB G33 (e)方式) が適用されます。
@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。

@EXAMPLES=
COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 30-Nov-2002 です。
COUPNCD (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 28-Feb-2003 です。
@SEEALSO=

@FUNCTION=COUPNUM
@SYNTAX=COUPNUM(受領日,満期日,頻度[,基準,月末])
@DESCRIPTION=COUPPCD 関数は受領日と満期日の間に支払われる利息の回数を返します。
@受領日 は証券の受領日です。
@満期日 は証券の満期日です。
@頻度 は年間の利息支払い回数です。
@月末 を TRUE にすると月末の満期日を特別に扱います。
有効な @頻度 は次のとおりです: 1 = 年一回、2 = 年二回、4 = 四半期、@月末 が TRUE の場合 6 = 隔月、12 = 毎月
@基準 には日数の計算方法を数値で指定します

0  30日/360日(MSRB G33 (e)方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)
5  30日/360日(欧州+方式)

@頻度 に 1,2,4 以外を指定すると COUPNUM 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(MSRB G33 (e)方式) が適用されます。@基準 が正しくない場合はに #NUM! エラーが返されます。
@EXAMPLES=
COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0) = 6 です。
COUPNUM (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 5 です。
@SEEALSO=

@FUNCTION=COUPNCD
@SYNTAX=COUPNCD(受領日,満期日,頻度[,基準,月末])
@DESCRIPTION=COUPNCD 関数は受領日の直後の利息支払日を返します。
@受領日 は証券の受領日です。
@満期日 は証券の満期日です。
@頻度 は年間の利息支払い回数です。
@月末 を TRUE にすると月末の満期日を特別に扱います。
有効な @頻度 は次のとおりです: 1 = 年一回、2 = 年二回、4 = 四半期、@月末 が TRUE の場合 6 = 隔月、12 = 毎月
@基準 には日数の計算方法を数値で指定します

0  30日/360日(MSRB G33 (e)方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)
5  30日/360日(欧州+方式)
(これらの基準について、詳細は gnumeric のマニュアルをご覧下さい)

@頻度 に 1,2,4 以外を指定すると COUPNCD 関数は #NUM! エラーを返します。
@基準 が省略された場合には、30日/360日(MSRB G33 (e)方式) が適用されます。
@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。

@EXAMPLES=
COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0) = 31-AUG-2002 です。
COUPPCD (DATE(2002,11,29),DATE(2004,2,29),4,0,FALSE) = 29-Nov-2002 です。
@SEEALSO=

@FUNCTION=COVAR
@SYNTAX=COVAR(配列1,配列2)
@DESCRIPTION=COVAR 関数は二つのデータセットの範囲を返します。
文字列と空セルは無視されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ..., B5 の値がそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると、
COVAR(A1:A5,B1:B5) = 65.858 です。

@SEEALSO=CORREL,FISHER,FISHERINV

@FUNCTION=CRITBINOM
@SYNTAX=CRITBINOM(試行回数,成功率,α)
@DESCRIPTION=CRITBINOM 関数は累積二項分布の値が基準値以上になる最小の成功回数を返します。@試行回数 はベルヌーイ試行の回数で、@成功率 は一回の試行が成功する確率で、@α は基準値です。
@試行回数 が整数でない場合は切り捨てられます。@試行回数 < 0 の場合 CRITBINOM 関数は #NUM! エラーを返します。@成功率 < 0 または @成功率 > 1 の場合 CRITBINOM 関数は #NUM! エラーを返します。@α < 0 または @α > 1 の場合 CRITBINOM 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
CRITBINOM(10,0.5,0.75) = 6 です。

@SEEALSO=BINOMDIST

@FUNCTION=CUMIPMT
@SYNTAX=CUMIPMT(利率,期間,現在価値,開始期,終了期,支払い期日)
@DESCRIPTION=CUMIMPT 関数は指定された @開始期 と @終了期 の間に貸付金に対して支払われる利息の累計を返します。
@EXAMPLES=

@SEEALSO=

@FUNCTION=CUMPRINC
@SYNTAX=CUMPRINC(利率,期間,現在価値,開始期,終了期,支払い期日)
@DESCRIPTION=CUMPRINC 関数は指定された @開始期 と @終了期 の間に貸付金に対して支払われる元金の累計を返します。
@EXAMPLES=

@SEEALSO=

@FUNCTION=DATE
@SYNTAX=DATE (年,月,日)
@DESCRIPTION=DATE 関数は与えられた年月日の 1900年1月1日 (その日のシリアル番号) からの日数を返します。

@月 < 1 または @月 > 12 の場合、年は正しい値になります。微調整は日に回されます。

@年 は 1900 年以降にして下さい。@年 < 1900 の場合、1900 + @年 と見なされます。

指定された日が正しくない場合、DATE 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
DATE(2001, 3, 30) = 'Mar 30, 2001' です。

@SEEALSO=TODAY, NOW

@FUNCTION=DATE2UNIX
@SYNTAX=DATE2UNIX(シリアル)
@DESCRIPTION=DATE2UNIX 関数はスプレッドシートの日付と時刻を UNIX 時刻に換算します。

"UNIX 時刻"は 1970年1月1日 からカウントした秒数です。

@EXAMPLES=

@SEEALSO=NOW, DATE, UNIX2DATE

@FUNCTION=DATEDIF
@SYNTAX=DATEDIF(開始日,終了日,単位)
@DESCRIPTION=DATEDIF 関数は指定された二つ日付の差を返します。@単位 には次のものを指定することができます:  "y", "m", "d", "ym", "md", "yd"
最初の三つのオプションは指定された二つの日付のそれぞれ年数、月数、日数を返します。
"ym" は二つの日付の差の満月数を返します。年の差は考慮しません。
"md" は二つの日付の差の満日数を返します。月の差は考慮しません。
"yd" は二つの日付の差の満日数を返します。年の差は考慮しません。
この関数は Excel 互換です。
@EXAMPLES=
DATEDIF(DATE(2000,4,30),DATE(2003,8,4),"d") = 1191 です。
DATEDIF(DATE(2000,4,30),DATE(2003,8,4),"y") = 3 です。

@SEEALSO=DATE

@FUNCTION=DATEVALUE
@SYNTAX=DATEVALUE(日付の文字列)
@DESCRIPTION=DATEVALUE 関数は日付の連続値を返します。@日付の文字列 は日付を表す文字列です。
この関数は Excel 互換です。
@EXAMPLES=
DATEVALUE("1/1/1999") = 36160 です。
@SEEALSO=DATE

@FUNCTION=DAVERAGE
@SYNTAX=DAVERAGE(database,field,criteria)
@DESCRIPTION=DAVERAGE function returns the average of the values in a list or database that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DAVERAGE(A1:C7, "Salary", A9:A11) equals 42296.3333.
DAVERAGE(A1:C7, "Age", A9:A11) equals 39.
DAVERAGE(A1:C7, "Salary", A9:B11) equals 40782.5.
DAVERAGE(A1:C7, "Age", A9:B11) equals 36.

@SEEALSO=DCOUNT

@FUNCTION=DAY
@SYNTAX=DAY (シリアル値)
@DESCRIPTION=DAY 関数はシリアル値で表される日付の日を返します。
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
DAY("10/24/1968") = 24 です。

@SEEALSO=MONTH, TIME, NOW, YEAR

@FUNCTION=DAYS360 
@SYNTAX=DAYS360 (日付1,日付2,方式)
@DESCRIPTION=DAYS360 関数は1年を360日(30日 x 12ヶ月)として、@日付1 と @日付2 の間の日数を返します。@方式 が TRUE の場合、ヨーロッパ方式を使います。
この方式では、日付に指定された日がある月の31日にあたる場合、その月の30日日として計算します。
@方式 が FALSE あるいは省略された場合には、米国方式を使います。この方式は、少々複雑な産業標準方式です。
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
DAYS360(DATE(2003, 2, 3), DATE(2007, 4, 2)) = 1499 です。

@SEEALSO=MONTH, TIME, NOW, YEAR

@FUNCTION=DB
@SYNTAX=DB(取得価額,残存価額,耐用年数,期[,月])
@DESCRIPTION=DB 関数は定率法を使用して、指定された@期の減価償却費を計算します。@取得価額 は購入時の価格、@残存価額 は@耐用年数を経過した時点での価格、@期 には減価償却を求める期、@月 は資産を購入した年の月数を指定します。@月 が省略された場合には、12が指定されたとみなされます。
@EXAMPLES=

@SEEALSO=DDB,SLN,SYD

@FUNCTION=DCOUNT
@SYNTAX=DCOUNT(database,field,criteria)
@DESCRIPTION=DCOUNT function counts the cells that contain numbers in a database that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DCOUNT(A1:C7, "Salary", A9:A11) equals 3.
DCOUNT(A1:C7, "Salary", A9:B11) equals 2.
DCOUNT(A1:C7, "Name", A9:B11) equals 0.

@SEEALSO=DAVERAGE

@FUNCTION=DCOUNTA
@SYNTAX=DCOUNTA(database,field,criteria)
@DESCRIPTION=DCOUNTA function counts the cells that contain data in a database that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DCOUNTA(A1:C7, "Salary", A9:A11) equals 3.
DCOUNTA(A1:C7, "Salary", A9:B11) equals 2.
DCOUNTA(A1:C7, "Name", A9:B11) equals 2.

@SEEALSO=DCOUNT

@FUNCTION=DDB
@SYNTAX=DDB(取得価額,残存価額,耐用年数,期[,率])
@DESCRIPTION=DDB 関数は倍率法あるいは指定された償却率を使用して、資産の減価償却費を返します。@取得価額 は資産の購入時の価格、@残存価額 は @耐用年数 を経過した時点での価格、@期 には減価償却を求める期、@率 には逓減率を指定します。逓減率が省略された場合は 2(倍率逓減法) が指定されたとみなされます。
@EXAMPLES=

@SEEALSO=SLN,SYD

@FUNCTION=DEC2BIN
@SYNTAX=DEC2BIN(数値[,列数])
@DESCRIPTION=DEC2BIN 関数は10進数を2進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
@列数 が小さすぎたり負であると #NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
DEC2BIN(42) = 101010 です。

@SEEALSO=BIN2DEC, DEC2OCT, DEC2HEX

@FUNCTION=DEC2HEX
@SYNTAX=DEC2HEX(数値[,列数])
@DESCRIPTION=DEC2HEX 関数は10進数から16進数に変換します。@配置 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
@配置 が小さすぎたり負であると #NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
DEC2HEX(42) = 2A です。

@SEEALSO=HEX2DEC, DEC2BIN, DEC2OCT

@FUNCTION=DEC2OCT
@SYNTAX=DEC2OCT(数値[,列数])
@DESCRIPTION=DEC2OCT 関数は10進数から8進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
@列数 が小さすぎたり負であると #NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
DEC2OCT(42) = 52 です。

@SEEALSO=OCT2DEC, DEC2BIN, DEC2HEX

@FUNCTION=DEGREES
@SYNTAX=DEGREES(x)
@DESCRIPTION=DEGREES 関数は @x ラジアンに対応する度数を計算します。
この関数は Excel 互換です。
@EXAMPLES=
DEGREES(2.5) = 143.2394 です。

@SEEALSO=RADIANS, PI

@FUNCTION=DELTA
@SYNTAX=DELTA(x[,y])
@DESCRIPTION=DELTA 関数は二つの値が等しいかどうかを調べます。x = y のときに 1 を返します。@y はオプションで、省略した場合には 0 が指定されたと見なします。
どちらかに数値以外が指定された場合、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
DELTA(42.99,43) = 0 です。

@SEEALSO=EXACT,GESTEP

@FUNCTION=DEVSQ
@SYNTAX=DEVSQ(数値1, 数値2, ...)
@DESCRIPTION=DEVSQ 関数はデータの偏差の平方和を返します。
セルが文字列や空の場合は、単に無視されるだけです。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
DEVSQ(A1:A5) = 470.56 です。

@SEEALSO=STDEV

@FUNCTION=DGET
@SYNTAX=DGET(database,field,criteria)
@DESCRIPTION=DGET function returns a single value from a column that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

If none of the items match the conditions, DGET returns #VALUE! error. If more than one items match the conditions, DGET returns #NUM! error. 
@EXAMPLES=
DGET(A1:C7, "Salary", A9:A10) equals 34323.
DGET(A1:C7, "Name", A9:A10) equals "Clark".

@SEEALSO=DCOUNT

@FUNCTION=DISC
@SYNTAX=DISC(受領日,満期日,現在価値,償還価値[,基準])
@DESCRIPTION=DISC 関数は全額投資された証券に対する割引率を返します。@受領日 は証券の受取日です。@満期日 は証券の満期位置です。@現在価値 は額面 $100 に対する証券の価格です。@償還価値 は額面 $100 に対する証券の償還額です。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@受領日 が省略されるか @満期日 が正しくない場合には DISC 関数は #NUM! エラーを返します。@基準 が省略された場合は 30日/360日(米国方式) が適用されます。@基準が 0 より小さくまたは 4 より大きい場合には DISC 関数は #NUM! エラーを返します。@受領日 が @満期日 よりもあとにある、または同じ場合には DISC 関数は #NUM! エラーを返します。
@EXAMPLES=

@SEEALSO=

@FUNCTION=DMAX
@SYNTAX=DMAX(database,field,criteria)
@DESCRIPTION=DMAX function returns the largest number in a column that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DMAX(A1:C7, "Salary", A9:A11) equals 47242.
DMAX(A1:C7, "Age", A9:A11) equals 45.
DMAX(A1:C7, "Age", A9:B11) equals 43.

@SEEALSO=DMIN

@FUNCTION=DMIN
@SYNTAX=DMIN(database,field,criteria)
@DESCRIPTION=DMIN function returns the smallest number in a column that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DMIN(A1:C7, "Salary", A9:B11) equals 34323.
DMIN(A1:C7, "Age", A9:B11) equals 29.

@SEEALSO=DMAX

@FUNCTION=DOLLAR
@SYNTAX=DOLLAR(数値[,小数])
@DESCRIPTION=DOLLAR 関数は金額にフォーマットされた @数値 を返します。
この関数は Excel 互換です。
@EXAMPLES=
DOLLAR(12345) = "$12,345.00" です。

@SEEALSO=FIXED, TEXT, VALUE

@FUNCTION=DOLLARDE
@SYNTAX=DOLLARDE(分子,分母)
@DESCRIPTION=DOLLARDE 関数は分数で表示されたドル価格を小数表示に変換します。
@分母 に整数以外の値を指定すると、小数点以下が切り捨てられます。@分母 に 0(ゼロ)以下の値を指定すると、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=DOLLARFR

@FUNCTION=DOLLARFR
@SYNTAX=DOLLARFR(小数値,分母)
@DESCRIPTION=DOLLARFR 関数は小数で表示されたドル価格を分数表示に変換します。
@分母 に整数以外の値を指定すると、小数点以下が切り捨てられます。@分母 に 0(ゼロ)以下の値を指定すると、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=DOLLARDE

@FUNCTION=DPRODUCT
@SYNTAX=DPRODUCT(database,field,criteria)
@DESCRIPTION=DPRODUCT function returns the product of numbers in a column that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DPRODUCT(A1:C7, "Age", A9:B11) equals 1247.

@SEEALSO=DSUM

@FUNCTION=DSTDEV
@SYNTAX=DSTDEV(database,field,criteria)
@DESCRIPTION=DSTDEV function returns the estimate of the standard deviation of a population based on a sample. The populations consists of numbers that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DSTDEV(A1:C7, "Age", A9:B11) equals 9.89949.
DSTDEV(A1:C7, "Salary", A9:B11) equals 9135.112506.

@SEEALSO=DSTDEVP

@FUNCTION=DSTDEVP
@SYNTAX=DSTDEVP(database,field,criteria)
@DESCRIPTION=DSTDEVP function returns the standard deviation of a population based on the entire populations. The populations consists of numbers that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DSTDEVP(A1:C7, "Age", A9:B11) equals 7.
DSTDEVP(A1:C7, "Salary", A9:B11) equals 6459.5.

@SEEALSO=DSTDEV

@FUNCTION=DSUM
@SYNTAX=DSUM(database,field,criteria)
@DESCRIPTION=DSUM function returns the sum of numbers in a column that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DSUM(A1:C7, "Age", A9:B11) equals 72.
DSUM(A1:C7, "Salary", A9:B11) equals 81565.

@SEEALSO=DPRODUCT

@FUNCTION=DURATION
@SYNTAX=DURATION(利率,現在価値,将来価値)
@DESCRIPTION=DURATION 関数は投資が要求する値になるまでにどれだけの期間がかかるかをかえします。この関数は FV や PV に似ていますが、キャッシュフローの方向を指定する必要がない点だけが違います。例えば、-100 ならば出資、+100 ならば受領などです。
@EXAMPLES=

@SEEALSO=PPMT,PV,FV

@FUNCTION=DVAR
@SYNTAX=DVAR(database,field,criteria)
@DESCRIPTION=DVAR function returns the estimate of variance of a population based on a sample. The populations consists of numbers that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DVAR(A1:C7, "Age", A9:B11) equals 98.
DVAR(A1:C7, "Salary", A9:B11) equals 83450280.5.

@SEEALSO=DVARP

@FUNCTION=DVARP
@SYNTAX=DVARP(database,field,criteria)
@DESCRIPTION=DVARP function returns the variance of a population based on the entire populations. The populations consists of numbers that match conditions specified. 
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example. 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criterias are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifing a value, e.g. ``3'' or ``John''.  Each row in @criteria specifies a separate condition, i.e. if a row in @database matches with one of the rows in @criteria then that row is counted in (technically speaking boolean OR between the rows in @criteria).  If @criteria specifies more than one columns then each of the conditions in these columns should be true that the row in @database matches (again technically speaking boolean AND between the columns in each row in @criteria). 
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324

In addition, the cells A9:B11 contain the following values:
Age     Salary
<30
>40     >46000

@EXAMPLES=
DVARP(A1:C7, "Age", A9:B11) equals 49.
DVARP(A1:C7, "Salary", A9:B11) equals 41725140.25.

@SEEALSO=DVAR

@FUNCTION=EDATE
@SYNTAX=EDATE(開始日,月)
@DESCRIPTION=EDATE は@開始日から数えて、@月数だけ前または後の日付のシリアル値を返します。@開始日は起点の日付のシリアル値です。@月は@開始日を起点とした月数で、負の数は@開始日より前、正の数は@開始日より後を意味します。@月に整数以外の値が指定されると、切り捨てられます。
@EXAMPLES=
EDATE(DATE(2001,12,30),2) = 'Feb 28, 2002'  です。

@SEEALSO=DATE

@FUNCTION=EFFECT
@SYNTAX=EFFECT(名目利率,複利計算期間)
@DESCRIPTION=EFFECT 関数は指定された @名目利率と一年あたりの @複利計算期間 をもとに実行年利率を計算します。
実行年利率は次の公式で計算されます。

    ( 1 + @r / @nper ) ^ @nper - 1

ここで

@r = 名目年利率 (一年あたり)
@nper = 一年あたりの複利計算期間
@EXAMPLES=
例として、名目年利率を APR(年利率)として表記するクレジットカードの場合を示します。
年利率 19% で毎月複利計算されるクレジットカードの実効年利率は以下のような式となります。
EFFECT(.19,12) = .2075 または 20.75%これが実際に支払うローンの実効年利率となります。
@SEEALSO=NOMINAL

@FUNCTION=EOMONTH
@SYNTAX=EOMONTH (開始日,月数)
@DESCRIPTION=EOMONTH 関数は @開始日 から @月数 だけ前あるいは後の月の最終日を返します。
@開始日あるいは @月数 が無効な場合 #NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
A1 が 12/21/00 の場合 EOMONTH(A1,0)=12/31/00, EOMONTH(A1,5)=5/31/01,EOMONTH(A1,2)=2/28/01 です。

@SEEALSO=MONTH

@FUNCTION=ERF
@SYNTAX=ERF([下限,]上限)
@DESCRIPTION=ERF 関数は一つの引数だけを指定した場合、次に示す関数で定義された誤差関数をを返します。erf(x) = 2/sqrt(pi)* integral from 0 to x of exp(-t*t) dt. 二つの引数を指定した場合、誤差関数の積分値を返します。
@下限 または @上限 に数値以外が指定されると、#VALUE! エラーが返されます。
この関数は Excel の ERF 関数の上位互換です。(Excel では 二つの引数を指定する場合に、どちらの引数にも負の数値を指定することができません。)
@EXAMPLES=
ERF(0.4) = 0.428392355 です。
ERF(1.6448536269515/SQRT(2)) = 0.90 です。

二番目の例は、正規分布の確率変数は 90% の確率で標準偏差がほぼ 1.645 になることを示しています。
@SEEALSO=ERFC

@FUNCTION=ERFC
@SYNTAX=ERFC(x)
@DESCRIPTION=ERFC 関数は相補誤差関数の積分値を返します。この関数は 1-erf(x) で定義されます。erfc(x) は引数が 0.5 付近より大きな値の場合に erf(x) より正確に計算することができます。
@x に数値以外を指定すると、#VALUE! エラーが返されます。
@EXAMPLES=
ERFC(6) = 2.15197367e-17 です。

@SEEALSO=ERF

@FUNCTION=ERROR
@SYNTAX=ERROR(text)
@DESCRIPTION=ERROR は指定されたエラーを返します。

@EXAMPLES=
ERROR("#OWN ERROR")

@SEEALSO=ISERROR

@FUNCTION=ERROR.TYPE
@SYNTAX=ERROR(値)
@DESCRIPTION=ERROR.TYPE 関数はエラー値に対応した数値を返します。エラー値とERROR.TYPE の戻り値の対応は以下のとおりです。
#DIV/0!    2
#VALUE!    3
#REF!      4
#NAME!     5
#NUM!      6
#NA!       7
この関数は Excel 互換です。
@EXAMPLES=
ERROR.TYPE(NA()) = 7 です。

@SEEALSO=ISERROR

@FUNCTION=EURO
@SYNTAX=EURO(通貨単位)
@DESCRIPTION=EURO 関数は1ユーロを指定された EU 加盟国の通貨単位に変換します。@通貨単位 は以下の中から選択してください。
    ATS     (オーストリア)
    BEF     (ベルギー)
    DEM     (ドイツ)
    ESP     (スペイン)
    FIM     (フィンランド)
    FRF     (フランス)
    IEP     (アイルランド)
    ITL     (イタリア)
    LUF     (ルクセンブルグ)
    NLG     (オランダ)
    PTE     (ポルトガル)

上記以外の通貨単位を指定すると、#NUM! エラーが返されます。
@EXAMPLES=
EURO("DEM") = 1.95583 です。
@SEEALSO=

@FUNCTION=EVEN
@SYNTAX=EVEN(数値)
@DESCRIPTION=EVEN 関数は指定された @数値 にもっとも近い偶数の整数に切り上げ、その値を返します。
この関数は Excel 互換です。
@EXAMPLES=
EVEN(5.4) = 6 です。

@SEEALSO=ODD

@FUNCTION=EXACT
@SYNTAX=EXACT(文字列1, 文字列2)
@DESCRIPTION=EXACT は@文字列1と@文字列2が完全に同じ場合に TRUE を返します。(この関数は大文字、小文字を区別します)
この関数は Excel 互換です。
@EXAMPLES=
EXACT("key","key") = TRUE です。
EXACT("key","Key") = FALSE です。

@SEEALSO=LEN, SEARCH, DELTA

@FUNCTION=EXP
@SYNTAX=EXP(x)
@DESCRIPTION=EXP 関数は e(自然対数の底)の x 乗(べき乗)の値を計算します。
この関数は Excel 互換です。
@EXAMPLES=
EXP(2) = 7.389056 です。

@SEEALSO=LOG, LOG2, LOG10

@FUNCTION=EXPONDIST
@SYNTAX=EXPONDIST(x,y,関数形式)
@DESCRIPTION=EXPONDIST 関数は指数分布関数の値を返します。@関数形式 の論理値が偽 (0) の場合の返り値は @y * exp (-@y*@x) で、それ以外は 1 - exp (-@y*@x) です。
@x < 0 または @y <= 0 の場合はエラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
EXPONDIST(2,4,0) = 0.001341851 です。

@SEEALSO=POISSON

@FUNCTION=EXPRESSION
@SYNTAX=EXPRESSION(セル)
@DESCRIPTION=EXPRESSION 関数は @セル の中の式を文字列で返します。セルが式でなければ空を返します。
@EXAMPLES=
セル A1 で EXPRESSION(A2) = 'EXPRESSION(A3)' です。
セル A2 で EXPRESSION(A3) = 空 です。

@SEEALSO=TEXT

@FUNCTION=FACT
@SYNTAX=FACT(x)
@DESCRIPTION=FACT 関数は x の階乗を計算します(x!)。
この関数は Excel 互換です。
@EXAMPLES=
FACT(3) = 6 です。
FACT(9) = 362880 です。

@SEEALSO=

@FUNCTION=FACTDOUBLE
@SYNTAX=FACTDOUBLE(数値)
@DESCRIPTION=FACTDOUBLE 関数は @数値 の二重階乗を返します。つまり x!! です。
@数値 が整数でない数値の場合、小数点以下は無視されます。@数値 が負の数の場合、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
FACTDOUBLE(5) = 15 です。

@SEEALSO=FACT

@FUNCTION=FALSE
@SYNTAX=FALSE()
@DESCRIPTION=FALSE 関数は論理値の FALSE を返します。
この関数は Excel 互換です。
@EXAMPLES=
FALSE() = FALSE です。

@SEEALSO=TRUE

@FUNCTION=FDIST
@SYNTAX=FDIST(x,自由度1,自由度2)
@DESCRIPTION=FDIST 関数は F 確率分布の片側確率を返します。@自由度1 は分子にあたる分散グループの自由度で @自由度2 は分母にあたる分散グループの自由度です。
@x < 0 の場合 FDIST 関数は #NUM! エラーを返します。@自由度1 < 1 または @自由度2 < 1 の場合 FDIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
FDIST(2,5,5) = 0.232511319 です。

@SEEALSO=FINV

@FUNCTION=FIND
@SYNTAX=FIND(文字列1,文字列2[,開始])
@DESCRIPTION=FIND 関数は @文字列2 の中にある @文字列1 の位置を返します(大小文字区別なし)。文字列の検索は文字 @開始 から開始して単語のみ対象となります。(省略された場合は 1 と見なします)
この関数は Excel 互換です。
@EXAMPLES=
FIND("ac","Jack") = 2 です。

@SEEALSO=EXACT, LEN, MID, SEARCH

@FUNCTION=FINV
@SYNTAX=FINV(確率,自由度1,自由度2)
@DESCRIPTION=FINV 関数は F 確率分布の片側確率の逆関数を返します。
@確率 < 0 または @確率 > 1 の場合 FINV 関数は #NUM! エラーを返します。 @自由度1 < 1 または @自由度2 < 1 の場合 FINV 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
FINV(0.2,2,4) = 2.472135955 です。

@SEEALSO=FDIST

@FUNCTION=FISHER
@SYNTAX=FISHER(x)
@DESCRIPTION=FISHER 関数は @x に対するフィッシャー変換の値を返します。
@x が整数でない場合 FISHER 関数は #VALUE! エラーを返します。@x <= -1 または @x >= 1 の場合 FISHER 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
FISHER(0.332) = 0.345074339 です。

@SEEALSO=SKEW

@FUNCTION=FISHERINV
@SYNTAX=FISHERINV(x)
@DESCRIPTION=FISHERINV 関数は @x でのフィッシャー変換の逆関数を返します。 
@x が数値でない場合 FISHERINV 関数は #VALUE! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
FISHERINV(2) = 0.96402758 です。

@SEEALSO=FISHER

@FUNCTION=FIXED
@SYNTAX=FIXED(数値,[桁数,桁区切り])
@DESCRIPTION=FIXED 関数は @桁数 の数で整形した @数値 を返します。@桁区切り が指定された場合はコンマを無視します。
この関数は Excel 互換です。
@EXAMPLES=
FIXED(1234.567,2) = "1,234.57" です。

@SEEALSO=

@FUNCTION=FLOOR
@SYNTAX=FLOOR(数値,基準値)
@DESCRIPTION=FLOOR 関数は @数値 を挟む @基準値 の倍数のうち、0 に近い方の値を返します。@基準値 のデフォルトは1です。
この関数は Excel 互換です。
@EXAMPLES=
FLOOR(0.5) = 0 です。
FLOOR(5,2) = 4 です。
FLOOR(-5,-2) = -4 です。
FLOOR(-5,2) = #NUM! です。

@SEEALSO=CEIL, ABS, INT

@FUNCTION=FORECAST
@SYNTAX=FORECAST(x,既知のy,既知のx)
@DESCRIPTION=FORECAST 関数は一つの一次独立変数 (x,y) の回帰直線の予測値を返します。予測値は指定された x値 (@x) に対する y値です。
@既知のy と @既知のx が空かまたは両者のデータ数が異なる場合 FORECAST 関数は #N/A! エラーを返します。@既知のx の傾きが 0 の場合 FORECAST 関数は #DIV/0 エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
FORECAST(7,A1:A5,B1:B5) = -10.859397661 です。

@SEEALSO=INTERCEPT,TREND

@FUNCTION=FREQUENCY
@SYNTAX=FREQUENCY(データ配列,区間配列)
@DESCRIPTION=FREQUENCY 関数は指定したデータが指定する区間ごとにどれくらい出現しているかをカウントします。その結果は縦方向の配列で返されます。
@データ配列 は頻度調査の対象となるデータ組です。@区間配列 は @データ配列で指定したデータをグループ化するためのデータ組です。@区間配列が空の場合は FREQUENCY 関数は @データ配列の中のデータ数を返します。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=

@FUNCTION=FTEST
@SYNTAX=FTEST(配列1,配列2)
@DESCRIPTION=FTEST 関数は F-検定による等分散検定の結果を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
FTEST(A1:A5,B1:B5) = 0.510815017 です。

@SEEALSO=FDIST,FINV

@FUNCTION=FV
@SYNTAX=FV(利率,支払回数,支払額,現在価値,支払期日)
@DESCRIPTION=FV 関数は投資の将来価値を計算します。この関数は投資が定期かつ一定額、また利率が一定であることに基づいています。@利率 には期間ごとに一定の利率を、@支払回数 は一年間に発生する支払回数、@支払額 には毎回の支払額、@現在価値 は支払が発生した時の現在価値、@支払期日 には支払いが発生する期日を指定します。@支払期日 = 1 ならば期首、@支払期日 = 0 ならば期末を意味します。
@EXAMPLES=

@SEEALSO=PV,PMT,PPMT

@FUNCTION=FVSCHEDULE
@SYNTAX=FVSCHEDULE(元金,利率配列)
@DESCRIPTION=FVSCHEDULE は指定された元金と一連の金利を基に、将来価値を返します。@元金 には現在の価値を、@利率配列 には期間内の変動金利を配列として指定します。@利率配列 はセル範囲でなければなりません。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 0.11, 0.13, 0.09, 0.17,0.03 とすると
FVSCHEDULE(3000,A1:A5) = 4942.7911611 です。
@SEEALSO=PV,FV

@FUNCTION=G_PRODUCT
@SYNTAX=G_PRODUCT(数値1, 数値2, ...)
@DESCRIPTION=G_PRODUCT 関数は指定された数値、セル参照に含まれるすべての数値の積を返します。空白セルは 1 として計算されます。
@EXAMPLES=
G_PRODUCT(2,5,9) = 90 です。

@SEEALSO=SUM, COUNT

@FUNCTION=GAMMADIST
@SYNTAX=GAMMADIST(x,α,β,関数形式)
@DESCRIPTION=GAMMADIST 関数はガンマ分布関数の値を返します。@関数形式 の論理値が真 (1) の場合 GAMMADIST 関数は累積分布関数の値を返し、それ以外は確率密度関数の値を返します。
@x < 0 の場合 GAMMADIST 関数は #NUM! エラーを返します。@α <= 0 または @β <= 0 の場合 GAMMADIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
GAMMADIST(1,2,3,0) = 0.07961459 です。

@SEEALSO=GAMMAINV

@FUNCTION=GAMMAINV
@SYNTAX=GAMMAINV(確率,α,β)
@DESCRIPTION=GAMMAINV 関数はガンマ累積分布関数の逆関数の値を返します。
@確率 < 0 または @確率 > 1 の場合 GAMMAINV 関数は #NUM! エラーを返します。@α <= 0 または @β <= 0 の場合 GAMMAINV は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
GAMMAINV(0.34,2,4) = 4.829093908 です。

@SEEALSO=GAMMADIST

@FUNCTION=GAMMALN
@SYNTAX=GAMMALN(x)
@DESCRIPTION=GAMMALN 関数はガンマ関数の値の自然対数を返します。
@x が数値でない場合 GAMMALN 関数は #VALUE! エラーを返します。@x <= 0 の場合 GAMMALN 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
GAMMALN(23) = 48.471181352 です。

@SEEALSO=POISSON

@FUNCTION=GCD
@SYNTAX=GCD(数値1,数値2,...)
@DESCRIPTION=GCD 関数は指定された数値の最大公約数を返します。
数値のいずれかが 0(ゼロ)より小さい場合、#NUM! エラーが返されます。数値が整数以外の数値の場合、小数点以下を無視します。
この関数は Excel 互換です。
@EXAMPLES=
GCD(470,770) = 10 です。
GCD(470,770,1495) = 5 です。

@SEEALSO=LCM

@FUNCTION=GEOMEAN
@SYNTAX=GEOMEAN(数値1, 数値2, ...)
@DESCRIPTION=HARMEAN 関数は N 個の相乗平均を返します。これはある期の製品 N 個の平方根です。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
GEOMEAN(A1:A5) = 21.279182482 です。

@SEEALSO=AVERAGE,HARMEAN,MEDIAN,MODE,TRIMMEAN

@FUNCTION=GESTEP
@SYNTAX=GESTEP(x[,y])
@DESCRIPTION=GESTEP 関数は @x >= @y であるかどうかを調べます。@x >= @y の場合には 1 を返し、それ以外の場合は 0 を返します。@y はオプションで、省略した場合には 0 が指定されたと見なします。
いずれかの引数に数値以外を指定すると、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
GESTEP(5,4) = 1 です。

@SEEALSO=DELTA

@FUNCTION=GETENV
@SYNTAX=GETENV(文字列)
@DESCRIPTION=GETENV 関数は @文字列 で指定された環境変数に対する値を返します。

@文字列 で指定された変数が存在しない場合、#N/A! が返されます。 環境変数の名前は大小文字を区別しないことに注意して下さい。
@EXAMPLES=

@SEEALSO=

@FUNCTION=GETPIVOTDATA
@SYNTAX=GETPIVOTDATA(ピボットテーブル,フィールド名)
@DESCRIPTION=GETPIVOTDATA はピボットテーブルから集計データを取得します。@ピボットテーブルにはピボットテーブルが含まれるセル範囲を指定します。@フィールド名には集計データを取得したいフィールド名を指定します。
集計データが無効な場合には、#REF! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=GNUMERIC_VERSION
@SYNTAX=GNUMERIC_VERSION()
@DESCRIPTION=GNUMERIC_VERSION 関数はお使いの Gnumeric のバージョンを文字列で返します。
@EXAMPLES=
GNUMERIC_VERSION()

@SEEALSO=

@FUNCTION=GROWTH
@SYNTAX=GROWTH(既知のy[,既知のx,新しいx,定数])
@DESCRIPTION=GROWTH 関数は回帰指数曲線に "最小二乗法" を適用して、回帰指数曲線に対する複数の予測値を算出します。
@既知のx が省略された場合は配列 {1, 2, 3, ...} が使用されます。@新しいx が省略された場合は @既知のx と同じ値であると見なされます。
GROWTH 関数は @新しいx の各データに対して 1 行 1 列の配列を返します。
@既知のy と @既知のx のデータ数が同じでない場合は GROWTH 関数は #NUM! エラーを返します。
@定数に 0(偽) を指定すると強制的に原点をとおる直線になります。つまり係数 (b) が 0 になります。デフォルトは 1(真) です。
@EXAMPLES=

@SEEALSO=LOGEST,GROWTH,TREND

@FUNCTION=HARMEAN
@SYNTAX=HARMEAN(数値1, 数値2, ...)
@DESCRIPTION=HARMEAN 関数は N 個の調和平均 (つまり、各引数の逆数の総和で個数を割ります) を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
HARMEAN(A1:A5) = 19.529814427 です。

@SEEALSO=AVERAGE,GEOMEAN,MEDIAN,MODE,TRIMMEAN

@FUNCTION=HEX2BIN
@SYNTAX=HEX2BIN(数値[,列数])
@DESCRIPTION=HEX2BIN 関数は16進数を2進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
この関数は Excel 互換です。
@列数 が小さすぎたり負の場合だと #NUM! エラーが返されます。
@EXAMPLES=
HEX2BIN("2A") = 101010 です。

@SEEALSO=BIN2HEX, HEX2OCT, HEX2DEC

@FUNCTION=HEX2DEC
@SYNTAX=HEX2DEC(x)
@DESCRIPTION=HEX2DEC 関数は16進数を等価な10進数に変換します。
この関数は Excel 互換です。
@EXAMPLES=
HEX2DEC("2A") = 42 です。

@SEEALSO=DEC2HEX, HEX2BIN, HEX2OCT

@FUNCTION=HEX2OCT
@SYNTAX=HEX2OCT(数値[,列数])
@DESCRIPTION=HEX2OCT 関数は16進数を8進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
この関数は Excel 互換です。
@列数 が小さすぎたり負の場合だと #NUM! エラーが返されます。
@EXAMPLES=
HEX2OCT("2A") = 52 です。

@SEEALSO=OCT2HEX, HEX2BIN, HEX2DEC

@FUNCTION=HLOOKUP
@SYNTAX=HLOOKUP(value,range,row[,approximate,as_index])
@DESCRIPTION=HLOOKUP function finds the col in range that has a first row cell similar to value.  If @approximate is not true it finds the col with an exact equivilance.  If @approximate is true, then the values must be sorted in order of ascending value for correct function; in this case it finds the col with value less than @value it returns the value in the col found at a 1 based offset in @row rows into the @range.  @as_index returns the offset that matched rather than the value
Returns #NUM! if @row < 0. Returns #REF! if @row falls outside @range.
@EXAMPLES=

@SEEALSO=VLOOKUP

@FUNCTION=HOUR
@SYNTAX=HOUR (シリアル値)
@DESCRIPTION=HOUR 関数はシリアル値で表される日付の年を返します。この時間は 0 (12:00 A.M.)から 23 (11:00 P.M.)の範囲の整数です。
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
HOUR(0.128472) = 3 です。

@SEEALSO=MINUTE, NOW, TIME, SECOND

@FUNCTION=HYPERLINK
@SYNTAX=HYPERLINK(リンクの場所, オプションラベル)
@DESCRIPTION=HYPERLINK 関数は現時点では二番目の引数を返します。またはそれが省略されている場合に、一番目の引数を返します。

@EXAMPLES=
HYPERLINK("www.gnome.org","GNOME")

@SEEALSO=

@FUNCTION=HYPGEOMDIST
@SYNTAX=HYPGEOMDIST(標本の成功数,標本数,母集団の成功数,母集団の大きさ)
@DESCRIPTION=HYPGEOMDIST 関数は超幾何分布関数の値を返します。@標本の成功数 は標本内で成功するものの数で、@標本数 は標本の総数で、@母集団の成功数 は母集団内で成功するものの数で、@母集団の大きさ は母集団全体の数です。
@標本の成功数,@標本数,@母集団の成功数 または @母集団の大きさが整数でない場合は切り捨てられます。@標本の成功数,@標本数,@母集団の成功数 または @母集団の大きさ < 0 の場合 HYPGEOMDIST 関数は #NUM! エラーを返します。@標本の成功数 > @母集団の成功数 または @標本数 > @母集団の大きさ の場合 HYPGEOMDIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
HYPGEOMDIST(1,2,3,10) = 0.4666667 です。

@SEEALSO=BINOMDIST,POISSON

@FUNCTION=IF
@SYNTAX=IF(条件[,真の場合,偽の場合])
@DESCRIPTION=IF 文を使うと、その他の値や式が条件を満たしているかを評価できます。@条件式が 0(ゼロ)以外の値を返した場合、IF 文の返り値は@真の場合に指定された値になり、相でない場合は、@偽の場合に指定された値になります。引数が省略された場合、@真の場合に TRUE が、@偽の場合に FALSE がデフォルト値として使われます。
この関数は Excel 互換です。
@EXAMPLES=
IF(FALSE,TRUE,FALSE) = FALSE です。

@SEEALSO=

@FUNCTION=IMABS
@SYNTAX=IMABS(複素数)
@DESCRIPTION=IMABS は複素数の絶対値を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMABS("2-j") = 2.23606798 です。

@SEEALSO=IMAGINARY,IMREAL

@FUNCTION=IMAGINARY
@SYNTAX=IMAGINARY(複素数)
@DESCRIPTION=IMAGINARY 関数は複素数の虚数部の係数を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMAGINARY("132-j") = -1 です。

@SEEALSO=IMREAL

@FUNCTION=IMARGUMENT
@SYNTAX=IMARGUMENT(複素数)
@DESCRIPTION=IMARGUMENT 関数は複素数の偏角 theta を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMARGUMENT("2-j") = -0.463647609 です。

@SEEALSO=

@FUNCTION=IMCONJUGATE
@SYNTAX=IMCONJUGATE(複素数)
@DESCRIPTION=IMCONJUGATE は複素数の複素共役を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMCONJUGATE("1-j") = 1+j です。

@SEEALSO=IMAGINARY,IMREAL

@FUNCTION=IMCOS
@SYNTAX=IMCOS(複素数)
@DESCRIPTION=IMCOS 関数は複素数の余弦を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMCOS("1+j") = 0.833730-0.988898j です。

@SEEALSO=IMSIN,IMTAN

@FUNCTION=IMDIV
@SYNTAX=IMDIV(複素数1,複素数2)
@DESCRIPTION=IMDIV 関数は二つの複素数の商を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMDIV("2-j","2+j") = 0.6-0.8j です。

@SEEALSO=IMPRODUCT

@FUNCTION=IMEXP
@SYNTAX=IMEXP(複素数)
@DESCRIPTION=IMEXP 関数は複素数の指数を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMEXP("2-j") = 3.992324-6.217676j です。

@SEEALSO=IMLN

@FUNCTION=IMLN
@SYNTAX=IMLN(複素数)
@DESCRIPTION=IMLN 関数は複素数の自然対数を返します。(計算結果の虚部は -pi と +pi の間の値になるでしょう。複素数に対する自然対数は一意には定義されません。pi の偶数倍を虚部に足したり、引いたりする必要があるかもしれません。)
この関数は Excel 互換です。
@EXAMPLES=
IMLN("3-j") = 1.15129-0.32175j です。

@SEEALSO=IMEXP,IMLOG2,IMLOG10

@FUNCTION=IMLOG10
@SYNTAX=IMLOG10(inumber)
@DESCRIPTION=IMLOG10 関数は複素数の 10 を底とする対数で返します。
この関数は Excel 互換です。
@EXAMPLES=
IMLOG10("3-j") = 0.5-0.13973j です。

@SEEALSO=IMLN,IMLOG2

@FUNCTION=IMLOG2
@SYNTAX=IMLOG2(複素数)
@DESCRIPTION=IMLOG2 は複素数の 2 を底とする対数を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMLOG2("3-j") = 1.66096-0.46419j です。

@SEEALSO=IMLN,IMLOG10

@FUNCTION=IMPOWER
@SYNTAX=IMPOWER(複素数,数値)
@DESCRIPTION=IMPOWER 関数は複素数の整数乗を返します。@複素数にはべき乗を求める複素数を、@数値にはべき乗の指数を指定します。この関数は Excel 互換です。
@EXAMPLES=
IMPOWER("4-j",2) = 15-8j です。

@SEEALSO=IMSQRT

@FUNCTION=IMPRODUCT
@SYNTAX=IMPRODUCT(複素数1[,複素数2,...])
@DESCRIPTION=IMPRODUCT は与えられた複素数の直積を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMPRODUCT("2-j","4-2j") = 6-8j です。

@SEEALSO=IMDIV

@FUNCTION=IMREAL
@SYNTAX=IMREAL(複素数)
@DESCRIPTION=IMREAL 関数は複素数の実数部の係数を返します。
この関数は Excel 互換です。
@EXAMPLES=
imreal("132-j") = 132 です。

@SEEALSO=IMAGINARY

@FUNCTION=IMSIN
@SYNTAX=IMSIN(複素数)
@DESCRIPTION=IMSIN 関数は複素数の正弦を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMSIN("1+j") = 1.29846+0.63496j です。

@SEEALSO=IMCOS,IMTAN

@FUNCTION=IMSQRT
@SYNTAX=IMSQRT(複素数)
@DESCRIPTION=IMSQRT は複素数の平方根を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMSQRT("1+j") = 1.09868+0.4550899j です。

@SEEALSO=IMPOWER

@FUNCTION=IMSUB
@SYNTAX=IMSUB(複素数1,複素数2)
@DESCRIPTION=IMSUB は二つの複素数の差を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMSUB("3-j","2+j") = 1-2j です。

@SEEALSO=IMSUM

@FUNCTION=IMSUM
@SYNTAX=IMSUM(複素数1,複素数2)
@DESCRIPTION=IMSUM は二つの複素数の和を返します。
この関数は Excel 互換です。
@EXAMPLES=
IMSUM("2-4j","9-j") = 11-5j です。

@SEEALSO=IMSUB

@FUNCTION=IMTAN
@SYNTAX=IMTAN(複素数)
@DESCRIPTION=IMTAN 関数は複素数の正接を返します。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=IMSIN,IMCOS

@FUNCTION=INDEX
@SYNTAX=INDEX(配列,[行番号, 列番号, 範囲])
@DESCRIPTION=INDEX 関数は指定された @配列 にあるセルの参照を返します。セルは配列の行を示す @行番号 と 配列の列を示す@列番号 で指定されます。
@行番号 と @列番号 が省略された場合、それらは 1 とみなされます。複数の範囲に対する参照は未だ実装されていません。@配列の範囲を超えた位置を参照しようとすると、INDEX 関数は #REF! エラーを返します。

@EXAMPLES=セル A1, A2, ..., A5 がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 を含んでいる場合 INDEX(A1:A5,4,1,1) = 25.9 です。
@SEEALSO=

@FUNCTION=INDIRECT
@SYNTAX=INDIRECT(参照文字列,[参照形式])
@DESCRIPTION=INDIRECT 関数は @参照文字列 で指定された場所のセルの内容を返します。@参照文字列 はセル参照で、A1 あるいは R1C1 のどちらかの形式です。@参照形式 は論理値で、デフォルトでは A1 形式です。
@参照文字列 が正しいセル参照ではない場合、#REF! が返されます。
@EXAMPLES=
セル A1 が 3.14、セル A2 がセル A1 を含んでいる場合
INDIRECT(A2) = 3.14 です。

@SEEALSO=

@FUNCTION=INFO
@SYNTAX=INFO(検査の種類)
@DESCRIPTION=INFO 関数は現在の操作環境に対する情報を返します。
@検査の種類 には取得したい次の情報の種類を文字列で指定して下さい:
    memavail        使用可能なメモリ容量 (単位:バイト) を返します。
    memused         使用中のメモリ容量 (単位:バイト) を返します。
    numfile         開かれているワークシートの枚数を返します。
    osversion       現在使用されているオペレーティングシステムのバージョンを返します。
    recalc          現在設定されている再計算のモード (自動または手動) を返します。
    release         Gnumeric のバージョン (文字列) を返します。
    system          操作環境の名前を返します。
    totmem          利用可能なメモリの合計容量を返します。

この関数は Excel 互換ですが、@検査の種類に directory と origin がありません。
@EXAMPLES=
INFO("system") は Linux システムの場合に "Linux" を返します。

@SEEALSO=

@FUNCTION=INT
@SYNTAX=INT(a)
@DESCRIPTION=INT 関数は引数よりも大きくない、最も大きな整数値を返します。
この関数は Excel 互換です。
@EXAMPLES=
INT(7.2) = 7 です。
INT(-5.5) = -6 です。

@SEEALSO=FLOOR, CEIL, ABS

@FUNCTION=INTERCEPT
@SYNTAX=INTERCEPT(既知のy,既知のx)
@DESCRIPTION=INTERCEPT 関数は一つの一次独立変数の回帰直線の Y-切片を返します。
@既知のy と @既知のx が空かまたは両者のデータ数が異なる場合 INTERCEPT 関数は #N/A! エラーを返します。@既知のx の傾きが 0 の場合 INTERCEPT 関数は #DIV/0 を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
INTERCEPT(A1:A5,B1:B5) = -20.785117212 です。

@SEEALSO=FORECAST,TREND

@FUNCTION=INTRATE
@SYNTAX=INTRATE(受領日,満期日,投資額,償還価値[,基準])
@DESCRIPTION=INTRATE 関数は全額投資された証券の利率を返します。@投資額 には受領日までの投資額、@償還価値 には @満期日 に受け取った総額を指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@受領日、@満期日 に無効な日付を指定すると #NUM! エラーが返されます。@基準 に上記以外の数値を指定すると、#NUM! エラーが返されます。@受領日 が @満期日 と同じか、より後の日付に指定されると #NUM! エラーが返されます。
@EXAMPLES=

所有するボンドが受領日が2000年4月15日、満期日が2000年9月30日、投資額 1000万円、償還額 10,352,500円で、基準日数に実際の日数/実際の日数方式を使った場合、ボンドレートは以下のようになります:
INTRATE(36631, 36799, 100000, 103525, 1) = 0.0648 または 6.48% です。
@SEEALSO=RECEIVED, DATE

@FUNCTION=IPMT
@SYNTAX=IPMT(利率,期,支払回数,現在価値,将来価値,支払期日)
@DESCRIPTION=IPMT 関数は指定された年の金利分の支払額の合計を返します。IPMT 関数は次の式で表されます。

IPMT(期) = -PRINCIPAL(期 - 1) * 利率
ここで、
PRINCIPAL(期 - 1) は前の期から残っている元金の合計を表します。
@EXAMPLES=

@SEEALSO=PPMT,PV,FV

@FUNCTION=IRR
@SYNTAX=IRR(範囲[,推定値])
@DESCRIPTION=MIRR 関数は投資に対する内部利益率を計算し返します。この関数は NPV 関数と密接な関係があります。
@範囲には投資によって発生した一連のキャッシュフローの数値を含むセル参照を指定します。支払いは一定の期間毎に発生しなければなりません。オプションの@推定値にはIRRを計算する際の初期値を指定します。この引数は使用する必要はありません。Excel との互換性のためだけに存在します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1:A8 の値がそれぞれ -32432, 5324, 7432, 9332, 12324, 4334, 1235, -3422と仮定すると、次の用になります。
IRR(A1:A8) = 0.04375
@SEEALSO=FV,NPV,PV

@FUNCTION=ISBLANK
@SYNTAX=ISBLANK(値)
@DESCRIPTION=ISBLANK 関数は値が空白である場合に TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISBLANK(A1)

@SEEALSO=

@FUNCTION=ISERR
@SYNTAX=ISERR(値)
@DESCRIPTION=ISERR 関数は、もし値が #N/A 以外のエラーである場合に TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISERR(NA()) = FALSE です。

@SEEALSO=ISERROR

@FUNCTION=ISERROR
@SYNTAX=ISERROR(値)
@DESCRIPTION=ISERROR 関数は式がエラーであれば TRUE 値を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISERROR(NA()) = TRUE です。

@SEEALSO=ERROR

@FUNCTION=ISEVEN
@SYNTAX=ISEVEN(値)
@DESCRIPTION=ISEVEN 関数は数が奇数である場合に TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
SEVEN(4) = TRUE です。

@SEEALSO=ISODD

@FUNCTION=ISLOGICAL
@SYNTAX=ISLOGICAL(値)
@DESCRIPTION=ISLOGICAL 関数は値が論理値である場合に TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISLOGICAL(A1)

@SEEALSO=

@FUNCTION=ISNA
@SYNTAX=ISNA(値)
@DESCRIPTION=ISNA 関数は、もし値が #N/A エラー値である場合に TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISNA(NA()) = TRUE です。

@SEEALSO=NA

@FUNCTION=ISNONTEXT
@SYNTAX=ISNONTEXT(値)
@DESCRIPTION=ISNONTEXT 関数は値がテキストでない場合に TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISNONTEXT("text") = FALSE です。

@SEEALSO=ISTEXT

@FUNCTION=ISNUMBER
@SYNTAX=ISNUMBER(値)
@DESCRIPTION=ISNUMBER 関数は値が数であれば TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISNUMBER("text") = FALSE です。

@SEEALSO=

@FUNCTION=ISODD
@SYNTAX=ISODD(値)
@DESCRIPTION=ISODD 関数は数が奇数であれば TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISODD(3) = TRUE です。

@SEEALSO=ISEVEN

@FUNCTION=ISOWEEKNUM
@SYNTAX=ISOWEEKNUM (シリアル値)
@DESCRIPTION=ISOWEEKNUM 関数は @シリアル値 に対応する日がその年の何週目に当たるかを ISO 8601準拠の整数値で返します。
@シリアル値 が正しくない場合、#NUM! エラーを返します。
ISO 8601 準拠の週は月曜日から始まります。週の番号は 1 から順に付けられます。年をまたぐ日を含む週はもっとも新しい日を含む年の方に繰り上がります。これは 12月 31日が次の年の第一週に含まれ、次の年の 1月 1日は前の年の週 52 または 53 に含まれることを意味します。 
@EXAMPLES=
セル A1 が 12/21/00 の場合、ISOWEEKNUM(A1)=51 です。
@SEEALSO=WEEKNUM

@FUNCTION=ISPMT
@SYNTAX=ISPMT(利率,期,期間,現在価値)
@DESCRIPTION=ISPMT 関数は @期間内 の指定された @期 に支払われる金利を返します。@期 が1より小さく、@期間 より大きい場合、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=PV

@FUNCTION=ISREF
@SYNTAX=ISREF(値)
@DESCRIPTION=ISREF 関数は値が参照型であれば TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISREF(A1) = TRUE です。

@SEEALSO=

@FUNCTION=ISTEXT
@SYNTAX=ISTEXT(値)
@DESCRIPTION=ISTEXT 関数は値がテキストであれば TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
ISTEXT("text") = TRUE です。

@SEEALSO=ISNONTEXT

@FUNCTION=KURT
@SYNTAX=KURT(数値1, 数値2, ...)
@DESCRIPTION=KURT 関数はデータの集まりの高次の代表値 (尖度) を返します。
(注記) これは標本数が四つある場合にのみ有効です。標本の標準偏差は 0 になります。
セルが文字列や空の場合は、単に無視されます。
指定された二つの数値よりも少ないか全数値が等しい場合は KURT 関数は #DIV/0! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
KURT(A1:A5) = 1.234546305 です。

@SEEALSO=AVERAGE,VAR,SKEW,KURTP

@FUNCTION=KURTP
@SYNTAX=KURTP(数値1, 数値2, ...)
@DESCRIPTION=KURTP 関数はデータの集まりの高次の代表値 (尖度) を返します。
セルが文字列や空の場合は、単に無視されます。
指定された二つの数値よりも少ないか全数値が等しい場合は KURTP 関数は #DIV/0! エラーを返します。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると、
KURTP(A1:A5) = -0.691363424 です。

@SEEALSO=AVERAGE,VARP,SKEWP,KURT

@FUNCTION=LARGE
@SYNTAX=LARGE(数値1, 数値2, ..., 順位)
@DESCRIPTION=LARGE 関数は指定されたデータ集合の中で @順位 番目に大きな値を返します。
データ集合が空の場合 LARGE 関数は #NUM! エラーを返します。@順位 <= 0 または @k がデータ集合の個数よりも大きい場合 LARGE 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
LARGE(A1:A5,2) = 25.9 です。
LARGE(A1:A5,4) = 17.3 です。

@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,SMALL

@FUNCTION=LCM
@SYNTAX=LCM(数値1,数値2,...)
@DESCRIPTION=LCM 関数は指定された数値の最小公倍数を返します。最小公倍数は @数値... で指定された全ての整数に共通する倍数の中で、もっとも小さい倍数です。
指定された数値のいずれかが 1 より小さいと、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
LCM(2,13) = 26 です。
LCM(4,7,5) = 140 です。

@SEEALSO=GCD

@FUNCTION=LEFT
@SYNTAX=LEFT(文字列[,文字数])
@DESCRIPTION=LEFT 関数は @文字列 の先頭から @文字数 に指定された数の文字を返します。@文字数 を指定しないと、先頭の文字を返します。
この関数は Excel 互換です。
@EXAMPLES=
LEFT("Directory",3) = "Dir" です。

@SEEALSO=MID, RIGHT

@FUNCTION=LEN
@SYNTAX=LEN(文字列)
@DESCRIPTION=LEN 関数は @文字列 の長さを返します。
この関数は Excel 互換です。
@EXAMPLES=
len("Helsinki") = 8 です。

@SEEALSO=CHAR, CODE

@FUNCTION=LINEST
@SYNTAX=LINEST(既知のy[,既知のx[,定数[,補正]]])
@DESCRIPTION=LINEST 関数は複数の一次独立変数の回帰直線の計数値を "最小二乗法" で算出します。@既知のx は y=mx+b の x に一致します。
@既知のx が省略された場合は 配列 {1, 2, 3, ...} が使用されます。LINEST 関数は 2行1列の配列を返します。最初の行に直線 y=mx+b の係数 (m) が入り y-切片 (b) が二番目の行に入ります。
@既知のy と @既知のx のデータ数が等しくない場合は LINEST 関数は #NUM! エラーを返します。
@定数 に 0 (偽) を指定すると強制的に原点をとおる直線になります。つまり y-切片 b が 0 になります。デフォルト値は 1 (真) です。
@補正 に 1 (真) を指定すると補正項を係数項の後ろに返します。回帰直線の補正項を追加情報を結果の配列内に返されます。最初の列には係数 m1, (m2,...) に対する標準誤差値が入ります。二番目の列には R の平方とy-切片の標準誤差が入ります。三番目の列には F-検定と認められる値と自由度です。最後の列は回帰の平方和と剰余の平方和が入ります。
@補正 のデフォルト値は 0(偽) です。
@EXAMPLES=

@SEEALSO=LOGEST,TREND

@FUNCTION=LN
@SYNTAX=LN(x)
@DESCRIPTION=LN 関数は @x の自然対数を返します。@x <= 0 の場合、LN は#NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
LN(7) = 1.94591 です。

@SEEALSO=EXP, LOG2, LOG10

@FUNCTION=LOG
@SYNTAX=LOG(数値,[底])
@DESCRIPTION=LOG 関数は @底 に指定された値を底として、@x の対数を計算します。@底が指定されない場合、10 を底とみなします。
この関数は Excel 互換です。
@EXAMPLES=
LOG(2) = 0.30103 です。
LOG(8192,2) = 13 です。

@SEEALSO=EXP, LOG2, LOG10

@FUNCTION=LOG10
@SYNTAX=LOG10(x)
@DESCRIPTION=LOG10 関数は底を 10 とした x の対数を計算します。@x <= 0 の場合LOG10 は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
LOG10(7) = 0.845098 です。

@SEEALSO=EXP, LOG2, LOG

@FUNCTION=LOG2
@SYNTAX=LOG2(x)
@DESCRIPTION=LOG2 関数は底を 2 とした x の対数を計算します。@x <= 0 の場合LOG2 は #NUM! エラーを返します。
@EXAMPLES=
LOG2(1024) = 10 です。

@SEEALSO=EXP, LOG10, LOG

@FUNCTION=LOGEST
@SYNTAX=LOGEST(既知のy[,既知のx,定数,補正])
@DESCRIPTION=The LOGEST 関数は回帰曲線 y = b * m{1}^x{1} * m{2}^x{2}... に "最小二乗法" を適用します。
@既知のx が省略された場合は配列 {1, 2, 3, ...} を使用します。LOGEST 関数は配列 { m{n},m{n-1}, ...,m{1},b } を返します。
@既知のy と @既知のx のデータ数が同じでない場合 LOGEST 関数は #NUM! エラーを返します。
@定数に 0(偽) を指定すると強制的に 点(0,1) をとおる直線になります。つまり係数(b) が 1 になります。デフォルトは 1(真) です。
@補正 に 1(真) を指定すると、補正項を係数項の後ろに返します。回帰直線の補正項を追加情報を結果の配列内に返されます。最初の列には係数 m1, (m2,...) に対する標準誤差値が入ります。二番目の列には R の平方とy-切片の標準誤差が入ります。三番目の列には F-検定と認められる値と自由度です。最後の列は回帰の平方和と剰余の平方和が入ります。
@補正 のデフォルト値は 0(偽) です。
@EXAMPLES=

@SEEALSO=LOGEST,GROWTH,TREND

@FUNCTION=LOGINV
@SYNTAX=LOGINV(確率,平均,標準偏差)
@DESCRIPTION=LOGINV 関数は対数正規累積分布関数の逆関数の値を返します。@確率 は対数正規型分布に伴う確率で、@平均 は対数 ln(x) の平均値で、@標準偏差 は対数 ln(x) の標準偏差です。
@確率 < 0 または @確率 > 1 または @標準偏差 < 0 の場合 LOGINV 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
LOGINV(0.5,2,3) = 7.389056099 です。

@SEEALSO=EXP,LN,LOG,LOG10,LOGNORMDIST

@FUNCTION=LOGNORMDIST
@SYNTAX=LOGNORMDIST(x,平均,標準偏差)
@DESCRIPTION=LOGNORMDIST 関数は対数正規累積分布関数の値を返します。@x は分布関数に代入する値で、@平均 は対数 ln(x) の平均値で、@標準偏差 は対数 ln(x) の標準偏差です。
@標準偏差 = 0 の場合 LOGNORMDIST 関数は #DIV/0! エラーを返します。@x <= 0、@平均 < 0 または @標準偏差 < 0 の場合 LOGNORMDIST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
LOGNORMDIST(3,1,2) = 0.519662328 です。

@SEEALSO=BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT

@FUNCTION=LOOKUP
@SYNTAX=LOOKUP(検査値,検査範囲,対応範囲)
@DESCRIPTION=LOOKUP 関数は @検査値 に指定された値を @検査範囲 から検索し、そのインデックスを得ます。そして、@対応範囲 から先に得たインデックスに該当するセルの値を返します。@検査範囲 には配列形式も使用可能です。
@検査値 に等しい値が見つからない場合、@検査値 より小さく、最大の値を探します。
データは昇順にソートされていなければなりません。
@検査値 が検査範囲の最小値より小さい場合は #N/A エラーが返されます。
@EXAMPLES=

@SEEALSO=VLOOKUP,HLOOKUP

@FUNCTION=LOWER
@SYNTAX=LOWER(文字列)
@DESCRIPTION=LOWER 関数は @文字列 に含まれる大文字を小文字に変換した文字列を返します。
この関数は Excel 互換です。
@EXAMPLES=
LOWER("J. F. Kennedy") = "j. f. kennedy" です。

@SEEALSO=UPPER

@FUNCTION=MATCH
@SYNTAX=MATCH(検査値,検査範囲[,照合の型])
@DESCRIPTION=MATCH 関数は @検査範囲 内で @検査値 を含むセルのインデックスを返します。@検査範囲 には配列も使用可能です。
@照合の型 のデフォルト値は +1 で、検索方法を指定します。
@照合の型 = 1 の場合、@検査値 以下で最大の値を検索します。
@照合の型 = 0 の場合、@検査値 と等しい値を検索します。
@照合の型 = -1 の場合、@検査値 以上で最小の値を検索します。

@照合の型 = 0 の場合、データの順序はどのような状態でもかまいません。-1 または+1 の場合には、データはそれぞれ降順、昇順に並べ替える必要があります(この場合関数はバイナリ検索をします)。
@検査値 が見つからない場合、#N/A が返されます。
@EXAMPLES=

@SEEALSO=LOOKUP

@FUNCTION=MAX
@SYNTAX=MAX(数値1, 数値2, ...)
@DESCRIPTION=MAX は渡された値のうち一番大きい値を返します。負の数は正の数より小さいと見なされます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
MAX(A1:A5) = 40.1 です。

@SEEALSO=MIN,ABS

@FUNCTION=MAXA
@SYNTAX=MAXA(値1,値2,...)
@DESCRIPTION=MAXA 関数は指定された引数の中の最大値を返します。引数は 数値、文字列、論理値を含みます。セルが文字列を含むかまたは引数が 偽 (FALSE) と評価された場合は数値として 0 を使用します。引数が 真 (TRUE) と評価された場合は数値として 1 を使用します。セルが空の場合はカウントされないことに注意して下さい。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
MAXA(A1:A5) = 40.1 です。

@SEEALSO=MAX,MINA

@FUNCTION=MDETERM
@SYNTAX=MDETERM(行列)
@DESCRIPTION=MDETERM 関数は行列の行列式を返します。
@行列の行数と列数が等しくない場合、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, ..., A4 の値がそれぞれ 2, 3, 7, 3、セル B1, ..., B4 の値がそれぞれ、4, 2, 4, 1、セル C1, ..., C4 の値がそれぞれ、9, 4, 3, 2、セル D1, ..., D4 の値がそれぞれ、7, 3, 6, 5 とすると
MDETERM(A1:D4) = 148 です。

@SEEALSO=MMULT, MINVERSE

@FUNCTION=MDURATION
@SYNTAX=MDURATION(受領日,満期日,利札,利回り,頻度[,基準])
@DESCRIPTION=MDURATION 関数は額面価格を $100 と仮定した場合の、証券に対する修正マコーレー係数を返します。
@EXAMPLES=

@SEEALSO=

@FUNCTION=MEDIAN
@SYNTAX=MEDIAN(数値1, 数値2, ...)
@DESCRIPTION=MEDIAN 関数は指定されたデータ集合のメディアン (中央値) を返します。
セルが文字列や空の場合は、単に無視されます。データ集合の個数が偶数の場合 MEDIAN は中央に位置する二つの数値の平均値を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
MEDIAN(A1:A5) = 21.3 です。

@SEEALSO=AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SUM

@FUNCTION=MID
@SYNTAX=MID(文字列,位置,長さ)
@DESCRIPTION=MID 関数は @文字列 の @位置 から計算して @長さ 分の文字列を返します。
この関数は Excel 互換です。
@EXAMPLES=
MID("testing",2,3) = "est" です。

@SEEALSO=LEFT, RIGHT

@FUNCTION=MIN
@SYNTAX=MIN(数値1, 数値2, ...)
@DESCRIPTION=MIN 関数は渡された値のうちで一番小さい値を返します。負の数は正の数より小さいと見なされます。
この関数はExcel互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
MIN(A1:A5) = 11.4 です。

@SEEALSO=MAX,ABS

@FUNCTION=MAXA
@SYNTAX=MAXA(値1,値2,...)
@DESCRIPTION=MAXA 関数は指定された引数の中の最大値を返します。引数は 数値、文字列、論理値を含みます。セルが文字列を含むかまたは引数が 偽 (FALSE) と評価された場合は数値として 0 を使用します。引数が 真 (TRUE) と評価された場合は数値として 1 を使用します。セルが空の場合はカウントされないことに注意して下さい。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
MAXA(A1:A5) = 40.1 です。

@SEEALSO=MAX,MINA

@FUNCTION=MINUTE
@SYNTAX=MINUTE (シリアル値)
@DESCRIPTION=MINIUTE 関数はシリアル値で表される日付の分を返します。この分は 0 から 59 の範囲の整数として返されます
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
MINUTE(0.128472) = 5 です。
@SEEALSO=MINUTE, NOW, TIME, SECOND

@FUNCTION=MINVERSE
@SYNTAX=MINVERSE(行列)
@DESCRIPTION=MINVERSE 関数は行列の逆行列を返します。
@行列 を逆行列に変換できない場合、#NUM! エラーが返されます。また、@行列 の行数と列数が等しくない場合、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=MMULT, MDETERM

@FUNCTION=MIRR
@SYNTAX=MIRR(範囲,安全利率,危険利率)
@DESCRIPTION=MIRR 関数は定期的なキャッシュフローに基づいて、修正内部利益率を返します。
@EXAMPLES=

@SEEALSO=NPV

@FUNCTION=MMULT
@SYNTAX=MMULT(配列1,配列2)
@DESCRIPTION=MMULT 関数は二つの配列の行列積を返します。計算結果は、@配列1 と同じ行数、@配列2 と同じ列数の行列になります。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=TRANSPOSE,MINVERSE

@FUNCTION=MOD
@SYNTAX=MOD(数値,除数)
@DESCRIPTION=MOD 関数は @数値 を @除数 で割ったときの余りを返します。
この関数は Excel 互換です。
@除数に0(ゼロ)を指定すると、#DIV/0! エラーが返されます。

@EXAMPLES=
MOD(23,7) = 2 です。

@SEEALSO=INT,FLOOR,CEIL

@FUNCTION=MODE
@SYNTAX=MODE(数値1, 数値2, ...)
@DESCRIPTION=MODE 関数は最頻度 (モード) を返します。データの集合が共に同じ最頻度の場合 MODE は一番最初の数を返します。
数値が文字列や空の場合は、単に無視するだけです。データの集合に重複するデータが含まれていない場合 MODE 関数は #N/A! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 11.4, 25.9, 40.1 とすると
MODE(A1:A5) = 11.4 です。

@SEEALSO=AVERAGE,MEDIAN

@FUNCTION=MONTH
@SYNTAX=MONTH (シリアル値)
@DESCRIPTION=MONTH 関数はシリアル値で表される日付の月を返します。
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
MONTH(DATE(2003, 4, 30)) = 4 です。

@SEEALSO=DAY, MONTH, TIME, NOW, YEAR

@FUNCTION=MROUND
@SYNTAX=MROUND(数値,倍数)
@DESCRIPTION=MROUND 関数は指定された値の倍数になるように数値を丸めます。@数値 は丸める数値を指定します。@倍数 には丸められた数値がその倍数になるような数値を指定します。
@数値 と @倍数 の符号が違う場合は、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
MROUND(1.7,0.2) = 1.8 です。
MROUND(321.123,0.12) = 321.12 です。

@SEEALSO=ROUNDDOWN,ROUND,ROUNDUP

@FUNCTION=MULTINOMIAL
@SYNTAX=MULTINOMIAL(数値1, 数値2, ...)
@DESCRIPTION=MULTINOMIAL 関数は指定された数値の和の階乗と、指定された数値の階乗の積との比を返します。
この関数は Excel 互換です。
@EXAMPLES=
MULTINOMIAL(2,3,4) = 1260 です。

@SEEALSO=SUM

@FUNCTION=N
@SYNTAX=N(値)
@DESCRIPTION=N 関数は値を数値に変換して返します。テキストを含んだ文字列は0(ゼロ)に変換されます。
この関数は Excel 互換です。
@EXAMPLES=
N("42") = 42 です。

@SEEALSO=

@FUNCTION=NA
@SYNTAX=NA()
@DESCRIPTION=NA 関数はエラー値 #N/A を返します。
この関数は Excel 互換です。
@EXAMPLES=
NA() = #N/A error です。

@SEEALSO=ISNA

@FUNCTION=NEGBINOMDIST
@SYNTAX=NEGBINOMDIST(f,t,p)
@DESCRIPTION=NEGBINOMDIST 関数は否定二項分布を返します。@f は失敗した数で、@t は成功した数のしきい値で、@p は成功するかもしれない数です。
@f または @t が整数でなければ切りつめられます。(@f + @t -1 ) <= 0 の場合は #NUM! エラーが返されます。@p < 0 か @p > 1 の場合は #NUM! エラーをそれぞれ返します。
この関数は Excel 互換です。
@EXAMPLES=
NEGBINOMDIST(2,5,0.55) = 0.152872629 です。

@SEEALSO=BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT

@FUNCTION=NETWORKDAYS
@SYNTAX=NETWORKDAYS (開始日,終了日,祭日)
@DESCRIPTION=NETWORKDAYS 関数は @開始日 と @終了日 の間に含まれる土曜日、日曜日、祝祭日を除いた日の日数を返します。祝祭日や夏期休暇などは @祭日 に指定します。
@開始日 あるいは @終了日 に無効な値を指定すると、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
NETWORKDAYS(DATE(2001,1,2),DATE(2001,2,15)) = 33 です。

@SEEALSO=WORKDAY

@FUNCTION=NOMINAL
@SYNTAX=NOMINAL(実効年利率,1年あたりの複利計算回数)
@DESCRIPTION=NOMINAL 関数は実効年利率と1年あたりの複利計算回数から名目年利率を計算して返します。
NOMINAL 関数は以下の数式で表されます。

@nper * (( 1 + @r ) ^ (1 / @nper) - 1 )
ここで

@r = 実効年利率
@nper = 1年あたりの複利計算回数
@EXAMPLES=

@SEEALSO=EFFECT

@FUNCTION=NORMDIST
@SYNTAX=NORMDIST(x,平均,標準偏差,関数形式)
@DESCRIPTION=NORMDIST 関数は正規分布関数の値を返します。@x は関数に代入する値で、@平均 は正規分布の (算術) 平均で、@標準偏差 は正規分布の標準偏差です。
@標準偏差 = 0 の場合 NORMDIST 関数は #DIV/0! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
NORMDIST(2,1,2,0) = 0.176032663 です。

@SEEALSO=POISSON

@FUNCTION=NORMINV
@SYNTAX=NORMINV(確率,平均,標準偏差)
@DESCRIPTION=NORMINV 関数は正規累積分布関数の逆関数の値を返します。@確率 は正規分布における確率で、@平均 は正規分布の (算術) 平均で、@標準偏差 は正規分布の標準偏差です。
@確率 < 0 または @確率 > 1 または @標準偏差 <= 0 の場合 NORMINV 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
NORMINV(0.76,2,3) = 4.118907689 です。

@SEEALSO=NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST

@FUNCTION=NORMSDIST
@SYNTAX=NORMSDIST(x)
@DESCRIPTION=NORMSDIST 関数は標準累積分布を返します。@x は配分値です。
この関数は Excel 互換です。
@EXAMPLES=
NORMSDIST(2) = 0.977249868 です。

@SEEALSO=NORMDIST

@FUNCTION=NORMSINV
@SYNTAX=NORMSINV(p)
@DESCRIPTION=NORMSINV 関数は反対の標準累積分布を返します。@p は標準累積に対応する確率です。
@p < 0 または @p > 1 の場合は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
NORMSINV(0.2) = -0.841621234 です。

@SEEALSO=NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST

@FUNCTION=NOT
@SYNTAX=NOT(数値)
@DESCRIPTION=NOT 関数は論理否定式です。@数値が 0 になる場合には、TRUE が返されます。それ以外では FALSE が返されます。
この関数は Excel 互換です。
@EXAMPLES=
NOT(0) = TRUE です。
NOT(TRUE) = FALSE です。

@SEEALSO=AND, OR

@FUNCTION=NOW
@SYNTAX=NOW ()
@DESCRIPTION=NOW 関数は評価された時間における日付と時間のシリアル値を返します。
Gnumeric におけるシリアル値は次のように表現されます: 整数部は1900年1月1日からの日数です。小数部はその日の部分を表現しており、時間、分、秒にマップされています。
例: .0 は 12:00 AM を表現し、0.5 は 12:00 PM を表現します。
この関数は Excel 互換です。
@EXAMPLES=
NOW().

@SEEALSO=TODAY

@FUNCTION=NPER
@SYNTAX=NPER(利率,定期支払額,現在価値,将来価値,支払期日)
@DESCRIPTION=NPER 関数は定期的かつ定額の支払いを行い、利率が一定であることに基づいて、投資に必要な支払回数を計算します。@利率 には一定の利率を、@定期支払額 には毎回の支払額、@現在価値 には現在の投資額、@将来価値 には投資の将来価値、@支払期日 にはいつ支払うかを指定します。@支払期日 = 1 ならば期首の支払、@支払期日 = 0 ならば期末の支払になります。
@EXAMPLES=
例えば、$10,000 を銀行預金に預けたとして、その金利は 6% とします。元金の2倍になるのはいつかを求めるには次の式になります。
NPER(0.06, 0, -10000, 20000,0) = 11.895661046 となり、12年目の終わりには2倍の額を受け取ることができます。
@SEEALSO=PPMT,PV,FV

@FUNCTION=NPV
@SYNTAX=NPV(割引率,値1,値2,...)
@DESCRIPTION=NPV 関数は定期的な支払いを伴う投資の正味現在価値を返します。@割引率 には投資期間を通じて一定の割引率、@値1、@値2 には定期的な支払額や収益額を指定します。キャッシュフローのスケジュールが定期的でない場合には、XNPV 関数を使用してください。
@EXAMPLES=
NPV(0.17,-10000,3340,2941,2493,3233,1732,2932) = 186.30673 です。

@SEEALSO=PV,XNPV

@FUNCTION=OCT2BIN
@SYNTAX=OCT2BIN(数値[,列数])
@DESCRIPTION=OCT2BIN 関数は8進数を2進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
この関数は Excel 互換です。
@列数 が小さすぎたり負の場合だと #NUM! エラーが返されます。
@EXAMPLES=
OCT2BIN("213") = 10001011 です。

@SEEALSO=BIN2OCT, OCT2DEC, OCT2HEX

@FUNCTION=OCT2DEC
@SYNTAX=OCT2DEC(x)
@DESCRIPTION=OCT2DEC 関数は8進数を文字列または等価な10進数に変換します。
この関数は Excel 互換です。
@EXAMPLES=
OCT2DEC("124") = 84 です。

@SEEALSO=DEC2OCT, OCT2BIN, OCT2HEX

@FUNCTION=OCT2HEX
@SYNTAX=OCT2HEX(数値[,列数])
@DESCRIPTION=OCT2HEX 関数は8進数を16進数に変換します。@列数 はオプションのフィールドで、列数を指定すると列数にあわせて先頭にゼロを埋めることができます。
この関数は Excel 互換です。
@列数 が小さすぎたり負の場合だと #NUM! エラーが返されます。
@EXAMPLES=
OCT2HEX(132) = 5A です。

@SEEALSO=HEX2OCT, OCT2BIN, OCT2DEC

@FUNCTION=ODD
@SYNTAX=ODD(number)
@DESCRIPTION=ODD 関数は指定された @数値 にもっとも近い奇数の整数に切り上げ、その値を返します。
この関数は Excel 互換です。
@EXAMPLES=
ODD(4.4) = 5 です。

@SEEALSO=EVEN

@FUNCTION=ODDFPRICE
@SYNTAX=ODDFPRICE(受領日,満期日,発行日,最初の利札日,利率,利回り,償還価値,頻度[,基準])
@DESCRIPTION=ODDFPRICE 関数は 1 期目の日数が半端な証券に対する額面 $100 あたりの価格を返します。@受領日 は証券の受領日です。@満期日 は証券の満期日です。@発行日 は証券の発行日です。@頻度 は年間の利息支払い回数です: 1 = 年一回 2 = 年二回 4=四半期 のいずれかを指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると ODDFPRICE 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=ODDFYIELD
@SYNTAX=ODDFYIELD(受領日,満期日,最初の利札日,利率,現在価値,償還価値,頻度[,基準])
@DESCRIPTION=ODDFYIELD 関数は 1 期目の日数が半端な証券に対する利回りを返します。@受領日 は証券の受領日です。@満期日 は証券の満期日です。@発行日 は証券の発行日です。@頻度 は年間の利息支払い回数です: 1 = 年一回 2 = 年二回 4=四半期 のいずれかを指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると ODDFYIELD 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=ODDLPRICE
@SYNTAX=ODDLPRICE(受領日,満期日,最後の利札日,利率,利回り,償還価値,頻度[,基準])
@DESCRIPTION=ODDLPRICE 関数は最終期の日数が半端な証券に対する額面 $100 あたりの価格を返します。@受領日 は証券の受領日です。@満期日 は証券の満期日です。@発行日 は証券の発行日です。@頻度 は年間の利息支払い回数です: 1 = 年一回 2 = 年二回 4=四半期 のいずれかを指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると ODDLPRICE 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=ODDLFYIELD
@SYNTAX=ODDFLYIELD(受領日,満期日,最後の利札日,利率,現在価値,償還価値,頻度[,基準])
@DESCRIPTION=ODDFYIELD 関数は 1 期目の日数が半端な証券に対する利回りを返します。@受領日 は証券の受領日です。@満期日 は証券の満期日です。@発行日 は証券の発行日です。@頻度 は年間の利息支払い回数です: 1 = 年一回 2 = 年二回 4=四半期 のいずれかを指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると ODDLFYIELD 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=OFFSET
@SYNTAX=OFFSET(範囲,列番号,行番号,高さ,幅)
@DESCRIPTION=OFFSET 関数はセル範囲を返します。セル範囲 は @範囲 からのオフセット (@列番号,@行番号) から開始し、高さ @高さと幅 @幅の範囲です。
範囲が参照文字列でも範囲でもなければ #VALUE! を返します。高さまたは幅が省略された場合は、参照文字列の高さまたは幅が使用されます。
@EXAMPLES=

@SEEALSO=COLUMN,COLUMNS,ROWS

@FUNCTION=OR
@SYNTAX=OR(b1, b2, ...)
@DESCRIPTION=OR 関数は論理和関数です。いずれかの値が TRUE であれば結果は TRUE になります。
もし整数か実数が与えられた場合、0 が FALSE とみなされ、それ以外は TRUE とみなされます。
@b1から@bNまでは、評価がTRUEかFALSEになる式です。もし整数か実数が与えられた場合、0 が FALSEとみなされ、それ以外は TRUE とみなされます。
もしこの値に文字列や空白のセルが含まれているとこれらの値は無視されます。もし一つも論理値が指定されないと、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
OR(TRUE,FALSE) = TRUE です。
OR(3>4,4<3) = FALSE です。

@SEEALSO=AND, NOT

@FUNCTION=PEARSON
@SYNTAX=PEARSON(配列1,配列2)
@DESCRIPTION=PEARSON 関数は二つのデータ集合に対するピアソンの積率相関係数の値を返します。
セルが文字列や空の場合は、単に無視されます。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=INTERCEPT,LINEST,RSQ,SLOPE,STEYX

@FUNCTION=PERCENTILE
@SYNTAX=PERCENTILE(配列,率)
@DESCRIPTION=PERCENTILE 関数は指定されたデータ集合の中で百分率が @率 番目にあたる値 (つまり、x より小さいデータ集合の @率 番目の数値) を返します。
@配列 が空の場合 PERCENTILE 関数は #NUM! エラーを返します。@率 < 0 または @率 > 1 の場合 PERCENTILE 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
PERCENTILE(A1:A5,0.42) = 20.02 です。

@SEEALSO=QUARTILE

@FUNCTION=PERCENTRANK
@SYNTAX=PERCENTRANK(配列,x[,有効桁数])
@DESCRIPTION=PERCENTRANK 関数はデータの集まりの中でその相対的な位置 (百分位序列) を返します。@配列 は数値範囲を、@x は百分位序列をつけたい位置を、オプションである @有効桁数 は計算結果の百分率の有効桁数をそれぞれ表します。@有効桁数 が指定されたなかった場合、PERCENTRANK は有効桁数を 3桁とします。
@配列 にデータが含まれていない場合は PERCENTRANK 関数は #NUM! エラーを返します。
@有効桁数 が 1 未満の場合は PERCENTRANK 関数は #NUM! エラーを返します。
@x が @配列 の最大値を超えるか、最小値よりも小さい場合、PERCENTRANK 関数は #NUM エラーを返します。
@x が @配列 の中の数値に一致しなかったり、@x が 1 より大きい場合、PERCENTRANK 関数はその範囲の両側の値から順位が計算されます。
@EXAMPLES=

@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL

@FUNCTION=PERMUT
@SYNTAX=PERMUT(標本数,抜き取り数)
@DESCRIPTION=PERMUT 関数は順列の数を返します。@標本数 は抜き取りを行う標本の総数で、@抜き取り数 は標本から抜き取りを行う数です。
@標本数 = 0 の場合 PERMUT 関数は #NUM! エラーを返します。@標本数 < @抜き取り数 の場合 PERMUT 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
PERMUT(7,3) = 210 です。

@SEEALSO=COMBIN

@FUNCTION=PI
@SYNTAX=PI()
@DESCRIPTION=PI 関数は円周率の値を返します。
この関数には引数はありません。
この関数は Excel 互換で、もっとも良い精度で返します。
@EXAMPLES=
PI() = 3.141593 です。

@SEEALSO=SQRTPI

@FUNCTION=PMT
@SYNTAX=PMT(利率,期間,現在価値[,将来価値,支払期日])
@DESCRIPTION=PMT 関数は貯蓄または借入金返済に対する定額支払額を返します。@利率 は期間を通じて一定の利率です。@期間 は期間全体での支払い回数の合計です。@現在価値 は現時点での投資額です。@将来価値 は将来での投資額です。@支払期日 は支払いを行う時期の種類: 0 各期の期末、1 各期の期首 のいずれかを指定します。
@将来価値 が省略された場合 Gnumeric では 0 が指定されたと見なします。@支払期日 が省略された場合 Gnumeric は 0 が指定されたと見なします。
@EXAMPLES=

@SEEALSO=PPMT,PV,FV

@FUNCTION=POISSON
@SYNTAX=POISSON(イベント数,平均,関数形式)
@DESCRIPTION=POISSON 関数はポアソン確率分布の値を返します。@イベント数 は発生する事象の数で、@平均 は一定時間内に起きる事象の平均値で、@関数形式 の論理値が 真(1) の場合は発生する事象の数が 0 から @イベント数 の範囲であるような累積ポアソン確率分布関数が使用され、偽 (0) の場合は発生する事象の数が @イベント数 になるようなポアソン確率密度関数が使用されます。
@イベント数 が整数でない場合は切り捨てられます。@イベント数 <= 0 の場合 POISSON 関数は #NUM! エラーを返します。@平均 <= 0 の場合 POISSON 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
POISSON(3,6,0) = 0.089235078 です。

@SEEALSO=NORMDIST, WEIBULL

@FUNCTION=POWER
@SYNTAX=POWER(x,y)
@DESCRIPTION=POWER 関数は @x の @y 乗を返します。
この関数は Excel 互換です。
@EXAMPLES=
POWER(2,7) = 128 です。
POWER(3,3.141) = 31.523749 です。

@SEEALSO=EXP

@FUNCTION=PPMT
@SYNTAX=PPMT(利率,期,支払回数,現在価値[,将来価値,支払期日])
@DESCRIPTION=PPMT 関数は @期 に支払う元金分の合計を返します。
PPMT 関数は次の式で表されます。
PPMT(期) = PMT - IPMT(期)
ここで、
PMT は定期支払額、IPMT(期) は各期に支払う金利分の支払額を表します。
@EXAMPLES=

@SEEALSO=IPMT,PV,FV

@FUNCTION=PRICE
@SYNTAX=PRICE(受領日,満期日,利率,利回り,償還価値,頻度[,基準])
@DESCRIPTION=PRICE 関数は定期的に利息が支払われる証券の額面 $100 あたりの価格を返します。この関数は証券の利息が定期的に支払われる場合にのみ使用します。@頻度 は年間の利息支払い回数です: 1 = 年一回 2 = 年二回 4=四半期 のいずれかを指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると PRICE 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=PRICEDISC
@SYNTAX=PRICEDISC(受領日,満期日,割引率,償還価値[,基準])
@DESCRIPTION=PRICEDISC 関数は証券の額面 $100 あたりの価格を返します。利息は満期日には支払われません。@割引率 は証券の割引率です。@額面 は $100 あたりの証券の償還額です。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@受領日、@満期日 に無効な日付を指定すると #NUM! エラーが返されます。@基準 に上記以外の数値を指定すると、#NUM! エラーが返されます。@受領日 が @満期日 と同じか、より後の日付に指定されると #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=PRICEMAT

@FUNCTION=PRICEMAT
@SYNTAX=PRICEMAT(受領日,満期日,発行日,利率,利回り[,基準])
@DESCRIPTION=PRICEMAT 関数は満期日に利息が支払われる証券の額面 $100 あたりの価格を返します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@受領日、@満期日 に無効な日付を指定すると #NUM! エラーが返されます。@基準 に上記以外の数値を指定すると、#NUM! エラーが返されます。@受領日 が @満期日 と同じか、より後の日付に指定されると #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=PRICEDISC

@FUNCTION=PROB
@SYNTAX=PROB(x範囲,確率範囲,下限[,上限])
@DESCRIPTION=PROB 関数は @x範囲 または二つの限界値 (@下限,@上限) で定義された区間におさまる確率を返します。@上限 を省略すると、@x範囲 に含まれる値が @下限 と等しくなる確率が計算されます。
@確率範囲 に含まれる値の合計が 1 にならない場合や @確率範囲 に含まれる値が 0 未満または 1 を越える場合に、PROB 関数は #NUM! エラーを返します。@x範囲 と @確率範囲 のデータの個数が異なると、PROB 関数は #N/A! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=BINOMDIST,CRITBINOM

@FUNCTION=PRODUCT
@SYNTAX=PRODUCT(数値1, 数値2, ...)
@DESCRIPTION=PRODUCT 関数は引数に指定された数値、あるいは指定されたセル範囲の数値の積を返します。
この関数は Excel 互換です。セル範囲に含まれるセルが空白セルの場合、結果は0(ゼロ)になります。
@EXAMPLES=
PRODUCT(2,5,9) = 90 です。

@SEEALSO=SUM, COUNT, G_PRODUCT

@FUNCTION=PROPER
@SYNTAX=PROPER(文字列)
@DESCRIPTION=PROPER 関数は @文字列 の先頭の単語を大文字にしたものを返します。
この関数は Excel 互換です。
@EXAMPLES=
PROPER("j. f. kennedy") = "J. F. Kennedy" です。

@SEEALSO=LOWER, UPPER

@FUNCTION=PV
@SYNTAX=PV(利率,支払回数,定期支払額,将来価値,支払期日)
@DESCRIPTION=PV 関数はは投資の現在価値を返します。@利率 には期間を通じて一定の利率、@支払回数 には期間全体での支払回数、@定期支払額 には毎回の支払額、@将来価値 には最後に支払った後に残る現金の収支を指定します。@支払期日 には支払いが発生する日を指定します。@支払期日 = 0 は支払いが期末に発生します。@支払期日 = 1は支払いが期首に発生します。
@EXAMPLES=

@SEEALSO=FV

@FUNCTION=QUARTILE
@SYNTAX=QUARTILE(配列,戻り値)
@DESCRIPTION=QUARTILE 関数は指定された @配列 から @戻り値 に従った四分位数を返します。
@戻り値 の値         : QUARTILE 関数の返り値
0                      @配列内の最小値
1                      下位 1/4 の値 (25%)
2                      @配列内の中央値 (50%)
3                      上位 1/4 の値 (75%)
4                      @配列内の最大値

@配列 が空の場合は QUARTILE 関数は #NUM! エラーを返します。@戻り値 が 0 未満や 4 を越える場合は QUARTILE 関数は #NUM! エラーを返します。@戻り値 が整数でない場合は切り捨てられます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
QUARTILE(A1:A5,1) = 17.3 です。

@SEEALSO=LARGE,MAX,MEDIAN,MIN,PERCENTILE,SMALL

@FUNCTION=QUOTIENT
@SYNTAX=QUOTIENT(分子,分母)
@DESCRIPTION=QUOTIENT 関数は商の整数部を返します。
@分子 は割られる数です。
@分母 は割る数です。
この関数は Excel 互換です。
@EXAMPLES=
QUOTIENT(23,5) = 4 です。

@SEEALSO=MOD

@FUNCTION=RADIANS
@SYNTAX=RADIANS(x)
@DESCRIPTION=RADIANS 関数は @x 度に対応するラジアンの数を求めます。
この関数は Excel 互換です。
@EXAMPLES=
RADIANS(180) = 3.14159 です。

@SEEALSO=PI,DEGREES

@FUNCTION=RAND
@SYNTAX=RAND()
@DESCRIPTION=RAND 関数は 0 と 1 の間の乱数を返します。
この関数は Excel 互換です。
@EXAMPLES=
RAND() は 0 より大きく、1 より小さい乱数を返します。

@SEEALSO=RANDBETWEEN

@FUNCTION=RANDBERNOULLI
@SYNTAX=RANDBERNOULLI(p)
@DESCRIPTION=RANDBERNOULLI returns a Bernoulli-distributed random number. 
If @p < 0 or @p > 1 RANDBERNOULLI returns #NUM! error. 
@EXAMPLES=
RANDBERNOULLI(0.5).

@SEEALSO=RAND,RANDBETWEEN

@FUNCTION=RANDBETWEEN
@SYNTAX=RANDBETWEEN(最小値,最大値)
@DESCRIPTION=RANDBETWEEN 関数は @最小値 と @最大値 で指定された範囲で一様に分布する整数の乱数を返します。
@最小値 または @最大値 が整数でない数値の場合は、小数点以下が無視されます。@最小値 が @最大値より大きい場合、#NUM!エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
RANDBETWEEN(3,7) です。

@SEEALSO=RAND

@FUNCTION=RANDBINOM
@SYNTAX=RANDBINOM(p,trials)
@DESCRIPTION=RANDBINOM returns a binomially-distributed random number. 
If @p < 0 or @p > 1 RANDBINOM returns #NUM! error. If @trials < 0 RANDBINOM returns #NUM! error. 
@EXAMPLES=
RANDBINOM(0.5,2).

@SEEALSO=RAND,RANDBETWEEN

@FUNCTION=RANDEXP
@SYNTAX=RANDEXP(b)
@DESCRIPTION=RANDEXP returns a exponentially-distributed random number. 
@EXAMPLES=
RANDEXP(0.5).

@SEEALSO=RAND,RANDBETWEEN

@FUNCTION=RANDNEGBINOM
@SYNTAX=RANDNEGBINOM(p,failures)
@DESCRIPTION=RANDNEGBINOM returns a negative binomially-distributed random number. 
If @p < 0 or @p > 1, RANDNEGBINOM returns #NUM! error. If @failures RANDNEGBINOM returns #NUM! error. 
@EXAMPLES=
RANDNEGBINOM(0.5,2).

@SEEALSO=RAND,RANDBETWEEN

@FUNCTION=RANDPOISSON
@SYNTAX=RANDPOISSON(lambda)
@DESCRIPTION=RANDPOISSON returns a poisson-distributed random number. 
@EXAMPLES=
RANDPOISSON(3).

@SEEALSO=RAND,RANDBETWEEN

@FUNCTION=RANK
@SYNTAX=RANK(数値,範囲[,順序])
@DESCRIPTION=RANK 関数はある数値がリストの中で何番目に位置するかを返します。@数値 は順位を調べたい数値、@範囲 は数値の配列やセル範囲、@順序 は@範囲に指定された数値をどのように並べるかを指定します。@順序 が 0(ゼロ)あるいは省略された場合、降順に並べ替えられます。それ以外の場合は、昇順に並べ替えられます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
RANK(17.3,A1:A5) = 4 です。

@SEEALSO=PERCENTRANK

@FUNCTION=RATE
@SYNTAX=RATE(支払回数,定期支払額,現在価値[,将来価値,支払期日,推定値])
@DESCRIPTION=RATE 関数は投資の利率を返します。
@EXAMPLES=

@SEEALSO=PV,FV

@FUNCTION=RECEIVED
@SYNTAX=RECEIVED(受領日,満期日,投資額,利率[,基準])
@DESCRIPTION=RECEIVED 関数は全額投資した証券に対して、満期日に支払われる金額を返します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@受領日、@満期日 に無効な日付を指定すると #NUM! エラーが返されます。@基準 に上記以外の数値を指定すると、#NUM! エラーが返されます。@受領日 が @満期日 と同じか、より後の日付に指定されると #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=INTRATE

@FUNCTION=REPLACE
@SYNTAX=REPLACE(文字列,開始位置,文字数,置換文字列)
@DESCRIPTION=REPLACE 関数は @文字列 の @開始位置 から @文字数 分の文字を @置換文字 で置き換えたものを返します。
この関数は Excel 互換です。
@EXAMPLES=
REPLACE("testing",2,3,"*****") = "t*****ing" です。

@SEEALSO=MID, SEARCH, SUBSTITUTE, TRIM

@FUNCTION=REPT
@SYNTAX=REPT(文字列,個数)
@DESCRIPTION=REPT 関数は @文字列 を @個数 だけ繰り返したものを返します。
この関数は Excel 互換です。
@EXAMPLES=
REPT(".",3) = "..." です。

@SEEALSO=CONCATENATE

@FUNCTION=RIGHT
@SYNTAX=RIGHT(文字列[,文字数])
@DESCRIPTION=RIGHT 関数は @文字列 の右から指定された @文字数 分の文字列を、@文字数 の指定がない場合は右端の文字を返します。
この関数は Excel 互換です。
@EXAMPLES=
RIGHT("end") = "d" です。
RIGHT("end",2) = "nd" です。

@SEEALSO=MID, LEFT

@FUNCTION=ROMAN
@SYNTAX=ROMAN(数値[,形式])
@DESCRIPTION=ROMAN 関数はアラビア数字をローマ数字の形式の文字列に変換します。@数値 は変換したいアラビア数字、@形式 は変換したいローマ数字の形式を指定します。@形式 に 0(ゼロ) を指定、もしくは省略した場合、古典的なローマ数字が返されます。@形式 に 1 を指定すると簡略形式で返されます。2 を指定すると、1 よりさらに簡略化された形式で返されます。3 を指定すると、2 よりさらに簡略化された形式で返されます。4 を指定すると、簡略形式で返されます。
@数値が負の数や、3999 より大きい場合、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
ROMAN(999) = CMXCIX です。
ROMAN(999,1) = LMVLIV です。
ROMAN(999,2) = XMIX です。
ROMAN(999,3) = VMIV です。
ROMAN(999,4) = IM です。

@SEEALSO=

@FUNCTION=ROUND
@SYNTAX=ROUND(数値[,列数])
@DESCRIPTION=ROUND 関数は数値を四捨五入します。@数値 には四捨五入の対象となる数値を指定します。@列数 には四捨五入した結果の列数を指定します。
@列数 が正の数の場合、@数値 は小数点以下で四捨五入され、小数点以下の列数が@列数に等しくなります。@列数 が 0(ゼロ) あるいは省略された場合、@数値 はもっとも近い整数に四捨五入されます。@列数 が負の数の場合、整数部分の指定された列数で四捨五入されます。
この関数は Excel 互換です。
@EXAMPLES=
ROUND(5.5) = 6 です。
ROUND(-3.3) = -3 です。
ROUND(1501.15,1) = 1501.2 です。
ROUND(1501.15,-2) = 1500.0 です。

@SEEALSO=ROUNDDOWN,ROUNDUP

@FUNCTION=ROUNDDOWN
@SYNTAX=ROUNDDOWN(数値[,列数])
@DESCRIPTION=ROUNDDOWN 関数は数値を指定された列数で切り捨てます。@数値 は切り捨ての対象となる数値、@列数 は切り捨ての列数を指定します。
@列数 が正の数の場合、@数値 は指定された列数までに切り捨てられます。@列数 が 0(ゼロ) あるいは省略された場合、@数値 は小数点以下がすべて切り捨てられます。@列数 が負の数の場合、整数部分の指定された列数で切り捨てられます。
この関数は Excel 互換です。
@EXAMPLES=
ROUNDDOWN(5.5) = 5 です。
ROUNDDOWN(-3.3) = -4 です。
ROUNDDOWN(1501.15,1) = 1501.1 です。
ROUNDDOWN(1501.15,-2) = 1500.0 です。

@SEEALSO=ROUND,ROUNDUP

@FUNCTION=ROUNDUP
@SYNTAX=ROUNDUP(数値[,列数])
@DESCRIPTION=ROUNDUP 関数は数値を指定された列数で切り上げます。@数値 は切り上げの対象となる数値、@列数 は切り上げの列数を指定します。
@列数 が正の数の場合、@数値 は指定された列数までに切り上げられます。@列数 が 0(ゼロ) あるいは省略された場合、@数値 は小数点以下がすべて切り上げられます。@列数 が負の数の場合、整数部分の指定された列数で切り上げられます。
この関数は Excel 互換です。
@EXAMPLES=
ROUNDUP(5.5) = 6 です。
ROUNDUP(-3.3) = -3 です。
ROUNDUP(1501.15,1) = 1501.2 です。
ROUNDUP(1501.15,-2) = 1600.0 です。

@SEEALSO=ROUND,ROUNDDOWN

@FUNCTION=ROW
@SYNTAX=ROW([範囲])
@DESCRIPTION=ROW 関数は行番号の配列を返します。デフォルト引数では、この関数を含んでいるセル位置の行番号を返します。
@範囲 が配列でも、セル参照でも、セル範囲でもない場合、#VALUE! エラーが返されます。
@EXAMPLES=
セル G13 の場合 ROW() = 13 です。

@SEEALSO=COLUMN,COLUMNS,ROWS

@FUNCTION=ROWS
@SYNTAX=ROWS(範囲)
@DESCRIPTION=ROWS 関数は @範囲 で指定された範囲、あるいは配列の行数を返します。
@範囲 に指定されたものが、配列、セル範囲の参照でない場合、#VALUE! エラーが返されます。
@EXAMPLES=
ROWS(H7:I13) = 7 です。

@SEEALSO=COLUMN,ROW,ROWS

@FUNCTION=RSQ
@SYNTAX=RSQ(配列1,配列2)
@DESCRIPTION=RSQ 関数は二つのデータの集まりに対するピアソン積率相関係数の二乗値を返します。
セルが文字列や空の場合は、単に無視されます。
この関数は Excel 互換です。
@EXAMPLES=

@SEEALSO=CORREL,COVAR,INTERCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND

@FUNCTION=SEARCH
@SYNTAX=SEARCH(検索文字列,対象[,開始位置])
@DESCRIPTION=SEARCH 関数は文字の位置または他の文字列の中にある文字の位置を返します。@検索文字列 は検索する文字列または文字です。@対象 は検索する文字です。@開始位置 は @対象 の中で検索を開始する位置です。@開始位置 が省略された場合は 1(先頭) が指定されたとみなされます。検索では大文字、小文字を区別しません。 
@検索文字列 にはワイルドカード (*) と半角疑問符 (?) を指定することが可能です。半角疑問符は任意の一文字を表し、ワイルドカードは空文字を含んだ文字列を表します。通常の文字としてワイルドカードまたは半角疑問符の文字を指定する場合は、その文字の前に半角チルダ (~) を付けて下さい。
@検索文字列 が見つからなかった場合 SEARCH 関数は #VALUE! エラーを返します。@開始位置が 0 以下の数値または @対象 の長さよりも大きい数値の場合 SEARCH 関数は #VALUE! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
SEARCH("c","Cancel") = 1 です。
SEARCH("c","Cancel",2) = 4 です。

@SEEALSO=FIND

@FUNCTION=SECOND
@SYNTAX=SECOND (シリアル値)
@DESCRIPTION=SECOND 関数はシリアル値で表される日付の秒を返します。秒は 0 から 59 の範囲の整数として返されます
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
SECOND(0.600613) = 53 です。

@SEEALSO=HOUR, MINUTE, NOW, TIME

@FUNCTION=SELECTION
@SYNTAX=SELECTION(permit_intersection)
@DESCRIPTION=SELECTION 関数は選択部分の値のリストを返します。これは高速な数値計算を実装する場合に使用されます。
@permit_intersection が TRUE の場合は選択した範囲が返され、上書きされます。@permit_intersection が FALSE の場合は返された範囲をセットしますが、初期範囲よりも多くなります。
@EXAMPLES=

@SEEALSO=

@FUNCTION=SERIESSUM
@SYNTAX=SERIESSUM(x,n,m,係数)
@DESCRIPTION=SERIESSUM 関数はべき級数を返します。@x はべき級数の基底、@n は @x のべき乗の初期値、@m は級数の各項に対する @n の増加分、@係数は級数の各項に掛けられる係数です。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 1.23, 2.32, 2.98, 3.42, 4.33 とすると
SERIESSUM(3,1,2.23,A1:A5) = 251416.43018 です。

@SEEALSO=COUNT,SUM

@FUNCTION=SIGN
@SYNTAX=SIGN(数値)
@DESCRIPTION=SIGN 関数は @数値 が正の数の場合に 1 を返し、0(ゼロ)の場合には0(ゼロ)を返し、負の数の場合には -1 を返します。
この関数は Excel 互換です。
@EXAMPLES=
SIGN(3) = 1 です。
SIGN(-3) = -1 です。
SIGN(0) = 0 です。

@SEEALSO=

@FUNCTION=SIN
@SYNTAX=SIN(x)
@DESCRIPTION=SIN 関数は x の正弦を返します。@x はラジアンで指定します。
この関数は Excel 互換です。
@EXAMPLES=
SIN(0.5) = 0.479426 です。

@SEEALSO=COS, COSH, SINH, TAN, TANH, RADIANS, DEGREES

@FUNCTION=SINH
@SYNTAX=SINH(x)
@DESCRIPTION=SINH 関数は x の双曲線正弦を返します。数学的には (exp(x) - exp(-x)) / 2 として定義されます。x にはラジアンを用います。
この関数は Excel 互換です。
@EXAMPLES=
SINH(0.5) = 0.521095 です。

@SEEALSO=SIN, COS, COSH, TAN, TANH, DEGREES, RADIANS, EXP

@FUNCTION=SKEW
@SYNTAX=SKEW(数値1, 数値2, ...)
@DESCRIPTION=SKEW 関数はデータの集まりの高次の代表値 (歪度) を返します。
(注記) これは標本が三つある場合にのみ有効です。標本の標準偏差は 0 になります。
セルが文字列や空の場合は単に無視されるだけです。
引数が二個以下の場合 SKEW 関数は #DIV/0! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
SKEW(A1:A5) = 0.976798268 です。

@SEEALSO=AVERAGE,VAR,SKEWP,KURT

@FUNCTION=SKEWP
@SYNTAX=SKEWP(数値1, 数値2, ...)
@DESCRIPTION=SKEWP 関数はデータの集まりの高次の代表値 (歪度) を返します。
セルが文字列や空の場合は、単に無視されます。
指定された二つの数値よりも小さい場合は SKEWP 関数は #DIV/0! エラーを返します。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると、
SKEWP(A1:A5) = 0.655256198 です。

@SEEALSO=AVERAGE,VARP,SKEW,KURTP

@FUNCTION=SLN
@SYNTAX=SLN(取得価額,残存価額,耐用年数)
@DESCRIPTION=SLN 関数は定額法を使用して、資産の1期あたりの減価償却費を計算します。@取得価額 には資産購入時の価格、@残存価額 には @耐用年数 経過時の資産の価格、@耐用年数 にはその資産の耐用年数を年単位で指定します。この方法では減価償却費を耐用年数で均等に分割します。
定額法で使用される式
減価償却費 = ( @取得価額 - @残存価額 ) / @耐用年数
@EXAMPLES=
1,000,000円の機械を購入しました。残存価額 70,000円で、耐用年数は10年とすると、以下のようになります。
減価償却費 = SLN(1000000, 70000, 10) です。
減価償却費は 93,000円になります。
@SEEALSO=SYD

@FUNCTION=SLOPE
@SYNTAX=SLOPE(既知のy,既知のx)
@DESCRIPTION=SLOPE 関数は一つの一次独立変数の回帰直線の傾きを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
SLOPE(A1:A5,B1:B5) = 1.417959936 です。

@SEEALSO=STDEV,STDEVPA

@FUNCTION=SMALL
@SYNTAX=SMALL(数値1, 数値2, ..., 順位)
@DESCRIPTION=SMALL 関数は指定されたデータ集合の中で @順位 番目に小さな値を返します。
データ集合が空の場合 SMALL 関数は #NUM! エラーを返します。@順位 <= 0 または @順位 がデータ集合の個数よりも大きい場合 SMALL 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
SMALL(A1:A5,2) = 17.3です。
SMALL(A1:A5,4) = 25.9です。

@SEEALSO=PERCENTILE,PERCENTRANK,QUARTILE,LARGE

@FUNCTION=SQRT
@SYNTAX=SQRT(x)
@DESCRIPTION=SQRT 関数は @x の平方根を返します。@x に負の値を指定すると、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
SQRT(2) = 1.4142136 です。

@SEEALSO=POWER

@FUNCTION=SQRTPI
@SYNTAX=SQRTPI(数値)
@DESCRIPTION=SQRTPI 関数は (@数値 * π) の平方根を返します。
この関数は Excel 互換です。
@EXAMPLES=
SQRTPI(2) equals 2.506628275 です。

@SEEALSO=PI

@FUNCTION=STANDARDIZE
@SYNTAX=STANDARDIZE(x,平均,標準偏差)
@DESCRIPTION=STANDARDIZE 関数は標準化変量を返します。@x は標準化する数値で、@平均 は対象となる分布の (相加) 平均で、@標準偏差 は対象となる分布の標準偏差です。
@標準偏差 = 0 の場合 STANDARDIZE 関数は #DIV/0! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
STANDARDIZE(3,2,4) = 0.25 です。

@SEEALSO=AVERAGE

@FUNCTION=STDEV
@SYNTAX=STDEV(b1, b2, ...)
@DESCRIPTION=STDEV 関数は引数を母集団の標本と見なして母集団に対する標準偏差を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
STDEV(A1:A5) = 10.84619749 です。

@SEEALSO=AVERAGE,DSTDEV,DSTDEVP,STDEVA,STDEVPA,VAR

@FUNCTION=STDEVA
@SYNTAX=STDEVA(数値1,数値2,...)
@DESCRIPTION=STDEVA 関数は標本にもとづく母集団の標準偏差を返します。引数は 数値、文字列、論理値を含みます。セルが文字列を含むかまたは引数が 偽 (FALSE) と評価された場合は数値として 0 を使用します。引数が 真 (TRUE) と評価された場合は数値として 1 を使用します。セルが空の場合はカウントされないことに注意して下さい。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
STDEVA(A1:A5) = 15.119953704 です。

@SEEALSO=STDEV,STDEVPA

@FUNCTION=STDEVP
@SYNTAX=STDEVP(b1, b2, ...)
@DESCRIPTION=STDEVP 関数は引数を母集団全体と見なして母集団に対する標準偏差を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
STDEVP(A1:A5) = 9.701133954 です。

@SEEALSO=STDEV,STDEVA,STDEVPA

@FUNCTION=STDEVPA
@SYNTAX=STDEVPA(数値1,数値2,...)
@DESCRIPTION=STDEVPA 関数は引数の標準偏差を返します。引数は 数値、文字列、論理値を含みます。セルが文字列を含む
かまたは引数が 偽 (FALSE) と評価された場合は数値として 0 を使用します。引数が 真 (TRUE) と評価された場合は数値として 1 を使用します。セルが空の場合はカウントされないことに注意して下さい。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
STDEVPA(A1:A5) = 13.523697719 です。

@SEEALSO=STDEVA,STDEVP

@FUNCTION=STEYX
@SYNTAX=STEYX(既知のy,既知のx)
@DESCRIPTION=STEYX 関数は一組の一次独立変数 (x,y) の回帰直線上の予測値の標準誤差を返します。
@既知のy と @既知のx が空かまたは両者のデータ数が異なる場合 STEYX 関数は #N/A! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
STEYX(A1:A5,B1:B5) = 1.101509979 です。

@SEEALSO=PEARSON,RSQ,SLOPE

@FUNCTION=SUBSTITUTE
@SYNTAX=SUBSTITUTE(文字列,検索文字列,置換文字列[,置換対象])
@DESCRIPTION=SUBSTITUTE 関数は @文字列 の中にある @検索文字列 を @置換文字列 に置き換えたものを返します。置換は @文字列 の中にある @検索文字列 の中にある @置換対象 だけに適用され、それ以外は全て置換対象になります。
この関数は Excel 互換です。
@EXAMPLES=
SUBSTITUTE("testing","test","wait") = "waiting" です。

@SEEALSO=REPLACE, TRIM

@FUNCTION=SUBTOTAL
@SYNTAX=SUBTOTAL(集計方法,範囲1,範囲2,...)
@DESCRIPTION=SUBTOTAL 関数は引数に与えられたリストの集計を返します。@集計方法 には集計を計算するために使用する関数を数字で指定します。次の関数が利用可能です。
1   AVERAGE 関数
2   COUNT 関数
3   COUNTA 関数
4   MAX 関数
5   MIN 関数
6   PRODUCT 関数
7   STDEV 関数
8   STDEVP 関数
9   SUM 関数
10   VAR 関数
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 23, 27, 28, 33, 39 とすると
SUBTOTAL(1,A1:A5) = 30 です。
SUBTOTAL(6,A1:A5) = 22378356 です。
SUBTOTAL(7,A1:A5) = 6.164414003 です。
SUBTOTAL(9,A1:A5) = 150 です。
SUBTOTAL(11,A1:A5) = 30.4 です。

@SEEALSO=COUNT,SUM

@FUNCTION=SUM
@SYNTAX=SUM(値1, 値2, ...)
@DESCRIPTION=SUM 関数は全ての値と引数リストで参照されたセルの合計を求めます。
この関数は Excel 互換です。
@EXAMPLES=
セルA1, A2, ..., A5 がそれぞれ 11, 15, 17, 21, 43 とすると
SUM(A1:A5) = 107 です。

@SEEALSO=AVERAGE, COUNT

@FUNCTION=SUMA
@SYNTAX=SUMA(値1, 値2, ...)
@DESCRIPTION=SUMA 関数は全ての値と引数リストで参照されたセルの合計を求めます。数値、文字列、論理値も計算に含まれます。セルの内容が文字列または論理値のFALSE の場合には、0(ゼロ)として計算され、論理値の TRUE の場合には 1 として計算されます。
@EXAMPLES=
セル A1, A2, ..., A5 がそれぞれ 11, 15, 17, 21, 43 とすると
SUM(A1:A5) = 107 です。

@SEEALSO=AVERAGE, SUM, COUNT

@FUNCTION=SUMIF
@SYNTAX=SUMIF(範囲,条件[,合計範囲])
@DESCRIPTION=SUMIF 関数は @条件 に一致するセルの値を合計します。@合計範囲 を指定すると @合計範囲 に含まれるセルのうち、@範囲 内の @条件 を満たすセルに対応するセルだけを計算対象とします。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 23, 27, 28, 33, 39 とすると
SUMIF(A1:A5,"<=28") = 78 です。
SUMIF(A1:A5,"<28") = 50 です。
さらに、セル B1, B2, ..., B5 の値がそれぞれ 5, 3, 2, 6, 7 とすると
SUMIF(A1:A5,"<=27",B1:B5) = 8 です。

@SEEALSO=COUNTIF, SUM

@FUNCTION=SUMPRODUCT
@SYNTAX=SUMPRODUCT(範囲1,範囲2,...)
@DESCRIPTION=SUMPRODUCT 関数は二つの配列、あるいは範囲の対応する要素の積を計算してその合計を返します。文字列や空白セルは 0(ゼロ)と見なされます。
引数の配列、範囲同士の次元が等しくない場合、#VALUE! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11, 15, 17, 21, 43、セル  B1, B2, ..., B5の値がそれぞれ 13, 22, 31, 33, 39 とすると
SUMPRODUCT(A1:A5,B1:B5) = 3370 です。

@SEEALSO=SUM,PRODUCT

@FUNCTION=SUMSQ
@SYNTAX=SUMSQ(数値1, 数値2, ...)
@DESCRIPTION=SUMSQ 関数は引数に指定された数値、あるいは引数で指定されたセル範囲の数値の二乗の和を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11, 15, 17, 21, 43 とすると
SUMSQ(A1:A5) = 2925 です。

@SEEALSO=SUM, COUNT

@FUNCTION=SUMX2MY2
@SYNTAX=SUMX2MY2(配列1,配列2)
@DESCRIPTION=SUMX2MY2 関数は二つの配列の対応する要素の平方差の合計を返します。SUMX2MY2 は SUM (X^2 - Y^2) の式で表すことができます。
文字列や空白セルは単純に無視されます。
@配列1 と @配列2 の要素の数が違う場合、#N/A! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11, 15, 17, 21, 43 で、セル B1, B2, ..., B5 の値がそれぞれ 13, 22, 31, 33, 39 とすると
SUMX2MY2(A1:A5,B1:B5) = -1299 です。

@SEEALSO=SUMSQ,SUMX2PY2

@FUNCTION=SUMX2PY2
@SYNTAX=SUMX2PY2(配列1,配列2)
@DESCRIPTION=SUMX2PY2 関数は二つの配列の対応する要素の平方和の合計を返します。SUMX2PY2 は SUM (X^2 + Y^2) の式で表すことができます。
文字列や空白セルは単純に無視されます。
@配列1 と @配列2 の要素の数が違う場合、#N/A! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11, 15, 17, 21, 43 で、セル B1, B2, ..., B5 の値がそれぞれ 13, 22, 31, 33, 39 とすると
SUMX2PY2(A1:A5,B1:B5) = 7149 です。

@SEEALSO=SUMSQ,SUMX2MY2

@FUNCTION=SUMXMY2
@SYNTAX=SUMXMY2(配列1,配列2)
@DESCRIPTION=SUMXMY2 関数は二つの配列の対応する要素の差を二乗してその合計を返します。SUMXMY2 は SUM (X - Y)^2 で表すことができます。
文字列や空白セルは単純に無視されます。
@配列1 と @配列2 の要素の数が違う場合、#N/A! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11, 15, 17, 21, 43 で、セル B1, B2, ..., B5 の値がそれぞれ 13, 22, 31, 33, 39 とすると
SUMXMY2(A1:A5,B1:B5) = 409 です。

@SEEALSO=SUMSQ,SUMX2MY2,SUMX2PY2

@FUNCTION=SYD
@SYNTAX=SYD(取得価額,残存価額,耐用年数,期)
@DESCRIPTION=SYD 関数は定額逓減法を使用して、指定された @期 における減価償却費を返します。この方法は償却率が高いので、最初の期の償却費が最後の期の償却費よりかなり大きくなります。
この関数は以下の式で表されます。減価償却費 = ( @取得価額 - @残存価額 ) * (@耐用年数 - @期 + 1) * 2 / @耐用年数 * (@耐用年数 + 1) です。
@EXAMPLES=
例として、ある企業が 500,000 円の機器を購入し、その残存価額が 20,000 円、耐用年数が 5 年とすると、次の式は 2 期目の減価償却費を返します。SYD(5000, 200, 5, 2) = 1,280.00 です。
@SEEALSO=SLN

@FUNCTION=T
@SYNTAX=T(値)
@DESCRIPTION=T 関数はテキストであれば @値 を返し、それ以外は空白文字を返します。
この関数は Excel 互換です。
@EXAMPLES=
T("text") equals "text" です。
T(64) は空白のセルを返します。

@SEEALSO=CELL, N, VALUE

@FUNCTION=TAN
@SYNTAX=TAN(x)
@DESCRIPTION=TAN 関数は @x の正弦を返します。@x はラジアンで指定します。
この関数は Excel 互換です。
@EXAMPLES=
TAN(3) = -0.1425465 です。

@SEEALSO=TANH, COS, COSH, SIN, SINH, DEGREES, RADIANS

@FUNCTION=TANH
@SYNTAX=TANH(x)
@DESCRIPTION=TANH 関数は @x の双曲線余弦を返します。これは数学的にsinh(@x) / cosh(@x) で定義されます。
この関数は Excel 互換です。
@EXAMPLES=
TANH(2) = 0.96402758 です。

@SEEALSO=TAN, SIN, SINH, COS, COSH, DEGREES, RADIANS

@FUNCTION=TBILLEQ
@SYNTAX=TBILLEQ(受領日,満期日,割引率)
@DESCRIPTION=TBILLEQ 関数は米国財務省短期証券(TB)の債券に相当する利回り(BEY)を返します。この関数は次の式で表されます。TBILLEQ = (365 * @割引率) / (360 - @割引率 * DSM) ここで、 DSM は@受領日から@満期日までの日数
@受領日が@満期日より後の日付、@受領日と@満期日の間が1年を超える場合、#NUM!エラーが返されます。@割引率に負の数を指定すると、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=TBILLPRICE,TBILLYIELD

@FUNCTION=TBILLPRICE
@SYNTAX=TBILLPRICE(受領日,満期日,割引率)
@DESCRIPTION=TBILLPRICE 関数は米国財務省短期証券(TB)の額面 $100 あたりの価格を返します。
@受領日が@満期日より後の日付、@受領日と@満期日の間が1年を超える場合、#NUM!エラーが返されます。@割引率に負の数を指定すると、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=TBILLEQ,TBILLYIELD

@FUNCTION=TBILLYIELD
@SYNTAX=TBILLYIELD(受領日,満期日,現在価値)
@DESCRIPTION=TBILLYIELD 関数は米国財務省短期証券(TB)の利回りを返します。@受領日が@満期日より後の日付、@受領日と@満期日の間が1年を超える場合、#NUM!エラーが返されます。@割引率に負の数を指定すると、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=TBILLEQ,TBILLPRICE

@FUNCTION=TDIST
@SYNTAX=TDIST(x,自由度,尾部)
@DESCRIPTION=TDIST 関数はスチューデントの t-分布の値を返します。@自由度 は分布の自由度を整数で与え、@尾部 は片側分布 (1) か両側分布 (2) を数値で指定します。
@自由度 < 1 の場合 TDIST 関数は #NUM! エラーを返します。@尾部 が 1 でも 2 でもない場合は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
TDIST(2,5,1) = 0.050969739 です。

@SEEALSO=TINV,TTEST

@FUNCTION=TEXT
@SYNTAX=TEXT(数値,表示形式)
@DESCRIPTION=TEXT 関数は @数値 を指定した @表示形式 に変換したものを返します。
この関数は Excel 互換です。
@EXAMPLES=
TEXT(3.223,"$0.00") = "$3.22" です。
TEXT(date(1999,4,15),"mmmm, dd, yy") = "April, 15, 99" です。

@SEEALSO=DOLLAR

@FUNCTION=TIME
@SYNTAX=TIME (時,分,秒)
@DESCRIPTION=TIME 関数は一日のその時間の小数表現を返します。
この関数は Excel 互換です。
@EXAMPLES=
TIME(3, 5, 23) = 3:05AM です。

@SEEALSO=HOUR

@FUNCTION=TIMEVALUE
@SYNTAX=TIMEVALUE (時刻文字列)
@DESCRIPTION=TIMEVALUE 関数は時刻を表す文字列をシリアル値 (0から1の間の小数表現) を返します。
この関数は Excel 互換です。
@EXAMPLESS=
TIMEVALUE("3:05") = 0.128472 です。
TIMEVALUE("2:24:53 PM") equals 0.600613 です。

@SEEALSO=HOUR,MINUTE

@FUNCTION=TINV
@SYNTAX=TINV(確率,自由度)
@DESCRIPTION=TINV 関数はスチューデントの両側 t-分布の逆関数の値を返します。
@自由度 < 1 の場合 TINV 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
TINV(0.4,32) = 0.852998454 です。

@SEEALSO=TDIST,TTEST

@FUNCTION=TODAY
@SYNTAX=TODAY()
@DESCRIPTION=TODAY()関数は今日(1900年1月1日から経過した日数)の連続値を返します。
この関数は Excel 互換です。
@EXAMPLES=
TODAY() = 'Nov 6, 2001'  です。
 
@SEEALSO=TODAY, NOW

@FUNCTION=TRANSPOSE
@SYNTAX=TRANSPOSE(配列)
@DESCRIPTION=TRANSPOSE 関数は入力された @配列 の縦方向と横方向を変換します。
@EXAMPLES=

@SEEALSO=MMULT

@FUNCTION=TREND
@SYNTAX=TREND(既知のy[,既知のx],新しいx])
@DESCRIPTION=TREND 関数は "最小二乗法" を用いて近似式を計算したうえで指定したデータの予測値を計算します。@既知のy はy=mx+b の y切片で @既知のx は既知の独立変数 x の列です。@新しいx は計算する y切片のに対する x の列です。 
@既知のx が省略された場合は配列 {1, 2, 3, ...} が使用されます。@新しいx が省略された場合は @既知のx と同じ値であると見なされます。@既知のy と @既知のx に負の数が含まれている場合は TREND 関数は #NUM! エラーを返します。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
TREND(A1:A5,B1:B5) = 156.52 です。

@SEEALSO=LINEST

@FUNCTION=TRIM
@SYNTAX=TRIM(文字列)
@DESCRIPTION=TRIM 関数は @文字列 の各単語間のスペースを一つだけにした文字列を返します。
この関数は Excel 互換です。
@EXAMPLES=
TRIM("  a bbb  cc") = "a bbb cc" です。

@SEEALSO=CLEAN, MID, REPLACE, SUBSTITUTE

@FUNCTION=TRIMMEAN
@SYNTAX=TRIMMEAN(参照文字列,小数部)
@DESCRIPTION=TRIMMEAN 関数はデータセット内部の平均値を返します。@参照文字列 は平均を計算したい番号のリストで、@小数部 は平均以外のデータセットの小数点以下の数値です。例として @小数部 = 0.2 とすると 40 個の数値がある場合は、8 個の数値はデータセット (40 x 0.2) から数値 "8" が取得され、その数値の上から "4" と下から "4"のセットが返されます。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
TRIMMEAN(A1:A5,0.2) = 23.2 です。

@SEEALSO=AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE

@FUNCTION=TRUE
@SYNTAX=TRUE()
@DESCRIPTION=TRUE 関数は論理値の TRUE を返します。
この関数は Excel 互換です。
@EXAMPLES=
TRUE() = TRUE です。

@SEEALSO=FALSE

@FUNCTION=TRUNC
@SYNTAX=TRUNC(数値[,列数])
@DESCRIPTION=TRUNC 関数は @数値 に指定された値を @列数 で指定された小数部の列数にあわせて切り捨てた値を返します。@列数 が省略されると、0(ゼロ)が指定されたと見なされます。
この関数は Excel 互換です。
@EXAMPLES=
TRUNC(3.12) = 3 です。
TRUNC(4.15,1) = 4.1 です。

@SEEALSO=INT

@FUNCTION=TTEST
@SYNTAX=TTEST(配列1,配列2,尾部,検定の種類)
@DESCRIPTION=TTEST 関数はスチューデントの t-分布に従う確率を返します。
@配列1 は一番目のデータ組で @配列2 は二番目のデータ組です。@尾部 に 1 が指定されると TTEST 関数は片側の分布が使用され @尾部 に 2 が指定されると TTEST 関数は両側の分布を使用します。@検定の種類 は実行する検定の種類を指定します:
1  対をなすデータの t-検定
2  等分散の 2 標本を対象とする t-検定
3  非等分散の 2 標本を対象とする t-検定

@配列1 と @配列2 のデータの個数が異なる場合に @検定の種類 に 1 を指定すると TTEST 関数は #N/A エラーを返します。@尾部 と @検定の種類 に整数でない値を指定すると、小数点以下が切り捨てられます。@尾部 に数値でない値を指定すると TTEST 関数は #NUM! エラーを返します。@検定の種類 に数値でない値を指定すると TTEST 関数は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1、セル B1, B2, ... B5 の値をそれぞれ 23.2, 25.8, 29.9, 33.5, 42.7 とすると
TTEST(A1:A5,B1:B5,1,1) = 0.003127619 です。
TTEST(A1:A5,B1:B5,2,1) = 0.006255239 です。
TTEST(A1:A5,B1:B5,1,2) = 0.111804322 です。
TTEST(A1:A5,B1:B5,1,3) = 0.113821797 です。

@SEEALSO=FDIST,FINV

@FUNCTION=TYPE
@SYNTAX=TYPE(値)
@DESCRIPTION=TYPE 関数は値のデータ型を表す番号を返します。
この関数は Excel 互換です。
@EXAMPLES=
TYPE(3) = 1 です。
TYPE("text") = 2 です。

@SEEALSO=

@FUNCTION=UNIX2DATE
@SYNTAX=UNIX2DATE(UNIX時刻)
@DESCRIPTION=UNIX2DATE 関数は UNIX 時刻をスプレッドシートの日付と時刻に換算します。

"UNIX 時刻"は 1970年1月1日 からカウントした秒数です。

@EXAMPLES=

@SEEALSO=NOW, DATE, DATE2UNIX

@FUNCTION=UPPER
@SYNTAX=UPPER(テキスト)
@DESCRIPTION=UPPER 関数は文字列 @テキスト を大文字にしたものを返します。
この関数は Excel 互換です。
@EXAMPLES=
UPPER("canceled") = "CANCELED" です。

@SEEALSO=LOWER

@FUNCTION=VALUE
@SYNTAX=VALUE(文字列)
@DESCRIPTION=VALUE 関数は @文字列 の数値を返します。
この関数は Excel 互換です。
@EXAMPLES=
VALUE("$1,000") = 1000 です。

@SEEALSO=DOLLAR, FIXED, TEXT

@FUNCTION=VAR
@SYNTAX=VAR(b1, b2, ...)
@DESCRIPTION=VAR 関数は引数を母集団の標本と見なして母集団に対する分散を返します。引数を母集団全体と見なす場合、VARP 関数を使用してください。
(VAR 関数も N-1-母集団全体 を使います。最適な条件下では、母集団全体の最大可能評価です。)
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
VAR(A1:A5) = 117.64 です。

@SEEALSO=VARP,STDEV

@FUNCTION=VARA
@SYNTAX=VARA(数値1,数値2,...)
@DESCRIPTION=VARA 関数は標本にもとづく母集団の分散を返します。引数は 数値、文字列、論理値を含みます。セルが文字列を含むかまたは引数が 偽 (FALSE) と評価された場合は数値として 0 を使用します。引数が 真 (TRUE) と評価された場合は数値として 1 を使用します。セルが空の場合はカウントされないことに注意して下さい。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
VARA(A1:A5) = 228.613 です。

@SEEALSO=VAR,VARPA

@FUNCTION=VARP
@SYNTAX=VARP(b1, b2, ...)
@DESCRIPTION=VARP 関数は引数を集団の要素であり、母集団全体であるとして、母集団の分散を返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値がそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
VARP(A1:A5) = 94.112 です。

@SEEALSO=AVERAGE,DVAR,DVARP,STDEV,VAR

@FUNCTION=VARPA
@SYNTAX=VARPA(数値1,数値2,...)
@DESCRIPTION=VARPA 関数は引数の分散を返します。引数は 数値、文字列、論理値を含みます。セルが文字列を含む
かまたは引数が 偽 (FALSE) と評価された場合は数値として 0 を使用します。引数が 真 (TRUE) と評価された場合は数値として 1 を使用します。セルが空の場合はカウントされないことに注意して下さい。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, "missing", 25.9, 40.1 とすると
VARPA(A1:A5) = 182.8904 です。

@SEEALSO=VARP,VARP

@FUNCTION=VDB
@SYNTAX=VDB(取得価格,残存価格,耐用年数,開始期,終了期[,率,切り替えなし])
@DESCRIPTION=VDB 関数は倍率法により指定された期間における資産の減価償却費を計算します。
@EXAMPLES=

@SEEALSO=DB

@FUNCTION=VLOOKUP
@SYNTAX=VLOOKUP(value,range,column[,approximate,as_index])
@DESCRIPTION=VLOOKUP function finds the row in range that has a first column similar to value.  If @approximate is not true it finds the row with an exact equivilance.  If @approximate is true, then the values must be sorted in order of ascending value for correct function; in this case it finds the row with value less than @value.  It returns the value in the row found at a 1 based offset in @column columns into the @range.  @as_index returns the offset that matched rather than the value
Returns #NUM! if @column < 0. Returns #REF! if @column falls outside @range.
@EXAMPLES=

@SEEALSO=HLOOKUP

@FUNCTION=WEEKDAY
@SYNTAX=WEEKDAY (シリアル値[, 種類])
@DESCRIPTION=WEEKDAY 関数はシリアル値から曜日に変換します。

この関数は曜日を表す整数値 0-6 を返します。
@種類 は戻り値の種類です。

@種類 = 1: 日曜日が 1, 月曜日が 2,...
@種類 = 2: 月曜日が 1, 火曜日が 2,...
@種類 = 3: 月曜日が 0, 火曜日が 1,...

Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
WEEKDAY("10/24/1968") = 5 (木曜日) です。

@SEEALSO=DAY, MONTH, TIME, NOW, YEAR

@FUNCTION=WEEKNUM
@SYNTAX=WEEKNUM (シリアル値 [,週の基準])
@DESCRIPTION=WEEKNUM 関数は @シリアル値 で示される日がその年の何週目にあたるかを整数値で返します。週の数え方は @週の基準で指定します。

@週の基準 のデフォルトは 1 です。
週の基準=1 の場合、週は日曜日から始まります。最初の日曜日の前の日は週 0 になります。
週の基準=2 の場合、週は月曜日から始まります。最初の月曜日の前の日は週 0 になります。
週の基準=150 の場合、ISO 8601 に準拠した週の番号が返されます。

@シリアル値 または @週の基準 が正しくない場合、#NUM! エラーを返します。
この関数は ISO 8601 に準拠した週の番号をサポートしないことを除けば Excel 互換です。
@EXAMPLES=
セル A1 が 12/21/00 の場合、WEEKNUM(A1,2)=51 です。
@SEEALSO=ISOWEEKNUM

@FUNCTION=WEIBULL
@SYNTAX=WEIBULL(x,α,β,指数関数)
@DESCRIPTION=WEIBULL 関数はワイブル分布を返します。@指数関数 は論理値で、これが真 (TRUE) の場合の戻り値は累積分布関数 (1 - exp (-(@x/@β)^@α) となり、その他 (FALUSE) の場合は確率密度関数 (@α/@β^@α) * @x^(@α-1) * exp(-(@x/@β^@α)) が返されます。@x < 0 の場合や @α <= 0 または @β <= 0 の場合は #NUM! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
WEIBULL(3,2,4,0) = 0.213668559 です。

@SEEALSO=POISSON

@FUNCTION=WORKDAY
@SYNTAX=WORKDAY (開始日,日数,祭日)
@DESCRIPTION=WORKDAY 関数は @開始日 から起算して @日数後 の日付のシリアル値を返します。稼働日数の計算から除外する祝日などは @祭日 に指定します。
@開始日 あるいは @日数 に無効な値を指定すると、#NUM! エラーが返されます。
この関数は Excel 互換です。
@EXAMPLES=
WORKDAY(DATE(2001,1,5),DATE(2001,2,15)) = 88609 です。

@SEEALSO=NETWORKDAYS

@FUNCTION=XIRR
@SYNTAX=XIRR(範囲,日付[,推定値])
@DESCRIPTION=XIRR 関数は定期的ではない投資に対する内部利益率を返します。この関数は正味現在価値を返す関数(NPV, XNPV)と密接な関係があります。XIRR は、XNPV関数の結果が 0(ゼロ)のときの一連のキャッシュフローの利益率になります。
@範囲 には投資によって発生する一連のキャッシュフローを、@日付 には @範囲 に対応する支払日を指定します。最初の日が最初の支払日に該当し、それ以外の日はすべてこの日付より後に発生する日付でなければなりません。オプションの @推定値 は XIRR関数が計算に使用する初期値です。この値を指定する必要はありません。この引数はExcel との互換性のために存在します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1 から A5 の値がそれぞれ -6000, 2134, 1422, 1933, 1422 で、セル B1 からB5 の値がそれぞれ "1999-01-15", "1999-04-04", "1999-05-09", "2000-03-12","2000-05-1" とすると、
XIRR(A1:A5,B1:B5) = 0.224838 です。
@SEEALSO=IRR,XNPV

@FUNCTION=XNPV
@SYNTAX=XNPV(割引率,キャッシュフロー,日付リスト)
@DESCRIPTION=XNPV 関数は正味現在価値を返します。キャッシュフローのスケジュールは @日付リスト に指定します。最初の支払日は支払いスケジュールの先頭に該当します。@割引率 は一連のキャッシュフローに対する割引率です。@キャッシュフロー には支払額のリストを指定します。
@キャッシュフロー でリストされた数と @日付リスト で指定された日付の数が一致しない場合には、#NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=NPV,PV

@FUNCTION=YEAR
@SYNTAX=YEAR (シリアル値)
@DESCRIPTION=YEAR 関数はシリアル値で表される日付の年を返します。
Gnumeric では通常の文字列からシリアル値への変換を行うので、日付は文字列として入力できます。
この関数は Excel 互換です。
@EXAMPLES=
YEAR(DATE(2003, 4, 30)) = 2003 です。

@SEEALSO=DAY, MONTH, TIME, NOW

@FUNCTION=YIELD
@SYNTAX=YIELD(受領日,満期日,利率,現在価値,償還価値,頻度[,基準])
@DESCRIPTION=YIELD 関数は利息が定期的に支払われる証券の利回りを計算します。@頻度 は年間の利息支払い回数です: 1 = 年一回 2 = 年二回 4=四半期 のいずれかを指定します。@基準 には日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると YIELD 関数は #NUM! エラーを返します。@基準 が省略された場合には、30日/360日(米国方式) が適用されます。@基準 が 0 と 4 の間にない場合はに #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=YIELDDISC
@SYNTAX=YIELDDISC(受領日,満期日,現在価値,償還価値[,基準])
@DESCRIPTION=YIELDDISC 関数は割引債の年利周りを計算します。@受領日 は証券の受領日です。@満期日 は証券の満期日です。@現在価値 は額面 $100 に対する証券の価格です。@償還価値 は額面 $100 に対する証券の償還額です。@基準 は日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると YIELDDISC は #NUM! エラーを返します。@基準が省略された場合には、30日/360日(米国方式) が適用されます。@基準が 0 と 4 の間にない場合は #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=YIELDMAT
@SYNTAX=YIELDMAT(受領日,満期日,発行日,利率,現在価値[,基準])
@DESCRIPTION=YIELDMAT 関数は満期日に利息が支払われる証券の利周りを計算します。@受領日 は証券の受領日です。@満期日 は証券の満期日です。@発行日 は証券の発行日です。@利率 は証券の利率です。@現在価値 は額面 $100 に対する証券の価格を指定します。@基準 は日数の計算方法を数値で指定します:

0  30日/360日(米国方式)
1  実際の日数/実際の日数
2  実際の日数/360
3  実際の日数/365
4  30日/360日(欧州方式)

@頻度 に 1,2,4 以外を指定すると YIELDMAT は #NUM! エラーを返します。@基準が省略された場合には、30日/360日(米国方式) が適用されます。@基準が 0 と 4 の間にない場合は #NUM! エラーが返されます。
@EXAMPLES=

@SEEALSO=

@FUNCTION=ZTEST
@SYNTAX=ZTEST(配列,x)
@DESCRIPTION=ZTEST は z 検定の両側 P 値を返します。
@配列にはデータ配列を、@x には検定する値を指定します。
@配列に2つ以上のデータ項目が含まれていない場合 #DIV/0! エラーを返します。
この関数は Excel 互換です。
@EXAMPLES=
セル A1, A2, ..., A5 の値をそれぞれ 11.4, 17.3, 21.3, 25.9, 40.1 とすると
ZTEST(A1:A5,20) = 0.254717826 です。

@SEEALSO=CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE

