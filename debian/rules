#! /usr/bin/make -f
# Based on the sample debian/rules that uses debhelper. 
# GNU copyright 1997 by Joey Hess.

#DEB_BUILD_OPTIONS?="debug nostrip"
export DEB_BUILD_OPTIONS

export DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
export DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=3

# Try to preserve timestamps as much as possible
export INSTALL=/usr/bin/install -p

# Features configuration
# ---------------------- 
#
# We're aiming for a package that's stable, with as much functionality as is
# reasonably possible.

features :=

# The Python support offers a nice way to extend gnumeric's functionality.

features+= --with-python=python2.2

# Bonobo allows us to use parts of other applications like Guppi and
# Evolution as components via CORBA, and allows us to work as a component
# for other applications.

features += --with-bonobo

# File -> Send functionality via Evolution's mail composer component. Note
# that this is achieved through Bonobo, so no additional library
# dependencies are introduced.

features+= --with-evolution

# Plugin to access databases through the GDA framework.

features+= --with-gda

# Guile offers an additional way to extension gnumeric, but the guile
# support is for guile 1.5 or newer, which is not currently available in
# Debian.

features+= --without-guile

# configure.in: "Gnome Basic is extremely API unstable; it is likely that
# gnumeric will only build with the single version mentioned in
# configure.in, if at all. It is possible, but unlikely, that Gnome Basic
# contains security vulnerabilities."

features+= --without-gb

confflags :=    --prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var/lib \
                --enable-compile-warnings=minimum \
                --enable-iso-c \
		$(features)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	confflags += --build $(DEB_HOST_GNU_TYPE)
else
	confflags += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

source-updates:
	@if ! dpkg --compare-versions $$(dpkg --status gettext | grep '^Version:' | sed -e 's/^Version://') lt 0.11.5 ; then \
		echo "Sorry, intltool doesn't work with this version of gettext."; \
		echo "See http://bugzilla.gnome.org/show_bug.cgi?id=93238 ." ; \
		echo "Use woody's gettext package instead." ; \
		exit 1 ; \
	fi

	# Update files generated by autotools
	env srcdir=`pwd` NOCONFIGURE=1 sh macros/autogen.sh $(confflags)

configure: configure-stamp
configure-stamp:
	dh_testdir

	# Prepare for build
	 
	# Update our local copy of the Evolution Composer component
	# interface, if available. 
	if test -r /usr/share/idl/Evolution-Composer.idl ; then \
		rm -rf evo && \
		mkdir evo && \
		cp /usr/share/idl/Evolution-Composer.idl evo ; \
	fi
	
	mkdir build
	cd build && env srcdir=`pwd`/.. \
		../configure $(confflags)

	touch configure-stamp

build: configure-stamp build-stamp
build-stamp:
	dh_testdir

	# Add here commands to compile the package.
	#cd build && $(MAKE)
	cd build && $(MAKE) EVOLUTION_IDL_DIR=`pwd`/../evo

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp debian/*substvars debian/*~ \
		po/ChangeLog~
	rm -rf debian/tmp build

	# Update config.{sub,guess} from autotools-dev, if possible.
	-for f in config.sub config.guess ; do \
		if test -r /usr/share/misc/$$f ; then \
			OLDDATE=`./$$f -t | tr -d -` ; \
			NEWDATE=`/usr/share/misc/$$f -t | tr -d -` ; \
			if [ $$OLDDATE -lt $$NEWDATE ] ; then \
				echo "GNU config automated update of $$f (replacing $$OLDDATE with $$NEWDATE)" 1>&2 ; \
				cp -f /usr/share/misc/$$f $$f ; \
			fi; \
		fi; \
	done

	-find -type f -name 'Makefile' | sed -e 's/\.in$$//' | xargs rm -f
	-rm -f po/*.gmo

	# Clean out files generated as part of the documentation generation
	-rm -f doc/C/index.html omf-install/gnumeric-C.omf
	-rm -rf doc/C/gnumeric doc/C/DBTOHTML_OUTPUT_DIR*

	-rm -rf doc/C/gnumeric.junk
	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	cd build && $(MAKE) install \
		prefix=`pwd`/../debian/gnumeric1.0/usr \
		sysconfdir=`pwd`/../debian/gnumeric1.0/etc \
		localstatedir=`pwd`/../debian/gnumeric1.0/var/lib

	# Plugins are not intended as stand-alone executables
	find `pwd`/debian/gnumeric1.0/usr/lib/gnumeric/*/plugins -type f -print0 | xargs -0 chmod a-x

	# Remove unwanted files: static libraries, libtool files for plugins
	# and documentation sources
	find `pwd`/debian/gnumeric1.0/usr/ -name '*.a' -print0 | xargs -0 rm -f
	find `pwd`/debian/gnumeric1.0/usr/lib/gnumeric/*/plugins -name '*.la' -print0 | xargs -0 rm -f
	find `pwd`/debian/gnumeric1.0/ -name '*.sgml' -print0 | xargs -0 rm -f

	# Remove scrollkeeper stuff as well, as it should be done at package
	# (de)install time.
	rm -rf `pwd`/debian/gnumeric1.0/var/lib/scrollkeeper

	# Low-colour icon for use by the menu system
	$(INSTALL) -m 644 debian/gnome-gnumeric.xpm `pwd`/debian/gnumeric1.0/usr/share/pixmaps/

	# Move files and put in links
	dh_movefiles --sourcedir=debian/gnumeric1.0
#	mv `pwd`/debian/gnumeric-doc/usr/share/gnome/help/gnumeric \
#		`pwd`/debian/gnumeric-doc/usr/share/doc/gnumeric-doc/html
#	cd `pwd`/debian/gnumeric-doc/usr/share/gnome/help && \
#		ln -s ../../doc/gnumeric-doc/html/ gnumeric
	DATADIR=`. build/gnumericConf.sh && echo $$GNUMERIC_DATADIR` && \
		cd debian/gnumeric1.0 && \
		for idl in $$DATADIR/idl/*.idl; do \
			(cd usr/share/idl && ln -s `echo $$idl | sed -e 's,^/usr/share,..,'` .); \
		done

	# Clean out empty dirs left over from moving
	-find `pwd`/debian/gnumeric1.0/ -type d -depth | xargs rmdir 2>&1 >/dev/null

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
#	dh_installdebconf -i
	dh_installdocs -i

	dh_installexamples -i
	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
	dh_installmime -i
#	dh_installinit -i
	dh_installcron -i
#	dh_installman -i
	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs ChangeLog -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
#	dh_installdebconf -a
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
	dh_installmime -a
#	dh_installinit -a
	dh_installcron -a
	dh_installman -a
	dh_installinfo -a
#	dh_undocumented -a
	dh_installchangelogs ChangeLog -a
	dh_strip -a
	dh_link -a
	dh_compress -a
	dh_fixperms -a
#	dh_makeshlibs -a
	dh_installdeb -a
#	dh_perl -a

	dh_shlibdeps -a

	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install source-updates configure
